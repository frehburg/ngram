3
KEY,WORDS,MULTIPLICITY
<Board:regionsP1>,{ <Board:regionsP1> },1
,<Board:regionsP1> },1
Rescue,) Rescue a,3
,Rescue a,3
half,P1 half right,1
,P2 half right,1
,half right,2
,right half (,2
,half (,2
don't,unpredictable don't mess,1
,don't mess,1
<Ruleset>,STRING <Ruleset> args:,1
,<Ruleset> args:,1
<Player:startP4>,<Player:startP3> <Player:startP4> },3
,<Player:startP4> },3
stalemate,a stalemate due,1
,in stalemate --COMMA--,1
,a stalemate .,1
,stalemate due,1
,stalemate --COMMA--,1
,stalemate .,1
next:3,<Player:option> next:3 ),1
,next:3 ),1
next:4,<Player:option> next:4 ),1
,next:4 ),1
would,that would be,1
,would be,1
,steps would then,1
,step would then,1
,would then,2
next:0,STRING next:0 result:,1
,next:0 result:,1
pick,to pick up,1
,pick up,1
next:1,STRING next:1 result:,1
,next:1 result:,1
,<Player:option> next:1 ),1
,next:1 ),1
next:2,STRING next:2 result:,1
,next:2 result:,1
,<Player:option> next:2 ),1
,next:2 ),1
''shift-swaps'',Mover ''shift-swaps'' with,1
,''shift-swaps'' with,1
<distance>,<type> <distance> },2
,<distance> },3
,{ <distance> },1
firstMoveOnTrack,( firstMoveOnTrack STRING,7
,firstMoveOnTrack STRING,7
!,( ! =,645
,! =,645
Small,- Small Piece,1
,Small Piece,1
<Board:regionsP2>,{ <Board:regionsP2> },1
,<Board:regionsP2> },1
<numTiles>,<boardWidth> <numTiles> },1
,<numTiles> },1
%,( % (,21
,% (,21
&,1 & 25,1
,2 & 24,1
,3 & 23,1
,4 & 22,1
,5 & 21,1
,6 & 20,1
,7 & 19,1
,8 & 18,1
,& 25,1
,& 24,1
,& 23,1
,& 22,1
,& 21,1
,& 20,1
,& 19,1
,& 18,1
,1 & 16,1
,2 & 15,1
,3 & 14,1
,4 & 13,1
,5 & 12,1
,6 & 11,1
,& 16,1
,& 15,1
,& 14,1
,& 13,1
,& 12,1
,& 11,1
(,STRING ( players,948
,) ( equipment,950
,{ ( board,750
,board ( merge,89
,merge ( shift,32
,2 ( square,35
,) ( wedge,12
,) ( piece,2411
,P1 ( or,33
,) ( rules,979
,rules ( start,813
,{ ( place,569
,STRING ( difference,173
,difference ( expand,122
,expand ( sites,526
,) ( sites,2544
,) ( place,4083
,) ( play,579
,play ( forEach,252
,) ( end,745
,{ ( STRING,303
,) ( if,2154
,if ( <=,108
,<= ( count,72
,) ( result,1268
,) ( option,504
,{ ( item,514
,* ( item,310
,( game,943
,( players,959
,( equipment,979
,( board,814
,( merge,154
,( shift,469
,( square,493
,( wedge,108
,( piece,2917
,( or,1967
,( rules,982
,( start,964
,( place,4963
,( difference,683
,( expand,687
,( sites,8871
,( play,1425
,( forEach,1855
,( end,1007
,( STRING,8863
,( if,6152
,( <=,227
,( count,3018
,( result,1306
,( option,514
,( item,2694
,STRING ( forEach,191
,Site ( sites,225
,From ( forEach,2
,STRING ( STRING,647
,) ( remember,112
,STRING ( site,120
,) ( game,661
,2 ( rectangle,25
,) ( shift,397
,0 ( rectangle,73
,or ( STRING,475
,STRING ( sites,1489
,STRING ( union,184
,union ( expand,74
,expand ( union,11
,union ( sites,283
,) ( expand,170
,play ( if,297
,if ( is,1425
,) ( do,136
,do ( STRING,26
,next: ( forEach,58
,) ( then,1278
,then ( and,350
,and ( if,131
,if ( !,250
,0 ( count,316
,in: ( sites,404
,sites ( values,74
,if ( =,861
,1 ( count,283
,Steps ( last,15
,) ( last,50
,) ( and,629
,and ( forEach,33
,) ( remove,311
,remove ( site,33
,In ( last,195
,remove ( last,78
,) ( forget,92
,) ( forEach,584
,{ ( if,437
,if ( no,475
,if ( or,359
,or ( or,10
,or ( no,43
,) ( no,62
,) ( =,775
,in: ( difference,55
,( define,4267
,( remember,158
,( site,1051
,( rectangle,504
,( union,571
,( is,5215
,( do,586
,( then,1851
,( and,2597
,( !,645
,( values,188
,( =,2721
,( last,2360
,( remove,866
,( forget,136
,( no,704
,STRING ( move,803
,#2 ( between,38
,if: ( is,1228
,Enemy ( who,971
,at: ( between,292
,) ( apply,555
,apply ( remove,353
,remove ( between,199
,) ( to,2232
,Empty ( to,651
,then ( if,695
,if ( can,160
,Move ( hop,30
,hop ( from,34
,from ( last,284
,) ( difference,114
,) ( between,213
,) ( moveAgain,667
,{ ( square,14
,4 ( rotate,5
,180 ( wedge,33
,-2 ( wedge,8
,) ( STRING,2317
,) ( regions,1403
,) ( hand,381
,STRING ( handSite,966
,{ ( phase,319
,P1 ( play,49
,play ( move,439
,move ( from,784
,from ( handSite,326
,to ( sites,398
,if ( not,320
,not ( STRING,437
,) ( nextPhase,470
,Mover ( STRING,74
,) ( phase,416
,STRING ( play,679
,if ( STRING,550
,) ( or,333
,STRING ( from,338
,) ( move,996
,} ( end,230
,( move,3121
,( between,1450
,( who,1699
,( apply,785
,( to,7526
,( can,341
,( hop,34
,( from,3851
,( moveAgain,857
,( rotate,150
,( regions,1800
,( hand,403
,( handSite,2201
,( phase,768
,( not,1606
,( nextPhase,474
,P2 ( or,26
,or ( move,146
,<Board:type> ( piece,4
,< ( sites,53
,< ( board,27
,board ( makeFaces,1
,makeFaces ( remove,1
,remove ( square,12
,< ( STRING,80
,) ( item,1749
,board ( square,293
,< ( or,10
,< ( if,25
,< ( forEach,8
,) ( rulesets,168
,{ ( ruleset,168
,* ( ruleset,64
,) ( ruleset,133
,( makeFaces,1
,( rulesets,168
,( ruleset,367
,nextPhase ( STRING,86
,= ( count,317
,board ( add,55
,add ( remove,20
,remove ( merge,10
,{ ( shift,35
,-1 ( scale,3
,6 ( rectangle,43
,0 ( scale,3
,2 ( wedge,17
,5 ( scale,12
,5 ( wedge,2
,( add,193
,( scale,86
,) ( merge,2
,merge ( rotate,3
,45 ( shift,2
,) ( square,5
,) ( centrePoint,71
,( centrePoint,170
,<Board> ( piece,2
,<Jump:hare> ( if,1
,{ ( expand,37
,STRING ( centrePoint,31
,board ( remove,27
,remove ( rectangle,2
,board ( rectangle,127
,P1 ( STRING,104
,<Jump:coyote> ( if,1
,P2 ( play,18
,< ( add,1
,2 ( scale,7
,) ( scale,9
,< ( scale,3
,1 ( remove,2
,remove ( scale,4
,0 ( wedge,6
,3 ( rotate,14
,90 ( wedge,11
,6 ( rotate,20
,270 ( wedge,6
,{ ( nextPhase,3
,P2 ( STRING,94
,end ( STRING,34
,STRING ( or,246
,) ( priority,40
,{ ( forEach,79
,( priority,71
,<Place:geese> ( place,1
,< ( place,115
,3 ( rectangle,8
,N ( move,9
,Step ( directions,138
,( directions,812
,add ( concentric,4
,Each ( STRING,312
,to ( intersection,62
,intersection ( sites,331
,Piece ( then,23
,not ( can,107
,Move ( step,4
,step ( from,9
,from ( where,26
,{ ( addScore,2
,P2 ( -,4
,- ( count,39
,remove ( sites,8
,) ( add,75
,add ( piece,103
,to ( handSite,310
,nextPhase ( =,26
,) ( addScore,47
,P1 ( -,3
,) ( +,195
,+ ( score,12
,end ( if,630
,0 ( score,4
,) ( byScore,141
,( concentric,60
,( intersection,441
,( step,24
,( where,270
,( addScore,79
,( -,442
,( +,437
,( score,339
,( byScore,143
,STRING ( add,10
,to ( last,90
,board ( keep,3
,keep ( square,2
,) ( poly,20
,N ( or,2
,Slide ( between,11
,between ( max,272
,trail: ( id,2
,Hop ( between,36
,if: ( =,173
,= ( what,294
,) ( id,919
,{ ( move,80
,Step ( to,150
,at: ( to,1894
,remove ( to,348
,and ( remove,59
,if ( and,800
,and ( no,21
,) ( not,311
,Move ( forEach,17
,STRING ( step,1
,step ( to,4
,if ( all,43
,( keep,3
,( poly,32
,( max,382
,( id,2040
,( what,548
,( all,282
,board ( scale,5
,if ( <,194
,< ( count,65
,( <,481
,remove ( add,5
,add ( merge,21
,{ ( rectangle,45
,5 ( rectangle,25
,1 ( rectangle,18
,{ ( add,7
,2 ( shift,2
,P1 ( if,3
,= ( state,175
,at: ( from,520
,at: ( site,401
,) ( set,1234
,at: ( last,541
,STRING ( intersection,64
,) ( union,175
,Piece ( or,8
,STRING ( then,216
,then ( set,126
,( state,444
,( set,2002
,to ( difference,79
,difference ( sites,487
,<Variant:board> ( piece,2
,STRING ( ahead,23
,ahead ( centrePoint,18
,merge ( scale,6
,< ( move,27
,if: ( and,358
,and ( is,482
,not ( is,812
,In ( to,331
,( ahead,293
,board ( splitCrossings,6
,splitCrossings ( regular,5
,( splitCrossings,7
,( regular,14
,P1 ( union,13
,= ( sites,8
,) ( graph,1
,STRING ( coord,3
,( graph,73
,( coord,174
,P1 ( move,30
,Diagonal ( between,92
,Add ( to,149
,nextPhase ( not,10
,not ( no,12
,) ( is,667
,in: ( forEach,55
,forEach ( sites,154
,if: ( <,76
,< ( row,1
,of: ( site,13
,) ( row,4
,of: ( where,13
,( row,30
,-4 ( square,2
,then ( forEach,45
,Move ( or,15
,or ( step,1
,from ( site,143
,Orthogonal ( to,166
,) ( hop,1
,Orthogonal ( between,162
,= ( who,48
,) ( define,3412
,STRING ( min,6
,min ( results,5
,from: ( last,71
,to: ( sites,173
,) ( count,224
,Steps ( from,13
,Piece ( STRING,38
,Piece ( if,14
,if ( >=,54
,2 ( count,83
,( min,24
,( results,19
,( >=,182
,between ( exact,100
,if:#2 ( apply,1
,3 ( and,1
,and ( !,112
,= ( row,2
,of: ( between,6
,of: ( from,21
,4 ( is,1
,( exact,152
,between ( range,21
,if:#1 ( apply,2
,STRING ( is,182
,nextPhase ( and,19
,and ( not,158
,) ( <,126
,then ( moveAgain,50
,nextPhase ( or,5
,( range,93
,add ( scale,2
,) ( >=,17
,1 ( -,4
,- ( from,2
,1 ( where,1
,62 ( where,1
,from: ( sites,16
,16 ( count,1
,at: ( handSite,238
,merge ( square,2
,<Jump:bean> ( if,1
,to ( if,21
,in: ( intersection,110
,) ( intersection,33
,STRING ( set,133
,Pending ( sites,6
,To ( forEach,2
,To ( if,4
,#1 ( forEach,1
,STRING ( and,218
,#1 ( between,25
,#1 ( to,70
,In ( between,88
,STRING ( if,541
,< ( value,23
,Mover ( +,29
,1 ( value,46
,STRING ( >,23
,> ( value,5
,Prev ( -,1
,- ( value,15
,S ( or,2
,and ( STRING,327
,) ( !,129
,in: ( STRING,23
,to ( STRING,288
,or ( is,201
,In ( where,27
,< ( do,9
,next: ( if,81
,STRING ( directions,542
,) ( directions,93
,( value,450
,( >,429
,Even ( count,28
,STRING ( expand,103
,from ( intersection,6
,intersection ( expand,60
,6 ( count,24
,Mover ( =,25
,< ( start,99
,Remove ( intersection,2
,P1 ( priority,1
,if: ( or,110
,or ( and,52
,Friend ( who,531
,board ( rotate,22
,180 ( add,1
,and ( =,197
,= ( to,87
,. ( if,4
,{ ( =,142
,= ( from,65
,at: ( centrePoint,4
,then ( remove,41
,remove ( centrePoint,2
,3 ( count,63
,8 ( rotate,2
,then ( intervene,3
,intervene ( from,4
,P2 ( move,34
,then ( custodial,37
,custodial ( from,66
,{ ( is,88
,>= ( count,101
,at: ( coord,42
,( intervene,4
,( custodial,71
,board ( graph,9
,or ( =,158
,STRING ( =,301
,if: ( <=,7
,<= ( row,2
,) ( rotate,1
,merge ( rectangle,3
,8 ( scale,1
,{ ( sites,179
,< ( piece,30
,< ( end,21
,STRING ( trackSite,277
,steps: ( count,22
,Remove ( from,77
,STRING ( apply,154
,) ( fromTo,391
,fromTo ( from,613
,from ( to,194
,{ ( track,296
,) ( track,1195
,) ( dice,155
,Each ( if,71
,not ( =,20
,play ( do,247
,do ( roll,100
,or ( forEach,121
,container: ( mover,53
,( trackSite,355
,( fromTo,613
,( track,1635
,( dice,158
,( roll,185
,( mover,517
,steps: ( mapEntry,10
,mapEntry ( count,12
,STRING ( hand,1
,. ( map,2
,{ ( pair,402
,) ( pair,2798
,next: ( or,42
,( mapEntry,776
,( map,405
,( pair,3208
,STRING ( face,72
,= ( STRING,203
,0 ( STRING,66
,STRING ( count,168
,In ( STRING,66
,handSite ( who,22
,STRING ( !,95
,= ( pips,73
,at: ( STRING,401
,add ( add,2
,5 ( rotate,21
,90 ( rectangle,12
,3 ( square,5
,-1 ( square,6
,) ( map,318
,{ ( set,141
,do ( if,107
,) ( roll,83
,or ( if,126
,to ( mapEntry,223
,mapEntry ( mover,50
,Empty ( mapEntry,15
,if: ( STRING,214
,STRING ( pips,12
,not ( all,102
,and ( set,88
,( face,113
,( pips,192
,mapEntry ( next,5
,= ( topLevel,38
,steps: ( pips,44
,STRING ( mapEntry,100
,Remove ( site,21
,if:#1 ( STRING,6
,STRING ( no,69
,STRING ( size,8
,#1 ( if,7
,< ( trackSite,7
,from: ( site,17
,Home ( regions,149
,Home ( map,4
,Bar ( piece,9
,noMoveYet: ( firstMoveOnTrack,7
,Mover ( if,9
,) ( max,48
,Move ( if,6
,( next,91
,( topLevel,59
,( size,206
,( firstMoveOnTrack,7
,to ( centrePoint,13
,if: ( not,366
,apply ( if,142
,add ( hole,12
,hole ( merge,12
,8 ( rectangle,13
,Off ( STRING,35
,from ( from,180
,start ( place,131
,Empty ( handSite,70
,( hole,17
,Each ( or,481
,) ( <=,58
,) ( pips,37
,End ( STRING,24
,P1 ( sites,379
,P2 ( sites,380
,play ( max,1
,Moves ( do,1
,STRING ( mover,64
,) ( -,220
,- ( pips,11
,. ( define,29
,or ( not,41
,1 ( size,37
,<Start:rules> ( play,3
,= ( value,69
,and ( all,10
,} ( then,88
,and ( moveAgain,93
,STRING ( all,33
,3 ( STRING,21
,) ( from,27
,level: ( level,306
,from: ( from,118
,#1 ( *,17
,2 ( STRING,32
,Level ( last,46
,FromTop ( if,28
,= ( mover,38
,) ( who,34
,#1 ( pips,3
,1 ( STRING,61
,STRING ( who,28
,. ( place,25
,next: ( STRING,9
,( level,316
,( *,262
,Value ( values,15
,) ( value,75
,apply ( and,37
,STRING ( value,71
,0 ( size,30
,Array ( values,30
,Each ( forEach,46
,replayDouble: ( =,2
,1 ( var,50
,Pass ( then,77
,{ ( forget,6
,Mover ( do,2
,) ( all,26
,and ( remember,17
,STRING ( -,29
,7 ( STRING,16
,( var,367
,from: ( mapEntry,24
,steps: ( -,53
,STRING ( <,18
,< ( size,14
,Select ( from,384
,from ( STRING,219
,not ( was,5
,( was,12
,E ( if,1
,In ( from,153
,N ( if,1
,or ( <,11
,0 ( var,56
,. ( do,5
,3 ( size,26
,then ( STRING,127
,- ( var,24
,in: ( union,14
,board ( concentric,37
,P3 ( sites,28
,P4 ( sites,25
,Empty ( STRING,59
,{ ( to,6
,) ( regionSite,29
,regionSite ( sites,48
,at: ( regionSite,19
,) ( trigger,10
,( regionSite,52
,( trigger,28
,STRING ( not,129
,if:#1 ( if,2
,{ ( not,28
,STRING ( score,8
,) ( mapEntry,81
,. ( piece,5
,Mover ( forEach,9
,top:True ( then,12
,steps: ( /,21
,/ ( count,22
,steps: ( STRING,42
,{ ( and,15
,= ( face,12
,) ( face,21
,) ( >,79
,> ( face,7
,not ( and,24
,Bar ( regions,3
,Home ( first,6
,STRING ( next,12
,. ( moveAgain,5
,( /,89
,( first,6
,) ( trackSite,32
,4 ( if,20
,6 ( if,5
,14 ( if,4
,15 ( if,4
,10 ( if,7
,5 ( if,8
,#1 ( sites,58
,) ( handSite,212
,34 ( rotate,3
,30 ( rectangle,6
,) ( rectangle,14
,10 ( rectangle,7
,33 ( rotate,3
,<Players:arc4> ( regions,1
,** ( item,101
,< ( regions,58
,< ( track,63
,) ( games,6
,{ ( subgame,3
,>= ( matchScore,10
,( match,6
,( games,6
,( subgame,12
,( matchScore,142
,from: ( STRING,35
,forEach ( intersection,2
,if: ( >=,8
,>= ( size,1
,- ( /,16
,P1 ( regions,3
,do ( do,3
,or ( !,12
,= ( site,25
,ifAfterwards: ( <=,3
,<= ( STRING,4
,games ( subgame,3
,result: ( score,6
,25 ( scale,1
,7 ( rectangle,2
,18 ( rectangle,1
,11 ( rotate,1
,45 ( rectangle,3
,13 ( graph,1
,#2 ( -,1
,next: ( move,38
,from ( if,145
,or ( all,11
,1 ( if,18
,-2 ( rectangle,2
,4 ( scale,1
,or ( can,1
,Move ( STRING,161
,) ( can,56
,and ( addScore,13
,= ( score,24
,0 ( who,7
,remove ( handSite,4
,piece ( id,86
,4 ( count,103
,3 ( if,19
,9 ( rectangle,2
,9 ( square,3
,4 ( rectangle,6
,if:True ( apply,35
,Level ( to,18
,FromTop ( fromTo,17
,handSite ( mover,22
,Occupied ( handSite,44
,True ( >,3
,2 ( size,15
,True ( >=,3
,10 ( count,4
,{ ( handSite,3
,count: ( count,409
,do ( set,29
,Mover ( count,13
,5 ( value,2
,P1 ( coord,2
,P2 ( coord,2
,and ( <,26
,and ( or,49
,= ( size,18
,20 ( if,3
,from:0 ( -,2
,- ( STRING,62
,from: ( where,23
,) ( *,113
,STRING ( var,32
,and ( add,6
,Var ( id,2
,Off ( where,17
,Remove ( where,1
,Occupied ( site,44
,count: ( size,7
,max: ( -,3
,- ( *,36
,Occupied ( STRING,118
,remove ( STRING,39
,{ ( >,11
,> ( STRING,9
,= ( player,2
,= ( id,85
,of: ( player,6
,( player,339
,Occupied ( mapEntry,3
,from ( mapEntry,61
,next: ( priority,6
,Distance ( forEach,3
,#1 ( value,2
,do ( forget,6
,= ( last,34
,Occupied ( last,4
,<Players:tracks> ( track,1
,then ( remember,11
,Mover ( not,11
,then ( forget,4
,< ( set,83
,90 ( merge,1
,44 ( rotate,1
,135 ( rectangle,2
,15 ( rotate,1
,11 ( graph,1
,In ( count,8
,10 ( rotate,2
,15 ( rectangle,1
,7 ( scale,1
,9 ( scale,1
,1 ( scale,4
,10 ( scale,1
,6 ( graph,1
,7 ( graph,3
,10 ( graph,1
,10 ( STRING,5
,15 ( STRING,1
,20 ( STRING,1
,5 ( STRING,7
,<Players:entries> ( regions,1
,<Players:startRules> ( play,1
,Undefined ( value,5
,3 ( value,3
,if ( >,166
,2 ( value,5
,< ( map,32
,P5 ( sites,4
,P6 ( sites,3
,0 ( value,11
,{ ( moveAgain,18
,= ( var,29
,6 ( var,2
,STRING ( +,91
,+ ( var,5
,) ( what,73
,Home ( piece,34
,{ ( score,109
,) ( score,144
,if ( if,11
,True ( or,3
,14 ( STRING,1
,board ( hole,2
,hole ( hole,3
,hole ( rectangle,2
,15 ( count,2
,STRING ( start,8
,Kendall------------------------------------------ ( define,1
,STRING ( fromTo,10
,from ( coord,3
,to ( coord,11
,through: ( STRING,12
,Remove ( sites,49
,26 ( if,3
,rule ( if,1
,Pieces ( from,4
,then ( fromTo,15
,28-29 ( if,1
,30 ( if,1
,25 ( if,3
,not ( or,2
,Pieces ( STRING,2
,water ( or,1
,from ( sites,224
,STRING ( rules,1
,#2 ( if,1
,) ( swap,7
,NextPlayer ( player,45
,<Throw> ( regions,1
,< ( dice,3
,~ ( STRING,4
,< ( define,21
,then ( addScore,15
,< ( rules,2
,Var ( count,2
,< ( var,3
,priority ( forEach,5
,) ( mover,67
,from: ( to,39
,StepsOnTrack ( last,2
,max: ( STRING,2
,{ ( or,13
,STRING ( do,24
,21 ( if,2
,22 ( if,2
,23 ( if,1
,24 ( if,1
,27 ( if,1
,through: ( trackSite,2
,/ ( STRING,42
,{ ( id,25
,and ( >=,74
,{ ( fromTo,59
,{ ( *,4
,( swap,28
,5 ( size,9
,7 ( size,2
,15 ( size,2
,True ( if,12
,True ( is,6
,Mover ( no,2
,< ( pips,1
,0 ( state,84
,) ( subgame,6
,apply ( STRING,28
,piece ( forEach,2
,piece ( if,6
,8 ( count,10
,Value ( value,6
,1 ( values,1
,if:True ( forget,2
,{ ( remove,17
,Row ( row,8
,of: ( centrePoint,10
,Column ( column,17
,if:True ( and,3
,counter ( not,1
,and ( >,17
,> ( /,1
,/ ( value,3
,STRING ( /,7
,twin ( not,1
,Twin ( add,1
,twin ( piece,1
,piece ( STRING,6
,= ( centrePoint,2
,centre ( piece,1
,to ( (,1
,( ( last,1
,( column,85
,( (,32
,and ( <=,12
,and ( and,2
,In ( site,24
,4 ( size,1
,next: ( do,7
,26 ( var,3
,27 ( var,3
,12 ( score,2
,+ ( STRING,13
,Level ( site,18
,STRING ( <=,9
,<= ( var,11
,level: ( last,18
,> ( count,268
,Each ( move,405
,STRING ( to,475
,sites ( player,12
,player ( mapEntry,10
,STRING ( result,34
,P1 ( expand,37
,expand ( intersection,36
,P2 ( expand,37
,P3 ( expand,8
,P4 ( expand,8
,STRING ( between,22
,STRING ( moveAgain,21
,if: ( if,35
,Hop ( from,56
,#2 ( to,9
,Visited ( to,14
,#2 ( then,2
,STRING ( last,428
,keep ( rectangle,1
,knight ( all,1
,. ( forEach,6
,Piece ( move,11
,Empty ( between,94
,#1 ( then,9
,board ( hex,50
,Star ( STRING,1
,nextPhase ( is,14
,Mover ( next,7
,play ( or,126
,origin: ( coord,75
,column: ( STRING,10
,row: ( *,15
,* ( STRING,32
,column: ( *,15
,P2 ( union,12
,row: ( STRING,10
,P6 ( expand,3
,P5 ( expand,3
,( hex,106
,<Board:home> ( map,1
,< ( square,60
,square ( STRING,1
,P1 ( difference,56
,steps: ( +,7
,1 ( /,8
,{ ( ahead,9
,ahead ( coord,12
,column: ( -,6
,) ( ahead,50
,P2 ( difference,55
,row: ( -,6
,P3 ( difference,1
,P4 ( difference,1
,region ( define,8
,STRING ( (,2
,( ( intersection,1
,state ( define,5
,forEach ( STRING,4
,#2 ( state,2
,capture ( from,1
,Around ( from,74
,Random ( intersection,41
,from ( between,18
,- ( then,1
,- ( last,1
,blank ( define,1
,zone ( from,1
,) ( state,30
,and ( (,3
,( ( is,1
,Side ( P1,1
,STRING ( piece,20
,#2 ( or,1
,#5 ( then,1
,piece ( define,12
,12 ( STRING,2
,player ( define,1
,Shared ( sites,2
,Shared ( difference,1
,expand ( expand,1
,Shared ( union,3
,Shared ( expand,2
,state: ( STRING,4
,play ( priority,16
,Odd ( var,1
,STRING ( state,29
,then ( do,34
,do ( note,1
,next: ( vote,1
,( P1,1
,( note,19
,( vote,2
,True ( STRING,9
,{ ( concentric,1
,7 ( square,2
,6 ( square,2
,Add ( piece,43
,Cell ( sites,9
,Empty ( last,2
,and ( fromTo,77
,player ( prev,2
,= ( -,3
,difference ( STRING,4
,( prev,7
,Around ( to,41
,surrounded ( is,1
,there ( <,1
,. ( fromTo,1
,Pending ( value,1
,next: ( remove,2
,Around ( last,21
,. ( then,2
,. ( <,1
,{ ( player,119
,) ( player,145
,. ( to,2
,play ( avoidStoredState,1
,avoidStoredState ( if,1
,( avoidStoredState,1
,<Version:map> ( regions,1
,<Version:start> ( play,1
,{ ( >=,4
,Adjacent ( to,4
,board ( <Tiling:type>,2
,( <Tiling:type>,2
,In ( centrePoint,4
,if: ( !,27
,0 ( what,4
,#2 ( pips,2
,1 ( state,70
,) ( site,14
,Forwards ( to,6
,1 ( abs,1
,abs ( -,2
,- ( state,1
,#1 ( STRING,3
,= ( where,21
,state: ( count,1
,P1 ( intersection,17
,P2 ( intersection,17
,( abs,2
,conditional ( moveagain,1
,envoked ( define,1
,@example ( STRING,1
,Backward ( define,1
,Neutral ( intersection,2
,intersection ( difference,9
,play ( <Each:AIstyle>,1
,{ ( max,13
,Moves ( or,11
,Forward ( then,14
,Backward ( then,1
,( moveagain,1
,( <Each:AIstyle>,1
,Hidden ( sites,17
,What ( sites,10
,} ( or,1
,then ( trigger,3
,{ ( no,6
,mapEntry ( trackSite,1
,{ ( !,11
,) ( where,38
,STRING ( where,22
,level: ( STRING,4
,to: ( last,45
,FromTop ( remove,9
,board ( spiral,4
,items:<Player:init> ( handSite,1
,Player ( who,2
,to ( state,1
,Value ( player,2
,player ( who,5
,remove ( where,9
,level: ( where,19
,at: ( where,35
,if: ( no,12
,( spiral,4
,<End:rule> ( sites,1
,< ( last,2
,difference ( union,24
,<= ( state,3
,mapEntry ( what,49
,or ( <=,8
,. ( and,1
,piece ( index/value,1
,( index/value,1
,to ( value,7
,In ( value,9
,remove ( concentric,11
,Off ( value,4
,stack:True ( then,20
,forward:True ( to,1
,) ( values,62
,4 ( state,1
,9 ( state,1
,STRING ( *,20
,to: ( STRING,7
,11 ( rectangle,1
,tower ( 2-stack,1
,singleton ( 1-stack,1
,Mover ( who,26
,) ( (,10
,( ( =,9
,( ( <,2
,apply ( fromTo,15
,to ( between,7
,Step ( from,14
,board ( <Board:shape>,1
,True ( then,1
,( 2-stack,1
,( 1-stack,1
,( <Board:shape>,1
,handSite ( STRING,9
,P3 ( STRING,7
,2 ( if,19
,<Variant:goal> ( result,1
,< ( is,1
,< ( and,13
,= ( trackSite,5
,to ( trackSite,9
,In ( trackSite,2
,at: ( trackSite,3
,from: ( handSite,2
,nextPhase ( >,2
,level: ( topLevel,8
,45 ( rotate,4
,21 ( rotate,4
,71 ( rotate,4
,59 ( rotate,2
,0 ( rotate,3
,180 ( rectangle,1
,225 ( rectangle,1
,270 ( rectangle,1
,315 ( rectangle,1
,<Player:start> ( play,5
,and ( roll,2
,replayDouble:True ( or,1
,combined:True ( or,1
,True ( <=,2
,FromTop ( and,7
,= ( mapEntry,11
,5 ( merge,2
,<Play:enterBoard> ( forEach,1
,** ( ruleset,2
,ahead ( from,73
,Empty ( ahead,15
,or ( do,9
,do ( move,64
,< ( layer,1
,) ( layer,4
,of: ( to,30
,ifAfterwards: ( is,12
,Flat ( last,1
,= ( layer,1
,of: ( last,52
,( layer,6
,Steps ( step,7
,<Players:start> ( play,4
,Edge ( difference,8
,Infinity ( STRING,6
,<= ( -,2
,- ( size,2
,) ( topLevel,7
,then ( add,10
,piece ( mapEntry,30
,mapEntry ( size,1
,3 ( topLevel,1
,) ( /,21
,max: ( value,1
,0 ( -,11
,Mover ( -,8
,In ( mapEntry,3
,3 ( score,1
,>= ( score,4
,In ( mover,5
,) ( players,5
,36 ( where,1
,38 ( where,1
,face ( +,6
,+ ( count,105
,STRING ( array,1
,{ ( size,1
,) ( size,22
,and ( forget,11
,board ( union,6
,{ ( scale,2
,5 ( square,14
,-2 ( scale,5
,04 ( rectangle,1
,-3 ( rectangle,1
,-3 ( scale,3
,55 ( rectangle,1
,6 ( scale,1
,4 ( square,3
,3 ( scale,5
,383 ( rectangle,1
,29 ( rectangle,2
,29 ( square,1
,Mover ( is,39
,4 ( STRING,17
,6 ( STRING,15
,{ ( remember,10
,( array,8
,True ( =,3
,1 ( merge,1
,1 ( shift,1
,) ( prev,4
,> ( var,13
,Var ( -,11
,) ( level,10
,Var ( STRING,7
,< ( state,5
,to ( from,2
,apply ( set,12
,2 ( state,10
,#2 ( apply,1
,#2 ( STRING,1
,-6 ( scale,1
,Var ( +,4
,2 ( var,6
,Forward ( to,19
,piece ( next,6
,Hidden ( difference,2
,at: ( ahead,73
,ahead ( last,75
,Slide ( STRING,1
,3 ( state,2
,) ( coord,15
,row: ( if,1
,column: ( column,2
,row: ( row,1
,column: ( if,1
,mapEntry ( last,1
,0 ( square,5
,In ( sites,2
,<Player:startPos> ( regions,1
,4 ( score,1
,Edge ( mapEntry,6
,min ( face,1
,{ ( mapEntry,15
,at: ( mapEntry,163
,at: ( (,1
,( ( to,1
,<Player:startRules> ( play,1
,stick ( map,1
,up ( pair,2
,notches ( pair,2
,#2 ( sites,135
,0 ( if,14
,7 ( if,2
,8 ( if,2
,9 ( if,2
,11 ( if,1
,Mover ( mapEntry,2
,/ ( score,1
,- ( mover,2
,rules ( play,58
,roll ( then,1
,+ ( to,130
,- ( to,130
,{ ( last,74
,if: ( >,124
,then ( sow,220
,owner: ( mover,132
,apply: ( if,181
,{ ( mancalaBoard,162
,home ( regions,154
,start ( set,141
,to: ( union,52
,( sow,281
,( mancalaBoard,163
,from: ( trackSite,4
,store:None ( track,55
,do ( and,13
,to: ( trackSite,13
,Cell ( handSite,17
,next: ( sow,12
,steps: ( var,8
,to ( to,34
,holes ( regions,3
,holes ( piece,3
,<Phase:opening> ( phase,1
,Occupied ( from,68
,<= ( value,7
,and ( sow,18
,to: ( difference,19
,union ( intersection,7
,< ( phase,9
,steps:#1 ( directions,1
,count: ( var,7
,apply: ( fromTo,26
,priority ( STRING,6
,{ ( value,3
,row ( regions,1
,row ( piece,1
,from ( -,5
,to ( +,5
,+ ( /,3
,) ( sow,30
,sow ( +,1
,from ( +,3
,+ ( +,5
,+ ( -,2
,to ( -,6
,- ( -,11
,sow ( -,1
,{ ( var,39
,sow ( to,7
,count: ( +,19
,end ( forEach,33
,Site ( difference,7
,Mover ( all,14
,Sites ( difference,5
,Empty ( site,37
,Sites ( sites,66
,sow ( last,12
,skipIf: ( is,2
,apply: ( and,12
,= ( next,22
,forEach ( difference,2
,1 ( sites,1
,in: ( (,2
,( ( STRING,3
,2 ( sites,1
,to ( forEach,11
,nextPhase ( all,29
,skipIf: ( and,6
,True ( all,1
,LeftMost ( regions,4
,intersection ( union,13
,sow ( STRING,3
,union ( difference,5
,priority ( move,2
,<Start:misoroPhase> ( phase,2
,from ( forEach,11
,at: ( var,13
,Var ( to,4
,Remove ( forEach,24
,nextPhase ( >=,5
,{ ( difference,4
,Count ( -,1
,2 ( -,3
,to ( site,11
,numPerHole: ( if,1
,sowEffect: ( if,2
,Occupied ( to,9
,Holes ( regions,1
,Holes ( hand,1
,Home ( hand,1
,or ( >=,7
,apply: ( set,1
,from ( value,1
,move ( move,1
,if ( was,2
,Remove ( STRING,1
,<Row:size> ( +,1
,{ ( +,1
,29 ( count,1
,home ( piece,22
,{ ( <,5
,state ( regions,1
,state ( piece,1
,= ( max,1
,max ( results,5
,home ( map,43
,P1 ( <,1
,P2 ( <,1
,< ( pair,4
,<Board:board> ( piece,1
,<Board:start> ( play,2
,< ( mancalaBoard,1
,ahead ( site,38
,STRING ( >=,6
,version ( define,1
,) ( var,18
,count: ( if,6
,origin: ( not,1
,Remove ( difference,5
,Mover ( last,4
,< ( merge,7
,Hole ( regions,1
,Hole ( piece,1
,. ( set,1
,kalahs ( storage,41
,Site ( forEach,7
,max: ( count,4
,Var ( value,1
,Odd ( count,7
,backtracking: ( and,3
,( storage,41
,handSite ( state,1
,< ( score,4
,P4 ( STRING,3
,P5 ( STRING,1
,Pending ( to,3
,NOW ( players,1
,Row ( map,1
,player ( piece,2
,home ( hand,11
,count:4 ( then,12
,#1 ( state,4
,Site ( STRING,11
,count:3 ( then,2
,count:2 ( then,1
,{ ( sow,1
,Value ( array,3
,array ( sites,4
,) ( min,9
,12 ( count,1
,>= ( +,1
,6 ( track,14
,from ( difference,6
,sites ( STRING,1
,Mover ( <,1
,5 ( count,7
,{ ( <=,4
,far ( and,1
,sow ( then,1
,{ ( count,6
,9 ( track,1
,draw ( if,1
,#2 ( values,4
,STRING ( regionSite,3
,ifAfterwards: ( <,10
,P1 ( count,13
,P2 ( count,13
,origin: ( <,2
,nextPhase ( was,5
,Sites ( union,3
,apply: ( STRING,2
,9 ( count,2
,<Board:regions> ( piece,1
,union ( values,1
,skipIf: ( STRING,1
,/ ( *,6
,7 ( -,1
,apply: ( moveAgain,1
,play ( STRING,11
,1 ( square,3
,backtracking: ( =,2
,next: ( and,10
,{ ( pass,1
,from: ( var,2
,to: ( var,2
,nextPhase ( <=,3
,( pass,3
,ahead ( to,46
,skipIf: ( not,3
,ifAfterwards: ( if,3
,Undefined ( var,5
,7 ( count,12
,42 ( count,2
,max:12 ( set,1
,RememberValue ( value,1
,Value ( site,4
,True ( and,2
,from ( ahead,12
,ahead ( STRING,4
,ifAfterwards: ( >,2
,>= ( STRING,2
,13 ( count,1
,skipIf: ( or,2
,From ( do,1
,ifAfterwards: ( or,8
,count: ( value,7
,steps: ( value,2
,Site ( intersection,13
,intersection ( STRING,9
,STRING ( track,8
,in: ( if,6
,50 ( value,1
,Random ( range,20
,skipIf: ( =,3
,origin:True ( then,2
,3 ( track,1
,<Board:init> ( count,2
,count:<Board:init> ( then,1
,STRING ( abs,1
,Player ( forEach,1
,count:5 ( then,2
,<Start:usingHogon> ( count,1
,< ( play,20
,< ( hand,4
,backtracking: ( or,1
,( ( fromTo,1
,count:1 ( then,4
,count: ( min,2
,) ( next,23
,Empty ( +,1
,+ ( site,2
,Occupied ( +,1
,60 ( score,1
,<Variant:opening> ( phase,1
,from ( var,2
,{ ( from,2
,P2 ( +,10
,count: ( STRING,5
,<Board:openingRegions> ( piece,1
,to: ( (,12
,( ( sites,12
,count:8 ( then,1
,skipIf: ( >=,1
,count:6 ( then,1
,skipIf: ( if,1
,count:7 ( then,1
,half ( regions,1
,half ( map,1
,max: ( var,1
,do ( or,39
,Mover ( to,2
,origin: ( !,1
,RightMost ( regions,1
,RightMost ( piece,1
,<End:cond> ( byScore,1
,< ( no,2
,Site ( union,2
,Site ( if,1
,backtracking: ( STRING,1
,Slide ( then,5
,Shoot ( piece,3
,<= ( max,1
,to:1 ( *,1
,. ( STRING,1
,) ( tile,25
,piece ( mover,10
,( tile,25
,add ( square,5
,30 ( hex,4
,and ( custodial,1
,) ( surround,6
,surround ( from,19
,( surround,19
,-90 ( wedge,5
,at: ( if,1
,= ( between,23
,5 ( concentric,1
,splitCrossings ( merge,1
,707 ( concentric,2
,-1 ( rotate,3
,<Version:hand> ( piece,1
,<Army> ( to,1
,<Tower> ( to,1
,<Version:play> ( end,2
,<Move:limit> ( if,1
,to:0 ( row,1
,< ( directions,2
,to ( union,10
,Backwards ( to,2
,{ ( rotate,2
,Adjacent ( from,1
,Move ( enclose,1
,enclose ( from,11
,ifAfterwards: ( and,12
,< ( rectangle,28
,( enclose,11
,<Rules:play> ( end,1
,exact ( -,2
,rules ( meta,24
,meta ( swap,18
,) ( start,44
,( meta,33
,STRING ( surround,11
,#1 ( who,2
,= ( counter,26
,then ( priority,2
,Friend ( trigger,1
,Enemy ( trigger,1
,( counter,35
,<Board> ( hand,2
,remove ( rotate,4
,45 ( concentric,1
,to ( apply,31
,STRING ( regions,3
,Within ( id,14
,/ ( -,6
,{ ( -,2
,player ( next,9
,/ ( +,5
,+ ( *,3
,3 ( *,4
,#1 ( /,3
,if ( lt,9
,lt ( count,5
,P2 ( then,4
,then ( note,4
,) ( note,10
,next: ( set,6
,( lt,11
,{ ( mover,1
,then ( promote,4
,promote ( last,59
,( promote,61
,< ( meta,9
,Even ( column,3
,Odd ( row,5
,Even ( row,3
,Odd ( column,5
,STRING ( enclose,10
,{ ( swap,1
,) ( noRepeat,1
,( noRepeat,10
,{ ( centrePoint,4
,from: ( difference,2
,to:2 ( *,2
,* ( to,2
,------------------------------------------------------------------------- ( option,2
,<Meta:rule> ( play,4
,sites ( results,1
,Around ( STRING,5
,to ( var,1
,player ( mover,5
,routine ( game,8
,Options ( define,7
,STRING ( board,36
,Options ( option,6
,STRING ( colour,6
,( colour,27
,normally ( if,4
,turn ( <=,2
,turn ( not,2
,) ( select,3
,select ( from,6
,< ( to,6
,>= ( to,2
,index ( then,2
,then ( swap,1
,turn ( <,2
,) ( shiftPlayers,1
,then ( shiftPlayers,1
,( select,6
,( shiftPlayers,2
,Around ( sites,30
,#1 ( rotations,2
,{ ( boardless,6
,{ ( path,2
,) ( path,2
,meta ( automove,1
,Loop ( mover,1
,STRING ( pathExtent,2
,pathExtent ( mover,1
,Loop ( next,1
,pathExtent ( next,1
,* ( count,9
,( rotations,2
,( boardless,6
,( path,4
,( automove,1
,( pathExtent,2
,sides ( S,1
,NW ( sites,1
,SW ( sites,1
,< ( intersection,1
,( S,1
,board ( tri,10
,( tri,39
,then ( attract,2
,attract ( from,2
,( attract,2
,Odd ( site,1
,Even ( site,1
,1 ( who,2
,2 ( who,1
,10000 ( count,1
,100 ( -,1
,<Board:seed> ( set,1
,} ( result,2
,< ( tri,14
,< ( hex,30
,< ( tiling,1
,< ( rotate,8
,90 ( tiling,4
,( tiling,16
,90 ( hex,11
,board ( dual,2
,dual ( hex,1
,Around ( site,15
,Group ( if,1
,difference ( intersection,6
,stop: ( is,2
,( dual,9
,Odd ( +,1
,piece ( +,2
,1 ( %,8
,% ( count,6
,> ( pow,1
,pow ( count,1
,P1 ( *,3
,* ( sizes,9
,P2 ( *,4
,P3 ( *,2
,P4 ( *,1
,( %,21
,( pow,1
,( sizes,31
,< ( union,24
,< ( then,5
,% ( +,7
,forEach ( expand,1
,if: ( all,3
,rectangle ( +,3
,+ ( ^,1
,. ( play,1
,{ ( site,3
,( ^,1
,< ( equipment,29
,board ( skew,2
,{ ( wedge,2
,1 ( rotate,1
,( skew,2
,Row ( /,2
,through: ( site,17
,<Tiling:piece1> ( centrePoint,2
,<Tiling:piece2> ( ahead,2
,0 ( topLevel,1
,site ( define,3
,To ( move,2
,Leap ( from,3
,} ( to,3
,next: ( moveAgain,2
,remove ( var,8
,index ( define,2
,= ( %,3
,% ( -,1
,<Board:MainWin0> ( STRING,2
,<Board:MainWin1> ( STRING,2
,<Board:MainWinC> ( STRING,10
,<Board:ExtraRows> ( <=,1
,< ( <=,8
,< ( remove,11
,STRING ( slide,8
,slide ( from,11
,S ( between,2
,<Model:board> ( piece,1
,through: ( last,1
,( slide,12
,STRING ( custodial,25
,{ ( <Board>,1
,then ( or,10
,<board ( square,2
,( <Board>,2
,- ( score,2
,1 ( score,1
,through: ( ahead,1
,through: ( from,3
,<Rules> ( nextPhase,1
,do ( forEach,187
,ifAfterwards: ( not,222
,union ( forEach,1
,<Remove:rule> ( move,2
,<Remove:rule> ( forEach,2
,<Play> ( end,4
,to ( expand,1
,30 ( tri,1
,-30 ( tri,1
,All ( between,10
,Next ( who,5
,All ( last,3
,> ( score,6
,remove ( remove,1
,STRING ( what,73
,remove ( coord,8
,piece ( var,8
,throughAny: ( STRING,4
,< ( intersect,1
,{ ( hex,1
,0 ( hex,1
,( intersect,1
,from: ( coord,1
,) ( range,21
,All ( to,2
,< ( difference,6
,{ ( push,2
,push ( from,2
,throughAny: ( sites,5
,what: ( next,2
,what: ( mover,3
,( push,2
,Cell ( difference,1
,Cell ( last,3
,line ( what,1
,line ( who,1
,line ( state,1
,line ( value,1
,Around ( difference,2
,ifAfterwards: ( =,2
,Mover ( and,2
,what: ( id,4
,through: ( centrePoint,1
,player ( STRING,3
,ifAfterwards: ( can,8
,1 ( then,2
,+ ( value,11
,= ( ahead,14
,exist ( if,5
,remove ( ahead,18
,Line ( -,3
,Mover ( add,4
,add ( to,20
,Next ( add,4
,2 ( merge,2
,95 ( rotate,6
,108 ( rectangle,3
,49 ( rotate,6
,216 ( rectangle,3
,-108 ( rectangle,3
,-216 ( rectangle,3
,3 ( merge,1
,move ( STRING,1
,Empty ( count,1
,Add ( STRING,2
,to ( count,1
,< ( concentric,2
,union ( square,3
,undecided ( move,2
,0 ( mapEntry,1
,1 ( mapEntry,1
,2 ( mapEntry,1
,3 ( mapEntry,1
,4 ( mapEntry,1
,5 ( mapEntry,1
,6 ( mapEntry,1
,7 ( mapEntry,1
,8 ( mapEntry,1
,supergame ( add,1
,3 ( remove,1
,2 ( remove,1
,4 ( remove,1
,<Version:playRules> ( end,1
,30 ( concentric,1
,STRING ( trigger,4
,pair ( id,666
,ahead ( ahead,6
,) ( #2,3
,to ( ahead,23
,if: ( can,3
,STRING ( while,1
,while ( STRING,1
,27 ( count,1
,( #2,17
,( while,1
,and ( trigger,1
,ifAfterwards: ( STRING,7
,origin: ( from,2
,. ( game,1
,54 ( count,1
,P1 ( size,1
,P2 ( size,1
,meta ( noRepeat,9
,P1 ( +,9
,Enemy ( state,3
,apply ( allCombinations,3
,allCombinations ( add,3
,state: ( mover,6
,) ( flip,2
,flip ( between,5
,Friend ( state,3
,remove ( hex,7
,Neutral ( flips,2
,<Rules:play> ( phase,2
,) ( append,3
,Mover ( >=,2
,( allCombinations,3
,( flip,5
,( flips,6
,( append,3
,{ ( note,1
,do ( add,1
,from ( union,2
,Player ( set,1
,Player ( count,1
,State ( player,1
,apply ( trigger,8
,origin: ( centrePoint,4
,) ( custodial,7
,) ( <Capture:type>,2
,<Capture:type> ( between,2
,<surround ( from,2
,<custodial ( from,2
,< ( max,3
,( <Capture:type>,2
,merge ( merge,3
,-1 ( rectangle,5
,12 ( rectangle,3
,#1 ( apply,1
,1 ( phase,2
,with: ( piece,2
,0 ( phase,2
,Enemy ( what,2
,= ( phase,7
,remove ( tri,4
,Axial ( between,2
,Diagonal ( to,81
,------------------------------------------------------------------------- ( game,3
,Orthogonal ( then,26
,STRING ( can,3
,< ( counter,2
,1 ( +,5
,Around ( between,3
,<Board:kingMove> ( then,1
,<Step ( to,1
,LL ( define,4
,effect ( define,3
,STRING ( flip,3
,pieces ( define,4
,away ( define,3
,~ ( then,10
,Each ( flips,4
,rules ( STRING,32
,24 ( count,1
,corners ( define,2
,and ( intervene,1
,origin: ( STRING,3
,{ ( can,1
,< ( surround,2
,STRING ( directional,4
,directional ( from,4
,#1 ( from,6
,SameDirection ( last,5
,OppositeDirection ( last,5
,( directional,4
,Promote ( last,116
,Moves ( STRING,29
,before: ( count,59
,after: ( count,57
,Moves ( forEach,2
,STRING ( promote,18
,STRING ( max,18
,Moves ( priority,2
,Slide ( directions,4
,SameDirection ( between,4
,45 ( merge,2
,#1 ( directions,2
,From ( max,1
,and ( move,6
,) ( promote,32
,promote ( site,1
,Move ( do,98
,do ( hop,2
,withValue:True ( STRING,2
,Mover ( then,5
,withValue:True ( priority,1
,True ( not,2
,7 ( value,1
,Cell ( forEach,2
,Cell ( from,2
,Cell ( site,5
,Cell ( to,5
,Vertex ( difference,3
,< ( expand,19
,Hop ( directions,6
,{ ( do,4
,and ( promote,7
,= ( *,4
,* ( from,3
,* ( last,3
,distance: ( +,2
,to: ( to,9
,Steps ( to,5
,apply ( remember,1
,Value ( STRING,2
,Move ( move,3
,Diagonal ( directions,1
,+ ( array,1
,array ( intersection,2
,Odd ( size,2
,player ( +,1
,% ( mover,3
,Even ( size,1
,{ ( repeat,2
,} ( poly,11
,) ( repeat,6
,shift ( -,2
,0 ( repeat,2
,from: ( centrePoint,4
,( repeat,11
,< ( site,8
,> ( site,7
,Step ( difference,1
,>= ( value,3
,Piece ( priority,1
,board ( renumber,2
,renumber ( splitCrossings,1
,splitCrossings ( add,1
,add ( regular,1
,( renumber,2
,180 ( scale,1
,From ( or,2
,merge ( wedge,1
,<Start:board> ( piece,1
,-1 ( wedge,1
,15 ( scale,2
,-45 ( wedge,1
,45 ( wedge,1
,85 ( scale,2
,135 ( wedge,1
,-135 ( wedge,1
,> ( max,1
,max ( count,5
,Occupied ( between,3
,rectangle ( *,1
,STRING ( rectangle,1
,#1 ( mover,49
,Forward ( between,49
,Start ( piece,43
,piece ( what,40
,Slide ( to,47
,= ( column,47
,Next ( forEach,8
,Step ( if,9
,rules ( if,1
,Mover ( mover,2
,and ( can,1
,Next ( next,2
,Rukh ( piece,1
,Ghora ( piece,1
,Fil ( piece,1
,Wazir ( piece,1
,Shahzada ( piece,1
,Padshah ( piece,1
,Kotwal ( piece,1
,Urdabegini ( piece,1
,Each ( do,1
,Paidal ( piece,1
,Layakúcan ( piece,1
,Lúdkax ( piece,1
,Alyx ( piece,1
,Slúnax ( piece,1
,Kúnax ( piece,1
,Férsix ( piece,1
,10 ( square,2
,piece ( value,1
,= ( if,1
,To ( slide,2
,between ( min,2
,. ( from,2
,Pieces ( where,1
,Diagonal ( from,1
,Rotational ( to,1
,apply ( forEach,18
,Direction ( from,16
,Diagonal ( if,1
,Orthogonal ( from,5
,{ ( piece,1
,) ( board,1
,S ( do,1
,Undefined ( STRING,1
,union ( union,2
,Around ( mapEntry,1
,. ( move,2
,and ( note,3
,Pot ( +,6
,+ ( pot,6
,) ( amount,6
,W ( STRING,5
,N ( STRING,5
,S ( STRING,2
,E ( STRING,5
,Mover ( range,1
,( pot,6
,( amount,7
,Slide ( from,29
,Pending ( ahead,20
,3 ( is,24
,2 ( is,24
,CaptureToPieceAndResetCounter ( define,7
,Usage: ( STRING,69
,NextCanNotMove ( define,8
,History ( for,3
,PieceHasMoved ( define,3
,RememberPieceHasMoved ( define,3
,KingNotCheckedAndToEmpty ( define,3
,Cell ( STRING,3
,DoCastle ( define,3
,Example: ( STRING,3
,in ( piece,13
,In ( ahead,3
,Var ( last,12
,* ( 2,2
,diagonally ( if,1
,Start ( if,1
,( for,3
,( 2,3
,numSides:4 ( or,1
,numSides:4 ( move,5
,} ( handSite,2
,max: ( topLevel,4
,level: ( value,4
,Around ( union,2
,; ( or,1
,Courier ( piece,1
,Castling ( define,2
,Die ( if,4
,max:4 ( move,1
,exact ( value,4
,Pending ( between,4
,} ( STRING,32
,STRING ( id,38
,where ( id,27
,50 ( count,2
,P7 ( sites,2
,P8 ( sites,2
,) ( slide,2
,or ( fromTo,1
,<Variant:dice> ( piece,1
,NW ( directions,1
,NE ( directions,1
,SW ( directions,1
,SE ( directions,1
,N ( directions,1
,W ( directions,1
,S ( directions,1
,E ( directions,1
,Forwards ( between,2
,#1 ( values,1
,#1 ( piece,4
,In ( #1,11
,Active ( who,12
,difference ( forEach,1
,slide ( between,1
,( #1,38
,apply ( add,4
,CaptureForwardDiagonal ( define,3
,Step ( STRING,3
,Sites ( STRING,5
,Edge ( site,7
,Between ( directions,2
,12 ( square,4
,Around ( forEach,2
,) ( exact,5
,P3 ( union,1
,P4 ( union,1
,Edge ( sites,50
,32 ( count,1
,step ( non-capturing,1
,pawns ( define,1
,( non-capturing,1
,P2 ( define,2
,------------------------------------------------------- ( define,2
,direction ( E,1
,clause ( define,5
,direction ( define,1
,Directions ( define,2
,------------------------------------------------------- ( game,1
,Adjacent ( STRING,1
,( E,1
,max:3 ( move,1
,STRING ( %,2
,% ( row,1
,% ( column,1
,<= ( column,2
,>= ( column,1
,>= ( row,2
,Piece ( next,1
,is ( unless,1
,'diagonally' ( i,1
,piece ( Queen,1
,. ( Note:,2
,. ( The,1
,Pritchard ( 2nd,1
,( unless,1
,( i,1
,( Queen,1
,( Note:,2
,( The,1
,( 2nd,1
,True ( !,7
,Backward ( between,12
,Next ( or,2
,#2 ( forEach,1
,= ( +,3
,1 ( column,1
,King ( piece,8
,General ( piece,22
,Rook ( piece,15
,Bishop ( piece,15
,Pawn ( piece,8
,Silver ( piece,7
,rotations:False ( to,3
,90 ( remove,2
,Knight ( piece,11
,Lance ( piece,11
,P1 ( forEach,4
,P2 ( forEach,4
,Diagonal ( then,1
,promote ( from,1
,then ( step,2
,Adjacent ( between,12
,Adjacent ( directions,8
,step ( move,2
,to: ( from,8
,Each ( and,1
,and ( do,1
,Forward ( directions,4
,25 ( place,2
,24 ( place,1
,23 ( place,1
,22 ( place,1
,21 ( place,1
,20 ( place,1
,19 ( place,1
,18 ( place,1
,In ( what,10
,difference ( difference,5
,difference ( if,1
,~ ( between,8
,BL ( between,1
,BR ( between,1
,~ ( exact,12
,Leftward ( between,1
,Rightward ( between,1
,~ ( range,6
,before:34 ( range,1
,before:35 ( range,1
,W ( between,1
,1 ( place,1
,36 ( place,1
,2 ( place,1
,35 ( place,1
,3 ( place,1
,34 ( place,1
,4 ( place,1
,33 ( place,1
,5 ( place,1
,32 ( place,1
,6 ( place,1
,31 ( place,1
,7 ( place,1
,30 ( place,1
,8 ( place,1
,29 ( place,1
,9 ( place,1
,28 ( place,1
,10 ( place,1
,27 ( place,1
,11 ( place,2
,26 ( place,1
,12 ( place,2
,Diagonal ( sites,2
,Adjacent ( sites,1
,Orthogonal ( sites,1
,16 ( place,1
,15 ( place,1
,14 ( place,1
,13 ( place,1
,#1 ( id,156
,Threatened ( if,2
,) ( column,6
,stop: ( =,15
,Guard ( piece,5
,Elephant ( piece,5
,Horse ( piece,6
,Chariot ( piece,6
,palace ( if,1
,Canon ( piece,6
,STRING ( remove,3
,Palace ( if,1
,Soldier ( piece,6
,Cell ( rotate,1
,Forward ( union,1
,union ( directions,1
,apply ( forget,14
,do ( remember,5
,6 ( pips,1
,1 ( pips,4
,Pending ( if,1
,mapEntry ( var,1
,} ( sites,3
,Name ( define,1
,#2 ( move,1
,next: ( forget,1
,P1/P2 ( define,1
,> ( matchScore,33
,) ( matchScore,66
,< ( matchScore,33
,Mover ( value,3
,19 ( if,1
,18 ( if,1
,17 ( if,1
,16 ( if,1
,13 ( if,1
,exact ( pips,3
,replayDouble: ( and,2
,Die ( forEach,2
,<Board:dice> ( define,1
,Array ( STRING,2
,{ ( where,1
,if:False ( remove,2
,4 ( graph,1
,1 ( graph,1
,0 ( graph,1
,87 ( graph,2
,87 ( square,1
,1 ( tri,1
,2 ( graph,2
,2 ( tri,1
,2 ( track,1
,steps: ( mul,3
,mul ( count,3
,. ( or,1
,( mul,3
,> ( size,1
,Shared ( forEach,1
,0 ( pips,1
,Mover ( <=,1
,steps: ( if,1
,min ( array,2
,<Dice:throwValues> ( map,1
,Friend ( mapEntry,1
,<Slide:to> ( then,1
,STRING ( end,1
,#1 ( count,1
,{ ( surakartaBoard,1
,>= ( counter,1
,then ( vote,1
,( surakartaBoard,1
,addScore ( player,3
,meta ( passEnd,4
,( passEnd,4
,Var ( mapEntry,1
,STRING ( phase,7
,Captures ( forEach,1
,P3 ( count,1
,Vertex ( to,1
,Cell ( intersection,4
,Edge ( to,10
,Vertex ( site,2
,Edge ( intersection,1
,Vertex ( intersection,1
,#2 ( site,3
,board ( tiling,5
,on:Vertex ( or,1
,on:Edge ( or,1
,on:Cell ( or,1
,not ( >,1
,> ( min,2
,min ( count,4
,#1 ( define,2
,+ ( rotation,2
,) ( rotation,2
,at: ( #1,19
,on ( define,2
,#1 ( can't,1
,#2 ( define,2
,at: ( #2,6
,from: ( #1,1
,from: ( ahead,1
,ahead ( #2,1
,to: ( #2,1
,Rotation ( to,3
,Wagon ( define,1
,Bridge ( define,1
,forEach ( union,3
,from: ( forEach,2
,4 ( value,2
,Fire ( define,1
,mover ( define,1
,capture ( move,3
,if:False ( apply,3
,Shoot ( normal,1
,origin: ( ahead,10
,Shoot ( from,1
,Shoot ( outnumber,1
,entrenchments ( STRING,1
,Cavalry ( define,1
,capture ( against,2
,Artillery ( define,1
,Around ( var,3
,entrenchment ( define,1
,CannonOutline ( define,1
,> ( state,8
,Regions ( define,1
,) ( pass,2
,#2 ( last,1
,#1 ( and,1
,Promote ( from,2
,20 ( count,1
,river ( move,1
,wagon ( move,1
,1323 ( sites,1
,293 ( sites,1
,( rotation,4
,( can't,1
,( normal,1
,( outnumber,1
,( against,3
,Value ( sites,2
,} ( move,1
,Moves ( define,2
,Distance ( step,7
,if: ( #1,1
,Human ( define,1
,union ( STRING,3
,Vehicle ( define,1
,Aircraft ( define,1
,Boat ( define,1
,Attacks ( define,1
,attacks ( define,2
,In ( #3,6
,8 ( state,4
,unit ( if,1
,counter-attack ( if,1
,by:Enemy ( last,3
,attacked ( terrain,1
,Attack ( boolean,2
,* ( if,1
,In ( #2,6
,* ( value,7
,terrain ( if,1
,) ( Shooter,3
,forests ( if,1
,water ( STRING,1
,) ( 4x4x4x5x100x4,1
,max ( /,3
,#1 ( mapEntry,1
,{ ( take,2
,building ( STRING,1
,> ( who,1
,#3 ( STRING,1
,range ( STRING,1
,Healing ( define,1
,min ( mapEntry,4
,- ( +,3
,max ( -,2
,- ( mapEntry,2
,<= ( +,1
,units ( define,1
,<= ( /,1
,copy:True ( then,4
,) ( take,6
,} ( difference,4
,Sites ( define,1
,removal ( define,1
,Damage ( against,1
,Maximum ( define,1
,maps ( define,1
,state ( movement,2
,value ( health,2
,Doctrines ( define,1
,STRING ( map,1
,War ( define,1
,{ ( intersection,1
,expand ( forEach,3
,forEach ( players,5
,intersection ( forEach,2
,Team ( forEach,2
,forEach ( team,2
,STRING ( region,1
,Colour ( intersection,6
,) ( colour,6
,) ( region,5
,<Scenario:boardRegins> ( hand,1
,<Scenario:teams> ( set,1
,Player ( STRING,1
,< ( show,16
,) ( show,48
,Random ( union,4
,Random ( difference,49
,Random ( sites,9
,( #3,16
,( terrain,1
,( boolean,2
,( Shooter,3
,( 4x4x4x5x100x4,1
,( take,8
,( movement,2
,( health,2
,( team,2
,( region,6
,( show,64
,<Version:rulesCommander> ( piece,1
,) ( step,1
,To ( STRING,1
,~ ( apply,1
,value: ( value,16
,<CheckmateRule:Ending> ( <=,1
,Empty ( from,2
,) ( dominoes,1
,{ ( deal,1
,( dominoes,1
,( deal,1
,<Movement:type> ( move,1
,Next ( count,3
,if ( le,3
,le ( score,3
,( le,7
,if ( ge,1
,ge ( score,1
,( ge,2
,Mover ( max,4
,max ( sizes,18
,Next ( max,2
,+ ( max,8
,Next ( +,5
,Infinity ( count,4
,) ( <SType:selScoring>,1
,remove ( value,4
,From ( select,1
,Limping ( -,7
,hex ( -,4
,T33434 ( -,4
,( <SType:selScoring>,1
,board ( <Board:type>,2
,( <Board:type>,2
,<BoardShape:directionsWin> ( to,2
,stop: ( <,3
,do ( remove,2
,next: ( add,1
,count: ( -,4
,STRING ( remember,1
,Value ( ahead,1
,priority ( do,1
,Mover ( *,3
,* ( max,4
,Next ( *,2
,0 ( counter,3
,<BoardShape:ForcedFillLevel> ( count,1
,{ ( <Scoring:calculation>,1
,{ ( all,4
,} ( byScore,1
,*** ( item,4
,( <Scoring:calculation>,1
,dual ( tiling,6
,) ( lt,1
,) ( gt,4
,gt ( count,1
,Mover ( /,1
,+ ( results,5
,Next ( /,1
,fillColour: ( colour,8
,strokeColour: ( colour,4
,edgeColour: ( colour,1
,gt ( score,2
,) ( le,2
,45 ( square,7
,( gt,10
,Calculation ( define,1
,Mover ( cost,3
,< ( complete,6
,complete ( regular,5
,< ( graph,49
,( cost,7
,( complete,8
,Edge ( last,2
,< ( dual,2
,dual ( rotate,1
,{ ( cost,1
,0 ( cost,1
,Odd ( score,1
,P2 ( cost,2
,Claim ( to,4
,< ( subdivide,1
,subdivide ( hex,1
,( subdivide,4
,remove ( complete,1
,<Play:play> ( end,1
,complete ( subdivide,3
,subdivide ( regular,3
,Mover ( state,3
,if ( gt,6
,gt ( STRING,3
,Chosen:nonMoverCaptures ( or,1
,hops ( priority,1
,allowed ( priority,1
,<Multi:capture> ( if,1
,) ( #1,1
,next: ( #1,1
,define ( define,1
,defines ( define,4
,by: ( player,2
,Player ( addScore,1
,player ( player,1
,) ( %,3
,<NumberPlayers:inGame> ( var,1
,- ( player,1
,) ( propose,1
,pieces ( or,2
,replaced ( forEach,1
,<Multi:suicide> ( sites,1
,to: ( site,1
,Booleans: ( define,1
,Integers ( define,2
,consider ( count,1
,{ ( #1,1
,to: ( forEach,1
,game ( item,1
,moves ( item,3
,Hops-a-Daisy ( item,3
,? ( item,1
,Equiversi ( item,1
,choice ( item,2
,player ( item,1
,Equi ( item,1
,< ( =,4
,Originals ( item,1
,( propose,1
,#2 ( count,1
,to ( #1,1
,STRING ( <BoardShape:gridType>,1
,Piece ( do,1
,Move ( add,1
,( <BoardShape:gridType>,1
,Disc ( to,1
,distance: ( size,1
,max ( array,1
,from:#1 ( difference,1
,to: ( intersection,2
,board ( trim,2
,if: ( <Edge:controlType>,1
,if: ( <Center:controlType>,1
,remove ( dual,4
,( trim,2
,( <Edge:controlType>,1
,( <Center:controlType>,1
,optimizations ( which,1
,Utility ( define,1
,#1 ( ahead,10
,processing ( cosmetic,1
,regionSite ( intersection,1
,regionSite ( STRING,3
,Cell ( var,3
,Edge ( STRING,2
,NotBlockedBy ( =,1
,connections ( and,1
,-1 ( where,3
,Level ( id,12
,markers ( !,1
,as ( 2,1
,0 ( min,1
,+ ( if,4
,#3 ( sites,1
,from:#3 ( min,2
,move ( define,2
,prameter-shift ( if,1
,or ( >,1
,0 ( where,5
,marker ( >=,1
,#4 ( site,1
,#1 ( site,4
,update ( STRING,1
,#2 ( value,2
,allow ( Forget,1
,#5 ( site,4
,restrict ( remember,1
,To ( select,2
,at: ( value,1
,win ( define,1
,marker ( custodial,1
,Mover ( site,1
,Next ( var,3
,Next ( to,2
,{ ( apply,1
,1 ( mover,3
,locations ( or,1
,( which,1
,( cosmetic,1
,( Forget,1
,this ( count,1
,Booleans ( define,1
,STRING ( lt,1
,lt ( STRING,2
,lt ( score,1
,< ( colour,2
,Orthogonal ( site,4
,STRING ( addScore,1
,Mover ( %,1
,30 ( dual,1
,- ( max,2
,players ( =,1
,-1 ( counter,1
,1 ( counter,2
,edge ( sites,1
,piece ( sites,1
,neighbors ( sites,1
,location ( ge,1
,<PlaceBy:qtyMax> ( count,1
,if: ( le,2
,<NeighborsOf:nbrMax> ( count,1
,gt ( *,2
,1 ( *,1
,workaround ( item,2
,Odd ( STRING,1
,% ( STRING,2
,3 ( %,2
,* ( who,1
,Around ( intersection,1
,<Board> ( *,2
,3 ( -,4
,Mover ( score,1
,Orthogonal ( step,1
,STRING ( results,1
,To ( hop,1
,Value ( union,7
,STRING ( exact,28
,7 ( var,1
,unique:True ( then,7
,5 ( var,1
,4 ( var,1
,3 ( var,1
,Around ( #1,2
,choices ( define,1
,0 ( then,1
,blocked ( can,1
,Move ( claim,1
,claim ( to,6
,cases ( move,1
,conditions ( then,1
,then ( claim,4
,0 ( (,1
,influence ( define,1
,consistancy ( do,1
,considerations: ( define,1
,1 ( set,1
,2 ( set,1
,conditions ( define,1
,phase ( define,1
,stack:False ( then,1
,options ( define,2
,893 ( tri,1
,tri ( poly,1
,<Variants:pieOrNot> ( end,1
,--------------------------------------------- ( option,1
,( claim,6
,do ( swap,1
,( ( size,1
,? ( set,1
,0 ( max,2
,max ( difference,2
,difference ( sizes,2
,) ( sizes,2
,capture ( sites,1
,. ( option,1
,0 ( %,1
,2 ( %,1
,<Play:type> ( move,1
,length: ( exact,7
,Vertex ( sites,4
,STRING ( claim,1
,<Dual:begin> ( <Board>,1
,All ( expand,1
,<Version:play> ( then,1
,exact ( count,3
,length: ( max,1
,board ( complete,1
,+ ( state,2
,STRING ( place,1
,#1 ( handSite,6
,- ( id,1
,STRING ( amount,1
,) ( mode,2
,<Players:board> ( hand,1
,P1 ( range,1
,P2 ( range,1
,< ( +,2
,{ ( state,1
,P3 ( range,1
,( mode,2
,2 ( *,1
,Row ( +,1
,Row ( -,1
,Row ( STRING,6
,index: ( value,3
,column: ( value,1
,) ( results,2
,to:0 ( what,1
,to ( regionSite,1
,75 ( repeat,1
,Player ( prev,1
,sites ( site,1
,Cell ( range,16
,play ( satisfy,19
,( satisfy,19
,) ( hints,5
,{ ( forAll,4
,Hint ( is,2
,Count ( sites,3
,of:1 ( hint,3
,< ( hint,10
,) ( hint,899
,( hints,8
,( forAll,7
,( hint,919
,Vertex ( range,2
,<Challenge:hints> ( regions,1
,Hint ( <,1
,< ( from,1
,< ( hints,3
,{ ( hint,4
,{ ( tri,1
,87 ( rotate,2
,180 ( tri,3
,47 ( tri,1
,73 ( tri,1
,Sum ( hint,1
,<Challenge> ( regions,1
,STRING ( hint,1
,satisfy ( all,5
,Different ( sites,3
,. ( regions,5
,Edge ( range,1
,Cell ( or,1
,= ( hint,1
,) ( forAll,2
,Vertex ( or,1
,satisfy ( forAll,1
,Cell ( is,1
,Hint ( =,1
,regions ( sites,2
,from: ( intersection,2
,Sum ( /,1
,#3 ( #4,2
,> ( #3,1
,) ( #3,5
,#5 ( and,2
,<= ( #3,2
,>= ( #3,2
,( #4,2
,Orthogonal ( ahead,2
,NE ( STRING,1
,NW ( STRING,1
,SW ( STRING,1
,SE ( STRING,1
,Threatened ( id,3
,<challenge:limit> ( count,2
,add ( rectangle,1
,Edge ( union,2
,Random ( forEach,1
,<Variant:end> ( result,1
,remove ( from,1
,<0>< ( regions,1
,<2>< ( regions,1
,Orthogonal ( where,1
,ahead ( where,4
,) ( <Minotaur:move>,1
,( <Minotaur:move>,1
,< ( what,1
,#1 ( +,1
,#1 ( size,2
),2 ) (,1211
,diagonals:Alternating ) ),45
,) ) (,22711
,3 ) ),329
,) ) use:Vertex,45
,use:Vertex ) (,289
,STRING ) ),5445
,STRING ) },868
,} ) (,4465
,Top ) steps:2,53
,steps:2 ) (,107
,} ) ),2827
,) ) ),28448
,Piece ) ),365
,Loss ) (,14
,P2 ) <Num:dogs>,1
,<Num:dogs> ) (,1
,Win ) ),1092
,) ) },2271
,STRING ) *,360
,) (,49777
,) ),59622
,) use:Vertex,225
,) },5261
,) steps:2,208
,) <Num:dogs>,1
,) *,507
,site ) ),766
,STRING ) STRING,156
,Right ) (,20
,Left ) ),63
,Bottom ) steps:3,20
,steps:3 ) ),58
,P1 ) (,1145
,STRING ) next:,18
,Piece ) (,84
,From ) (,63
,To ) ),1012
,All ) ),22
,P2 ) (,595
,P1 ) ),680
,by:P2 ) ),15
,) STRING,1914
,) steps:3,94
,) next:,277
,between ) ),625
,to ) ),3434
,OppositeDirection ) (,3
,moveAgain ) ),576
,diagonals:Alternating ) (,9
,} ) use:Vertex,87
,STRING ) (,5433
,P1 ) },26
,P1 ) count:2,9
,count:2 ) (,79
,count:8 ) (,9
,count:8 ) },2
,} ) phases:,144
,Empty ) ),359
,Mover ) ),1601
,Mover ) STRING,75
,OppositeDirection ) ),5
,Pass ) ),87
,top:True ) ),33
,) count:2,93
,) phases:,287
,5 ) (,235
,} ) counts:,10
,Pass ) (,29
,) counts:,27
,<Tiger:move> ) },1
,<Start:tigerSites> ) },1
,<Tiger:playMove> ) (,1
,} ) >,303
,diagonals:Alternating ) edges:,2
,use:Vertex ) >,16
,5 ) >,14
,5 ) use:Vertex,5
,) ) >,400
,top:True ) >,1
,} ) *,147
,} ) },272
,) >,1189
,) edges:,67
,count:21 ) (,2
,Corners ) ),38
,P1 ) count:20,3
,count:20 ) },3
,P1 ) <Num:tigers>,1
,<Num:tigers> ) (,1
,) count:20,4
,) <Num:tigers>,1
,2 ) ),596
,} ) edges:,43
,Top ) ),403
,Bottom ) ),452
,diagonals:Solid ) ),8
,Centre ) ),53
,centrePoint ) ),128
,P1 ) count:16,3
,count:16 ) },2
,P1 ) STRING,8
,) count:16,7
,Pass ) STRING,6
,P1 ) 9,3
,9 ) (,68
,STRING ) >,58
,) 9,12
,diagonals:Radiating ) use:Vertex,1
,at:EndOfTurn ) >,2
,<Board:initTiger> ) (,1
,P2 ) count:15,12
,count:15 ) },28
,P2 ) ),731
,P2 ) STRING,42
,P2 ) 7,1
,7 ) (,92
,4 ) ),163
,) ) edges:,11
,8 ) ),148
,) count:15,19
,) 7,10
,Each ) (,322
,count:24 ) },2
,) ) {,15
,<Move:leopard> ) ),1
,Loss ) ),157
,) {,188
,Each ) },217
,P1 ) count:3,9
,count:3 ) (,52
,Empty ) (,115
,Moves ) 3,3
,) ) count:3,13
,count:3 ) },10
,) ) STRING,971
,Moves ) (,7
,P2 ) 6,3
,6 ) ),178
,byScore ) ),32
,) count:3,46
,) 3,142
,) 6,33
,From ) ),158
,8 ) (,116
,2 ) trail:,2
,Neutral ) },32
,by:All ) ),13
,Passed ) (,21
,) trail:,2
,P1 ) count:<Board:initTiger>,1
,count:<Board:initTiger> ) (,1
,P2 ) count:<Board:initLeopard>,1
,count:<Board:initLeopard> ) },1
,P2 ) <Board:leopardGoal>,1
,<Board:leopardGoal> ) (,1
,5 ) ),137
,) count:<Board:initTiger>,1
,) count:<Board:initLeopard>,1
,) <Board:leopardGoal>,1
,P1 ) count:5,45
,count:5 ) (,411
,P1 ) 4,1
,4 ) (,271
,) count:5,422
,) 4,131
,1 ) ),871
,7 ) ),48
,) ) Maybe,2
,) Maybe,2
,7 ) vertices:,3
,) vertices:,35
,from ) ),835
,) ) 1,325
,1 ) (,781
,by:Mover ) (,78
,) ) 0,280
,0 ) (,533
,site ) 1,6
,To ) 0,39
,0 ) ),511
,Top ) (,90
,Left ) (,30
,Right ) ),68
,) ) state:1,2
,state:1 ) (,180
,Bottom ) steps:2,56
,) 1,704
,) 0,566
,) state:1,38
,<Variant:p1Moves> ) (,1
,Outer ) (,13
,centrePoint ) N,4
,N ) ),14
,) ) vertices:,6
,to ) (,577
,steps:2 ) ),57
,) N,28
,P1 ) count:1,3
,count:1 ) (,20
,P2 ) count:<Num>,1
,count:<Num> ) },1
,) count:1,35
,) count:<Num>,1
,by:P1 ) ),16
,P1 ) 11,3
,11 ) (,29
,) 11,9
,<Moves:dog> ) },1
,Draw ) ),69
,12 ) ),31
,Bottom ) (,61
,by:P2 ) if:,2
,) if:,981
,Board ) (,181
,Corners ) (,7
,Bottom ) steps:1,4
,steps:1 ) (,20
,6 ) (,198
,) steps:1,50
,by:Next ) (,23
,) ) Orthogonal,114
,) ) P1,238
,To ) to:,14
,from ) (,540
,P1 ) count:12,6
,count:12 ) (,10
,) Orthogonal,257
,) P1,261
,) to:,100
,) count:12,15
,P1 ) count:24,1
,) count:24,1
,3 ) (,419
,} ) count:5,3
,#1 ) if:#2,1
,) if:#2,1
,9 ) if:#1,2
,count:15 ) (,30
,Centre ) counts:,1
,) ) 8,10
,) if:#1,3
,) 8,18
,P2 ) count:17,1
,count:17 ) (,1
,count:2 ) },28
,) count:17,2
,P2 ) count:25,1
,count:25 ) (,4
,) count:25,5
,P1 ) 3,2
,Top ) steps:4,16
,steps:4 ) (,29
,Centre ) S,1
,distance:1 ) ),2
,) steps:4,48
,) S,23
,count:20 ) (,2
,P2 ) count:<Goat:num>,1
,count:<Goat:num> ) (,1
,P1 ) count:<Tiger:num>,1
,count:<Tiger:num> ) },1
,by:Mover ) ),52
,) count:<Goat:num>,1
,) count:<Tiger:num>,1
,P1 ) 6,1
,#1 ) ),405
,STRING ) #1,7
,#2 ) ),208
,Pending ) ),84
,Pending ) (,51
,To ) (,461
,between ) #3,6
,#3 ) ),45
,) ) #2,98
,between ) (,110
,ToClear ) ),29
,Mover ) 0,16
,Prev ) 0,1
,Prev ) 1,4
,<Fox:stepMove> ) ),1
,<Fox:rememberHopCapture> ) ),1
,) ) next:,153
,) #1,241
,) #3,27
,) #2,181
,by:Next ) ),15
,<Start:play> ) ),1
,P2 ) count:16,4
,count:16 ) (,9
,centrePoint ) count:2,2
,<Play:kingHop> ) (,1
,centrePoint ) count:<Play:numKings>,1
,count:<Play:numKings> ) (,1
,9 ) if:,1
,) count:<Play:numKings>,1
,} ) count:4,1
,count:4 ) },15
,) count:4,100
,} ) vertices:,19
,STRING ) Special,1
,from ) 2,3
,1 ) },32
,from ) 1,21
,2 ) },14
,centrePoint ) count:4,1
,count:4 ) (,74
,0 ) },47
,) Special,1
,) 2,304
,centrePoint ) S,2
,S ) ),22
,P2 ) 2,5
,) ) P2,233
,P2 ) },92
,) P2,253
,contiguous:False ) ),1
,use:Vertex ) <Variant:pieceMoves>,1
,Centre ) (,17
,5 ) },13
,) ) <Variant:endRules>,1
,<Variant:endRules> ) ),1
,) <Variant:pieceMoves>,1
,) <Variant:endRules>,1
,Pips ) ),129
,Next ) ),421
,directed:True ) (,878
,directed:True ) },169
,num:4 ) (,35
,End ) STRING,14
,Off ) ),41
,P1 ) count:7,3
,count:7 ) (,11
,P2 ) count:7,3
,count:7 ) },5
,roll ) next:,98
,Pips ) 0,8
,mover ) ),346
,Mover ) (,387
,) count:7,9
,EndSite ) ),2
,) ) Connected,1
,19 ) (,16
,48 ) (,4
,38 ) },4
,P2 ) count:5,43
,count:5 ) },6
,) Connected,1
,65 ) ),1
,STRING ) 3,26
,steps:#1 ) ),12
,pips ) 0,59
,#1 ) End,5
,#1 ) Off,10
,Off ) (,66
,#1 ) (,183
,#1 ) STRING,7
,} ) {,67
,num:6 ) (,17
,17 ) (,19
,21 ) },1
,roll ) ),82
,) ) if:,353
,pips ) ),107
,DiceUsed ) ),88
,TeamMover ) (,10
,) End,34
,) Off,72
,next ) ),67
,STRING ) 0,73
,) ) Off,23
,) ) End,19
,End ) },8
,#1 ) if:,30
,by:#1 ) ),12
,End ) ),10
,#2 ) 15,6
,15 ) 2,6
,1 ) 0,10
,site ) steps:,7
,13 ) {,34
,num:2 ) (,49
,} ) P1,9
,} ) P2,9
,19 ) },13
,} ) Bar,12
,) ) noMoveYet:,7
,top:True ) (,35
,) 15,13
,) steps:,83
,) Bar,12
,) noMoveYet:,7
,steps:6 ) ),17
,6 ) },29
,count:14 ) (,4
,10 ) },12
,DiceUsed ) (,4
,centrePoint ) if:,1
,19 ) ),17
,) ) cells:,18
,10 ) (,53
,25 ) (,23
,12 ) },16
,count:4 ) ),15
,) cells:,31
,steps:#2 ) ),66
,num:3 ) (,25
,P1 ) count:15,7
,pips ) 1,12
,steps:1 ) ),83
,steps:4 ) ),15
,steps:5 ) ),5
,Off ) STRING,9
,at:#1 ) ),37
,num:<Dice:num> ) (,3
,<Dice:move> ) },1
,mover ) top:True,11
,Mover ) Undefined,3
,Undefined ) (,4
,moveAgain ) (,247
,Mover ) 1,27
,Undefined ) ),12
,count:1 ) },2
,) top:True,32
,) Undefined,5
,DiceEqual ) ),10
,97 ) ),2
,98 ) ),2
,99 ) ),5
,steps:#3 ) ),19
,MovesThisTurn ) ),26
,mover ) (,44
,from ) level:,148
,level ) ),279
,from ) #1,28
,From ) FromTop,26
,From ) level:,46
,To ) FromTop,7
,To ) level:,64
,STRING ) P3,2
,P3 ) (,91
,STRING ) P1,4
,P4 ) (,57
,STRING ) P2,4
,STRING ) P4,2
,P4 ) ),99
,61 ) (,5
,21 ) (,17
,88 ) (,7
,32 ) },1
,} ) The,7
,) level:,359
,) FromTop,61
,) P3,2
,) P4,2
,) The,13
,28 ) ),10
,value ) ),97
,moveAgain ) },33
,DiceEqual ) (,19
,Remembered ) ),12
,STRING ) top:True,10
,All ) (,59
,) ) steps:,44
,at:#1 ) 1,10
,STRING ) 2,43
,} ) count:2,16
,state:1 ) },40
,by:Mover ) if:,19
,<Board> ) ),33
,at:#1 ) 2,7
,at:#1 ) 0,5
,level ) 2,4
,level ) 1,5
,} ) count:3,9
,) ) Move,10
,STRING ) 1,113
,) Move,12
,12 ) (,36
,18 ) },4
,P2 ) count:12,5
,P3 ) count:12,1
,P4 ) count:12,1
,count:12 ) },9
,) ) True,59
,True ) ),64
,) True,79
,to ) },6
,STRING ) index:0,6
,index:0 ) ),12
,index:0 ) (,2
,STRING ) index:1,6
,index:1 ) ),5
,index:1 ) (,2
,STRING ) index:2,6
,index:2 ) ),4
,index:2 ) (,2
,STRING ) index:3,6
,index:3 ) ),4
,index:3 ) (,2
,STRING ) index:4,6
,index:4 ) ),4
,index:4 ) (,2
,STRING ) index:5,6
,index:5 ) ),4
,index:5 ) (,2
,STRING ) index:6,4
,index:6 ) ),3
,Next ) (,347
,count:13 ) (,4
,) index:0,14
,) index:1,7
,) index:2,6
,) index:3,6
,) index:4,6
,) index:5,6
,) index:6,4
,) ) 13,4
,13 ) ),4
,25 ) },8
,) 13,4
,Pips ) 3,7
,Mover ) 8,1
,MovesThisTurn ) 4,2
,Mover ) 3,10
,26 ) (,24
,27 ) ),13
,27 ) (,12
,26 ) ),7
,28 ) (,17
,MovesThisTurn ) 0,7
,MovesThisTurn ) (,5
,quadrant ) (,5
,quadrant ) },1
,4 ) Can,1
,0 ) Reset,1
,. ) ),5
,) Can,8
,) Reset,1
,) ) 2,101
,Pips ) 4,7
,4 ) 4,7
,Pips ) 6,5
,6 ) 6,3
,Pips ) 14,3
,14 ) 14,3
,Pips ) 15,3
,15 ) 15,3
,0 ) 10,4
,Pips ) 39,3
,39 ) 5,3
,Pips ) 10,3
,Pips ) 18,3
,18 ) (,10
,Pips ) 19,3
,Pips ) 20,3
,20 ) (,19
,Pips ) 21,3
,Pips ) 29,3
,29 ) },4
,} ) 2,4
,to ) 0,1
,To ) #1,11
,<Players:num> ) (,13
,directed:True ) <Players:track3>,1
,Board ) ),109
,) ) <Players:arc3>,1
,count:<Num:piece> ) ),3
,STRING ) **,128
,directed:True ) >,34
,) 14,10
,) 10,22
,) 39,3
,) 5,121
,) 18,4
,) 19,8
,) 20,9
,) 21,5
,) 29,6
,) <Players:track3>,1
,) <Players:arc3>,1
,) **,130
,P1 ) 12,1
,P2 ) 12,1
,) 12,10
,14 ) {,1
,STRING ) Off,12
,STRING ) if:,120
,) ) steps:1,11
,Pips ) 2,9
,Board ) STRING,5
,) ) 14,3
,14 ) (,23
,2 ) 1,11
,} ) Opposite,4
,site ) STRING,36
,) ) ifAfterwards:,89
,) Opposite,4
,) ifAfterwards:,288
,P1 ) 31,3
,31 ) (,17
,P2 ) 31,3
,) 31,6
,<Player:num> ) (,28
,11 ) ),20
,directed:True ) <Player:trackP3P4>,1
,P2 ) count:3,6
,count:3 ) <Player:startP3P4>,1
,P3 ) count:3,4
,P4 ) count:3,3
,) <Player:trackP3P4>,1
,) <Player:startP3P4>,1
,#1 ) #2,11
,from ) STRING,59
,STRING ) End,8
,count:2 ) ),18
,Mover ) 2,17
,) ) count:2,29
,71 ) ),1
,72 ) ),1
,73 ) ),1
,74 ) ),1
,) ) 5,25
,) ) 10,7
,35 ) (,10
,) ) 3,70
,) ) 20,4
,15 ) ),4
,10 ) ),31
,) ) if:True,19
,to ) FromTop,16
,to ) level:,40
,P1 ) count:4,14
,P2 ) count:4,14
,) if:True,43
,Mover ) },23
,directed:True ) use:Vertex,1
,23 ) (,24
,) ) count:,402
,Mover ) -2,2
,-2 ) (,1
,-1 ) ),6
,-2 ) ),2
,num:5 ) (,2
,) count:,451
,) -2,2
,at:<End:site1> ) ),1
,at:<End:site2> ) ),1
,at:<End:site3> ) ),1
,at:<End:site4> ) ),1
,at:<End:site5> ) ),1
,at:<End:site6> ) ),1
,<End:sites> ) ),1
,at:12 ) ),10
,at:0 ) ),4
,Shared ) (,157
,var ) ),36
,0 ) stack:True,1
,stack:True ) (,6
,directed:True ) ),3
,level ) (,11
,Shared ) ),48
,) ) stack:True,50
,stack:True ) ),32
,num:4 ) },3
,site ) count:,3
,player ) (,2
,player ) ),9
,) stack:True,56
,P2 ) count:1,1
,count:1 ) >,5
,count:4 ) >,8
,count:3 ) >,2
,P3 ) count:4,11
,P4 ) count:4,10
,level ) 0,4
,31 ) },2
,count:3 ) ),28
,Pips ) (,8
,Mover ) if:,98
,Pips ) 1,10
,Pips ) 5,4
,Pips ) 7,1
,7 ) },5
,num:7 ) (,4
,} ) <Players:tracks>,1
,if:True ) ),4
,15 ) (,17
,3 ) },16
,} ) <Players:entries>,2
,) ) <Players:endTracks>,1
,Mover ) <Players:playingTeamPieces>,1
,<Players:playingTeamPieces> ) },1
,56 ) (,10
,35 ) },4
,P3 ) ),105
,P5 ) ),26
,P6 ) ),25
,P5 ) },2
,P6 ) },1
,) <Players:tracks>,1
,) <Players:entries>,3
,) <Players:endTracks>,1
,) <Players:playingTeamPieces>,1
,) ) top:True,7
,Mover ) 5,2
,level:0 ) ),4
,level:1 ) ),2
,1 ) End,1
,1 ) STRING,32
,P2 ) count:2,6
,at:3 ) ),3
,at:4 ) ),2
,at:5 ) ),2
,at:1 ) ),3
,at:2 ) ),3
,at:16 ) ),2
,at:17 ) ),4
,at:18 ) ),4
,at:13 ) ),10
,at:14 ) ),8
,at:15 ) ),8
,<Ruleset:piece> ) (,1
,) ) specifically,1
,#2 ) 19,1
,#2 ) 29,1
,29 ) (,18
,#2 ) 10,1
,#2 ) 0,2
,From ) steps:1,1
,End ) (,9
,True ) (,8
,End ) #1,2
,) ) Squares,2
,rule ) ),2
,) ) Square,1
,) ) #1,57
,To ) 1,20
,STRING ) 4,38
,4 ) #3,1
,#4 ) ),14
,#6 ) next:,1
,#7 ) ),4
,#7 ) (,1
,10 ) {,3
,} ) <Dice>,1
,} ) <Ruleset:rules>,1
,<Ruleset:rules> ) (,1
,num:1 ) >,2
,num:4 ) >,1
,4 ) },28
,STRING ) ~,9
,~ ) >,4
,#1 ) if:True,2
,var ) (,6
,Moves ) ),27
,From ) 9,1
,9 ) ),38
,var ) 1,22
,var ) 2,1
,22 ) ),1
,22 ) (,23
,23 ) },2
,24 ) },3
,24 ) (,24
,count:5 ) ),3
,20 ) 20,1
,21 ) 21,1
,22 ) 22,1
,23 ) 23,1
,24 ) 24,1
,25 ) 25,1
,26 ) 26,1
,27 ) 27,1
,28 ) 28,1
,29 ) ),1
,) ) whats:,2
,STRING ) if:True,1
,) specifically,1
,) Squares,2
,) Square,1
,) <Dice>,1
,) <Ruleset:rules>,1
,) ~,29
,) 22,2
,) 23,2
,) 24,3
,) 25,7
,) 26,1
,) 27,1
,) 28,1
,) whats:,2
,at:10 ) ),7
,at:11 ) ),8
,at:8 ) ),4
,at:9 ) ),4
,1 ) True,1
,13 ) (,24
,pips ) 4,3
,P1 ) 5,3
,P2 ) 5,4
,Mover ) steps:,3
,P1 ) count:13,2
,P2 ) count:13,1
,count:13 ) },1
,Mover ) Move,1
,top:True ) Enter,1
,) ) Enter,1
,) count:13,3
,) Enter,2
,STRING ) 8,4
,8 ) },15
,Remembered ) (,5
,STRING ) level:0,3
,level:0 ) Mover,1
,STRING ) level:1,1
,level:1 ) Mover,1
,STRING ) count:2,1
,5 ) {,4
,1 ) If,1
,value ) 2,3
,2 ) 0,1
,2 ) If,1
,) ) Remove,4
,centrePoint ) (,6
,14 ) },5
,value:1 ) (,34
,value:1 ) },3
,) level:0,5
,) Mover,200
,) level:1,1
,) If,5
,) Remove,4
,index:6 ) Off,1
,site ) (,89
,13 ) },6
,count:<Pieces:num> ) (,1
,count:<Pieces:num> ) },1
,16 ) ),8
,17 ) ),9
,top:False ) (,6
,site ) level:,36
,var ) 0,18
,} ) count:8,2
,LevelTo ) ),11
,) count:8,5
,<Board:size> ) {,5
,20 ) },3
,#2 ) Off,1
,#2 ) End,1
,#2 ) if:,5
,size:2 ) (,9
,<Board:sizeHome> ) (,1
,<Players:numPlayers> ) (,2
,<Board:size> ) ),19
,STRING ) <Players:home>,1
,Orthogonal ) ),107
,) <Players:home>,2
,to ) STRING,189
,) ) #3,9
,To ) #2,9
,Next ) 2,18
,Next ) 0,1
,#2 ) (,34
,16 ) (,21
,possibilities ) (,1
,To ) STRING,16
,) ) If,3
,Piece ) },15
,<Board:size> ) (,24
,Each ) <Players:home>,1
,4 ) column:,5
,3 ) column:,10
,STRING ) column:,5
,STRING ) column:0,5
,column:0 ) steps:,11
,) column:,24
,) column:0,9
,Each ) <Board:home>,1
,8 ) >,12
,STRING ) steps:3,16
,10 ) >,7
,STRING ) steps:4,4
,) <Board:home>,1
,<Version:numPlayers> ) (,11
,Each ) <Version:home>,1
,Orthogonal ) (,152
,) ) N,1
,N ) (,173
,) ) W,2
,W ) },12
,1 ) column:0,4
,) ) E,2
,E ) (,35
,) ) S,2
,S ) },118
,4 ) Orthogonal,4
,4 ) N,2
,4 ) E,2
,E ) },10
,4 ) W,2
,4 ) S,2
,1 ) column:,2
,W ) (,31
,) <Version:home>,1
,) W,39
,) E,41
,#1 ) Diagonal,11
,) Diagonal,45
,Top ) steps:3,19
,0 ) -,1
,) ) -,1
,#1 ) },7
,from ) if:,44
,Empty ) #2,1
,from ) Diagonal,7
,Diagonal ) ),36
,) ) or,2
,To ) or,1
,to ) #2,8
,) ) #4,1
,P2 ) #3,1
,#4 ) (,5
,#3 ) (,16
,#3 ) #5,2
,#5 ) },1
,} ) end,1
,or ) end,1
,piece ) #1,1
,} ) steps:8,1
,E ) steps:16,1
,S ) (,52
,} ) steps:6,2
,} ) steps:16,3
,} ) steps:5,2
,} ) steps:3,4
,-1 ) (,6
,STRING ) -1,2
,to:Next ) next:,1
,) -,2
,) or,3
,) #4,11
,) #5,29
,) end,2
,) steps:8,16
,) steps:16,4
,) steps:6,22
,) steps:5,9
,) -1,3
,by:#2 ) ),6
,by:#1 ) (,10
,12 ) {,4
,Prev ) STRING,76
,at:32 ) (,6
,32 ) (,10
,32 ) ),1
,at:33 ) (,6
,33 ) (,6
,33 ) ),1
,34 ) (,8
,34 ) ),1
,size:2 ) },5
,30 ) (,20
,To ) to:Next,4
,to:Next ) ),6
,Prev ) ),55
,prev ) ),6
,Players ) (,3
,Active ) ),4
,) to:Next,5
,from ) Orthogonal,36
,MovesThisTurn ) 3,2
,to ) Orthogonal,14
,) ) Not,1
,) ) if,1
,) ) Only,2
,site ) P1,1
,site ) P2,1
,To ) Orthogonal,8
,) ) Any,1
,State ) ),3
,From ) Orthogonal,3
,) ) An,1
,) ) With,2
,size:6 ) (,4
,value:2 ) (,14
,value:3 ) (,27
,value:4 ) (,13
,value:5 ) (,11
,value:6 ) },1
,) ) pieces,2
,State ) (,1
,Win ) (,4
,Loss ) },1
,) Not,1
,) if,1
,) Only,2
,) Any,1
,) An,1
,) With,2
,) pieces,2
,0 ) 8,1
,7 ) {,1
,directed:True ) <Player:trackP3>,3
,count:4 ) <Player:startP3>,2
,) <Player:trackP3>,3
,) <Player:startP3>,3
,8 ) {,2
,} ) <Version:map>,1
,P3 ) count:2,1
,P4 ) count:2,1
,) <Version:map>,1
,STRING ) 25,1
,25 ) ),3
,STRING ) 11,2
,27 ) },4
,48 ) },1
,top:False ) ),15
,level ) if:,13
,from ) #2,5
,pips ) (,2
,MovesThisTurn ) 2,6
,0 ) True,2
,site ) #2,8
,MovesThisTurn ) 1,1
,) ) The,5
,} ) state:1,11
,P1 ) count:21,1
,P2 ) count:21,1
,count:21 ) },1
,) count:21,2
,SE ) (,14
,NW ) },2
,size:<Board:numPieces> ) (,1
,num:<Board:numDice> ) (,1
,) ) steps:<Board:sizeHome>,2
,P1 ) state:1,1
,1 ) state:2,2
,state:2 ) (,21
,2 ) state:3,2
,state:3 ) (,28
,3 ) state:4,2
,state:4 ) (,12
,4 ) state:5,2
,state:5 ) (,14
,5 ) state:6,2
,state:6 ) (,13
,P2 ) state:1,2
,state:6 ) >,1
,P1 ) state:2,4
,1 ) state:3,2
,2 ) state:4,2
,3 ) state:5,2
,4 ) state:6,2
,5 ) state:8,2
,state:8 ) (,10
,6 ) state:9,2
,state:9 ) (,2
,7 ) state:10,2
,state:10 ) (,2
,8 ) state:11,2
,state:11 ) (,2
,9 ) state:12,2
,state:12 ) (,1
,P2 ) state:2,4
,state:12 ) >,1
,) steps:<Board:sizeHome>,2
,) state:2,23
,) state:3,7
,) state:4,7
,) state:5,5
,) state:6,4
,) state:8,152
,) state:9,2
,) state:10,2
,) state:11,2
,) state:12,2
,moveagain ) envoked,1
,between ) at:EndOfTurn,13
,at:EndOfTurn ) ),37
,) ) Defines,6
,from ) Forward,3
,To ) Forward,1
,Forward ) ),13
,from ) Backward,2
,To ) Backward,31
,Backward ) ),43
,Forward ) (,25
,Backward ) (,11
,) envoked,1
,) at:EndOfTurn,35
,) Defines,6
,) Forward,13
,) Backward,35
,<Num:pieces> ) (,1
,num:<Num:dice> ) (,1
,2 ) STRING,6
,STRING ) <Player:startP3>,1
,3 ) STRING,6
,4 ) STRING,3
,W ) ),63
,P1 ) to:P2,5
,to:P2 ) (,28
,P2 ) to:P1,5
,to:P1 ) },4
,STRING ) False,4
,to:P1 ) (,33
,STRING ) to:P1,5
,STRING ) to:P2,5
,to:P2 ) },7
,) to:P2,15
,) to:P1,15
,) False,83
,num:1 ) (,7
,by:All ) (,11
,Neutral ) ),24
,Neutral ) (,73
,STRING ) level:,6
,From ) to:,33
,site ) FromTop,12
,<Player:number> ) (,3
,sites:86 ) {,3
,80 ) },1
,if:True ) (,66
,) ) maxState:85,1
,maxState:85 ) (,1
,container:1 ) ),1
,Mover ) level:,3
,Player ) (,16
,) maxState:85,1
,To ) >,1
,From ) >,1
,) ) A,1
,index/value ) (,1
,state:7 ) (,12
,state:8 ) },2
,) A,1
,Mover ) Off,6
,Off ) #1,3
,From ) STRING,32
,STRING ) to:,15
,loop:True ) (,37
,loop:True ) },36
,use:Edge ) (,27
,) ) phases:,143
,73 ) (,7
,P5 ) (,11
,P6 ) (,11
,P7 ) (,10
,Neutral ) level:,11
,LevelTo ) (,6
,Neutral ) STRING,4
,maxState:10 ) (,1
,2-stack ) in,1
,1-stack ) .,1
,) ) <Stack:limit>,2
,<Stack:limit> ) ),2
,) ) Sacrifice,2
,) ) This,3
,. ) stack:True,2
,) ) stack:,3
,) ) Throw,2
,Backwards ) (,3
,2 ) if:True,10
,<Board:shape> ) ),1
,} ) top:True,1
,) ) <End:event>,1
,) in,1
,) .,16
,) <Stack:limit>,2
,) Sacrifice,2
,) This,3
,) stack:,3
,) Throw,2
,) <End:event>,1
,57 ) ),1
,STRING ) 6,3
,STRING ) 10,2
,46 ) (,5
,45 ) (,4
,45 ) },1
,P1 ) count:<Scoring:num>,2
,count:<Scoring:num> ) (,2
,P3 ) count:<Scoring:num>,2
,count:<Scoring:num> ) },2
,) count:<Scoring:num>,4
,38 ) (,14
,3 ) 5,1
,1 ) 2,2
,44 ) 1,1
,1 ) look,1
,<Variant:capture> ) ),1
,To ) 2,12
,#1 ) >,1
,) look,1
,96 ) (,6
,68 ) (,5
,81 ) (,5
,52 ) (,5
,26 ) },1
,Pass ) },5
,384 ) (,1
,directed:True ) <Player:track58>,1
,39 ) (,9
,63 ) (,3
,87 ) (,7
,111 ) (,2
,135 ) (,1
,159 ) (,1
,183 ) (,1
,207 ) (,1
,231 ) (,1
,255 ) (,1
,279 ) (,1
,303 ) (,1
,327 ) (,1
,351 ) (,1
,375 ) },1
,<Player:diceHand> ) },1
,roll ) (,3
,pips ) STRING,2
,P5 ) count:4,2
,P6 ) count:4,2
,P7 ) count:4,2
,P8 ) count:4,2
,P9 ) count:4,1
,P10 ) count:4,1
,P11 ) count:4,1
,P12 ) count:4,1
,P13 ) count:4,1
,P14 ) count:4,1
,P15 ) count:4,1
,P16 ) count:4,1
,) <Player:track58>,1
,distance:7 ) ),8
,58 ) (,6
,91 ) (,9
,} ) <Player:tracks>,1
,} ) <Player:center>,1
,36 ) (,9
,37 ) (,18
,39 ) },3
,54 ) (,5
,55 ) (,4
,57 ) (,4
,59 ) },1
,72 ) (,6
,74 ) (,6
,75 ) (,3
,76 ) (,7
,77 ) (,3
,78 ) (,3
,79 ) },1
,90 ) (,8
,92 ) (,8
,93 ) (,9
,94 ) (,8
,95 ) (,5
,97 ) (,6
,98 ) (,6
,99 ) },1
,9 ) },1
,) <Player:tracks>,7
,) <Player:center>,1
,42 ) (,5
,53 ) (,4
,11 ) },8
,<Play:capture> ) ),1
,<Play:movePiece> ) (,1
,STRING ) stack:True,1
,by:Mover ) STRING,1
,} ) **,2
,UNE ) (,3
,USE ) (,2
,USW ) (,2
,UNW ) },1
,pyramidal:True ) use:Vertex,4
,count:15 ) ),2
,Empty ) if:,41
,Flat ) (,1
,Flat ) ),11
,at:#1 ) (,13
,at:#2 ) ),6
,on:Edge ) (,6
,Cell ) (,12
,Each ) <Players:regions>,1
,Edge ) (,15
,Edge ) ),39
,) ) ifAfterwards:<Players:pathRule>,1
,ifAfterwards:<Players:pathRule> ) (,1
,P1 ) count:10,2
,count:10 ) (,3
,P2 ) count:10,2
,P3 ) count:5,38
,P4 ) count:5,38
,) <Players:regions>,1
,) ifAfterwards:<Players:pathRule>,1
,) count:10,4
,Each ) Map,1
,To ) if:,3
,) ) 4,55
,) Map,1
,9 ) {,1
,from ) 3,1
,from ) 4,1
,) ) <Players:entries>,1
,76 ) },2
,44 ) },1
,} ) <Player:track>,1
,36 ) },2
,num:3 ) },1
,Mover ) 4,4
,P3 ) },16
,P4 ) },6
,) <Player:track>,1
,count:2 ) <Player:teams>,1
,Team1 ) ),6
,by:Team1 ) ),1
,Team2 ) ),6
,by:Team2 ) ),1
,) <Player:teams>,1
,Players ) 99,1
,Players ) 100,1
,100 ) ),22
,Players ) 101,1
,101 ) ),2
,Players ) 102,1
,102 ) ),2
,Players ) 103,1
,103 ) ),1
,Players ) 104,1
,104 ) ),1
,Mover ) steps:1,1
,89 ) (,7
,86 ) (,8
,85 ) (,7
,62 ) (,3
,64 ) (,6
,65 ) (,5
,66 ) (,4
,67 ) (,5
,49 ) (,8
,50 ) (,60
,51 ) (,4
,47 ) (,7
,59 ) (,7
,60 ) (,18
,84 ) (,8
,83 ) (,5
,82 ) (,6
,80 ) (,20
,79 ) (,2
,71 ) (,6
,70 ) (,16
,69 ) (,4
,43 ) (,2
,44 ) (,2
,41 ) (,2
,40 ) (,33
,88 ) },1
,14 ) ),7
,18 ) ),4
,20 ) ),5
,21 ) ),2
,All ) },17
,P7 ) ),24
,P8 ) ),23
,P9 ) ),24
,P10 ) ),7
,P11 ) ),6
,P12 ) ),5
,P13 ) ),4
,P14 ) ),3
,P15 ) ),2
,P16 ) ),1
,) 99,3
,) 100,25
,) 101,1
,) 102,1
,) 103,1
,) 104,1
,STRING ) True,7
,STRING ) #2,35
,Neutral ) #1,1
,level:#2 ) ),2
,) ) maxState:8,1
,maxState:8 ) (,1
,) ) <Player:start>,1
,16 ) >,8
,) maxState:8,1
,) <Player:start>,1
,) ) 7,5
,) ) maxState:7,1
,maxState:7 ) (,1
,size:1 ) },1
,85 ) },2
,) maxState:7,1
,22 ) },1
,mover ) STRING,1
,LevelTo ) 1,1
,From ) #1,57
,#1 ) to:,1
,to ) to:Mover,2
,to:Mover ) ),12
,To ) False,17
,to:Next ) (,11
,to:Mover ) },4
,) ) to:P1,1
,) ) to:P2,1
,) to:Mover,2
,30 ) },1
,) ) Forward,5
,Columns ) ),4
,Rows ) 1,1
,0 ) column:,1
,) ) column:,1
,Columns ) 1,1
,1 ) to:,4
,} ) <Player:startPos>,1
,Vertex ) ),9
,37 ) },1
,) <Player:startPos>,1
,steps:#1 ) (,1
,value:36 ) (,3
,value:38 ) },1
,value:38 ) (,2
,value:37 ) },1
,value:37 ) (,1
,value:39 ) },1
,num:3 ) 10,1
,5 ) All,2
,1 ) One,1
,3 ) Two,1
,15 ) Two,1
,) All,20
,) One,1
,) Two,3
,STRING ) 5,4
,28 ) },2
,) ) From,11
,by:Enemy ) (,6
,} ) cells:,2
,121 ) (,1
,181 ) (,2
,253 ) },1
,144 ) (,2
,-36 ) (,1
,-72 ) },1
,Out ) ),12
,) From,11
,Mover ) 10,2
,10 ) 1,1
,mover ) 1,3
,-10 ) (,1
,Mover ) 100,1
,100 ) (,93
,afterConsequence:True ) },71
,Prev ) (,76
,mover ) apply:,86
,Pending ) STRING,8
,) apply:,122
,loop:True ) ),79
,Shared ) },57
,Bottom ) counts:,1
,Top ) counts:,1
,From ) steps:,1
,sow ) (,1
,to ) count:,15
,<Board:rowSize> ) (,4
,<Board:InitOneSeed> ) (,1
,<Board:InitTwoSeeds> ) (,1
,Next ) if:,6
,mover ) apply:<Capture:type>,3
,apply:<Capture:type> ) ),1
,apply:<Capture:type> ) (,2
,STRING ) Undefined,2
,Undefined ) STRING,1
,) apply:<Capture:type>,3
,To ) steps:#1,1
,store:None ) (,1
,} ) next:,2
,From ) count:,14
,Board ) if:,50
,) steps:#1,1
,STRING ) if:#1,1
,if:#1 ) (,3
,mover ) if:,3
,} ) apply:,6
,Pending ) },4
,) ) steps:3,7
,) ) <Sow:numSeed>,1
,<Sow:numSeed> ) ),1
,STRING ) We,2
,) <Sow:numSeed>,1
,) We,6
,2 ) 2,6
,1 ) count:2,7
,2 ) count:2,7
,16 ) },2
,17 ) },5
,) ) count:1,31
,count:1 ) ),17
,mover ) skipIf:,2
,) ) skipIf:,14
,) skipIf:,16
,) ) origin:True,11
,origin:True ) ),8
,next ) (,21
,) origin:True,14
,afterConsequence:True ) ),16
,Turns ) 2,7
,) ) False,45
,False ) },1
,STRING ) store:None,2
,Passed ) STRING,28
,STRING ) count:,8
,) store:None,2
,afterConsequence:True ) STRING,2
,steps:1 ) },6
,steps:1 ) count:,2
,) ) steps:2,9
,E ) ),59
,Pending ) We,1
,Turns ) 3,1
,<Row:size> ) (,16
,var ) },5
,<ExtraCapture:num> ) ),2
,from ) Mover,6
,Turns ) ),11
,) ) counts:,10
,P1 ) <Board:track2>,1
,) ) to:,3
,P2 ) >,21
,) <Board:track2>,1
,<Board:track> ) (,1
,Each ) <Board:regions>,2
,P1 ) counts:,1
,P2 ) counts:,1
,P3 ) counts:,1
,P4 ) counts:,1
,1 ) sowEffect:,1
,) ) apply:,23
,STRING ) steps:1,1
,loop:True ) >,8
,) <Board:regions>,2
,) sowEffect:,1
,Prev ) True,4
,False ) ),9
,4 ) 1,1
,<Board:tracks> ) (,2
,Pass ) Forfeit,1
,) Forfeit,1
,Player ) ),12
,to ) 1,26
,3 ) 1,1
,3 ) 2,2
,<Row:size> ) 1,1
,<Row:size> ) 2,1
,<Row:size> ) 3,1
,mover ) origin:True,3
,origin:True ) },1
,<Board:innerInitP1> ) Inner,1
,<Board:innerInitP2> ) Inner,1
,) Inner,2
,0 ) <Board:leftMostP2>,1
,23 ) >,1
,27 ) >,1
,) <Board:leftMostP2>,1
,<Sow:numSeed> ) (,1
,site ) W,1
,site ) E,1
,) ) origin:,4
,) origin:,4
,33 ) },1
,) ) second,1
,) second,1
,<Row:tracks> ) (,1
,from ) N,5
,from ) S,4
,loop:True ) use:Vertex,5
,} ) kalahs,39
,pits ) (,31
,Track ) ),92
,var ) if:True,1
,) ) 9,7
,) kalahs,39
,Each ) <Player:regions>,1
,) <Player:regions>,1
,to ) 2,3
,to ) 3,2
,to ) 4,2
,to ) 5,2
,to ) 6,2
,) ) Middle,1
,} ) leftHole,1
,) Middle,2
,) leftHole,1
,P1 ) if:,6
,P2 ) if:,6
,Right ) steps:2,14
,Left ) steps:2,14
,) ) count:4,31
,STRING ) {,29
,FirstSite ) (,33
,LastSite ) },33
,) ) backtracking:True,11
,backtracking:True ) (,1
,value ) (,7
,) backtracking:True,11
,backtracking:True ) ),18
,unique:True ) (,8
,unique:True ) ),4
,origin:True ) (,3
,forward:True ) ),3
,Next ) {,3
,) ) 50,2
,) 50,3
,<Capture:doneSoFar> ) },1
,} ) Two,1
,) ) <Capture:numCounters>,1
,<Capture:numCounters> ) ),1
,) ) No,7
,) ) We,2
,) <Capture:numCounters>,1
,) No,11
,3 ) True,2
,) ) <Counters:num>,1
,<Counters:num> ) apply:,1
,Mover ) {,1
,) ) no,2
,) <Counters:num>,1
,) no,2
,Empty ) index:0,2
,) ) includeSelf:False,14
,Track ) if:,1
,) includeSelf:False,14
,forward:True ) (,3
,1 ) apply:,2
,) ) backtracking:,4
,) backtracking:,4
,to ) #1,38
,moveAgain ) #2,1
,steps:7 ) ),2
,steps:8 ) ),6
,LastSite ) (,7
,FirstSite ) },7
,) ) count:5,2
,) ) <Board:centreMove>,1
,Passed ) {,8
,) ) count:6,5
,count:6 ) ),8
,Left ) steps:1,3
,Right ) steps:1,3
,) <Board:centreMove>,1
,) count:6,9
,afterConsequence:True ) steps:1,2
,to ) steps:1,17
,to ) steps:2,6
,pits ) },10
,<Rightmost:sitesP1> ) ),1
,<Rightmost:sitesP2> ) ),1
,Board ) 12,1
,steps:1 ) count:3,1
,pass ) (,1
,8 ) STRING,2
,Track ) (,3
,at:7 ) 2,1
,at:8 ) 2,1
,at:9 ) 2,1
,at:10 ) 2,1
,at:11 ) 2,1
,at:12 ) 2,1
,at:1 ) 2,1
,at:2 ) 2,1
,at:3 ) 2,1
,at:4 ) 2,1
,at:5 ) 2,1
,at:6 ) 2,1
,To ) steps:1,1
,next ) 1,1
,4 ) apply:,3
,Cycle ) (,6
,includeSelf:False ) ),4
,to ) W,11
,to ) E,11
,STRING ) count:4,1
,) ) count:7,2
,18 ) count:4,1
,from ) steps:,2
,STRING ) W,6
,STRING ) E,6
,} ) fourth,1
,) fourth,1
,} ) if:,12
,sow ) ),6
,15 ) },2
,) ) forward:True,4
,) forward:True,4
,steps:1 ) to:,1
,) ) 6,13
,) ) count:<Board:init>,1
,) count:<Board:init>,1
,From ) apply:,1
,site ) 2,2
,site ) 0,14
,6 ) >,13
,<Players:track> ) (,1
,Shared ) <Players:homes>,1
,) ) <Players:Play>,1
,<Players:end> ) ),2
,Each ) >,2
,) <Players:homes>,1
,) <Players:Play>,1
,11 ) count:3,1
,1 ) 11,1
,Mover ) to:,1
,To ) unique:True,1
,) unique:True,17
,Bottom ) if:,1
,P1 ) count:72,1
,count:72 ) ),1
,) count:72,1
,Shared ) count:17,1
,count:17 ) ),4
,9 ) count:,1
,2 ) count:,1
,8 ) count:,1
,3 ) count:,1
,Mover ) count:,1
,STRING ) count:5,1
,loop:True ) <Board:homeTracks>,1
,} ) <Board:openingRegions>,1
,) <Board:homeTracks>,1
,) <Board:openingRegions>,1
,) ) count:8,1
,) ) <End:rule>,1
,<End:rule> ) ),1
,) ) 12,4
,12 ) >,4
,) ) 25,4
,) <End:rule>,1
,afterConsequence:True ) (,2
,STRING ) count:7,1
,count:7 ) ),1
,Right ) steps:5,1
,Left ) steps:5,1
,} ) First,1
,) First,1
,To ) count:,2
,#1 ) 0,1
,Mover ) >,1
,Cycle ) ),1
,P1 ) 1,9
,P2 ) 1,6
,at:#1 ) 3,2
,by:Mover ) to:1,1
,<Result> ) ),11
,) to:1,1
,to ) if:,1
,) ) not,1
,) not,1
,<Columns:num> ) ),4
,numSides:4 ) (,2
,numSides:4 ) },2
,mover ) state:0,2
,state:0 ) (,7
,mover ) state:1,1
,<End:result> ) ),3
,) state:0,5
,2 ) vertices:,2
,1 ) if:,53
,count:10 ) },1
,P1 ) 2,2
,to ) Own,10
,Own ) ),7
,to ) Enemy,3
,Enemy ) ),6
,) Own,16
,) Enemy,9
,by:P2 ) (,9
,3 ) edges:,5
,between ) Off,1
,Slide ) (,1
,STRING ) Diagonal,2
,} ) <Play>,4
,<Play> ) ),1
,) <Play>,4
,use:Vertex ) <Version:hand>,1
,) ) <Move:limit>,1
,by:P2 ) to:0,1
,P1 ) >,10
,Moves ) 12,1
,) <Version:hand>,1
,) <Move:limit>,1
,) to:0,2
,state:2 ) },3
,by:Neutral ) ),8
,<Play> ) },1
,3 ) >,10
,Orthogonal ) 0,9
,7 ) >,14
,9 ) >,27
,diagonals:Solid ) use:Vertex,7
,to ) NotEmpty,3
,) NotEmpty,4
,<Rules:start> ) <Rules:play>,1
,count:2 ) >,1
,) <Rules:play>,1
,swap ) ),18
,count:29 ) (,1
,count:30 ) },1
,Empty ) STRING,7
,counter ) 5,1
,Counter ) ),58
,) ) To,1
,. ) (,2
,) To,21
,diagonals:Solid ) edges:,1
,<Players> ) (,1
,All ) <Players>,1
,<Players> ) STRING,1
,Playable ) (,1
,) <Players>,1
,NE ) (,24
,SW ) },7
,NW ) (,35
,SE ) },10
,) ) copy:True,14
,copy:True ) ),5
,<Result:mover> ) ),2
,<Result:next> ) ),1
,) copy:True,14
,P2 ) in:,1
,Full ) ),3
,Loop ) ),1
,} ) #1,4
,#1 ) 2,6
,to:All ) ),5
,to:All ) (,5
,var ) represents,4
,here ) ),4
,) in:,13
,) represents,4
,NE ) },2
,SW ) (,18
,next ) },1
,13 ) >,13
,15 ) >,9
,19 ) >,10
,STRING ) Mover,121
,0 ) count:25,2
,1 ) count:25,2
,count:25 ) },1
,Bottom ) },1
,Right ) },4
,swap ) (,1
,noRepeat ) },1
,centrePoint ) },4
,) ) to:2,2
,) ) -------------------------------------------------------------------------,5
,} ) -------------------------------------------------------------------------,2
,) to:2,2
,) -------------------------------------------------------------------------,7
,Loop ) (,1
,SidesNoCorners ) (,1
,Corners ) },1
,Sides ) (,3
,<Board:size> ) use:Vertex,5
,#1 ) Orthogonal,4
,site ) if:,2
,) ) Main,9
,<BoardSize:smallSide> ) use:Vertex,7
,use:Vertex ) ),19
,) ) Options,7
,LightTan ) ),1
,) Main,9
,) Options,7
,<Swap:playRules> ) (,1
,<Result:nonMover> ) ),1
,) ) Can,7
,Moves ) 0,4
,0 ) No,4
,Turns ) (,3
,Players ) ),6
,Prev ) Mover,1
,player ) },1
,) ) Select,2
,) ) Swap,1
,index ) ),2
,) ) Mover,37
,own ) },1
,) Select,2
,) Swap,1
,by:All ) Orthogonal,1
,copy:True ) (,2
,Square ) (,4
,colour:1 ) (,2
,colour:2 ) },2
,automove ) ),1
,STRING ) ifAfterwards:,2
,SidesMatch ) ),1
,mover ) path:True,1
,path:True ) (,2
,next ) path:True,1
,Players ) STRING,2
,) path:True,2
,SW ) #3,1
,#2 ) #3,1
,NE ) ),15
,SE ) ),8
,<Edge:target_zone> ) ),1
,Empty ) >,4
,Inner ) ),1
,7 ) use:Vertex,3
,N ) },7
,by:Mover ) Empty,1
,by:Enemy ) ),6
,<Size> ) ),4
,0 ) if:,2
,) Empty,11
,min:3 ) ),2
,min:5 ) ),1
,2 ) >,8
,4 ) >,10
,} ) included:True,2
,included:True ) (,2
,} ) STRING,51
,) included:True,2
,copy:True ) ifAfterwards:,1
,site ) Own,3
,sites ) if:,1
,site ) stop:,1
,) ) stopIncluded:True,8
,stopIncluded:True ) ),7
,sites ) ),3
,) stop:,5
,) stopIncluded:True,8
,P1 ) min:<Group>,2
,min:<Group> ) (,2
,P2 ) min:<Group>,2
,min:<Group> ) ),2
,Full ) (,5
,) min:<Group>,4
,Players ) 1,1
,Players ) 2,1
,<Version:endScore> ) ),1
,<Stars> ) (,1
,) ) <Balance>,1
,<Balance> ) ),1
,Board ) >,1
,Outer ) >,1
,Corners ) >,1
,centrePoint ) WSW,2
,WSW ) (,2
,centrePoint ) ESE,2
,ESE ) },2
,) <Balance>,1
,) WSW,2
,) ESE,2
,Bottom ) steps:,5
,) ) <Board:size>,1
,<Board:dot0> ) ),1
,) ) Places,1
,site ) steps:4,1
,site ) steps:8,1
,site ) steps:5,1
,site ) steps:10,1
,site ) steps:15,1
,) <Board:size>,1
,) Places,1
,) steps:10,1
,) steps:15,3
,exact:True ) (,19
,2 ) <Variant>,1
,<Variant> ) (,1
,rings:2 ) use:Vertex,3
,Moves ) 6,2
,6 ) STRING,3
,) <Variant>,1
,byLevel:True ) (,3
,3 ) use:Vertex,10
,Slide ) ),7
,Rows ) 2,7
,<Tiling:type> ) (,2
,<Tiling:numSides> ) },2
,centrePoint ) E,5
,Playable ) if:,2
,NotEmpty ) ),2
,surround:Next ) (,1
,count:18 ) ),1
,by:Mover ) Orthogonal,1
,#1 ) Cannot,1
,Pending ) next:,1
,<Board:BoardDef> ) (,1
,Moves ) 2,1
,2 ) 3,2
,3 ) 0,1
,) ) <Board:ExtraRows>,1
,) ) <Board:ExtraCols>,1
,9 ) cells:,4
,11 ) >,4
,) Cannot,2
,) <Board:ExtraRows>,1
,) <Board:ExtraCols>,1
,<Model:rules> ) ),1
,19 ) use:Vertex,4
,<Board> ) (,3
,9 ) use:Vertex>,1
,) use:Vertex>,1
,Moves ) 4,1
,#1 ) exact:True,1
,from ) exact:True,1
,count:12 ) ),19
,) exact:True,2
,by:Next ) if:,7
,Piece ) ifAfterwards:,64
,joinCorners:True ) use:Vertex,12
,count:24 ) ),3
,<Exact> ) (,1
,Outer ) ),26
,count:8 ) ),1
,6 ) edges:,2
,count:9 ) ),11
,) ) All,5
,Mover ) 14,1
,diagonals:Alternating ) use:Vertex,4
,count:<Board:size> ) ),1
,exact:True ) },1
,joinCorners:True ) vertices:,1
,rings:3 ) use:Vertex,7
,<Players:player1> ) (,2
,diagonals:Solid ) vertices:,1
,#5 ) ),34
,#6 ) ),3
,#8 ) ),5
,6 ) use:Vertex,2
,<Board:type> ) (,2
,Mover ) 9,1
,<To> ) ),1
,To ) },2
,#2 ) STRING,4
,STRING ) N,2
,STRING ) S,2
,LastTo ) what:,4
,) what:,5
,4 ) use:Vertex,2
,size:16 ) },1
,1 ) value:1,1
,2 ) state:1,1
,3 ) state:1,1
,5 ) value:1,1
,6 ) state:1,1
,7 ) state:1,1
,9 ) value:1,1
,10 ) state:1,1
,11 ) state:1,1
,13 ) value:1,1
,14 ) state:1,1
,15 ) state:1,1
,what ) (,1
,) ) Colour,1
,who ) (,1
,) ) State,4
,state ) (,1
,) ) Value,1
,) value:1,4
,) Colour,1
,) State,5
,) Value,1
,Outer ) if:,1
,centrePoint ) NE,1
,centrePoint ) SE,1
,centrePoint ) SW,1
,SW ) ),7
,centrePoint ) NW,1
,NW ) ),5
,centrePoint ) W,3
,Groups ) ),4
,) NE,3
,) SE,2
,) SW,2
,) NW,3
,centrePoint ) what:,1
,) ) count:12,2
,) ) site,5
,To ) steps:2,5
,To ) steps:3,2
,) site,5
,Rows ) (,17
,) ) SameLayer,2
,SameLayer ) (,3
,1 ) SameLayer,1
,) SameLayer,3
,<Num:players> ) (,1
,count:14 ) ),1
,<Piece> ) },1
,size:3 ) (,4
,num:1 ) },3
,) ) <Play:choice>,1
,<Play:choice> ) ),1
,) <Play:choice>,1
,from ) E,10
,from ) W,10
,rings:4 ) >,1
,joinCorners:True ) >,1
,) ) use:Cell,8
,use:Cell ) (,6
,mover ) P1,3
,3 ) add,1
,) use:Cell,18
,) add,1
,9 ) use:Vertex,8
,count:40 ) ),1
,joinCorners:True ) ),1
,Piece ) STRING,3
,STRING ) All,5
,size:4 ) (,1
,3 ) count:2,6
,Next ) },11
,site ) #1,11
,#2 ) },1
,UNE ) ),2
,USE ) ),1
,USW ) ),1
,from ) steps:2,21
,17 ) use:Vertex,2
,P1 ) count:6,2
,count:6 ) (,3
,P2 ) count:6,2
,1 ) count:144,2
,count:144 ) (,1
,count:144 ) },1
,Mover ) All,1
,) count:144,2
,To ) NotEmpty,1
,noRepeat ) ),8
,Liberties ) 0,1
,6 ) cells:,1
,Moves ) 5,1
,5 ) STRING,3
,) ) numException:1,1
,numException:1 ) ),1
,) numException:1,1
,) ) state:2,1
,state:4 ) },4
,by:Neutral ) Empty,1
,centrePoint ) Orthogonal,4
,STRING ) in:,6
,) ) Orthogonal>,4
,1 ) >,5
,) Orthogonal>,4
,by:P1 ) (,9
,by:P4 ) ),1
,by:P3 ) ),1
,diagonals:Solid ) (,1
,) ) with:,1
,} ) with:,1
,13 ) cells:,2
,Player ) 2,1
,) with:,2
,<Disc> ) },1
,Next ) 1,42
,) ) Axial,2
,) Axial,2
,Centre ) steps:2,4
,P2 ) count:20,1
,P1 ) Off,2
,counter ) (,3
,counter ) STRING,2
,) ) except:1,2
,except:1 ) ),2
,Left ) steps:6,4
,Right ) steps:6,4
,Next ) 3,2
,) except:1,2
,Rows ) ),19
,between ) Own,2
,Own ) if:,1
,) ) except:3,1
,except:3 ) ),1
,) ) <Board:start>,1
,) except:3,1
,) <Board:start>,1
,<Repetition> ) (,2
,2 ) <Version>,2
,<Version> ) (,2
,1 ) #2,4
,#3 ) #4,6
,) ) Capture/Release,3
,) ) Block,3
,) ) Rescue,3
,) ) Release,3
,) ) Hop,3
,) ) Movement,3
,count:16 ) ),2
,between ) 1,1
,to ) N,5
,to ) S,5
,) ) Surround,2
,count:20 ) ),4
,) ) Capture,1
,Bottom ) steps:4,15
,counter ) 29,2
,count:23 ) ),2
,count:27 ) ),2
,count:31 ) ),2
,count:35 ) ),2
,count:49 ) ),2
,count:87 ) ),2
,count:44 ) ),2
,count:65 ) ),2
,) <Version>,2
,) Capture/Release,3
,) Block,3
,) Rescue,3
,) Release,3
,) Hop,3
,) Movement,3
,) Surround,2
,) Capture,1
,count:144 ) ),2
,count:152 ) ),2
,STRING ) Orthogonal,51
,count:<Board:numPieces> ) ),1
,To ) N,1
,To ) E,1
,To ) W,1
,To ) S,1
,Moves ) 24,2
,Moves ) 25,1
,25 ) STRING,1
,W ) W,1
,E ) E,1
,N ) N,2
,S ) S,1
,STRING ) <Jarl:captureType>,1
,) <Jarl:captureType>,1
,#4 ) #5,2
,to ) SameDirection,7
,SameDirection ) (,4
,from ) OppositeDirection,7
,) SameDirection,17
,) OppositeDirection,7
,) ) #5,10
,from ) steps:3,2
,by:Next ) #1,1
,Right ) steps:3,11
,Left ) steps:3,11
,2 ) if:,37
,Rows ) after:,45
,Rows ) at:EndOfTurn,22
,) after:,57
,Between ) ),3
,) ) Diagonal,23
,Rows ) if:,28
,top:True ) },6
,stack:True ) top:True,1
,OppositeDirection ) SameDirection,2
,SameDirection ) ),4
,STRING ) do,1
,here ) (,1
,) do,1
,) ) SameDirection,4
,To ) SameDirection,3
,) ) Non,1
,) Non,1
,) ) after:,10
,Diagonal ) (,32
,) ) steps:8,2
,#2 ) ifAfterwards:,1
,<Tag:boardSize> ) ),1
,) ) value:10,2
,value:10 ) (,3
,Top ) steps:,4
,value:10 ) },1
,To ) 19,3
,) value:10,2
,Diagonal ) if:,3
,Cell ) Diagonal,1
,count:66 ) },1
,Vertex ) (,6
,on:Cell ) if:,2
,steps:3 ) (,23
,<Board:startP1> ) (,2
,<Board:startP2> ) },1
,Diagonal ) top:True,2
,steps:2 ) >,8
,Slide ) ifAfterwards:,1
,9 ) after:,2
,from ) to:,11
,) ) distance:,1
,mover ) 2,2
,#1 ) stack:True,1
,) distance:,1
,between ) #4,2
,) ) before:,1
,from ) before:,1
,) before:,2
,STRING ) steps:5,4
,Top ) steps:1,3
,STRING ) steps:6,4
,STRING ) steps:7,4
,STRING ) steps:2,7
,) steps:7,4
,9 ) edges:,2
,Slide ) STRING,1
,by:#1 ) to:,2
,by:Next ) index:0,2
,value:2 ) },1
,Next ) 5,1
,<Play> ) (,1
,bySite:True ) (,2
,} ) W,1
,} ) E,1
,<End> ) ),2
,Loss ) >,2
,14 ) >,5
,from ) },1
,from ) Enemy,2
,to ) <Board>,4
,~ ) (,1
,) <Board>,4
,To ) Own,1
,<Board:armSize> ) (,1
,<Board:numPiece> ) (,1
,Centre ) steps:,1
,count:6 ) },2
,<Variant:promotedCaptureMove> ) (,1
,<Variant:promotedMove> ) ),1
,) ) <Variant:endRule>,1
,<Variant:endRule> ) ),1
,All ) >,1
,) <Variant:endRule>,1
,Next ) ifAfterwards:,81
,1 ) if:True,10
,<Elephant> ) (,1
,P1 ) 64,1
,P2 ) 64,1
,) 64,2
,) ) Backward,2
,) ) to,1
,) to,4
,N ) if:,1
,size:5 ) (,6
,) ) index:0,3
,To ) 3,3
,) ) maxState:3,1
,maxState:3 ) (,3
,) maxState:3,1
,) ) Rukh,1
,) ) Ghora,1
,) ) Fil,1
,) ) Wazir,1
,) ) Shahzada,1
,) ) Padshah,1
,) ) Kotwal,1
,) ) Urdabegini,1
,) ) Paidal,1
,) Rukh,1
,) Ghora,1
,) Fil,1
,) Wazir,1
,) Shahzada,1
,) Padshah,1
,) Kotwal,1
,) Urdabegini,1
,) Paidal,1
,counter ) 20,1
,) ) Layakúcan,1
,) ) Lúdkax,1
,) ) Alyx,1
,) ) Slúnax,1
,) ) Kúnax,1
,) ) Férsix,1
,) Layakúcan,1
,) Lúdkax,1
,) Alyx,1
,) Slúnax,1
,) Kúnax,1
,) Férsix,1
,site ) NE,1
,site ) NW,1
,site ) SE,1
,site ) SW,1
,) ) 11,3
,) ) 23,1
,23 ) ),5
,value:1 ) Baidaq,1
,value:2 ) Baidaq,1
,value:3 ) To,1
,value:4 ) To,1
,value:5 ) To,1
,value:6 ) To,1
,value:7 ) To,1
,value:8 ) To,1
,value:9 ) To,1
,value:10 ) To,1
,value:11 ) To,1
,value:12 ) To,1
,value:13 ) To,1
,value:14 ) To,1
,value:15 ) To,1
,value:16 ) To,1
,value:17 ) To,1
,value:18 ) To,1
,value:19 ) To,1
,value:20 ) To,1
,value:21 ) To,1
,value:22 ) To,1
,} ) ifAfterwards:,19
,) Baidaq,2
,0 ) CW,2
,CCW ) (,2
,Orthogonal ) if:,6
,To ) CW,2
,CW ) ),2
,To ) CCW,2
,CCW ) ),2
,Diagonal ) Diagonal,1
,} ) state:0,2
,) CW,4
,) CCW,2
,P2 ) 0,2
,Corners ) steps:1,1
,4 ) count:2,4
,STRING ) Move,1
,pot ) (,6
,} ) Mover,28
,P3 ) 3,3
,P4 ) 4,2
,#3 ) if:#4,27
,if:#4 ) #5,15
,counter ) 100,18
,) if:#4,27
,) ) Usage:,37
,<p2_directions> ) (,6
,) ) Source:,19
,<player2_arg> ) (,6
,P1 ) #1,8
,<then> ) (,14
,) ) History,3
,castling ) Source:,3
,<piece_name_key> ) (,3
,) ) King,18
,) ) At,2
,<then> ) Source:,3
,<rook_spaces> ) (,3
,<rook_spaces> ) Example:,3
,) ) Pawn,18
,. ) .,13
,from ) steps:1,2
,NNE ) (,3
,SSE ) ),4
,) ) Non-capturing,2
,<back_dir> ) (,5
,<directions> ) (,12
,) ) Handle,1
,directions ) =,2
,<RB2> ) (,2
,#6 ) (,2
,NNW ) ),3
,<piece_types> ) (,7
,~ ) ),24
,Start ) },1
,) Usage:,37
,) Source:,25
,) History,3
,) King,18
,) At,2
,) Example:,3
,) Pawn,18
,) Non-capturing,2
,) Handle,1
,) =,2
,if:#4 ) (,12
,counter ) 99,2
,1 ) level:,2
,value ) to:P1,2
,to:P1 ) ),4
,value ) to:P2,2
,to:P2 ) ),4
,2 ) level:,2
,Moves ) 1,1
,) ) Empty,2
,Next ) Off,11
,) ) Courier,1
,site ) steps:2,3
,) Courier,1
,) ) @,1
,) ) Double-step,1
,ENE ) ),2
,SSW ) },1
,<BoardConfig:BoardLayout> ) (,1
,<BoardConfig:King2Start> ) },1
,<BoardConfig:RookLeft2Start> ) },1
,<BoardConfig:RookRight2Start> ) },1
,<BoardConfig:RegionDarkPhase> ) ),1
,<BoardConfig:RegionLightPhase> ) ),1
,<BoardConfig:RegionMediumPhase> ) ),1
,coord:<BoardConfig:Queen2Start> ) (,1
,<BoardConfig:Bishop2Start> ) (,1
,<BoardConfig:Knight2Start> ) (,1
,<BoardConfig:Pawn1Start> ) (,1
,<BoardConfig:Pawn2Start> ) },1
,) @,1
,) Double-step,1
,#1 ) Mover,2
,pips ) 6,1
,pips ) 5,2
,pips ) 2,2
,pips ) 3,2
,P1 ) S,1
,N ) distance:1,1
,distance:1 ) (,2
,) distance:1,3
,Mover ) ifAfterwards:,30
,<NumOfPlayers:NumPlayers> ) (,2
,<NumOfPlayers:BoardShape> ) (,2
,) ) <NumOfPlayers:BoardRegions>,2
,<NumOfPlayers:CheckMate> ) ),2
,Player ) Off,5
,Active ) 2,3
,state:1 ) >,4
,) <NumOfPlayers:BoardRegions>,2
,<Placement:Pawn1> ) (,1
,<Placement:Pawn2> ) },1
,) ) <Variant:dice>,1
,<Variant:movement> ) (,1
,) <Variant:dice>,1
,) ) <Play:doubleStep>,1
,) <Play:doubleStep>,1
,steps:2 ) },6
,Left ) steps:4,6
,Right ) steps:4,6
,steps:4 ) },6
,Top ) steps:6,4
,steps:6 ) (,9
,Bottom ) steps:6,4
,steps:6 ) },3
,Top ) steps:8,3
,steps:8 ) (,9
,Bottom ) steps:8,3
,Left ) steps:8,3
,Right ) steps:8,3
,steps:8 ) },3
,75 ) },1
,size:6 ) },2
,<p2_arg> ) (,1
,to:#2 ) ),3
,to:#2 ) from:#1,2
,to:#2 ) if:,2
,) from:#1,2
,3 ) if:,7
,) ) Pawns:,1
,non-capturing ) Note:,1
,) ) For,1
,) Pawns:,1
,) Note:,1
,) For,1
,) ) Here's,1
,) ) Castling,1
,from ) but,1
,W ) #3,1
,) ) Non-Pawn,1
,) ) Pawns,1
,) ) Core,1
,Forward ) },3
,) Here's,1
,) Castling,1
,) but,3
,) Non-Pawn,1
,) Pawns,1
,) Core,1
,} ) ~,20
,) ) <PlacementConditions:PlacementConditions>,2
,<PlacementConditions:PlacementConditions> ) ),1
,0 ) count:8,2
,5 ) state:1,2
,<PlacementConditions:PlacementConditions> ) (,1
,) <PlacementConditions:PlacementConditions>,2
,<p3_dirs> ) (,1
,<piece_type> ) (,1
,<p3_arg> ) (,1
,P2 ) #2,1
,) ) Hand,1
,captured ) until,1
,colour ) .,1
,Knight ) of,1
,. ) The,1
,. ) Variations:,1
,. ) In,1
,2007 ) .,1
,) Hand,1
,) until,1
,) of,1
,) Variations:,1
,) In,1
,) ) Silver,8
,) ) Rook,7
,) ) Bishop,8
,) ) Gold,8
,STRING ) Promoted,27
,) ) Promoted,12
,) Silver,8
,) Rook,8
,) Bishop,8
,) Gold,8
,) Promoted,39
,11 ) cells:,2
,STRING ) Rook,1
,) ) Knight,6
,) ) Lance,6
,site ) N,1
,site ) S,1
,site ) steps:3,2
,size:7 ) },4
,) Knight,6
,) Lance,6
,size:4 ) },1
,size:5 ) },2
,Adjacent ) (,6
,Adjacent ) on,2
,to ) to:,10
,Adjacent ) ),6
,Forwards ) (,14
,BL ) (,1
,FL ) (,1
,FR ) (,1
,Rightward ) ),1
,Leftward ) ),1
,Forwards ) ),2
,STRING ) Row,26
,) ) Row,8
,Off ) },4
,) on,2
,) Row,35
,36 ) ),3
,Backwards ) STRING,2
,2 ) after:2,1
,after:2 ) },1
,) ) Eric,1
,Backward ) },16
,Rightwards ) STRING,2
,Leftwards ) STRING,2
,BR ) (,1
,Backward ) STRING,1
,3 ) after:35,4
,after:35 ) },3
,Forward ) STRING,2
,Diagonal ) STRING,5
,2 ) after:34,3
,after:34 ) STRING,1
,after:34 ) },4
,after:34 ) ),1
,W ) STRING,1
,E ) STRING,1
,Orthogonal ) STRING,7
,Leftwards ) ),1
,Rightwards ) ),1
,} ) before:34,1
,35 ) after:34,1
,Diagonal ) },1
,} ) before:35,1
,35 ) after:35,1
,after:35 ) ),5
,Backwards ) ),1
,2 ) after:35,1
,after:35 ) (,2
,182 ) (,1
,419 ) (,1
,420 ) (,1
,421 ) (,1
,422 ) (,1
,287 ) (,1
,288 ) (,1
,423 ) (,1
,424 ) (,1
,425 ) (,1
,426 ) (,1
,397 ) (,4
,398 ) (,4
,112 ) (,1
,167 ) (,3
,168 ) (,3
,149 ) (,1
,150 ) (,1
,427 ) (,1
,428 ) (,1
,429 ) (,1
,430 ) (,1
,177 ) (,2
,178 ) (,2
,431 ) (,2
,432 ) (,2
,433 ) (,1
,434 ) (,1
,201 ) (,4
,202 ) (,4
,435 ) (,1
,436 ) (,1
,161 ) (,1
,162 ) (,1
,437 ) (,1
,438 ) (,1
,439 ) (,1
,440 ) (,1
,441 ) (,1
,442 ) (,1
,443 ) (,2
,444 ) (,2
,445 ) (,2
,446 ) (,2
,447 ) (,4
,448 ) (,4
,377 ) (,1
,378 ) (,1
,345 ) (,2
,346 ) (,2
,449 ) (,1
,450 ) (,1
,451 ) (,1
,452 ) (,1
,453 ) (,2
,454 ) (,2
,455 ) (,2
,456 ) (,2
,457 ) (,1
,458 ) (,1
,459 ) (,1
,460 ) (,1
,297 ) (,1
,298 ) (,1
,295 ) (,1
,296 ) (,1
,461 ) (,1
,462 ) (,1
,463 ) (,1
,464 ) (,1
,465 ) (,1
,466 ) (,1
,131 ) (,1
,132 ) (,1
,139 ) (,1
,140 ) (,1
,215 ) (,1
,216 ) (,1
,467 ) (,1
,468 ) (,1
,335 ) (,2
,336 ) (,2
,469 ) (,1
,470 ) (,1
,471 ) (,1
,472 ) (,1
,115 ) (,1
,116 ) (,1
,473 ) (,1
,474 ) (,1
,475 ) (,1
,476 ) (,1
,477 ) (,3
,478 ) (,3
,211 ) (,1
,212 ) (,1
,479 ) (,1
,480 ) (,1
,481 ) (,1
,482 ) (,1
,483 ) (,1
,484 ) (,1
,485 ) (,1
,486 ) (,1
,389 ) (,5
,390 ) (,5
,395 ) (,2
,396 ) (,2
,487 ) (,2
,488 ) (,2
,489 ) (,1
,490 ) (,1
,491 ) (,1
,492 ) (,1
,493 ) (,1
,494 ) (,1
,379 ) (,3
,380 ) (,3
,495 ) (,1
,496 ) (,1
,497 ) (,1
,498 ) (,1
,499 ) (,1
,500 ) (,1
,501 ) (,1
,502 ) (,1
,503 ) (,1
,504 ) (,1
,505 ) (,1
,506 ) (,1
,411 ) (,1
,412 ) (,1
,323 ) (,1
,324 ) (,1
,507 ) (,1
,508 ) (,1
,175 ) (,1
,176 ) (,1
,391 ) (,1
,392 ) (,1
,245 ) (,2
,246 ) (,2
,309 ) (,1
,310 ) (,1
,509 ) (,1
,510 ) (,1
,283 ) (,2
,284 ) (,2
,169 ) (,1
,170 ) (,1
,203 ) (,3
,204 ) (,2
,511 ) (,1
,512 ) (,1
,513 ) (,1
,514 ) (,1
,515 ) (,1
,516 ) (,1
,517 ) (,1
,518 ) (,1
,519 ) (,1
,520 ) (,1
,521 ) (,1
,522 ) (,1
,523 ) (,1
,524 ) (,1
,525 ) (,1
,526 ) (,1
,527 ) (,1
,528 ) (,1
,407 ) (,2
,408 ) (,2
,157 ) (,1
,158 ) (,1
,529 ) (,1
,530 ) (,1
,531 ) (,1
,532 ) (,1
,533 ) (,1
,534 ) (,1
,535 ) (,1
,536 ) (,1
,537 ) (,1
,538 ) (,1
,539 ) (,1
,540 ) (,1
,173 ) (,1
,174 ) (,1
,541 ) (,1
,542 ) (,1
,543 ) (,3
,544 ) (,3
,545 ) (,1
,546 ) (,1
,547 ) (,1
,548 ) (,1
,549 ) (,1
,550 ) (,1
,551 ) (,1
,552 ) (,1
,553 ) (,1
,554 ) (,1
,219 ) (,1
,220 ) (,1
,333 ) (,1
,334 ) (,1
,555 ) (,1
,556 ) (,1
,557 ) (,1
,558 ) (,1
,559 ) (,1
,560 ) (,1
,369 ) (,1
,370 ) (,1
,561 ) (,1
,562 ) (,1
,563 ) (,1
,564 ) (,1
,565 ) (,1
,566 ) (,1
,567 ) (,1
,568 ) (,1
,569 ) (,1
,570 ) (,1
,571 ) (,1
,572 ) (,1
,573 ) (,1
,574 ) (,1
,575 ) (,1
,576 ) (,1
,577 ) (,1
,578 ) (,1
,579 ) (,1
,580 ) (,1
,581 ) (,1
,582 ) (,1
,583 ) (,1
,584 ) (,1
,585 ) (,1
,586 ) (,1
,587 ) (,1
,588 ) (,1
,589 ) (,1
,590 ) (,1
,591 ) (,1
,592 ) (,1
,593 ) (,1
,594 ) (,1
,595 ) (,1
,596 ) (,1
,46 ) },1
,} ) Todo:,1
,} ) Row,1
,) after:2,1
,) Eric,1
,) after:35,6
,) after:34,4
,) before:34,1
,) before:35,1
,) Todo:,1
,size:8 ) },2
,6 ) count:2,2
,5 ) count:2,2
,P1 ) count:9,4
,count:9 ) (,1
,P2 ) count:9,1
,count:9 ) },2
,) count:9,5
,P1 ) N,5
,use:Vertex ) General,4
,STRING ) Guard,1
,STRING ) Elephant,1
,of:All ) (,14
,) ) Horse,6
,) ) Chariot,5
,between ) STRING,6
,) ) Canon,6
,Rows ) STRING,2
,) ) Jump,1
,) ) Soldier,5
,) General,6
,) Guard,5
,) Elephant,5
,) Horse,6
,) Chariot,6
,) Canon,6
,) Jump,1
,) Soldier,6
,) ) Guard,4
,) ) Elephant,4
,STRING ) Chariot,1
,STRING ) Soldier,1
,at:#1 ) Shared,1
,4 ) if:,1
,P7 ) },1
,STRING ) 30,1
,) Shared,5
,) 30,1
,) ) General,2
,site ) 37,1
,37 ) ),1
,site ) 41,1
,41 ) ),2
,) 37,1
,) 41,1
,<Player:size> ) <Player:tracks>,5
,Enemy ) (,10
,P5 ) count:5,36
,P6 ) count:5,36
,count:5 ) >,38
,P7 ) count:5,30
,P8 ) count:5,30
,P9 ) count:5,24
,P10 ) count:5,24
,P11 ) count:5,18
,P12 ) count:5,18
,P13 ) count:5,12
,P14 ) count:5,12
,P15 ) count:5,6
,P16 ) count:5,6
,DiceEqual ) 12,2
,DiceEqual ) 2,1
,2 ) True,1
,12 ) 4,1
,6 ) 2,1
,STRING ) count:#1,1
,count:#1 ) ),1
,Bottom ) state:1,5
,Top ) state:1,5
,) count:#1,1
,<High:value> ) (,1
,<High:value> ) },1
,to:P2 ) #1,1
,value:6 ) (,4
,value:7 ) (,4
,Board ) to:P1,2
,Board ) to:P2,1
,From ) False,3
,Turns ) 10,2
,to:Mover ) (,6
,site ) False,3
,Left ) steps:9,1
,steps:9 ) ),2
,Right ) steps:9,1
,10 ) STRING,1
,) steps:9,2
,15 ) <Player:tracks>,1
,P8 ) (,5
,P9 ) (,4
,P10 ) (,4
,P11 ) (,3
,P12 ) (,3
,P13 ) (,2
,P14 ) (,2
,P15 ) (,1
,P16 ) (,1
,From ) 1,2
,next:1 ) (,1
,next:2 ) (,1
,next:3 ) (,1
,next:4 ) (,1
,<Player:option> ) },1
,} ) <Player:end>,1
,<Player:end> ) (,1
,Trials ) 5,66
,) <Player:end>,1
,value:5 ) },2
,To ) 4,1
,To ) 5,1
,All ) 1,1
,1 ) We,1
,dice ) (,1
,at:6 ) ),1
,at:7 ) ),1
,at:22 ) ),1
,) ) 22,1
,at:21 ) ),1
,) ) 21,1
,at:20 ) ),1
,at:19 ) ),1
,) ) 19,1
,) ) 18,1
,) ) 17,1
,) ) 16,1
,) ) 15,1
,25 ) {,1
,to ) level:0,2
,) 17,1
,) 16,1
,36 ) 1,2
,37 ) 1,2
,) ) <Board:dice>,1
,value ) 1,2
,<Board:size> ) <Board:tracks>,1
,40 ) ),1
,42 ) ),1
,43 ) ),1
,80 ) ),1
,81 ) ),1
,82 ) ),1
,83 ) ),1
,120 ) ),1
,121 ) ),1
,122 ) ),1
,123 ) ),1
,160 ) ),1
,161 ) ),1
,162 ) ),1
,163 ) ),1
,200 ) ),1
,201 ) ),1
,202 ) ),1
,203 ) ),1
,240 ) ),2
,241 ) ),1
,242 ) ),1
,243 ) ),1
,280 ) ),1
,281 ) ),1
,282 ) ),1
,283 ) ),1
,320 ) ),1
,321 ) ),1
,322 ) ),1
,323 ) ),1
,360 ) ),1
,361 ) ),1
,362 ) ),1
,363 ) ),1
,400 ) ),1
,401 ) ),1
,402 ) ),1
,403 ) ),1
,) <Board:dice>,1
,) <Board:tracks>,1
,site ) #3,5
,site ) #4,2
,#4 ) },1
,7 ) edges:,1
,54 ) ),1
,All ) 2,1
,2 ) we,1
,) we,1
,4 ) {,1
,22 ) {,1
,Left ) steps:17,1
,steps:17 ) ),2
,Right ) steps:17,1
,) steps:17,2
,directed:True ) Local,2
,) Local,2
,sites:88 ) {,1
,) ) Enemy,3
,Enemy ) if:,1
,45 ) ),1
,46 ) ),1
,47 ) ),1
,} ) 1,1
,15 ) {,1
,6 ) {,1
,by:All ) if:,1
,<Board:size> ) <Board:track>,1
,num:8 ) (,2
,) ) <Players:start>,1
,) <Board:track>,1
,) <Players:start>,1
,num:<Dice:num> ) <Dice:throwValues>,1
,) <Dice:throwValues>,1
,by:Team1 ) (,2
,by:Team2 ) (,2
,Team1 ) (,3
,Moves ) 100,3
,) ) <Slide:to>,1
,101 ) (,2
,<Option:players> ) (,1
,<Option:board> ) (,1
,<Step:to> ) (,1
,<Option:start1> ) (,1
,<Option:start2> ) <Option:start3>,1
,) ) <End:rules>,1
,<End:rules> ) ),1
,7 ) loops:3>,1
,8 ) loops:3,1
,} ) steps:2,16
,steps:3 ) >,2
,) <Slide:to>,1
,) <Option:start3>,1
,) <End:rules>,1
,) loops:3>,1
,) loops:3,1
,) ) 100,2
,} ) maxState:100,3
,maxState:100 ) },1
,NoEnd ) ),4
,1 ) <Players:setupRules>,1
,value:3 ) >,3
,P3 ) state:2,2
,P4 ) state:2,1
,P5 ) state:2,1
,P6 ) state:2,1
,P7 ) state:2,1
,P8 ) state:2,1
,P9 ) state:2,1
,P10 ) state:2,1
,P11 ) state:2,1
,P12 ) state:2,1
,) maxState:100,3
,) <Players:setupRules>,1
,1 ) 3,1
,Cell ) if:,2
,on:#2 ) (,1
,Edge ) },1
,1 ) use:Vertex,1
,} ) <Players:removeLastPiece>,1
,<Players:removeLastPiece> ) ),1
,) ) <Players:end>,1
,P1 ) 0,1
,P3 ) 0,1
,) <Players:removeLastPiece>,1
,) <Players:end>,1
,<ThrowSix:value> ) (,1
,148 ) },1
,} ) stop:,1
,4 ) 8,2
,) ) Sites,3
,on ) (,1
,STRING ) includeSelf:True,1
,includeSelf:True ) (,5
,} ) Forward,4
,distance:1 ) Orthogonal,3
,distance:2 ) Orthogonal,1
,includeSelf:True ) },1
,site ) Orthogonal,8
,next:False ) ),3
,) ) Entrenchments,1
,) ) Entrenchment,1
,) ) Checks,1
,) ) distance:1,1
,next:False ) (,1
,) ) Bridge,2
,To ) Mover,2
,) ) Fire,1
,#1 ) 1,2
,#2 ) 1,1
,) ) Infantry,1
,8 ) if:,1
,) ) Shoot,3
,normal ) (,1
,entrenchment ) (,1
,enemy ) (,1
,) ) Build,1
,STRING ) Cavalry,1
,12 ) if:,3
,infantry ) (,2
,STRING ) Artillery,1
,) ) Cannot,1
,) ) Regions,1
,Board ) False,2
,pass ) ),2
,mover ) components:,3
,49 ) ),1
,Left ) steps:15,1
,steps:15 ) ),2
,Right ) steps:15,1
,steps:2 ) Orthogonal,2
,maxValue:10000 ) (,1
,maxState:100 ) (,1
,STRING ) rotation:2,1
,value:0 ) (,4
,STRING ) rotation:4,1
,STRING ) rotation:6,1
,STRING ) rotation:0,1
,Empty ) },1
,) ) Add,1
,From ) 0,4
,site ) 3,1
,) Sites,3
,) includeSelf:True,5
,) Entrenchments,1
,) Entrenchment,1
,) Checks,1
,) Bridge,2
,) Fire,1
,) Infantry,1
,) Shoot,3
,) Build,1
,) Cavalry,1
,) Artillery,1
,) Regions,1
,) components:,3
,) rotation:2,1
,) rotation:4,1
,) rotation:6,1
,) rotation:0,1
,) Add,1
,to ) False,4
,to:Next ) },5
,from ) False,4
,size:12 ) (,1
,99 ) (,1
,102 ) (,1
,103 ) (,1
,104 ) (,1
,105 ) (,1
,106 ) (,2
,107 ) },1
,value:9 ) (,2
,value:8 ) (,2
,size:3 ) },1
,) ) from:,5
,from ) #3,1
,1 ) Mountain,1
,depth ) ),2
,#1 ) Forest/Shallow,1
,) ) Vehicle,1
,) ) Aircraft,1
,) ) Boat,1
,) ) Attacks,1
,) ) Counter,1
,components:#3 ) ),1
,#5 ) (,3
,) ) Attack,1
,STRING ) <FogOfWar:AttackCheck>,1
,) ) state,2
,) ) counter-attack,1
,From ) },1
,To ) by:Enemy,3
,From ) by:Mover,3
,From ) True,2
,) ) Attacker,1
,purposes ) #3,1
,boolean ) (,2
,4 ) #1,2
,#1 ) Planes,1
,) ) Shooter,1
,humans ) (,1
,6 ) #1,1
,forests ) (,1
,10 ) #1,1
,water ) (,1
,8 ) #1,1
,land ) ),2
,3 ) #1,1
,#1 ) 75%,1
,5 ) #1,1
,#1 ) 125%,1
,#1 ) 100%,1
,4x4x4x5x100x4 ) ),1
,100 ) 1,1
,) ) Specific,1
,To ) 50,1
,50 ) },1
,) ) Doctrine,1
,5 ) 4,1
,6 ) 5,1
,8 ) 4,1
,) ) Healing,1
,) ) Buying,1
,mover ) 7,2
,) ) Player,3
,against ) 7,1
,movement ) (,2
,} ) value,2
,health ) (,2
,120 ) (,6
,100 ) },16
,) ) Doctrines,1
,150 ) },1
,) ) Fog,1
,steps:2 ) STRING,1
,steps:1 ) STRING,1
,steps:3 ) STRING,2
,to:#1 ) ),4
,site ) True,1
,team ) (,2
,96 ) ),1
,115 ) ),1
,108 ) ),1
,59 ) ),1
,75 ) ),1
,<Scenario:numPlayers> ) (,1
,<Scenario:boardShape> ) <Scenario:boardRegins>,1
,size:14 ) (,1
,Neutral ) <Scenario:playerMaps>,1
,<Scenario:startingMoney> ) (,1
,0 ) count:30,1
,value:30 ) (,1
,1 ) count:50,1
,value:40 ) (,4
,2 ) count:60,1
,value:60 ) (,2
,3 ) count:80,1
,4 ) count:100,1
,value:80 ) (,1
,5 ) count:80,1
,value:50 ) (,4
,6 ) count:80,1
,7 ) count:100,1
,8 ) count:60,1
,9 ) count:100,1
,value:100 ) (,137
,10 ) count:120,1
,11 ) count:60,1
,value:70 ) (,1
,12 ) count:100,1
,13 ) count:120,1
,value:120 ) <FogOfWar:EachMove>,1
,} ) state:8,106
,value:100 ) >,16
,STRING ) scale:0,36
,15 ) cells:,1
,} ) state:3,2
,} ) state:4,2
,value:80 ) >,1
,) ) num:1,73
,num:1 ) ),76
,) ) num:2,8
,num:2 ) ),8
,) ) num:3,2
,num:3 ) ),2
,STRING ) num:5,2
,num:5 ) ),4
,) ) num:8,2
,num:8 ) ),2
,STRING ) state:8,44
,Left ) num:1,2
,Right ) num:1,2
,) ) num:4,4
,num:4 ) ),4
,) ) num:5,2
,STRING ) num:14,2
,num:14 ) ),2
,) ) num:20,2
,num:20 ) ),2
,) from:,5
,) Mountain,1
,) Forest/Shallow,1
,) Vehicle,1
,) Aircraft,1
,) Boat,1
,) Attacks,1
,) Counter,1
,) Attack,1
,) <FogOfWar:AttackCheck>,1
,) state,2
,) counter-attack,1
,) by:Enemy,3
,) by:Mover,3
,) Attacker,1
,) Planes,1
,) Shooter,1
,) 75%,1
,) 125%,1
,) 100%,1
,) Specific,1
,) Doctrine,1
,) Healing,1
,) Buying,1
,) Player,3
,) value,2
,) Doctrines,1
,) Fog,1
,) <Scenario:boardRegins>,1
,) <Scenario:playerMaps>,1
,) count:30,1
,) count:50,1
,) count:60,3
,) count:80,3
,) count:100,4
,) count:120,2
,) <FogOfWar:EachMove>,1
,) scale:0,36
,) num:1,77
,) num:2,8
,) num:3,2
,) num:5,4
,) num:8,2
,) num:4,4
,) num:14,2
,) num:20,2
,<Version:removeRule> ) (,1
,Rotation ) ),2
,use:Vertex ) <Version:rulesCommander>,1
,of:All ) ),1
,<Version:consequence> ) ),1
,) ) <Version:endRules>,1
,<Version:endRules> ) ),1
,rotation:0 ) (,22
,rotation:7 ) (,7
,rotation:4 ) (,17
,rotation:3 ) (,8
,rotation:4 ) >,1
,rotation:1 ) (,9
,rotation:2 ) (,1
,rotation:5 ) (,6
,rotation:6 ) (,1
,rotation:7 ) >,1
,P3 ) 1,2
,P4 ) 1,2
,rotation:0 ) >,1
,) <Version:rulesCommander>,1
,) <Version:endRules>,1
,<CheckmateRule:Move> ) (,1
,Piece ) >,1
,<Columns> ) ),1
,<Moves> ) },1
,size:21 ) (,1
,dominoes ) },1
,LineOfPlay ) ),1
,PipsMatch ) ),1
,Domino ) (,1
,Mover ) to:Next,1
,18 ) upper,1
,) upper,1
,Mover ) <CapThreshold>,1
,<CapThreshold> ) (,1
,) <CapThreshold>,1
,includeSelf:True ) ),5
,<SType:selScoring> ) ),3
,) ) /-----------------------------------------,1
,<BoardShape:directionScored> ) (,2
,<BoardShape:directionUsed> ) (,2
,<BoardShape:gridType> ) (,6
,use:Cell ) ),14
,<BoardSize:smallSide> ) use:Cell,7
,<GType:selGame> ) (,2
,Win ) to,1
,tie ) (,1
,195 ) ),1
,156 ) ),2
,) /-----------------------------------------,1
,<BoardSize> ) ),2
,<Connection:type> ) (,1
,<BoardShape:directionsUsed> ) (,3
,4 ) vertices:,2
,to ) <BoardShape:directionsUsed>,5
,<BoardShape:directionsUsed> ) ),5
,) ) <BoardShape:directionsWin>,2
,) <BoardShape:directionsUsed>,5
,) <BoardShape:directionsWin>,2
,SW ) >,6
,SE ) >,6
,Bottom ) >,1
,Right ) >,1
,from ) stop:,3
,value ) stack:True,1
,STRING ) Neutral,1
,To ) steps:,5
,2 ) #1,4
,NNW ) (,2
,SSW ) (,2
,SSE ) (,3
,NNE ) },1
,SSW ) ),4
,NNE ) ),2
,) ) Next,2
,0 ) next:,1
,) Neutral,1
,) Next,5
,counter ) ),6
,site ) at:StartOfMove,1
,at:StartOfMove ) (,3
,value ) at:StartOfMove,1
,Positional ) ),1
,<Scoring:calculation> ) (,1
,Passed ) },1
,STRING ) ***,6
,) at:StartOfMove,3
,) ***,6
,site ) includeSelf:True,1
,Mover ) in:,6
,to ) distance:<Placement:distance>,1
,distance:<Placement:distance> ) ),1
,by:Mover ) to:,1
,by:Next ) to:,1
,255 ) ),2
,120 ) strokeColour:,2
,55 ) ),2
,60 ) ),1
,110 ) strokeColour:,2
,degrees:180 ) ),2
,30 ) edgeColour:,1
,) distance:<Placement:distance>,1
,) strokeColour:,4
,) edgeColour:,1
,from ) 0,3
,<Scoring:updateOption> ) ),1
,) ) <TurnType:turnOption>,1
,<TurnType:turnOption> ) ),1
,) <TurnType:turnOption>,1
,<Board:start> ) (,6
,by:Neutral ) (,1
,at:0 ) (,22
,at:1 ) (,21
,at:2 ) (,11
,at:3 ) (,11
,at:4 ) (,12
,at:5 ) (,11
,at:6 ) (,11
,at:7 ) (,11
,at:8 ) (,11
,at:9 ) (,11
,at:10 ) (,11
,at:11 ) (,11
,at:12 ) (,10
,at:13 ) (,10
,at:14 ) (,10
,at:15 ) (,10
,at:16 ) (,10
,at:17 ) (,10
,at:18 ) (,10
,at:19 ) (,9
,at:20 ) },1
,at:20 ) (,8
,at:21 ) (,8
,at:22 ) (,8
,at:23 ) (,7
,at:24 ) (,6
,at:25 ) (,6
,at:26 ) (,6
,at:27 ) (,6
,at:28 ) (,6
,at:29 ) (,6
,at:30 ) (,6
,at:31 ) (,5
,at:34 ) (,5
,at:35 ) },2
,at:35 ) (,3
,at:36 ) (,3
,at:37 ) (,3
,at:38 ) (,3
,at:39 ) (,3
,at:40 ) (,3
,at:41 ) (,3
,at:42 ) (,2
,at:43 ) (,2
,at:44 ) },2
,<Version:start> ) (,2
,<Version:play> ) (,2
,by:Shared ) (,6
,To ) All,5
,<Play:start> ) (,1
,<Play:move> ) (,1
,to ) Shared,3
,To ) Shared,1
,to ) Mover,1
,to ) All,1
,to ) Next,1
,on:Edge ) ),6
,use:Edge ) },3
,<Version:result> ) ),2
,k:3 ) (,1
,Passed ) ),1
,at:23 ) },1
,at:24 ) },1
,at:19 ) },1
,k:4 ) (,1
,at:31 ) },1
,) ) <Boundary:cornerSetup>,1
,nextPhase ) ),2
,To ) P1,5
,To ) P2,5
,) <Boundary:cornerSetup>,1
,<Multi:capture> ) ),1
,All ) next:,1
,) ) role,1
,) ) <NumberPlayers:inGame>,1
,<NumberPlayers:inGame> ) ),3
,mover ) <NumberPlayers:inGame>,1
,) ) region,1
,) ) constants,1
,<ScoreOption:discVal> ) (,1
,10 ) functional,1
,) ) -1,1
,} ) <NumberPlayers:inGame>,1
,component:#3 ) ),1
,#6 ) },1
,if:<PlaceDisc:location> ) ),1
,) ) for,2
,<Multi:influence> ) ),3
,site ) distance:<Equi:method>,1
,distance:<Equi:method> ) (,1
,Orthogonal ) },2
,site ) to:,3
,site ) <Multi:influence>,1
,<NumberPlayers:inGame> ) (,1
,<Board:size> ) use:Cell,1
,<ChosenHop:prioritySetting> ) (,1
,STRING ) ****,8
,STRING ) learner,1
,STRING ) advanced,1
,STRING ) Hops-a-Daisy,1
,STRING ) default,3
,STRING ) first,1
,STRING ) third,1
,STRING ) Equi,1
,STRING ) Eqiversi,1
,) role,1
,) <NumberPlayers:inGame>,3
,) region,1
,) constants,1
,) functional,1
,) for,2
,) distance:<Equi:method>,1
,) <Multi:influence>,1
,) ****,8
,) learner,1
,) advanced,1
,) Hops-a-Daisy,1
,) default,3
,) first,1
,) third,1
,) Equi,1
,) Eqiversi,1
,<BoardSize:smallSide> ) ),2
,) ) assumes,1
,by:Next ) Orthogonal,1
,) assumes,1
,Outer ) <Board:excludeFromEdge>,1
,<Board:excludeFromEdge> ) ),1
,N ) S,1
,S ) E,1
,E ) W,1
,W ) distance:1,1
,by:Mover ) },3
,<Board:type> ) use:Cell,2
,<Edge:controlType> ) (,1
,<Center:controlType> ) (,1
,) <Board:excludeFromEdge>,1
,lot ) the,1
,WSW ) ),1
,game ) (,1
,#2 ) index:0,1
,#2 ) index:1,1
,) ) Connectivity,1
,on:Cell ) (,1
,#1 ) Cell,2
,) ) Allow,1
,liberties ) State,1
,) ) from:#3,2
,at:#3 ) ),1
,) ) Suicidal,1
,#4 ) Cell,1
,site ) unique:True,2
,) ) Find,1
,value ) Next,2
,#2 ) to,1
,Forget ) (,1
,#5 ) Cell,1
,} ) to,1
,remember ) (,1
,between ) Orthogonal,1
,between ) level:,1
,Mover ) Cell,5
,on:Cell ) ),1
,) ) at:StartOfMove,1
,Next ) Cell,3
,) ) special,1
,) ) incase,1
,sides ) (,1
,maxState:6 ) (,1
,maxState:6 ) },1
,) ) use:Edge,4
,use:Edge ) ),2
,Cream ) ),1
,) the,1
,) Connectivity,1
,) Cell,12
,) Allow,1
,) from:#3,2
,) Suicidal,1
,) Find,1
,) special,1
,) incase,1
,) use:Edge,5
,#1 ) All,1
,) ) -------------------------------------------,1
,Neutral ) at:,1
,111 ) >,1
,125 ) >,1
,) -------------------------------------------,1
,) at:,4
,site ) Enemy,1
,site ) Empty,3
,from ) Empty,3
,to ) Empty,1
,Outer ) place,1
,piece ) (,1
,) ) but,2
,STRING ) nor,1
,) ) place,1
,STRING ) bug,3
,) place,2
,) nor,1
,) bug,3
,level:0 ) (,1
,sites ) Orthogonal,1
,sites ) (,3
,) ) Adjacent,1
,STRING ) These,1
,yielded ) (,1
,value ) unique:True,7
,) ) Key,1
,STRING ) unique:True,7
,#1 ) includeSelf:True,2
,) ) Processing,1
,) ) Continuation,1
,) ) Defining,1
,) ) Each,1
,) ) i,2
,) ) Structure,2
,} ) Defining,1
,) ) stack:False,3
,stack:False ) ),2
,<Board:startP2> ) (,1
,state:7 ) },2
,) ) Definitions,1
,) ) Perforated,1
,) ) <Variants:starting>,1
,) ) eg,1
,) ) ---------------------------------------------,1
,} ) -------------------------------------,1
,) Adjacent,1
,) These,1
,) Key,1
,) Processing,1
,) Continuation,1
,) Defining,2
,) Each,1
,) i,2
,) Structure,2
,) stack:False,3
,) Definitions,1
,) Perforated,1
,) <Variants:starting>,1
,) eg,1
,) ---------------------------------------------,1
,) -------------------------------------,1
,2 ) next:,1
,) ) is,1
,Loss ) prevent,1
,boards ) (,1
,} ) Notes:,1
,) is,1
,) prevent,1
,) Notes:,1
,at:#1 ) 4,4
,count:55 ) ),1
,P2 ) {,1
,<Board> ) },1
,Cell ) ),1
,} ) use:Edge,1
,use:Vertex ) },4
,Cells ) 2,1
,<Size> ) <Dual:end>,1
,<Dual:end> ) },1
,< ) >,1
,) <Dual:end>,1
,) ) <Version:start>,1
,by:Shared ) >,1
,by:Mover ) >,1
,) <Version:start>,1
,) ) closed:True,3
,closed:True ) (,3
,) closed:True,4
,closed:True ) ),1
,3 ) closed:True,1
,#2 ) state:0,1
,1 ) state:1,1
,2 ) state:2,1
,3 ) state:3,1
,4 ) state:4,1
,5 ) state:5,1
,state:5 ) ),1
,<Players:sumFingers> ) (,1
,) ) applyAfterAllMoves:True,1
,applyAfterAllMoves:True ) ),1
,Simultaneous ) (,2
,P2 ) <Players:initP3>,1
,) ) <Players:betP3>,1
,P2 ) <Players:showHandP3>,1
,1 ) <Players:removeP3>,1
,P2 ) 3,1
,3 ) <Players:endP3>,1
,at:2 ) },2
,P3 ) >,2
,) applyAfterAllMoves:True,1
,) <Players:initP3>,1
,) <Players:betP3>,1
,) <Players:showHandP3>,1
,) <Players:removeP3>,1
,) <Players:endP3>,1
,0 ) P1,1
,1 ) P2,1
,<Num:row> ) (,1
,) ) index:,1
,Bottom ) index:,1
,) ) to:0,1
,STRING ) index:,1
,To ) to:P2,1
,0 ) Init,1
,) index:,3
,) Init,1
,MoverLastTurn ) ),1
,<Size:board> ) ),1
,<Size:piles> ) (,1
,at:1 ) },1
,at:3 ) },1
,at:4 ) },1
,at:5 ) },1
,at:6 ) },1
,at:7 ) },1
,at:8 ) },1
,at:9 ) },1
,<Challenge> ) (,7
,Different ) },6
,Solved ) (,19
,<Challenge:size> ) (,7
,from ) includeSelf:True,1
,includeSelf:True ) of:1,1
,hint ) ),4
,) of:1,4
,<Challenge:size> ) ),1
,use:Vertex ) <Challenge:hints>,1
,<Challenge:start> ) (,1
,Vertex ) >,2
,) <Challenge:hints>,1
,HintRegions ) },3
,24 ) >,1
,) ) <Challenge>,1
,) <Challenge>,1
,<Size> ) (,3
,Different ) ),5
,<Challenge:maxVal> ) ),1
,<Challenge:sum> ) },1
,Board ) of:1,1
,except:0 ) },1
,) ) Bottom,1
,} ) Bottom,1
,} ) Middle,1
,} ) Top,2
,) Bottom,2
,) Top,2
,Cell ) },1
,Edge ) 2,1
,0 ) >,9
,) ) of:1,2
,) ) NE,1
,included:True ) ),2
,) ) NW,1
,Unique ) (,1
,Vertex ) if:,1
,of:#1 ) ),3
,of:#2 ) ),4
,) ) if:#5,1
,if:#5 ) ),1
,of:#1 ) (,1
,row ) (,1
,column ) ),1
,) if:#5,1
,<Robots:num> ) (,1
,<SafeTeleportation:num> ) (,1
,Random ) ),1
,by:Shared ) ),1
,#1 ) at:,2
,Mover ) at:,1
,Next ) STRING,2
,Turns ) <challenge:limit>,2
,<challenge:limit> ) },2
,58 ) >,1
,63 ) >,1
,62 ) >,2
,59 ) >,1
,61 ) >,1
,56 ) >,2
,31 ) >,1
,) <challenge:limit>,2
,from ) SameDirection,1
,<Board:start1> ) (,1
,<Board:start2> ) (,1
,Pieces ) 1,1
,1 ) vertices:,1
,20 ) cells:,1
,336 ) },1
,num:1 ) False,1
,<Version:boardSize> ) ),1
,) ) <Version:pieces>,2
,) <Version:pieces>,2
,<Variant:noPieceSite> ) ),1
,Threatened ) (,1
,at:60 ) (,1
,<OuterRing:extraBoardSize> ) (,1
,<OuterRing:extraBoardSize> ) ),1
,P1 ) <OuterRing:tilePlacementRegion>,1
,count:<Size:numTiles> ) },1
,) <OuterRing:tilePlacementRegion>,1
,86 ) },1
,coord:<Board:startTheseus> ) (,1
,coord:<Board:startMinotaur> ) (,1
,<Minotaur:threat> ) ),1
,Moves ) <Version:limit>,1
,<Version:limit> ) (,1
,) <Version:limit>,1
*,) * (,374
,* (,447
,) * },133
,* },133
,( * 2,16
,* 2,16
,( * 3,22
,* 3,22
,( * (,71
,( * STRING,109
,* STRING,109
,( * 4,11
,* 4,11
,( * <Row:size>,3
,* <Row:size>,3
,( * 7,1
,* 7,1
,( * 1,2
,* 1,2
,( * {,13
,( * 5,3
,( * #1,5
,* {,13
,* 5,3
,* #1,5
,( * 10000,1
,( * 100,1
,* 10000,1
,* 100,1
,players * (,2
,( * 50,2
,* 50,2
,Promotion: * When,1
,. * When,3
,. * If,1
,Movement: * Rooks,1
,. * There,1
,. * Kings,1
,. * Knights,1
,. * Queens,1
,. * Pawns,1
,* When,4
,* If,1
,* Rooks,1
,* There,1
,* Kings,1
,* Knights,1
,* Queens,1
,* Pawns,1
,( * <Board>,2
,* <Board>,2
+,( + (,320
,+ (,320
,( + 1,66
,+ 1,66
,( + {,14
,+ {,14
,( + 2,2
,+ 2,4
,( + #1,23
,+ #1,23
,( + <Row:size>,1
,+ <Row:size>,1
,( + <Board>,4
,+ <Board>,4
,directions + 2,2
,( + <BoardSize:smallSide>,4
,+ <BoardSize:smallSide>,4
,( + STRING,1
,+ STRING,1
,( + <Size:boardHeight>,1
,( + <Size:boardWidth>,1
,+ <Size:boardHeight>,1
,+ <Size:boardWidth>,1
--COMMA--,again --COMMA-- because,3
,--COMMA-- because,4
,again --COMMA-- 5,1
,--COMMA-- 5,1
,P1 --COMMA-- P2,1
,--COMMA-- P2,1
,location --COMMA-- an,1
,--COMMA-- an,1
,direction --COMMA-- hopped,1
,--COMMA-- hopped,1
,left --COMMA-- diagonally,2
,left --COMMA-- straight,2
,ahead --COMMA-- diagonally,2
,right --COMMA-- or,2
,--COMMA-- diagonally,4
,--COMMA-- straight,2
,--COMMA-- or,5
,#1 --COMMA-- #2,1
,S --COMMA-- N,1
,N --COMMA-- NE,1
,NE --COMMA-- NW,1
,NW --COMMA-- SE,1
,SE --COMMA-- SW,1
,--COMMA-- #2,2
,--COMMA-- N,1
,--COMMA-- NE,1
,--COMMA-- NW,1
,--COMMA-- SE,1
,--COMMA-- SW,1
,2020 --COMMA-- Jay,8
,Coskey --COMMA-- except,8
,lud --COMMA-- as,8
,direction --COMMA-- then,1
,--COMMA-- Jay,8
,--COMMA-- except,8
,--COMMA-- as,12
,--COMMA-- then,5
,promote --COMMA-- it,1
,--COMMA-- it,2
,omnicheck --COMMA-- they,2
,castling --COMMA-- because,1
,--COMMA-- they,3
,red --COMMA-- yellow,1
,yellow --COMMA-- and,1
,captured --COMMA-- they,1
,side --COMMA-- it,1
,promotion --COMMA-- and,1
,capture --COMMA-- then,1
,pieces --COMMA-- as,1
,side --COMMA-- then,1
,Then --COMMA-- on,1
,turn --COMMA-- the,1
,space---West --COMMA-- East,1
,East --COMMA-- or,1
,. --COMMA-- along,1
,edge --COMMA-- to,1
,above --COMMA-- Pawns,1
,side --COMMA-- but,1
,Queen --COMMA-- Rook,1
,Rook --COMMA-- or,1
,available --COMMA-- then,1
,promotion --COMMA-- on,1
,Currently --COMMA-- on,1
,place --COMMA-- the,1
,captured --COMMA-- or,1
,checkmate --COMMA-- the,1
,wins --COMMA-- the,1
,loses --COMMA-- and,1
,stalemate --COMMA-- all,1
,move --COMMA-- This,1
,game --COMMA-- the,1
,variant --COMMA-- some,1
,King --COMMA-- then,1
,overview --COMMA-- see,1
,details --COMMA-- see,1
,Variants --COMMA-- by,1
,edition --COMMA-- completed,1
,Beasley --COMMA-- 2007,1
,Coskey --COMMA-- with,1
,lud --COMMA-- by,1
,--COMMA-- yellow,1
,--COMMA-- and,4
,--COMMA-- on,3
,--COMMA-- the,5
,--COMMA-- East,1
,--COMMA-- along,1
,--COMMA-- to,2
,--COMMA-- Pawns,1
,--COMMA-- but,2
,--COMMA-- Rook,1
,--COMMA-- all,1
,--COMMA-- This,1
,--COMMA-- some,1
,--COMMA-- see,2
,--COMMA-- by,2
,--COMMA-- completed,1
,--COMMA-- 2007,1
,--COMMA-- with,1
,entrenchment --COMMA-- checked,1
,site --COMMA-- #2,1
,--COMMA-- checked,1
,move --COMMA-- 1,2
,8 --COMMA-- means,2
,--COMMA-- 1,2
,--COMMA-- means,2
,from --COMMA-- who's,3
,sites --COMMA-- piece,1
,hopped --COMMA-- piece,1
,2 --COMMA-- New,1
,--COMMA-- who's,3
,--COMMA-- piece,2
,--COMMA-- New,1
,from --COMMA-- to,1
,cosmetic --COMMA-- but,1
,OK --COMMA-- State,1
,1 --COMMA-- State,1
,to --COMMA-- and,1
,game --COMMA-- so,1
,--COMMA-- State,2
,--COMMA-- so,1
,30 --COMMA-- 000,1
,changes --COMMA-- as,2
,captures --COMMA-- including,1
,removal --COMMA-- as,1
,selection --COMMA-- plus,1
,moves --COMMA-- passing,1
,--COMMA-- 000,1
,--COMMA-- including,1
,--COMMA-- plus,1
,--COMMA-- passing,1
-,( - (,361
,- (,364
,( - 7,6
,- 7,6
,( - #1,26
,- #1,26
,) - region,2
,#1 - region,4
,#2 - state,3
,#1 - extra,1
,#1 - from,2
,#2 - to,2
,#3 - capture,1
,#4 - (,1
,#5 - (,1
,#1 - Name,2
,#2 - Side,1
,#3 - Target,1
,#4 - Transit,1
,#5 - Capture,1
,#1 - state,2
,#1 - player,2
,- region,6
,- state,5
,- extra,1
,- from,2
,- to,2
,- capture,1
,- Name,2
,- Side,1
,- Target,1
,- Transit,1
,- Capture,1
,- player,2
,moves - conditional,1
,- conditional,1
,( - STRING,14
,- STRING,16
,#2 - sides,1
,- sides,1
,( - #2,1
,- #2,1
,( - <Board:size>,2
,- <Board:size>,2
,#1 - site,2
,#1 - STRING,2
,#2 - index,2
,- site,2
,- index,2
,( - <Tag:pieceNumber>,2
,- <Tag:pieceNumber>,2
,( - <Board>,6
,- <Board>,6
,lud - CaptureToPieceAndResetCounter,7
,lud - NextCanNotMove,8
,lud - PieceHasNeverMoved,3
,lud - PieceHasMoved,3
,lud - RememberPieceHasMoved,3
,lud - KingNotCheckedAndToEmpty,3
,lud - DoCastle,3
,lud - DoubleStep,5
,passant - Save,6
,Pending - Save,6
,- CaptureToPieceAndResetCounter,7
,- NextCanNotMove,8
,- PieceHasNeverMoved,3
,- PieceHasMoved,3
,- RememberPieceHasMoved,3
,- KingNotCheckedAndToEmpty,3
,- DoCastle,3
,- DoubleStep,5
,- Save,12
,lud - CaptureForwardDiagonal,3
,- CaptureForwardDiagonal,3
,#1 - P1,2
,#1 - (,1
,#2 - direction,1
,#3 - number,1
,#4 - condition,1
,#5 - then,1
,#1 - direction,3
,#2 - optional,2
,#1 - Directions,3
,#2 - between,1
,- P1,2
,- direction,4
,- number,1
,- condition,1
,- then,2
,- optional,2
,- Directions,3
,- between,1
,. - They,1
,- They,1
,#1 - Large,1
,#2 - Paths,1
,#3 - Small,1
,#1 - then,1
,#1 - P1/P2,1
,- Large,1
,- Paths,1
,- Small,1
,- P1/P2,1
,( - <BoardSize:smallSide>,15
,- <BoardSize:smallSide>,15
,shift - .,1
,5 - .,1
,- .,2
,( - 0,1
,- 0,1
,( - <NumberPlayers:inGame>,1
,( - #5,1
,choice - default,1
,- <NumberPlayers:inGame>,1
,- #5,1
,- default,1
,Observations: - full,1
,2 - liberties,1
,( - 2,4
,yet - eg,1
,- full,1
,- liberties,1
,- 2,4
,- eg,1
,( - 3,1
,- 3,1
,move - shows,1
,turn - Flow,1
,end - Script,1
,good - <,1
,- shows,1
,- Flow,1
,- Script,1
,- <,1
,( - <Size:pile>,1
,- <Size:pile>,1
.,0 . 4,11
,0 . 6,5
,0 . 2,3
,0 . 8,2
,-0 . 5,15
,2 . 5,8
,. 4,32
,. 6,39
,. 2,36
,. 8,29
,. 5,284
,1 . 5,16
,4 . 2,3
,1 . 4,2
,1 . .,9
,. . 4,16
,. .,1729
,0 . 5,79
,source . },2
,. },5
,1 . 333,1
,another . (,1
,. 333,3
,. (,106
,0 . 17,1
,4 . 65,1
,0 . 3,6
,4 . 3,1
,0 . 38,1
,3 . 9,1
,0 . 25,1
,3 . 5,12
,-0 . 13,1
,2 . 97,1
,-0 . 75,2
,2 . 2,4
,-1 . 47,1
,0 . 95,7
,-2 . 22,1
,. 17,23
,. 65,5
,. 3,31
,. 38,4
,. 9,48
,. 25,46
,. 13,117
,. 97,1
,. 75,7
,. 47,4
,. 95,8
,. 22,3
,sites . (,1
,-3 . 5,2
,5 . 5,5
,12 . .,61
,. . 7,35
,5 . .,40
,. . 0,380
,13 . .,113
,. . 18,109
,20 . .,42
,. . 25,38
,25 . .,41
,. . 20,55
,18 . .,120
,. . 13,116
,0 . .,497
,. . 5,94
,7 . .,65
,. . 12,82
,. 7,39
,. 0,412
,. 18,109
,. 20,56
,. 12,82
,6 . .,28
,. . 11,31
,23 . .,173
,17 . .,14
,. . 17,22
,. . 23,173
,11 . .,18
,. . 6,11
,. 11,31
,. 23,174
,there . (,3
,pawns . (,2
,. . 2,10
,3 . .,7
,. . 14,13
,15 . .,7
,double . (,4
,. 14,13
,player . (,5
,awaiting . (,1
,double . ),1
,. ),25
,-1 . 25,3
,-0 . 34,3
,12 . 25,3
,5 . 33,3
,41 . .,4
,. . 45,5
,. 34,8
,. 33,19
,. 45,19
,3 . 25,1
,-5 . 5,6
,12 . 5,2
,10 . 5,1
,-0 . 94,1
,0 . 26,1
,-0 . 23,1
,-0 . 44,1
,. 94,3
,. 26,6
,. 44,9
,. . 9,14
,10 . .,7
,. . 15,7
,16 . .,5
,. 15,12
,4 . 5,5
,. . 10,5
,. 10,5
,7 . 5,4
,. . 27,12
,. 27,12
,. . 19,6
,. . 24,7
,. . 29,7
,. . 34,5
,. . 39,9
,. . 44,7
,. . 49,2
,. . 54,2
,. . 59,4
,. . 64,2
,. . 69,3
,. . 74,4
,. . 79,3
,. . 84,2
,. . 89,3
,. . 94,2
,. . 99,3
,. 19,6
,. 24,8
,. 29,10
,. 39,11
,. 49,8
,. 54,2
,. 59,6
,. 64,2
,. 69,3
,. 74,4
,. 79,4
,. 84,2
,. 89,3
,. 99,3
,. . 28,82
,9 . .,23
,. 28,82
,2 . 79,1
,10 . 44,1
,6 . 32,1
,11 . 15,1
,0 . 55,1
,-0 . 04,1
,1 . 24,1
,. 32,7
,. 55,4
,. 04,2
,24 . .,9
,-4 . 5,2
,-2 . 5,2
,33 . .,7
,. . 40,6
,. 40,6
,. . 8,16
,14 . .,5
,. . 1,2
,. 1,9
,39 . .,6
,49 . .,1
,59 . .,1
,. . 30,9
,69 . .,2
,. . 35,8
,79 . .,1
,89 . .,1
,99 . .,1
,. . 50,3
,109 . .,2
,. . 55,2
,119 . .,2
,. . 60,1
,129 . .,1
,. . 65,2
,139 . .,2
,. . 70,1
,149 . .,2
,. . 75,1
,159 . .,2
,. . 80,6
,169 . .,2
,. . 85,2
,179 . .,3
,. . 90,3
,189 . .,1
,. . 95,1
,199 . .,1
,. . 100,1
,. 30,9
,. 35,10
,. 50,3
,. 60,1
,. 70,1
,. 80,6
,. 85,4
,. 90,3
,. 100,1
,it . (,1
,to . (,1
,. . 3,9
,32 . .,10
,move . (,4
,pushing . (,1
,piece . (,3
,mine . (,1
,mine . ),1
,P1 . (,1
,P2 . (,1
,pair . (,1
,106 . .,3
,. . 114,3
,123 . .,1
,. . 131,1
,140 . .,1
,. . 148,2
,157 . .,1
,. . 165,1
,174 . .,1
,. . 182,2
,. 114,3
,. 131,1
,. 148,2
,. 165,1
,. 182,2
,removed . #1,1
,site . The,1
,removed . @example,1
,. #1,2
,. The,5
,. @example,1
,86 . .,2
,first . (,1
,36 . .,9
,) . (,3
,cell . ),2
,3-stack/catapult . (,1
,cell . (,2
,<0 . .,5
,. . 7>,2
,<48 . .,2
,. . 55>,1
,<56 . .,1
,. . 63>,2
,. . 15>,1
,. . 10>,2
,<50 . .,1
,. . 60>,1
,. 7>,2
,. 55>,1
,. 63>,2
,. 15>,1
,. 10>,2
,. 60>,1
,0 . 33,12
,12 . 66,12
,. 66,13
,0 . 88,2
,-4 . 45,2
,22 . 5,1
,3 . 39,2
,-8 . 21,2
,7 . 15,2
,-10 . 71,2
,67 . 5,1
,11 . 58,2
,-11 . 59,1
,16 . 02,2
,112 . 5,1
,19 . 8,2
,22 . 33,2
,157 . 5,1
,23 . 21,1
,4 . 45,2
,202 . 5,1
,8 . 21,2
,10 . 71,2
,247 . 5,1
,11 . 59,1
,292 . 5,1
,337 . 5,1
,. 88,2
,. 21,9
,. 71,5
,. 58,3
,. 02,2
,0 . 75,4
,building . (,1
,1 . 2,10
,1 . 04,1
,1 . 55,1
,3 . 2,2
,-3 . 2,3
,-2 . 6,1
,1 . 3,5
,-4 . 3,5
,0 . 383,1
,0 . 335,1
,1 . 29,3
,1 . 01,1
,4 . 61,1
,0 . 7,1
,0 . 501,1
,1 . 005,1
,4 . 4,1
,0 . 91,1
,. 383,1
,. 335,1
,. 01,2
,. 61,1
,. 501,1
,. 005,1
,. 91,1
,85 . .,3
,4 . .,2
,1 . 6,1
,30 . .,7
,29 . .,2
,19 . .,7
,-5 . 6,6
,14 . 6,12
,35 . .,4
,71 . .,1
,. . 38,3
,. . 122,1
,251 . .,1
,335 . .,1
,. . 254,3
,. 122,1
,. 254,3
,<7 . .,1
,<17 . .,1
,. . 20>,1
,<8 . .,1
,. . 11>,1
,<20 . .,1
,. . 23>,1
,<9 . .,1
,. . 12>,1
,<23 . .,1
,. . 26>,1
,<10 . .,1
,. . 13>,1
,<26 . .,2
,. . 29>,2
,. 20>,1
,. 11>,1
,. 23>,1
,. 12>,1
,. 26>,1
,. 13>,1
,. 29>,2
,value . (,3
,<24 . .,1
,. . 31>,1
,<32 . .,1
,. . 39>,2
,<27 . .,1
,. . 35>,1
,<36 . .,1
,. . 44>,1
,<30 . .,2
,<40 . .,1
,. . 49>,1
,<33 . .,1
,. . 43>,1
,<44 . .,1
,. . 54>,1
,. 31>,1
,. 39>,2
,. 35>,1
,. 44>,1
,. 49>,1
,. 43>,1
,. 54>,1
,state . (,1
,<18 . .,1
,. . 21>,1
,<22 . .,1
,. . 25>,1
,. . 33>,1
,<34 . .,1
,. . 37>,1
,<38 . .,1
,. . 41>,1
,. 21>,1
,. 25>,1
,. 33>,1
,. 37>,1
,. 41>,1
,31 . .,7
,26 . .,5
,47 . .,2
,. . 41,3
,40 . .,3
,. . 36,3
,8 . .,8
,55 . .,1
,. . 48,4
,. . 42,1
,63 . .,2
,54 . .,4
,. 41,3
,. 36,3
,. 48,4
,. 42,1
,21 . .,7
,28 . .,67
,. . 31,4
,27 . .,6
,. . 33,2
,34 . .,1
,. . 37,1
,38 . .,2
,. . 46,2
,. 31,10
,. 37,1
,. 46,2
,. . 21,4
,capture . (,1
,0 . 45,6
,-0 . 45,4
,seed . STRING,1
,. STRING,32
,far . <Capture:ruleSecondCapture>,1
,far . },1
,. <Capture:ruleSecondCapture>,1
,2 . .,6
,. . 26,5
,. . 32,6
,<0 . 8>,1
,. 8>,1
,play . (,1
,Oware . ),1
,placed . (,1
,-1 . 5,4
,shift . 5,1
,0 . 707,2
,. 707,2
,slide . ),1
,board . (,2
,skew . 5,2
,option . {,1
,. {,1
,0 . 625,1
,0 . 915,3
,0 . 285,3
,-0 . 01,1
,0 . 1725,2
,0 . 4375,2
,0 . 075,2
,0 . 535,2
,. 625,1
,. 915,3
,. 285,3
,. 1725,2
,. 4375,2
,. 075,2
,. 535,2
,-5 . 20,1
,-1 . 31,3
,-0 . 81,3
,2 . 49,6
,1 . 31,3
,0 . 81,3
,. 81,6
,45 . .,3
,. . 47,2
,48 . .,2
,42 . .,2
,51 . .,2
,. . 53,3
,. . 56,2
,72 . .,2
,57 . .,2
,66 . .,4
,. . 68,4
,75 . .,4
,. . 77,4
,60 . .,2
,. . 62,3
,. . 71,1
,78 . .,1
,81 . .,1
,. 53,3
,. 56,2
,. 68,4
,. 77,4
,. 62,3
,implementation . That's,1
,mover . (,1
,. That's,1
,9 . 5,5
,165 . .,1
,. . 168,2
,53 . .,1
,. . 58,1
,74 . .,3
,. . 76,2
,137 . .,1
,. . 139,1
,126 . .,1
,. . 129,2
,113 . .,1
,. . 117,2
,. 168,2
,. 76,2
,. 139,1
,. 129,2
,. 117,2
,attacker . (,3
,pieces . (,5
,moves . (,4
,. . 16,7
,22 . .,1
,. 16,7
,. . 22,2
,0 . 65,2
,1 . 15,2
,5 . 35,2
,5 . 85,2
,phase . (,3
,rules . (,2
,Wazir . (,2
,Knight_rotated . (,2
,Elephant . (,2
,Queen . (,2
,King_noCross . (,2
,Amazon . (,2
,Giraffe . (,2
,Bishop_noCross . (,2
,Knight . (,2
,Rook . (,2
,Baidaq . (,1
,M . Coskey,8
,Chess . lud,47
,STRING . .,39
,. . .,14
,. . ),13
,) . Brusky,1
,diretion . But,1
,direction . (,1
,directions . Note:,2
,Var . Note:,6
,) . Usage:,7
,e . p,1
,p . from,1
,. Coskey,8
,. lud,47
,. Brusky,1
,. But,2
,. Note:,8
,. Usage:,7
,. p,1
,. from,1
,capture . It,1
,<fwd_dir> . Source:,1
,. It,3
,. Source:,4
,. . STRING,26
,) . Source:,3
,thing . The,1
,different . Furthermore,1
,have . However,1
,this . We,1
,check . Then,1
,1 . It,1
,omnicheck . 2,1
,2 . If,1
,turn . 3,1
,3 . If,1
,lost . #1,1
,. Furthermore,1
,. However,1
,. We,1
,. Then,2
,. If,3
,Wellisch . STRING,1
,vertically . The,1
,spaces . The,1
,black . Capture,1
,promotion . When,1
,promotion . *,1
,chooses . *,1
,captured . Then,1
,promoted . Piece,1
,Chess . -,1
,direction . *,1
,Chess . *,1
,those . They,1
,player . Castling,1
,before . *,1
,i . e,4
,e . --COMMA--,1
,) . Note,1
,from . *,1
,space . *,1
,forward . Pawns,1
,space . There,1
,capture . As,1
,captured . If,1
,turn . (,2
,place . ),1
,move . *,1
,draws . *,1
,draw . (,1
,stalemate . ),1
,movement . ),1
,move . STRING,1
,/>Wikipedia</a> . For,1
,D . B,1
,B . Pritchard,1
,) . STRING,1
,2 . STRING,1
,. Capture,1
,. When,1
,. *,9
,. Piece,1
,. -,1
,. They,1
,. Castling,1
,. e,4
,. --COMMA--,1
,. Note,1
,. Pawns,1
,. There,1
,. As,1
,. For,1
,. B,1
,. Pritchard,1
,steps . Hop,5
,3 . Hop,2
,1 . Hop,4
,. Hop,11
,here . (,1
,IntFunction . },1
,84 . .,3
,. . 86,3
,. 86,3
,37 . .,1
,44 . .,1
,0 . 1,2
,-2 . 9,2
,-3 . 6,2
,2 . 9,1
,2 . 7,1
,pieces . ),1
,11 . 3,1
,-3 . 7,1
,1 . 1,2
,10 . 4,1
,-2 . 4,1
,0 . 9,1
,-1 . 3,2
,-0 . 7,1
,10 . 1,1
,-1 . 1,2
,-0 . 9,2
,1 . 87,3
,0 . 87,3
,. 87,7
,site . (,1
,spirale . (,1
,144 . .,2
,. . 151,3
,. 151,3
,make . (,1
,scale:0 . 8,9
,scale:0 . 9,27
,order . if:,1
,. if:,1
,8 . 5,1
,- . 5,2
,14 . 5,4
,15 . 5,2
,eg . STRING,1
,0 . 6>,2
,. 6>,2
,AI . But,1
,much . Observations:,1
,twice . maybe,1
,down . Sometimes,1
,displayed . Direction,1
,considerably . Liberties,1
,markers . ),1
,. Observations:,1
,. maybe,1
,. Sometimes,1
,. Direction,1
,. Liberties,1
,<5 . 5>,1
,<10 . 3>,1
,. 5>,1
,. 3>,1
,location . I,1
,hop . Care,1
,executed . (,2
,move . It,1
,process . Care,1
,define . ),1
,placement . The,1
,movement . (,1
,e . =,2
,cells . because,1
,fixed . .,1
,. . (,1
,340 . 893,1
,19 . 5,2
,6 . 3,1
,test . },1
,<0 . 03>,3
,<0 . 07>,1
,. I,1
,. Care,2
,. =,2
,. because,1
,. 893,1
,. 03>,3
,. 07>,1
,e . unique,1
,only . (,1
,. unique,1
,try . (,1
,3 . 47,1
,2 . 6,1
,1 . 73,1
,-0 . 87,1
,. 73,1
,square . (,5
,64 . .,2
,. . 72,2
,. . 82,2
,. . 66,1
,67 . .,1
,77 . .,1
,70 . .,1
,80 . .,1
,88 . .,2
,. . 96,2
,97 . .,2
,. . 105,2
,115 . .,2
,. . 123,2
,124 . .,2
,. . 132,2
,133 . .,2
,. . 141,2
,154 . .,1
,. . 161,2
,164 . .,1
,. . 171,2
,. . 108,1
,91 . .,1
,. . 93,1
,100 . .,1
,. . 102,1
,. . 111,1
,94 . .,1
,103 . .,1
,112 . .,1
,. . 126,1
,. . 135,1
,118 . .,1
,. . 120,1
,127 . .,1
,136 . .,1
,. . 138,1
,121 . .,1
,130 . .,1
,146 . .,1
,156 . .,1
,. . 158,1
,166 . .,1
,356 . .,1
,. . 364,1
,176 . .,2
,. . 181,2
,190 . .,2
,. . 198,2
,200 . .,2
,. . 208,2
,210 . .,2
,. . 218,2
,219 . .,2
,. . 227,2
,228 . .,2
,. . 236,2
,237 . .,2
,. . 245,2
,246 . .,2
,255 . .,2
,. . 263,2
,. . 178,1
,. . 192,1
,. . 202,1
,193 . .,1
,. . 195,1
,203 . .,1
,. . 205,1
,196 . .,1
,206 . .,1
,. . 212,1
,. . 221,1
,. . 230,1
,213 . .,1
,. . 215,1
,222 . .,1
,. . 224,1
,231 . .,1
,. . 233,1
,216 . .,1
,225 . .,1
,234 . .,1
,. . 239,1
,. . 248,1
,. . 257,1
,240 . .,1
,. . 242,1
,249 . .,1
,. . 251,1
,258 . .,1
,. . 260,1
,243 . .,1
,252 . .,1
,261 . .,1
,271 . .,1
,. . 277,2
,280 . .,1
,. . 287,2
,290 . .,1
,. . 297,2
,298 . .,2
,. . 306,2
,307 . .,2
,. . 315,2
,316 . .,2
,. . 324,2
,325 . .,2
,. . 333,2
,334 . .,2
,. . 342,2
,343 . .,2
,. . 351,2
,272 . .,1
,. . 274,1
,282 . .,1
,. . 284,1
,292 . .,1
,. . 294,1
,275 . .,1
,285 . .,1
,295 . .,1
,. . 300,1
,. . 309,1
,. . 318,1
,301 . .,1
,. . 303,1
,310 . .,1
,. . 312,1
,319 . .,1
,. . 321,1
,304 . .,1
,313 . .,1
,322 . .,1
,. . 327,1
,. . 336,1
,. . 345,1
,346 . .,1
,. . 348,1
,337 . .,1
,. . 339,1
,328 . .,1
,. . 330,1
,331 . .,1
,340 . .,1
,349 . .,1
,. 72,2
,. 82,2
,. 96,2
,. 105,2
,. 123,2
,. 132,2
,. 141,2
,. 161,2
,. 171,2
,. 108,1
,. 93,1
,. 102,1
,. 111,1
,. 126,1
,. 135,1
,. 120,1
,. 138,1
,. 158,1
,. 364,1
,. 181,2
,. 198,2
,. 208,2
,. 218,2
,. 227,2
,. 236,2
,. 245,2
,. 263,2
,. 178,1
,. 192,1
,. 202,1
,. 195,1
,. 205,1
,. 212,1
,. 221,1
,. 230,1
,. 215,1
,. 224,1
,. 233,1
,. 239,1
,. 248,1
,. 257,1
,. 242,1
,. 251,1
,. 260,1
,. 277,2
,. 287,2
,. 297,2
,. 306,2
,. 315,2
,. 324,2
,. 342,2
,. 351,2
,. 274,1
,. 284,1
,. 294,1
,. 300,1
,. 309,1
,. 318,1
,. 303,1
,. 312,1
,. 321,1
,. 327,1
,. 336,1
,. 345,1
,. 348,1
,. 339,1
,. 330,1
,300 . .,1
,. . 319,1
,. 319,1
,0 . 0,4
,-1 . 0,8
,1 . 0,9
,2 . 0,2
,3 . 0,2
,4 . 0,2
,5 . 0,2
,6 . 0,2
,7 . 0,1
/,( / (,85
,/ (,85
,( / STRING,2
,/ STRING,2
,( / <Board>,2
,/ <Board>,2
0,shift 0 2,37
,0 2,136
,2 0 (,20
,= 0 (,417
,0 (,717
,shift 0 4,7
,shift 0 -2,6
,0 4,68
,0 -2,6
,{ 0 0,57
,0 0 },51
,4 0 },32
,{ 0 4,47
,0 0,71
,0 },701
,shift 0 .,15
,scale 0 .,21
,shift 0 -0,2
,0 .,678
,0 -0,6
,2 0 },41
,{ 0 2,77
,{ 0 1,136
,{ 0 15,10
,{ 0 7,18
,{ 0 8,25
,0 1,167
,0 15,11
,0 7,25
,0 8,46
,shift 0 3,10
,3 0 (,6
,0 3,60
,1 0 (,4
,{ 0 19,2
,0 19,2
,5 0 .,20
,{ 0 9,9
,{ 0 6,46
,0 9,13
,0 6,98
,) 0 ),550
,Phase 0 ),44
,0 ),1128
,{ 0 3,42
,shift 0 -4,2
,0 -4,2
,shift 0 6,32
,6 0 },23
,STRING 0 ),197
,5 0 },38
,{ 0 .,344
,shift 0 1,4
,7 0 (,23
,. 0 13,17
,13 0 .,22
,STRING 0 count:5,7
,0 13,21
,0 count:5,7
,6 0 .,9
,19 0 .,15
,shift 0 8,12
,8 0 (,12
,pair 0 6,15
,. 0 End,4
,<= 0 (,5
,P1 0 ),39
,0 End,4
,24 0 .,20
,25 0 .,17
,20 0 1,1
,< 0 (,139
,>= 0 (,25
,24 0 2,1
,1 0 2,3
,. 0 },368
,STRING 0 count:15,8
,0 count:15,8
,1 0 ),27
,Mover 0 ),27
,shift 0 10,4
,11 0 (,4
,{ 0 32,1
,{ 0 14,4
,0 10,55
,0 32,1
,0 14,4
,shift 0 7,3
,shift 0 18,1
,94 0 .,1
,3 0 },27
,0 18,3
,shift 0 5,5
,0 5,51
,shift 0 9,3
,9 0 (,1
,5 0 (,8
,. 0 12,7
,{ 0 },4
,0 12,18
,2 0 ),13
,to 0 ),4
,1 0 3,1
,2 0 4,1
,pair 0 4,7
,75 0 .,3
,1 0 },29
,4 0 (,4
,shift 0 15,1
,{ 0 10,42
,{ 0 -1,1
,-2 0 },1
,{ 0 20,3
,pair 0 10,6
,0 -1,7
,0 20,4
,P2 0 ),13
,pair 0 0,3
,0 0 ),4
,pair 0 5,8
,Var 0 ),15
,12 0 .,3
,STRING 0 count:2,1
,0 count:2,1
,13 0 },2
,{ 0 5,36
,pair 0 8,5
,pair 0 20,1
,21 0 22,7
,37 0 2,10
,2 0 37,11
,0 22,7
,0 37,11
,shift 0 11,1
,0 11,8
,3 0 .,4
,4 0 .,2
,7 0 },7
,8 0 .,2
,9 0 .,3
,10 0 .,1
,11 0 },8
,{ 0 11,5
,{ 0 13,3
,{ 0 12,6
,pair 0 7,3
,pair 0 25,1
,0 25,1
,21 0 (,1
,16 0 3,1
,pair 0 2,3
,2 0 2,3
,4 0 4,3
,6 0 6,3
,8 0 8,3
,10 0 10,3
,pair 0 STRING,1
,0 STRING,2
,1 0 .,14
,shift 0 -1,5
,2 0 .,2
,97 0 ),1
,98 0 ),1
,pair 0 12,1
,pair 0 3,3
,3 0 ),10
,4 0 ),8
,-4 0 (,1
,= 0 #1,7
,pair 0 1,1
,0 #1,7
,) 0 (,16
,pair 0 13,1
,13 0 ),3
,10 0 (,2
,10 0 },24
,} 0 ),60
,7 0 .,4
,9 0 },6
,Section 0 (,1
,2 0 1,8
,pair 0 144,1
,5 0 ),5
,0 144,1
,pair 0 -10,1
,0 -10,1
,{ 0 (,6
,Row 0 ),14
,45 0 .,4
,pair 0 17,1
,17 0 ),2
,0 17,2
,pair 0 11,2
,11 0 ),4
,colour 0 0,3
,0 0 0,5
,Column 0 ),2
,915 0 .,3
,285 0 .,3
,{ 0 16,5
,0 16,7
,Each 0 ),11
,20 0 (,1
,Shared 0 ),2
,31 0 .,11
,8 0 1,2
,flips 0 1,4
,Prev 0 ),3
,0 0 .,7
,{ 0 -0,4
,8 0 },19
,STRING 0 (,2
,shift 0 STRING,1
,at:#1 0 ),13
,0 0 16,1
,range 0 100,1
,0 100,1
,shift 0 12,4
,12 0 (,4
,state 0 (,1
,range 0 35,1
,0 35,1
,#2 0 ),6
,20 0 .,10
,21 0 .,10
,22 0 .,5
,26 0 .,15
,27 0 .,15
,28 0 .,17
,29 0 .,15
,30 0 .,10
,32 0 .,5
,33 0 .,5
,34 0 .,5
,35 0 .,5
,36 0 .,5
,pair 0 <High:value>,1
,0 <High:value>,1
,7 0 ),3
,9 0 ),4
,15 0 ),2
,16 0 .,1
,-1 0 .,1
,-2 0 .,1
,-1 0 },1
,STRING 0 count:7,1
,0 count:7,1
,1 0 8,1
,5 0 1,1
,max 0 (,4
,6 0 ),2
,8 0 ),3
,10 0 ),3
,39 0 ),1
,40 0 ),1
,41 0 ),1
,42 0 ),1
,43 0 ),1
,12 0 ),1
,14 0 ),1
,16 0 ),1
,18 0 ),1
,19 0 ),1
,20 0 ),1
,77 0 ),1
,78 0 ),1
,79 0 ),1
,80 0 ),1
,81 0 ),2
,colour 0 50,1
,50 0 ),1
,0 50,3
,range 0 18,1
,0 0 110,2
,0 110,2
,12 0 },8
,- 0 (,1
,Cost 0 Edge,2
,0 Edge,2
,<Default 0 .,1
,<DefaultAndCount 0 .,1
,= 0 Dead,1
,> 0 (,3
,= 0 #2,1
,0 Dead,1
,0 #2,1
,exact 0 ),7
,lt 0 (,3
,= 0 ),2
,STRING 0 count:55,1
,0 count:55,1
,15 0 },3
,range 0 (,3
,remove 0 ),1
,STRING 0 .,1
,{ 0 18,1
,range 0 1,6
,60 0 ),1
,63 0 ),1
,75 0 ),1
,84 0 ),1
,{ 0 50,1
,3 0 50,1
,hint 0 3,1
,25 0 },1
,26 0 },1
,29 0 },1
,37 0 },1
,52 0 },1
,86 0 },1
,87 0 },1
,92 0 },1
,96 0 },1
,{ 0 17,1
,2 0 0,1
,0 0 1,1
,. 0 -1,1
,. 0 0,2
,. 0 1,2
,. 0 2,2
,. 0 3,2
,. 0 4,2
,. 0 5,2
,. 0 6,2
,. 0 7,1
,<3 0 1,1
,8 0 4,1
,15 0 9,1
,24 0 16,1
,players 0 ),1
1,= 1 (,321
,1 (,647
,{ 1 1,25
,1 1 },27
,3 1 },31
,{ 1 3,42
,1 1,80
,1 },293
,1 3,113
,rectangle 1 3,23
,scale 1 2,14
,{ 1 8,24
,1 2,146
,1 8,33
,shift 1 .,15
,1 .,77
,0 1 },106
,18 1 },4
,scale 1 .,11
,4 1 (,2
,{ 1 4,58
,{ 1 .,21
,1 4,88
,shift 1 0,5
,5 1 ),25
,-1 1 (,4
,rectangle 1 7,4
,6 1 },7
,1 0,79
,1 ),1848
,1 7,24
,{ 1 6,34
,{ 1 9,12
,1 6,126
,1 9,32
,) 1 ),667
,{ 1 11,13
,{ 1 5,30
,{ 1 2,77
,1 11,29
,1 5,57
,Phase 1 ),73
,range 1 9,14
,15 1 (,1
,>= 1 (,16
,STRING 1 ),152
,17 1 },2
,Mover 1 ),79
,+ 1 (,64
,2 1 .,1
,Empty 1 ),2
,to 1 ),2
,from 1 ),1
,65 1 },2
,shift 1 8,1
,Column 1 ),5
,0 1 (,4
,rectangle 1 12,8
,1 12,23
,5 1 .,1
,square 1 ),44
,Team 1 {,87
,1 {,87
,2 1 ),26
,pair 1 6,9
,pair 1 19,6
,1 19,7
,pair 1 10,9
,1 10,34
,rectangle 1 6,80
,< 1 (,141
,3 1 0,4
,pair 1 0,12
,6 1 ),17
,rectangle 1 5,18
,scale 1 1,6
,1 1 .,6
,rectangle 1 4,6
,rectangle 1 11,10
,shift 1 11,1
,) 1 (,20
,shift 1 1,3
,1 1 (,3
,rectangle 1 2,5
,3 1 ),17
,rectangle 1 10,5
,10 1 ),5
,8 1 },10
,<Board:size> 1 ),3
,{ 1 -4,1
,5 1 0,1
,pair 1 3,16
,1 -4,1
,04 1 .,1
,{ 1 0,36
,rectangle 1 9,2
,10 1 },5
,{ 1 10,20
,2 1 (,12
,5 1 (,2
,pair 1 1,31
,1 1 ),34
,#1 1 ),14
,4 1 },14
,Squares 1 to,2
,player 1 ),14
,Var 1 ),12
,1 to,2
,In 1 (,7
,<= 1 (,11
,. 1 },4
,AnyDie 1 ),3
,Next 1 ),1
,pair 1 2,7
,pair 1 4,7
,4 1 ),8
,5 1 },13
,{ 1 7,16
,at:#1 1 ),18
,pair 1 STRING,82
,1 STRING,84
,STRING 1 directed:True,1
,1 directed:True,1
,pair 1 11,1
,P1 1 ),39
,P2 1 ),35
,pair 1 5,4
,pair 1 8,3
,15 1 ),1
,16 1 ),2
,3 1 37,10
,37 1 3,11
,1 37,12
,rectangle 1 8,4
,8 1 ),3
,12 1 ),2
,range 1 2,8
,) 1 3,2
,12 1 },2
,pair 1 68,1
,pair 1 9,1
,0 1 6,1
,1 68,1
,pair 1 15,1
,1 15,11
,3 1 3,3
,5 1 5,3
,7 1 7,3
,9 1 9,3
,11 1 11,3
,pair 1 37,2
,Value 1 in:,1
,scale 1 0,5
,shift 1 -0,1
,shift 1 -1,4
,shift 1 -2,2
,3 1 (,1
,335 1 .,1
,4 1 .,2
,7 1 .,1
,501 1 .,1
,91 1 .,1
,2 1 },9
,pair 1 98,2
,98 1 ),2
,pair 1 76,1
,1 in:,1
,1 -0,5
,1 -1,8
,1 -2,2
,1 98,2
,1 76,1
,level:#2 1 ),2
,0 1 ),11
,STRING 1 (,4
,39 1 ),1
,11 1 ),4
,range 1 (,20
,pair 1 39,2
,1 39,2
,0 1 2,25
,pair 1 14,1
,14 1 ),1
,1 14,3
,{ 1 14,2
,Section 1 (,1
,{ 1 },7
,7 1 ),6
,pair 1 253,1
,1 253,1
,Count 1 to:,28
,1 to:,28
,Row 1 ),79
,Pending 1 ),1
,8 1 6,1
,+ 1 <Row:size>,1
,<Row:size> 1 ),1
,1 <Row:size>,1
,{ 1 (,1
,0 1 3,8
,pair 1 16,1
,1 16,3
,pair 1 12,4
,mapEntry 1 ),2
,range 1 100,1
,1 100,3
,Count 1 at:,1
,1 at:,1
,0 1 4,1
,* 1 (,2
,max 1 ),61
,Shared 1 ),9
,index 1 lower,1
,1 lower,1
,T3464 1 ),2
,#2 1 ),8
,0 1 7,1
,{ 1 13,4
,1 13,6
,P2 1 (,1
,P1 1 (,1
,9 1 },8
,flips 1 2,2
,State 1 ),6
,0 1 13,2
,<Tag:pieceNumber> 1 ),2
,) 1 0,14
,repeat 1 1,6
,1 1 step:,6
,7 1 step:,2
,{ 1 -0,3
,1 step:,11
,15 1 step:,2
,rectangle 1 15,2
,shift 1 6,1
,65 1 .,1
,35 1 .,1
,<Board> 1 ),10
,range 1 STRING,1
,exact 1 ),18
,11 1 (,1
,) 1 2,1
,handSite 1 ),5
,pair 1 70,1
,1 70,1
,P3 1 ),3
,P4 1 ),3
,range 1 3,6
,range 1 #1,4
,1 #1,12
,follows: 1 .,1
,STRING 1 .,1
,step 1 .,4
,Row 1 &,2
,1 &,2
,range 1 35,1
,Row 1 (,1
,1 35,1
,0 1 11,1
,= 1 #1,8
,rectangle 1 <Player:size>,5
,1 <Player:size>,5
,0 1 5,1
,rectangle 1 25,1
,1 25,1
,rectangle 1 16,2
,rectangle 1 17,1
,1 17,2
,-4 1 .,1
,5 1 1,1
,1 1 4,1
,4 1 5,1
,. 1 0,1
,. 1 -1,2
,. 1 (,1
,. 1 -0,1
,11 1 .,1
,10 1 .,2
,10 1 (,1
,tri 1 ),2
,shift 1 2,2
,= 1 },1
,pair 1 20,1
,1 20,1
,13 1 ),1
,Each 1 ),1
,Cell 1 ),1
,range 1 8,1
,range 1 12,3
,pair 1 84,1
,1 84,1
,range 1 #2,1
,--COMMA-- 1 depth,2
,STRING 1 1,1
,doctrines 1 =,1
,pair 1 100,2
,STRING 1 2,1
,0 1 15,1
,1 #2,1
,1 depth,2
,1 =,2
,range 1 4,14
,<BoardSize:smallSide> 1 ),15
,Cost 1 Edge,84
,1 Edge,84
,11 1 },3
,13 1 },2
,7 1 },6
,{ 1 12,8
,{ 1 27,1
,1 27,1
,{ 1 15,7
,players 1 ),42
,Cost 1 Vertex,22
,1 Vertex,22
,= 1 1,2
,> 1 OK,1
,State 1 =,1
,= 1 --COMMA--,1
,State 1 is,1
,min 1 ),2
,#1 1 (,2
,1 OK,1
,1 --COMMA--,1
,1 is,1
,of 1 consumed,1
,gt 1 (,2
,1 consumed,1
,Players 1 2,1
,{ 1 -1,2
,remove 1 ),1
,+ 1 STRING,1
,STRING 1 step:,1
,<Size:pile> 1 ),1
,rectangle 1 <Size:board>,1
,{ 1 17,1
,1 <Size:board>,1
,28 1 },1
,hint 1 0,1
,49 1 ),1
,69 1 ),1
,96 1 ),2
,range 1 <Challenge:size>,1
,1 <Challenge:size>,1
,-3 1 .,1
,3 1 4,1
,4 1 3,1
,14 1 },1
,range 1 <Size>,1
,1 <Size>,1
,range 1 19,1
,range 1 <Challenge:maxVal>,1
,1 <Challenge:maxVal>,1
,111 1 },1
,139 1 },1
,57 1 },1
,167 1 },1
,191 1 },1
,367 1 },1
,292 1 },1
,300 1 },1
,227 1 },1
,314 1 },1
,253 1 },1
,347 1 },1
,} 1 ),232
,hint 1 3,1
,24 1 ),1
,19 1 ),1
,72 1 ),1
,73 1 ),1
,75 1 ),1
,35 1 },1
,38 1 },1
,16 1 },1
,20 1 },1
,30 1 },1
,15 1 },1
,52 1 },1
,64 1 },1
,26 1 },1
,34 1 },1
,51 1 },1
,59 1 },1
,67 1 },1
,71 1 },1
,41 1 },1
,62 1 },1
,{ 1 21,1
,1 21,2
,0 1 1,2
,1 1 1,3
,0 1 .,2
,140 1 21,1
,0 1 2>,1
,6 1 2,1
,8 1 2,1
,10 1 2,1
,1 2>,1
2,players 2 ),694
,0 2 (,36
,2 ),1939
,2 (,297
,shift 2 0,17
,2 0,100
,{ 2 2,31
,2 2 },29
,2 2,94
,2 },360
,. 2 0,5
,8 2 (,4
,wedge 2 ),18
,1 2 .,1
,2 .,33
,. 2 (,13
,square 2 diagonals:Solid,4
,2 diagonals:Solid,4
,{ 2 0,39
,0 2 },65
,{ 2 4,53
,4 2 },40
,2 4,100
,3 2 ),9
,1 2 (,15
,{ 2 3,87
,{ 2 11,11
,2 3,121
,2 11,13
,shift 2 2,11
,2 2 (,11
,shift 2 6,6
,2 6,89
,Row 2 ),43
,max 2 ),131
,15 2 },2
,{ 2 17,4
,2 17,4
,scale 2 (,9
,9 2 },4
,{ 2 7,40
,6 2 },20
,{ 2 10,15
,2 7,51
,2 10,18
,shift 2 -2,4
,2 -2,5
,1 2 },71
,{ 2 6,29
,>= 2 (,2
,{ 2 },9
,32 2 ),1
,{ 2 5,28
,2 5,45
,1 2 3,17
,{ 2 1,9
,) 2 ),267
,from 2 ),1
,Empty 2 ),1
,to 2 ),2
,2 1,48
,shift 2 8,2
,2 8,36
,3 2 },21
,{ 2 .,9
,. 2 6,1
,Team 2 {,87
,2 {,87
,) 2 1,11
,rectangle 2 13,33
,pair 2 19,6
,2 13,37
,2 19,6
,pair 2 6,11
,pair 2 2,43
,2 2 ),47
,37 2 },2
,AnyDie 2 ),1
,* 2 (,16
,1 2 5,3
,. 2 },6
,0 2 4,29
,4 2 0,17
,pair 2 25,4
,2 25,4
,) 2 3,5
,STRING 2 ),155
,shift 2 .,2
,= 2 (,107
,1 2 ),25
,rectangle 2 1,9
,) 2 35,1
,square 2 ),13
,2 35,1
,> 2 (,8
,Mover 2 ),22
,< 2 (,8
,) 2 0,1
,6 2 0,1
,scale 2 1,9
,8 2 ),4
,6 2 ),5
,shift 2 7,2
,5 2 },10
,16 2 ),1
,21 2 ),1
,35 2 ),1
,P2 2 ),32
,P1 2 ),35
,Line 2 W,4
,Line 2 N,2
,Line 2 S,2
,Line 2 E,4
,Var 2 ),9
,player 2 ),9
,2 W,4
,2 N,2
,2 S,2
,2 E,4
,in 2 normal,2
,P3 2 ),8
,2 normal,2
,<= 2 (,6
,10 2 (,1
,rectangle 2 <Board:size>,1
,pair 2 20,1
,2 <Board:size>,4
,2 20,2
,pair 2 1,6
,5 2 ),8
,pair 2 4,5
,4 2 ),6
,pair 2 5,4
,{ 2 8,26
,pair 2 0,12
,pair 2 STRING,79
,2 STRING,172
,STRING 2 directed:True,1
,2 directed:True,1
,pair 2 8,4
,13 2 ),2
,14 2 ),1
,Column 2 ),6
,9 2 (,1
,pair 2 22,1
,STRING 2 count:4,4
,2 22,2
,2 count:4,4
,7 2 },3
,13 2 },1
,{ 2 13,3
,) 2 (,17
,= 2 15,1
,2 15,6
,62 2 37,1
,2 37,3
,pair 2 46,1
,pair 2 27,1
,2 46,1
,2 27,1
,pair 2 39,1
,2 39,1
,#1 2 ),10
,STRING 2 count:2,1
,2 count:2,1
,0 2 ),3
,6 2 6,3
,8 2 8,3
,10 2 10,3
,12 2 12,3
,2 12,11
,pair 2 3,7
,pair 2 38,1
,2 38,1
,Value 2 in:,1
,scale 2 2,1
,2 2 .,1
,shift 2 1,2
,0 2 .,3
,. 2 -2,1
,. 2 -4,1
,. 2 -5,1
,shift 2 -5,1
,3 2 1,1
,pair 2 96,2
,97 2 ),1
,96 2 ),1
,pair 2 97,1
,pair 2 37,2
,pair 2 76,1
,= 2 STRING,6
,2 in:,1
,2 -4,1
,2 -5,2
,2 96,2
,2 97,1
,2 76,1
,shift 2 -3,1
,. 2 1,1
,+ 2 (,2
,2 -3,1
,STRING 2 (,2
,25 2 ),1
,{ 2 9,8
,2 9,15
,pair 2 36,1
,2 36,1
,1 2 4,4
,pair 2 15,2
,15 2 ),2
,{ 2 14,3
,2 14,3
,Section 2 (,1
,pair 2 181,1
,pair 2 24,1
,2 181,1
,2 24,1
,10 2 ),2
,Count 2 to:,44
,2 to:,44
,In 2 (,1
,Pending 2 ),1
,{ 2 (,1
,3 2 .,1
,-1 2 .,3
,. 2 12,2
,4 2 .,1
,mancalaBoard 2 STRING,41
,pair 2 11,2
,11 2 ),1
,mancalaBoard 2 6,38
,mancalaBoard 2 5,8
,mancalaBoard 2 9,1
,mancalaBoard 2 20,1
,mancalaBoard 2 4,4
,mapEntry 2 ),2
,mancalaBoard 2 (,1
,mancalaBoard 2 7,3
,pair 2 9,2
,9 2 ),4
,mancalaBoard 2 <Board>,1
,2 <Board>,1
,mancalaBoard 2 <Board:size>,3
,mancalaBoard 2 3,3
,mancalaBoard 2 <Row:size>,1
,2 <Row:size>,1
,min 2 (,3
,mancalaBoard 2 <Column:size>,1
,2 <Column:size>,1
,mancalaBoard 2 8,1
,. 2 5,1
,Connected 2 Corners,1
,2 Corners,1
,hex 2 ),2
,T33434 2 ),1
,T3464 2 ),3
,<Board:size> 2 ),1
,wedge 2 2,2
,Line 2 Orthogonal,2
,2 Orthogonal,2
,tri 2 ),2
,{ 2 12,6
,18 2 },1
,Shared 2 ),3
,81 2 .,6
,12 2 },5
,. 2 9,2
,1 2 0,6
,10 2 },18
,Each 2 ),1
,State 2 ),3
,rectangle 2 7,4
,-2 2 (,1
,7 2 ),3
,exact 2 ),62
,min 2 ),1
,capture 2 pieces,1
,2 pieces,1
,E 2 STRING,18
,W 2 True,17
,W 2 STRING,17
,W 2 (,21
,2 True,19
,W 2 ),1
,Note: 2 players,2
,( 2 movement,2
,+ 2 en,2
,Phase 2 ),6
,2 players,2
,2 movement,2
,2 en,2
,handSite 2 ),5
,ESE 2 STRING,3
,WNW 2 ),3
,pair 2 <BoardConfig:King2Start>,1
,pair 2 <BoardConfig:RookLeft2Start>,1
,pair 2 <BoardConfig:RookRight2Start>,1
,2 <BoardConfig:King2Start>,1
,2 <BoardConfig:RookLeft2Start>,1
,2 <BoardConfig:RookRight2Start>,1
,S 2 STRING,2
,N 2 True,2
,N 2 STRING,2
,N 2 (,2
,pair 2 64,1
,2 64,1
,P4 2 ),3
,WSW 2 ),1
,ENE 2 STRING,1
,ESE 2 ),1
,WNW 2 STRING,1
,ENE 2 ),1
,WSW 2 STRING,1
,distance 2 or,1
,2 or,1
,. 2 .,2
,Star 2 ),1
,Player 2 against,1
,Player 2 may,1
,2 against,1
,2 may,1
,Row 2 &,2
,2 &,2
,Row 2 (,1
,#2 2 ),7
,= 2 #1,6
,2 #1,8
,) 2 #1,2
,pair 2 13,1
,rectangle 2 4,1
,-2 2 .,2
,9 2 .,1
,6 2 .,1
,7 2 6,1
,6 2 2,1
,2 2 7,1
,{ 2 -0,1
,2 -0,1
,E 2 (,1
,Damage 2 =,1
,pair 2 100,2
,STRING 2 3,1
,STRING 2 4,1
,< 2 >,13
,2 =,1
,2 100,2
,2 >,13
,least 2 times,1
,2 times,1
,<BoardSize:smallSide> 2 ),4
,Limping 2 ),1
,Cost 2 Edge,83
,2 Edge,83
,8 2 },17
,11 2 },7
,14 2 },4
,{ 2 15,3
,Cost 2 Vertex,21
,2 Vertex,21
,{ 2 23,2
,2 23,2
,<NumberPlayers:inGame> 2 ),1
,default 2 for,1
,4 2 4,3
,for 2 player,1
,Equiversi 2 --COMMA--,1
,Equiversi 2 },1
,2 for,1
,2 player,1
,2 --COMMA--,1
,( 2 -,1
,= 2 #2,1
,- 2 #2,1
,adds 2 of,1
,- 2 (,3
,2 -,1
,2 #2,2
,2 of,1
,<Board> 2 ),2
,3 2 3,1
,le 2 (,2
,rectangle 2 2,1
,1 2 7,1
,-1 2 (,1
,remove 2 ),1
,Count 2 at:1,1
,{ 2 16,1
,2 at:1,1
,2 16,1
,50 2 },1
,50 2 ),1
,68 2 ),1
,77 2 ),1
,19 2 },2
,16 2 },2
,4 2 5,1
,51 2 },2
,28 2 },1
,104 2 },1
,33 2 },1
,124 2 },1
,146 2 },1
,353 2 },1
,363 2 },1
,266 2 },1
,286 2 },1
,203 2 },1
,315 2 },1
,} 2 ),226
,hint 2 2,1
,12 2 ),1
,19 2 ),1
,51 2 ),1
,61 2 ),1
,45 2 },1
,60 2 },1
,1 2 9,2
,34 2 },1
,44 2 },1
,48 2 },1
,71 2 },1
,Count 2 STRING,1
,2 2 2,3
,2 2 0,2
,81 2 22,1
,1 2 3>,1
,2 3>,1
,<3 2 1>,1
,3 2 1>,6
,2 1>,7
3,wedge 3 ),74
,3 ),842
,rectangle 3 7,10
,7 3 diagonals:Alternating,8
,3 7,39
,3 diagonals:Alternating,15
,{ 3 3,19
,3 3 },19
,{ 3 1,21
,1 3 },36
,3 3,77
,3 },329
,3 1,67
,1 3 ),48
,{ 3 8,24
,{ 3 7,23
,{ 3 9,20
,3 8,47
,3 9,26
,rectangle 3 2,4
,2 3 },83
,14 3 },2
,3 2,39
,5 3 (,6
,-1 3 (,6
,3 (,209
,0 3 (,8
,rectangle 3 9,1
,shift 3 0,7
,9 3 diagonals:Alternating,1
,3 0,48
,7 3 diagonals:Solid,1
,3 diagonals:Solid,4
,) 3 ),120
,4 3 ),17
,rectangle 3 5,6
,8 3 },7
,3 5,62
,{ 3 },13
,10 3 },7
,7 3 },15
,{ 3 11,13
,3 11,16
,{ 3 -2,2
,3 -2,3
,{ 3 10,11
,0 3 },36
,3 10,16
,5 3 },11
,STRING 3 (,1
,5 3 ),9
,{ 3 18,4
,3 18,4
,= 3 (,83
,Line 3 Orthogonal,50
,3 Orthogonal,50
,. 3 2,2
,38 3 },4
,{ 3 .,12
,9 3 },6
,{ 3 5,25
,{ 3 4,60
,STRING 3 ),27
,3 .,31
,3 4,107
,Column 3 ),3
,rectangle 3 4,5
,shift 3 .,6
,5 3 .,4
,shift 3 3,2
,3 3 (,2
,7 3 (,1
,shift 3 -1,2
,{ 3 19,2
,3 -1,4
,3 19,13
,rectangle 3 19,11
,19 3 ),11
,pair 3 3,35
,3 3 ),52
,AnyDie 3 ),1
,5 3 1,26
,1 3 5,22
,2 3 ),13
,rectangle 3 14,1
,3 14,8
,{ 3 0,29
,rectangle 3 1,7
,shift 3 -2,1
,scale 3 (,3
,) 3 (,18
,0 3 .,4
,0 3 7,2
,pair 3 1,8
,Team 3 {,3
,3 {,3
,17 3 ),1
,22 3 ),1
,36 3 ),1
,> 3 (,16
,rectangle 3 8,18
,4 3 },15
,6 3 },7
,rectangle 3 10,1
,Line 3 W,2
,Line 3 E,2
,* 3 (,15
,3 W,2
,3 E,2
,rectangle 3 6,4
,3 6,34
,square 3 ),23
,pair 3 6,7
,6 3 ),3
,pair 3 2,4
,. 3 },12
,pair 3 STRING,15
,0 3 6,3
,27 3 45,1
,3 STRING,37
,3 45,1
,STRING 3 directed:True,1
,3 directed:True,1
,P1 3 ),25
,P2 3 ),22
,pair 3 9,1
,max 3 ),62
,pair 3 7,1
,11 3 ),1
,12 3 ),2
,pair 3 4,8
,pair 3 14,2
,33 3 },2
,66 3 },1
,{ 3 12,8
,3 12,9
,15 3 ),2
,pair 3 81,1
,pair 3 52,1
,3 81,1
,3 52,1
,pair 3 63,1
,1 3 4,6
,3 63,1
,#1 3 ),10
,P4 3 ),6
,7 3 7,3
,9 3 9,3
,28 3 40,3
,11 3 11,3
,13 3 13,3
,3 40,3
,3 13,9
,pair 3 10,4
,pair 3 5,4
,pair 3 39,1
,3 39,1
,Value 3 in:,1
,shift 3 -3,1
,-2 3 .,2
,scale 3 1,1
,. 3 (,7
,. 3 0,1
,4 3 2,6
,pair 3 95,1
,96 3 ),1
,95 3 ),1
,pair 3 96,1
,pair 3 37,2
,pair 3 76,1
,= 3 STRING,6
,3 in:,1
,3 -3,2
,3 95,1
,3 96,1
,3 37,2
,3 76,1
,0 3 ),4
,pair 3 0,9
,-4 3 (,1
,Var 3 ),2
,2 3 4,17
,38 3 82,1
,3 82,1
,32 3 ),1
,18 3 ),3
,pair 3 16,1
,16 3 ),2
,3 16,3
,) 3 1,2
,-6 3 },1
,{ 3 14,5
,15 3 },1
,Section 3 (,1
,pair 3 121,1
,pair 3 -36,1
,3 121,1
,3 -36,1
,Count 3 to:,15
,3 to:,15
,Row 3 ),22
,<Row:size> 3 ),3
,shift 3 2,1
,. 3 16,2
,* 3 STRING,3
,mancalaBoard 3 STRING,3
,14 3 ),2
,<= 3 (,14
,10 3 ),2
,pair 3 8,4
,8 3 ),2
,2 3 store:None,2
,3 store:None,2
,2 3 (,1
,2 3 9,1
,to 3 ),1
,2 3 5,1
,. 3 6,1
,rectangle 3 3,7
,3 3 diagonals:Alternating,4
,. 3 8,1
,STRING 3 3,13
,{ 3 6,19
,{ 3 #1,12
,* 3 #1,4
,3 #1,16
,Connected 3 SidesNoCorners,1
,3 SidesNoCorners,1
,Connected 3 Sides,3
,3 Sides,3
,players 3 ),4
,Hexagon 3 ),1
,hex 3 ),2
,Limping 3 ),2
,Line 3 ),47
,Line 3 byLevel:True,1
,3 byLevel:True,1
,Line 3 if:,2
,3 if:,2
,12 3 },4
,Line 3 N,1
,Line 3 S,1
,3 N,1
,3 S,1
,Line 3 through:,2
,3 through:,2
,square 3 diagonals:Alternating,2
,Line 3 <Players:player1>,1
,3 <Players:player1>,1
,square 3 diagonals:Solid,3
,9 3 4,1
,range 3 15,1
,3 15,4
,Line 3 All,3
,3 All,3
,Shared 3 ),3
,{ 3 2,18
,{ 3 13,6
,Line 3 Mover,1
,3 Mover,1
,5 3 4,6
,Line 3 throughAny:,1
,3 throughAny:,1
,11 3 },9
,shift 3 12,1
,13 3 },3
,exact 3 ),15
,min 3 ),1
,) 3 4,1
,E 3 True,18
,E 3 (,21
,3 True,21
,STRING 3 STRING,3
,W 3 STRING,1
,E 3 ),1
,WNW 3 STRING,3
,ESE 3 ),3
,6 3 1,1
,S 3 True,2
,S 3 (,2
,P3 3 ),8
,pair 3 71,1
,3 71,1
,ENE 3 STRING,1
,WSW 3 ),1
,WSW 3 STRING,1
,ENE 3 ),1
,ESE 3 STRING,1
,WNW 3 ),1
,or 3 of,1
,3 of,1
,. 3 .,1
,W 3 True,1
,W 3 (,1
,Player 3 has,1
,3 has,1
,step 3 .,2
,Row 3 &,2
,3 &,2
,89 3 ),1
,Row 3 (,1
,. 3 -3,1
,. 3 -1,2
,. 3 -0,1
,3 -0,1
,rectangle 3 15,1
,) 3 2,1
,0 3 4,1
,Cell 3 ),1
,pair 3 85,1
,3 85,1
,Damage 3 =,1
,pair 3 100,2
,STRING 3 5,1
,3 =,1
,3 100,2
,T33336 3 ),1
,Cost 3 Edge,93
,3 Edge,93
,25 3 },4
,Cost 3 Vertex,26
,3 Vertex,26
,5 3 5,2
,2 3 2,2
,4 3 4,1
,- 3 (,1
,hex 3 4,1
,{ 3 22,1
,3 22,1
,#2 3 ),1
,{ 3 15,2
,48 3 },2
,72 3 },1
,hint 3 3,1
,7 3 ),2
,42 3 ),1
,54 3 ),1
,tri 3 ),6
,0 3 1,1
,0 3 5,1
,1 3 0,1
,21 3 },2
,} 3 ),149
,96 3 },1
,117 3 },1
,40 3 },1
,65 3 },3
,163 3 },1
,273 3 },1
,223 3 },1
,308 3 },1
,240 3 },1
,255 3 },1
,hint 3 0,1
,20 3 ),1
,23 3 ),1
,Sum 3 ),1
,24 3 ),1
,29 3 ),1
,39 3 ),1
,41 3 ),1
,56 3 ),1
,70 3 ),1
,29 3 },1
,43 3 },1
,73 3 },1
,34 3 },1
,17 3 },1
,57 3 },1
,16 3 },1
,20 3 },1
,42 3 },1
,28 3 },1
,37 3 },1
,60 3 },1
,70 3 },1
,79 3 },1
,62 3 23,1
,3 23,1
,2 3 4>,1
,3 4>,1
,pair 3 88,1
,pair 3 17,1
,3 88,1
,3 17,1
,<4 3 2,1
Game,Game modelled,1
4,0 4 (,7
,4 (,166
,{ 4 4,32
,4 4 },32
,{ 4 0,31
,0 4 },45
,4 4,83
,4 },411
,4 0,49
,. 4 -1,1
,{ 4 7,22
,4 -1,1
,4 7,29
,5 4 .,3
,4 .,18
,2 4 },47
,{ 4 2,31
,4 2,68
,5 4 ),8
,{ 4 5,51
,. 4 1,4
,4 ),525
,4 5,91
,4 1,28
,1 4 12,1
,. 4 },18
,4 12,32
,-3 4 },1
,{ 4 -3,1
,11 4 },5
,{ 4 11,6
,4 -3,2
,4 11,7
,wedge 4 ),7
,wedge 4 3,1
,) 4 ),106
,4 3,39
,17 4 },2
,20 4 },1
,{ 4 8,32
,4 8,44
,{ 4 9,29
,{ 4 10,21
,1 4 },47
,4 9,33
,4 10,25
,square 4 ),26
,STRING 4 (,1
,15 4 },3
,{ 4 6,39
,4 6,91
,{ 4 .,6
,25 4 },1
,5 4 },6
,3 4 },58
,3 4 ),15
,players 4 ),26
,{ 4 76,1
,4 76,1
,STRING 4 count:3,7
,4 count:3,7
,pair 4 4,32
,4 4 ),33
,STRING 4 count:15,1
,STRING 4 count:14,1
,4 count:15,1
,4 count:14,1
,2 4 6,31
,6 4 2,22
,) 4 (,19
,1 4 ),27
,5 4 (,1
,= 4 (,84
,shift 4 4,5
,4 4 (,5
,0 4 8,4
,0 4 ),7
,pair 4 5,4
,shift 4 0,5
,shift 4 .,4
,{ 4 1,14
,{ 4 3,14
,1 4 5,3
,STRING 4 ),37
,1 4 6,7
,<= 4 (,20
,{ 4 13,5
,4 13,8
,pair 4 1,5
,2 4 ),7
,pair 4 2,4
,rectangle 4 12,3
,pair 4 12,1
,4 4 4,12
,8 4 0,5
,pair 4 STRING,14
,4 STRING,74
,STRING 4 directed:True,1
,pair 4 8,3
,4 directed:True,1
,P1 4 ),21
,P2 4 ),20
,pair 4 80,1
,4 80,1
,pair 4 7,3
,9 4 ),15
,10 4 ),14
,7 4 (,1
,rectangle 4 1,2
,pair 4 10,1
,33 4 },2
,66 4 },1
,{ 4 12,24
,pair 4 6,8
,pair 4 26,1
,4 26,1
,33 4 .,1
,88 4 .,1
,pair 4 87,1
,3 4 6,4
,4 87,1
,P5 4 ),3
,10 4 10,3
,12 4 12,3
,14 4 14,3
,4 14,9
,square 4 pyramidal:True,1
,4 pyramidal:True,1
,{ 4 44,1
,STRING 4 count:2,3
,4 44,1
,4 count:2,3
,pair 4 36,2
,4 36,2
,Value 4 in:,1
,-2 4 .,1
,shift 4 -2,1
,shift 4 -3,1
,. 4 (,2
,. 4 -5,1
,5 4 3,5
,pair 4 94,1
,95 4 ),1
,94 4 ),1
,pair 4 95,1
,pair 4 38,2
,= 4 STRING,6
,4 in:,1
,4 -2,2
,4 -5,1
,4 94,1
,4 95,1
,4 38,2
,shift 4 5,1
,pair 4 0,8
,6 4 },27
,pair 4 3,9
,pair 4 17,1
,17 4 ),3
,4 17,2
,{ 4 15,5
,{ 4 14,6
,P3 4 ),3
,P4 4 ),9
,4 15,6
,Section 4 (,1
,pair 4 73,1
,4 73,1
,mancalaBoard 4 STRING,51
,Count 4 to:,59
,4 to:,59
,{ 4 },7
,* 4 (,5
,mancalaBoard 4 (,1
,* 4 STRING,1
,8 4 },23
,* 4 <Row:size>,3
,4 <Row:size>,3
,rectangle 4 3,3
,shift 4 2,1
,Row 4 ),16
,2 4 5,3
,pair 4 13,2
,13 4 ),1
,pair 4 9,1
,> 4 (,16
,3 4 5,24
,2 4 {,2
,4 {,4
,#1 4 ),9
,. 4 11,1
,7 4 ),15
,) 4 3,4
,1 4 19,1
,. 4 7,1
,4 19,4
,2 4 store:None,2
,4 store:None,2
,hex 4 ),2
,* 4 #1,2
,4 #1,2
,Limping 4 ),4
,< 4 (,1
,Line 4 ),5
,Column 4 ),1
,Line 4 byLevel:True,2
,Line 4 through:,1
,4 byLevel:True,2
,4 through:,1
,Line 4 Orthogonal,7
,4 Orthogonal,7
,Line 4 All,9
,4 All,9
,14 4 },5
,10 4 },21
,7 4 },7
,Shared 4 ),3
,Line 4 what:,4
,4 what:,4
,scale 4 (,1
,. 4 8,2
,16 4 ),1
,) 4 1,1
,rectangle 4 8,2
,pair 4 65,1
,4 65,1
,E 4 STRING,1
,W 4 True,1
,W 4 STRING,1
,4 True,1
,Row 4 &,2
,4 &,2
,max 4 ),8
,90 4 ),1
,Row 4 (,1
,. 4 9,1
,exact 4 ),4
,2 4 7,1
,rectangle 4 <Board:size>,6
,4 <Board:size>,6
,rectangle 4 2,1
,6 4 ),2
,5 4 4,1
,4 4 1,1
,rectangle 4 22,1
,4 22,1
,. 4 -2,1
,rectangle 4 13,1
,tri 4 ),1
,3 4 9,1
,Cell 4 ),1
,rectangle 4 20,1
,20 4 ),1
,4 20,1
,pair 4 97,1
,4 97,1
,Damage 4 =,1
,11 4 ),1
,12 4 ),1
,23 4 ),2
,24 4 ),2
,25 4 ),1
,26 4 ),1
,pair 4 100,2
,21 4 ),3
,22 4 ),2
,45 4 ),2
,46 4 ),1
,47 4 ),1
,48 4 ),1
,49 4 ),1
,50 4 ),1
,51 4 ),1
,52 4 ),1
,8 4 ),13
,< 4 >,3
,Team 4 {,2
,4 =,1
,4 100,2
,4 >,3
,12 4 },13
,13 4 },3
,{ 4 19,3
,{ 4 17,1
,{ 4 18,2
,Cost 4 Edge,7
,4 18,3
,4 Edge,7
,Star 4 ),1
,2 4 2,6
,6 4 6,2
,) 4 5,1
,3 4 3,2
,5 4 5,1
,0 4 5,2
,6 4 7,1
,3 4 15,1
,rectangle 4 4,1
,9 4 },5
,#2 4 ),1
,80 4 },1
,40 4 ),1
,89 4 ),1
,98 4 ),1
,99 4 ),1
,18 4 },1
,1 4 2,1
,2 4 1,1
,} 4 ),15
,0 4 9,1
,1 4 8,1
,101 4 },1
,36 4 },1
,132 4 },1
,160 4 },1
,78 4 },1
,83 4 },1
,357 4 },1
,194 4 },1
,368 4 },1
,230 4 },1
,242 4 },1
,330 4 },1
,247 4 },1
,341 4 },1
,263 4 },1
,hint 4 2,1
,35 4 ),1
,19 4 },1
,51 4 },1
,76 4 },2
,40 4 },1
,31 4 },1
,45 4 },1
,55 4 },1
,35 4 },1
,43 4 },1
,24 4 },1
,53 4 },1
,49 4 },1
,56 4 },1
,3 4 2,1
,0 4 .,2
,23 4 5,1
,3 4 5>,1
,4 5>,1
,pair 4 81,1
,pair 4 18,1
,4 81,1
,rectangle 4 7,1
,<5 4 3,1
,Mover 4 ),4
size,( size Stack,143
,size Stack,143
,( size Array,32
,size Array,32
,( size Group,15
,size Group,15
,( size Territory,16
,size Territory,16
,the size of,1
,size of,1
triple,for triple and,1
,triple and,1
5,square 5 diagonals:Alternating,33
,5 diagonals:Alternating,34
,STRING 5 5,19
,5 5 ),28
,{ 5 5,17
,5 5 5,4
,5 5 },17
,5 5,55
,5 ),426
,5 },337
,square 5 ),32
,. 5 (,68
,5 (,113
,. 5 4,6
,5 4,25
,rectangle 5 5,4
,5 5 diagonals:Alternating,1
,5 5 diagonals:Radiating,1
,5 diagonals:Radiating,1
,wedge 5 4,2
,4 5 },47
,10 5 },16
,wedge 5 8,1
,5 8,28
,shift 5 3,6
,5 3,64
,{ 5 15,6
,5 15,10
,wedge 5 ),1
,3 5 ),11
,rectangle 5 1,17
,16 5 },2
,5 1,46
,. 5 -0,1
,. 5 0,49
,11 5 },3
,{ 5 8,21
,5 -0,1
,5 0,72
,{ 5 -2,2
,5 -2,3
,Star 5 ),5
,{ 5 9,12
,{ 5 10,25
,{ 5 11,19
,1 5 },28
,{ 5 6,44
,5 9,19
,5 10,34
,5 11,23
,5 6,115
,{ 5 3,11
,wedge 5 6,1
,{ 5 },6
,2 5 },26
,wedge 5 3,1
,{ 5 0,14
,13 5 },5
,97 5 },1
,3 5 },22
,{ 5 7,23
,5 7,95
,9 5 ),1
,Column 5 ),2
,pair 5 19,2
,5 19,3
,. 5 3,4
,. 5 -3,1
,{ 5 .,7
,. 5 1,3
,. 5 },64
,5 -3,1
,5 .,54
,7 5 .,23
,. 5 7,42
,pair 5 25,7
,5 25,10
,. 5 6,15
,6 5 .,8
,STRING 5 count:15,1
,STRING 5 count:14,1
,5 count:15,1
,5 count:14,1
,2 5 6,2
,7 5 3,23
,3 5 7,22
,--COMMA-- 5 moves,1
,5 moves,1
,) 5 (,7
,1 5 ),22
,25 5 .,3
,. 5 12,7
,. 5 10,6
,shift 5 .,3
,shift 5 13,1
,{ 5 17,2
,5 12,21
,5 13,18
,5 17,3
,0 5 (,5
,shift 5 0,3
,STRING 5 ),11
,= 5 (,19
,. 5 18,1
,18 5 .,1
,5 18,3
,13 5 1,1
,4 5 ),5
,9 5 (,1
,shift 5 5,2
,5 5 (,2
,1 5 6,2
,) 5 ),102
,shift 5 10,1
,10 5 16,1
,5 16,1
,. 5 2,3
,37 5 ),3
,5 2,18
,STRING 5 count:7,1
,5 count:7,1
,0 5 ),8
,{ 5 18,1
,0 5 },34
,pair 5 2,5
,2 5 ),4
,{ 5 1,11
,9 5 1,6
,P1 5 ),20
,P2 5 ),17
,pair 5 6,8
,7 5 ),1
,8 5 ),2
,33 5 },1
,66 5 },1
,{ 5 12,10
,{ 5 13,9
,P3 5 ),3
,P4 5 ),3
,pair 5 5,7
,pair 5 111,1
,5 111,1
,1 5 9,4
,P6 5 ),3
,11 5 11,3
,13 5 13,3
,15 5 15,3
,Value 5 in:,1
,rectangle 5 2,3
,6 5 4,5
,pair 5 93,1
,94 5 ),1
,93 5 ),1
,pair 5 94,1
,pair 5 38,1
,= 5 STRING,6
,5 in:,1
,5 93,1
,5 94,1
,5 38,1
,5 STRING,12
,4 5 (,1
,. 5 8,2
,pair 5 1,7
,pair 5 18,1
,18 5 ),2
,12 5 ),2
,6 5 },10
,{ 5 14,5
,5 14,6
,) 5 6,12
,Section 5 (,1
,pair 5 37,1
,pair 5 0,5
,5 37,1
,Count 5 to:,20
,5 to:,20
,2 5 13,1
,4 5 11,1
,15 5 .,1
,24 5 .,1
,4 5 3,7
,3 5 6,1
,pair 5 12,1
,pair 5 8,3
,2 5 store:None,7
,5 store:None,7
,2 5 {,1
,5 {,1
,4 5 6,20
,Count 5 at:,2
,5 at:,2
,#1 5 ),8
,6 5 ),17
,4 5 7,3
,<= 5 (,6
,> 5 (,1
,3 5 17,1
,2 5 23,1
,5 23,1
,hex 5 ),16
,. 5 .,1
,2 5 8,1
,* 5 #1,2
,5 #1,2
,Hexagon 5 ),1
,Line 5 ),5
,Row 5 ),19
,Line 5 Orthogonal,1
,5 Orthogonal,1
,rectangle 5 6,4
,Line 5 All,9
,5 All,9
,{ 5 4,3
,17 5 },2
,8 5 },8
,Line 5 throughAny:,4
,5 throughAny:,4
,Shared 5 ),3
,Line 5 whats:,5
,5 whats:,5
,square 5 pyramidal:True,1
,5 pyramidal:True,1
,. 5 5,2
,5 5 .,2
,STRING 5 9,1
,rectangle 5 4,1
,square 5 diagonals:Solid,3
,5 diagonals:Solid,3
,37 5 6,1
,6 5 7,1
,35 5 .,1
,65 5 .,1
,rectangle 5 3,1
,Mover 5 ),1
,pair 5 STRING,6
,P5 5 ),2
,pair 5 72,1
,5 72,1
,. 5 85,1
,5 85,1
,E 5 True,1
,5 True,1
,max 5 ),21
,Row 5 &,2
,5 &,2
,pair 5 181,1
,Row 5 (,1
,5 181,1
,0 5 7,1
,rectangle 5 12,1
,4 5 14,1
,pair 5 4,5
,tri 5 ),1
,4 5 0,1
,. 5 15,1
,pair 5 86,1
,5 86,1
,Damage 5 =,1
,17 5 ),1
,19 5 ),1
,20 5 ),2
,21 5 ),1
,22 5 ),2
,27 5 ),1
,28 5 ),2
,38 5 ),3
,pair 5 100,2
,33 5 ),1
,34 5 ),1
,35 5 ),1
,36 5 ),1
,39 5 ),1
,40 5 ),1
,41 5 ),1
,42 5 ),1
,43 5 ),1
,44 5 ),1
,53 5 ),1
,54 5 ),1
,55 5 ),1
,56 5 ),2
,73 5 ),1
,74 5 ),1
,75 5 ),1
,76 5 ),1
,pair 5 3,5
,Rectangle 5 9,1
,5 =,1
,5 100,2
,Limping 5 ),1
,7 5 },9
,{ 5 25,3
,. 5 13,4
,{ 5 2,7
,9 5 },4
,. 5 -,1
,5 -,1
,3 5 3,4
,7 5 7,2
,T33434 5 ),2
,4 5 4,2
,6 5 6,1
,T3636 5 ),1
,4 5 73,1
,5 73,1
,hex 5 6,1
,exact 5 ),2
,Limping 5 6,1
,. 5 19,1
,rectangle 5 10,1
,10 5 ),1
,12 5 },3
,0 5 6,1
,#2 5 ),1
,* 5 (,1
,Count 5 at:2,1
,5 at:2,1
,32 5 },1
,hint 5 3,2
,30 5 ),1
,2 5 7,1
,3 5 45,1
,7 5 45,1
,53 5 },1
,36 5 },1
,5 45,2
,1 5 10,1
,2 5 9,1
,88 5 },1
,29 5 },1
,121 5 },1
,44 5 },1
,59 5 },2
,352 5 },1
,157 5 },1
,86 5 },1
,294 5 },1
,216 5 },1
,250 5 },1
,335 5 },1
,hint 5 1,1
,46 5 },2
,56 5 },1
,41 5 },1
,28 5 },1
,39 5 },2
,4 5 12,2
,34 5 },1
,23 5 },1
,47 5 },1
,64 5 },1
,69 5 },1
,0 5 .,2
,12 5 6,1
,. 5 -2,1
,pair 5 89,1
,5 89,1
,<6 5 4,1
,Next 5 ),1
left,stone left --COMMA--,2
,diagonally left --COMMA--,2
,left --COMMA--,4
,four left inner,2
,left inner,2
,slightly left or,1
,left or,1
,Bottom left 9x9,1
,Top left 9x9,1
,left 9x9,2
6,{ 6 8,30
,STRING 6 count:8,1
,6 8,65
,6 count:8,1
,. 6 (,3
,{ 6 9,15
,6 (,130
,6 9,20
,2 6 (,20
,) 6 ),29
,6 ),439
,11 6 },6
,{ 6 1,7
,6 },366
,6 1,25
,0 6 },45
,1 6 },31
,{ 6 2,18
,6 2,31
,{ 6 10,19
,2 6 },27
,5 6 },50
,{ 6 11,20
,{ 6 7,58
,6 10,28
,6 11,25
,6 7,90
,0 6 (,32
,5 6 ),27
,{ 6 16,4
,6 16,7
,< 6 (,1
,= 6 (,22
,4 6 },48
,{ 6 0,29
,6 0,37
,75 6 },1
,P1 6 ),16
,{ 6 12,24
,1 6 ),89
,6 12,32
,2 6 ),11
,0 6 ),15
,pair 6 12,4
,7 6 (,18
,5 6 .,12
,. 6 5,10
,6 .,32
,6 5,42
,AnyDie 6 ),2
,4 6 8,26
,P2 6 ),18
,8 6 4,19
,6 4,54
,{ 6 .,16
,) 6 (,4
,rectangle 6 1,15
,11 6 (,3
,{ 6 13,13
,6 13,16
,STRING 6 count:2,1
,6 count:2,1
,18 6 2,1
,shift 6 .,1
,rectangle 6 2,2
,5 6 (,1
,. 6 },9
,{ 6 3,7
,6 3,11
,STRING 6 count:3,2
,6 count:3,2
,STRING 6 count:5,3
,6 count:5,3
,{ 6 25,3
,6 25,3
,3 6 ),11
,pair 6 2,2
,pair 6 3,3
,-7 6 (,1
,10 6 2,6
,3 6 21,1
,6 21,1
,square 6 ),15
,pair 6 6,9
,6 6 ),10
,6 6,38
,13 6 },6
,{ 6 14,5
,4 6 ),8
,STRING 6 ),38
,6 14,9
,pair 6 30,2
,6 30,2
,pair 6 135,1
,3 6 13,1
,6 135,1
,2 6 10,5
,12 6 0,3
,0 6 12,3
,P7 6 ),2
,14 6 14,3
,16 6 16,3
,Value 6 in:,1
,8 6 5,1
,pair 6 92,1
,93 6 ),1
,92 6 ),1
,pair 6 93,1
,pair 6 38,1
,= 6 STRING,6
,6 in:,1
,6 92,1
,6 93,1
,6 38,1
,6 STRING,13
,pair 6 1,2
,1 6 4,2
,Var 6 ),1
,. 6 -6,1
,6 -6,1
,0 6 42,1
,6 42,1
,{ 6 18,3
,2 6 14,1
,STRING 6 count:4,2
,6 18,3
,6 count:4,2
,. 6 4,2
,. 6 6,2
,6 6 },21
,. 6 9,3
,. 6 10,2
,. 6 11,2
,Section 6 (,1
,pair 6 13,2
,pair 6 -72,1
,6 -72,1
,Count 6 to:,16
,6 to:,16
,12 6 },11
,mancalaBoard 6 STRING,1
,{ 6 4,23
,5 6 4,1
,11 6 ),1
,pair 6 11,1
,pair 6 7,1
,7 6 ),3
,2 6 store:None,21
,6 store:None,21
,5 6 9,1
,#1 6 ),9
,> 6 (,8
,<= 6 (,12
,pair 6 5,17
,from 6 ),1
,2 6 <Players:track>,1
,6 <Players:track>,1
,2 6 {,2
,5 6 12,1
,6 {,2
,4 6 20,1
,3 6 27,1
,5 6 8,1
,6 20,5
,6 27,1
,5 6 7,16
,hex 6 ),5
,3 6 7,1
,rectangle 6 7,4
,3 6 },19
,Row 6 ),57
,Column 6 ),1
,Line 6 All,1
,6 All,1
,. 6 0,3
,} 6 ),17
,. 6 -0,1
,16 6 },2
,{ 6 17,1
,15 6 },1
,9 6 },6
,6 -0,1
,6 17,2
,Shared 6 ),3
,8 6 7,6
,rectangle 6 8,3
,17 6 .,1
,7 6 diagonals:Solid,1
,6 diagonals:Solid,1
,{ 6 6,17
,Star 6 ),2
,1 6 6,2
,6 6 6,6
,5 6 11,1
,-1 6 (,1
,1 6 (,1
,1 6 5,1
,22 6 },1
,10 6 3,1
,pair 6 STRING,6
,P6 6 ),2
,pair 6 66,1
,6 66,1
,length 6 and,1
,the 6 adjacent,1
,6 and,1
,6 adjacent,1
,Row 6 &,2
,6 &,2
,pair 6 182,1
,Row 6 (,1
,6 182,1
,P3 6 ),1
,P4 6 ),1
,12 6 ),2
,= 6 #1,1
,6 #1,1
,pair 6 <High:value>,1
,6 <High:value>,1
,. 6 2,1
,pair 6 4,2
,4 6 5,1
,7 6 5,3
,rectangle 6 9,1
,9 6 ),3
,tri 6 ),2
,pair 6 <ThrowSix:value>,1
,6 <ThrowSix:value>,1
,7 6 },10
,pair 6 98,1
,6 98,1
,Damage 6 =,1
,pair 6 8,2
,13 6 ),2
,14 6 ),1
,31 6 ),1
,32 6 ),2
,33 6 ),1
,34 6 ),1
,35 6 ),1
,36 6 ),1
,pair 6 100,2
,pair 6 0,2
,25 6 ),1
,26 6 ),1
,27 6 ),1
,28 6 ),1
,61 6 ),1
,62 6 ),1
,63 6 ),1
,64 6 ),1
,65 6 ),1
,66 6 ),1
,67 6 ),1
,68 6 ),1
,69 6 ),1
,70 6 ),1
,71 6 ),1
,72 6 ),1
,pair 6 10,1
,8 6 ),1
,6 =,1
,6 100,2
,Limping 6 ),1
,Triangle 6 ),1
,14 6 },4
,8 6 },22
,10 6 },17
,{ 6 20,3
,{ 6 5,6
,{ 6 15,4
,6 15,4
,4 6 4,5
,8 6 8,2
,5 6 5,2
,7 6 7,1
,8 6 10,1
,17 6 },1
,exact 6 ),1
,rectangle 6 6,1
,52 6 },1
,56 6 },2
,66 6 },2
,16 6 ),1
,23 6 ),1
,7 6 8,1
,4 6 17,1
,4 6 7,1
,17 6 7,1
,24 6 },1
,32 6 },1
,41 6 },1
,2 6 11,1
,shift 6 6,1
,6 6 (,1
,109 6 },1
,43 6 },1
,125 6 },1
,171 6 },1
,186 6 },1
,176 6 },1
,277 6 },1
,283 6 },1
,343 6 },1
,{ 6 },4
,hint 6 2,1
,25 6 },1
,35 6 },1
,68 6 },2
,74 6 },1
,42 6 },1
,77 6 },1
,0 6 .,2
,5 6 19,1
,6 19,1
,5 6 1,1
,15 6 7,1
,pair 6 82,1
,19 6 ),1
,pair 6 20,1
,6 82,1
,<7 6 5,1
,Mover 6 ),2
7,3 7 diagonals:Alternating,8
,rectangle 7 3,10
,7 diagonals:Alternating,8
,7 3,30
,3 7 },22
,4 7 },22
,7 },281
,) 7 ),8
,0 7 },18
,7 ),172
,3 7 diagonals:Solid,1
,7 diagonals:Solid,5
,1 7 ),4
,15 7 },3
,{ 7 18,4
,{ 7 17,5
,{ 7 16,5
,7 18,4
,7 17,8
,7 16,5
,2 7 },41
,{ 7 3,13
,{ 7 11,13
,6 7 },55
,{ 7 12,22
,{ 7 8,46
,7 11,20
,7 12,25
,7 8,83
,13 7 },2
,47 7 },1
,95 7 },1
,5 7 },21
,{ 7 9,17
,7 9,42
,pair 7 9,1
,shift 7 0,24
,shift 7 3,1
,shift 7 -1,1
,P2 7 ),4
,7 0,37
,7 -1,1
,. 7 5,23
,5 7 .,40
,{ 7 .,25
,STRING 7 count:5,4
,7 5,59
,7 .,72
,7 count:5,4
,shift 7 6,18
,7 6,37
,- 7 (,4
,7 (,45
,9 7 5,23
,5 7 9,21
,STRING 7 count:13,1
,7 count:13,1
,shift 7 10,3
,7 10,15
,. 7 },9
,0 7 (,3
,P1 7 ),10
,shift 7 .,4
,3 7 23,1
,7 23,1
,2 7 (,2
,STRING 7 count:8,1
,7 count:8,1
,STRING 7 count:1,1
,7 count:1,1
,STRING 7 count:4,1
,7 count:4,1
,= 7 (,7
,16 7 },3
,1 7 },15
,{ 7 13,18
,7 13,22
,-7 7 (,1
,-6 7 (,1
,11 7 3,5
,square 7 ),20
,rectangle 7 11,1
,9 7 ),1
,3 7 ),2
,4 7 ),4
,pair 7 5,1
,shift 7 4,1
,7 4,23
,<rectangle 7 8>,1
,7 8>,1
,{ 7 0,10
,{ 7 2,3
,11 7 },3
,7 2,7
,0 7 ),3
,pair 7 12,1
,{ 7 25,1
,pair 7 14,2
,7 25,1
,7 14,7
,pair 7 159,1
,7 159,1
,3 7 11,5
,13 7 1,3
,1 7 13,4
,P8 7 ),2
,15 7 15,3
,17 7 17,3
,7 1,18
,7 15,11
,. 7 1,1
,9 7 10,1
,pair 7 91,1
,90 7 ),1
,91 7 ),1
,pair 7 90,2
,pair 7 73,2
,STRING 7 ),23
,7 91,1
,7 90,2
,7 73,2
,{ 7 19,4
,7 19,6
,pair 7 20,1
,20 7 ),1
,7 20,1
,-6 7 },1
,-5 7 },1
,{ 7 14,4
,14 7 },2
,Section 7 (,1
,players 7 ),3
,pair 7 1,2
,pair 7 10,2
,. 7 15,2
,20 7 .,1
,32 7 .,1
,5 7 8,5
,9 7 },4
,{ 7 },2
,10 7 ),1
,6 7 ),5
,pair 7 6,2
,Count 7 to:,10
,7 to:,10
,* 7 (,1
,2 7 {,1
,7 {,2
,pair 7 4,15
,> 7 (,7
,8 7 },7
,<= 7 (,15
,2 7 store:None,2
,7 store:None,2
,5 7 22,1
,4 7 31,1
,6 7 9,2
,7 22,3
,7 31,1
,#1 7 ),5
,hex 7 ),5
,6 7 8,23
,Diamond 7 ),1
,Hexagon 7 ),2
,Row 7 ),17
,rectangle 7 6,2
,Column 7 ),4
,1 7 8,1
,Line 7 ),1
,} 7 {,1
,17 7 },1
,{ 7 24,1
,7 24,1
,{ 7 4,6
,Rectangle 7 14,1
,Shared 7 ),3
,10 7 },11
,Line 7 Orthogonal,1
,7 Orthogonal,1
,{ 7 15,6
,2 7 diagonals:Solid,4
,8 7 ),3
,rectangle 7 8,2
,rectangle 7 2,1
,repeat 7 1,2
,- 7 1,2
,{ 7 10,8
,5 7 12,2
,pair 7 STRING,6
,P7 7 ),2
,7 STRING,6
,pair 7 8,4
,Row 7 &,1
,7 &,1
,max 7 ),1
,pair 7 419,1
,103 7 ),1
,Row 7 (,1
,7 419,1
,rectangle 7 7,2
,7 7 ),2
,7 7,9
,4 7 8,1
,pair 7 0,3
,) 7 (,1
,. 7 19,2
,. 7 28,1
,7 28,1
,6 7 7,1
,7 7 2,1
,2 7 6,1
,. 7 (,1
,tri 7 ),3
,{ 7 6,9
,pair 7 87,1
,7 87,1
,) 7 =,1
,15 7 ),1
,16 7 ),1
,29 7 ),2
,30 7 ),2
,pair 7 100,2
,31 7 ),1
,32 7 ),1
,57 7 ),1
,58 7 ),1
,59 7 ),1
,60 7 ),1
,pair 7 2,1
,rectangle 7 9,1
,7 =,1
,7 100,2
,Dominoes 7 ),1
,Triangle 7 ),1
,Star 7 ),2
,{ 7 5,7
,{ 7 7,6
,7 7 },6
,12 7 },6
,{ 7 1,6
,{ 7 26,3
,26 7 },3
,7 26,3
,{ 7 21,1
,{ 7 22,2
,7 21,2
,5 7 5,4
,6 7 6,2
,4 7 4,1
,hex 7 8,1
,8 7 10,1
,6 7 11,1
,Count 7 at:3,1
,7 at:3,1
,20 7 },1
,34 7 },1
,40 7 },1
,hint 7 3,1
,27 7 ),1
,5 7 6,1
,6 7 5,1
,} 7 ),11
,92 7 },1
,98 7 },1
,23 7 },1
,131 7 },1
,74 7 },1
,356 7 },1
,264 7 },1
,304 7 },1
,219 7 },1
,307 7 },1
,328 7 },1
,hint 7 1,1
,hint 7 2,1
,28 7 },1
,50 7 },2
,42 7 },1
,55 7 },1
,73 7 },1
,78 7 },1
,rectangle 7 1,1
,0 7 .,1
,22 7 ),1
,pair 7 21,1
,<8 7 6,1
,8 7 6,1
<suicide>,<capture> <suicide> <influence>,1
,<suicide> <influence>,1
8,6 8 16,1
,STRING 8 count:8,1
,8 16,11
,8 count:8,1
,. 8 2,1
,3 8 },24
,1 8 },22
,8 2,28
,8 },342
,scale 8 2,3
,5 8 ),4
,0 8 },24
,8 ),303
,6 8 },26
,square 8 ),105
,13 8 },3
,{ 8 3,7
,8 3,9
,5 8 },22
,4 8 },32
,7 8 },45
,{ 8 13,32
,8 13,38
,) 8 ),15
,{ 8 11,23
,8 11,24
,2 8 (,2
,8 (,34
,22 8 },1
,{ 8 10,23
,{ 8 9,39
,8 10,53
,8 9,54
,1 8 (,1
,0 8 (,12
,shift 8 0,12
,{ 8 8,21
,8 8 },23
,11 8 },16
,{ 8 28,12
,8 0,42
,8 8,30
,8 28,13
,6 8 10,26
,10 8 6,19
,8 6,52
,{ 8 1,10
,8 1,15
,4 8 28,1
,rectangle 8 2,3
,3 8 ),22
,. 8 },10
,) 8 (,3
,2 8 12,1
,0 8 ),5
,8 12,17
,12 8 4,6
,8 4,41
,4 8 ),5
,P1 8 ),3
,P2 8 ),4
,1 8 ),8
,2 8 ),4
,pair 8 5,2
,8 5,10
,rectangle 8 1,2
,{ 8 0,21
,33 8 },1
,66 8 },1
,{ 8 12,9
,. 8 -8,1
,. 8 8,1
,8 8 .,1
,39 8 .,1
,{ 8 71,1
,17 8 71,1
,pair 8 183,1
,8 -8,1
,8 .,11
,8 71,2
,8 183,1
,4 8 12,4
,14 8 2,3
,2 8 14,4
,16 8 0,3
,0 8 16,3
,P9 8 ),1
,18 8 18,3
,8 14,14
,8 18,7
,pair 8 97,1
,92 8 ),1
,97 8 ),1
,pair 8 92,1
,pair 8 72,1
,pair 8 60,1
,STRING 8 ),24
,8 97,1
,8 92,1
,8 72,1
,8 60,1
,5 8 (,1
,{ 8 15,3
,{ 8 20,1
,8 15,9
,8 20,1
,pair 8 21,1
,21 8 ),2
,8 21,1
,-6 8 },1
,-5 8 },1
,{ 8 14,6
,15 8 },1
,14 8 },6
,Section 8 (,1
,15 8 1,1
,Count 8 to:,8
,16 8 23,1
,8 to:,8
,8 23,6
,16 8 },5
,{ 8 .,7
,. 8 18,1
,. 8 25,1
,8 25,2
,6 8 9,1
,7 8 6,7
,10 8 },14
,9 8 ),3
,pair 8 9,1
,< 8 (,1
,7 8 11,1
,pair 8 3,2
,7 8 10,4
,>= 8 (,1
,= 8 (,8
,9 8 7,1
,8 7,12
,to 8 ),1
,2 8 store:None,1
,8 store:None,1
,6 8 26,1
,5 8 35,1
,8 26,1
,8 35,3
,> 8 (,2
,<= 8 (,1
,Row 8 ),14
,Column 8 ),4
,7 8 9,10
,} 8 {,1
,8 {,1
,{ 8 5,8
,Shared 8 ),2
,1 8 7,1
,18 8 },1
,. 8 15,2
,7 8 0,2
,rectangle 8 12,2
,rectangle 8 7,1
,6 8 ),5
,7 8 ),7
,rectangle 8 9,2
,1 8 8,1
,8 8 8,1
,. 8 14,1
,2 8 },24
,4 8 .,2
,{ 8 16,7
,12 8 },1
,{ 8 4,22
,= 8 args,2
,Rectangle 8 13,1
,8 args,2
,rectangle 8 14,3
,14 8 ),3
,rectangle 8 23,4
,23 8 ),4
,pair 8 STRING,6
,P8 8 ),2
,8 STRING,6
,pair 8 67,1
,pair 8 7,2
,8 67,1
,rectangle 8 15,1
,Row 8 &,1
,8 &,1
,pair 8 420,1
,104 8 ),1
,Row 8 (,1
,8 420,1
,7 8 12,1
,pair 8 13,1
,. 8 35,1
,. 8 31,1
,8 31,1
,9 8 8,1
,8 8 13,1
,13 8 9,1
,pair 8 8,3
,8 8 ),4
,12 8 ),2
,tri 8 ),3
,0 8 8,1
,pair 8 99,1
,8 99,1
,= 8 --COMMA--,2
,Multiplier 8 =,1
,10 8 ),3
,39 8 ),1
,40 8 ),1
,41 8 ),1
,42 8 ),1
,43 8 ),1
,pair 8 100,2
,pair 8 0,2
,11 8 ),1
,13 8 ),1
,15 8 ),1
,16 8 ),1
,17 8 ),1
,18 8 ),1
,19 8 ),1
,20 8 ),1
,77 8 ),1
,78 8 ),1
,79 8 ),1
,80 8 ),1
,81 8 ),1
,pair 8 4,13
,pair 8 6,1
,pair 8 2,1
,. 8 ),9
,hex 8 ),1
,0 8 34,1
,Diamond 8 ),1
,rectangle 8 13,2
,8 --COMMA--,2
,8 =,1
,8 100,2
,8 34,1
,Triangle 8 ),1
,{ 8 2,17
,{ 8 7,5
,{ 8 6,20
,17 8 },4
,{ 8 54,1
,8 54,1
,{ 8 17,3
,8 17,4
,Star 8 ),2
,9 8 },1
,{ 8 23,1
,6 8 6,5
,7 8 7,1
,rectangle 8 8,1
,{ 8 18,2
,{ 8 19,1
,8 19,1
,24 8 },2
,30 8 },1
,46 8 },1
,34 8 ),1
,37 8 ),1
,45 8 ),1
,46 8 ),1
,7 8 15,3
,7 8 18,1
,15 8 38,1
,26 8 },3
,29 8 },1
,8 38,1
,} 8 ),5
,3 8 13,1
,21 8 },1
,37 8 },1
,51 8 },1
,135 8 },1
,68 8 },1
,364 8 },1
,189 8 },1
,205 8 },1
,220 8 },1
,234 8 },1
,322 8 },1
,338 8 },1
,259 8 },1
,351 8 },1
,{ 8 },1
,hint 8 0,1
,hint 8 1,1
,52 8 },1
,75 8 },2
,72 8 },2
,60 8 },1
,28 8 },1
,36 8 },2
,61 8 },1
,{ 8 35,1
,{ 8 25,1
,58 8 17,1
,<7 8 0,1
,7 8 1,1
,pair 8 83,1
,pair 8 22,1
,8 83,1
,8 22,1
,<9 8 7,1
<Square>,STRING <Square> STRING,2
,<Square> STRING,2
9,3 9 },20
,6 9 },16
,9 },248
,) 9 ),11
,9 ),160
,3 9 diagonals:Alternating,1
,rectangle 9 3,1
,9 diagonals:Alternating,1
,9 3,11
,{ 9 11,10
,9 11,33
,17 9 },2
,{ 9 18,4
,9 18,7
,0 9 },7
,1 9 },11
,{ 9 2,4
,9 2,10
,4 9 },29
,5 9 },12
,{ 9 10,32
,9 10,53
,1 9 ),17
,{ 9 14,19
,9 14,21
,. 9 3,1
,-3 9 },1
,7 9 },18
,8 9 },36
,rectangle 9 5,1
,9 5,12
,7 9 ),2
,10 9 },18
,11 9 7,22
,7 9 11,20
,9 7,29
,{ 9 23,3
,9 23,6
,. 9 },12
,0 9 (,3
,shift 9 -1,1
,shift 9 0,2
,-1 9 (,2
,shift 9 9,1
,9 9 (,1
,9 (,13
,9 -1,2
,9 0,14
,9 9,11
,29 9 .,4
,30 9 .,5
,31 9 .,2
,32 9 .,1
,9 .,28
,shift 9 11,1
,shift 9 5,1
,. 9 23,1
,13 9 },6
,13 9 5,6
,P1 9 ),4
,P2 9 ),1
,3 9 ),1
,square 9 ),44
,rectangle 9 7,1
,pair 9 4,15
,9 4,20
,= 9 (,1
,shift 9 2,1
,{ 9 0,7
,33 9 },2
,66 9 },2
,{ 9 12,15
,9 12,15
,STRING 9 count:4,1
,9 count:4,1
,STRING 9 ),6
,pair 9 207,1
,9 207,1
,5 9 13,5
,15 9 3,3
,3 9 15,3
,17 9 1,3
,1 9 17,4
,P10 9 ),1
,19 9 19,3
,9 13,11
,9 15,15
,9 1,11
,9 17,5
,9 19,4
,pair 9 90,1
,89 9 ),1
,90 9 ),1
,pair 9 89,1
,pair 9 52,1
,pair 9 23,2
,9 90,1
,9 89,1
,9 52,1
,2 9 },8
,pair 9 22,1
,22 9 ),1
,9 22,2
,. 9 30,1
,9 30,1
,{ 9 15,11
,36 9 },1
,Section 9 (,1
,Count 9 to:,6
,9 to:,6
,6 9 22,1
,. 9 19,1
,{ 9 .,10
,{ 9 7,4
,8 9 7,1
,pair 9 8,3
,8 9 ),3
,9 8,6
,4 9 ),1
,2 9 (,1
,6 9 39,2
,9 39,2
,> 9 (,2
,{ 9 },1
,2 9 ),2
,pair 9 2,3
,3 9 8,1
,to 9 ),1
,7 9 29,1
,9 29,1
,7 9 10,1
,Row 9 ),5
,8 9 17,1
,Column 9 ),2
,} 9 {,1
,12 9 },3
,{ 9 6,6
,9 {,1
,9 6,9
,8 9 3,1
,Shared 9 ),2
,11 9 },4
,19 9 },1
,2 9 .,2
,{ 9 1,8
,shift 9 .,1
,rectangle 9 10,2
,5 9 ),2
,STRING 9 9,4
,9 9 ),5
,20 9 },2
,Diamond 9 ),2
,pair 9 74,1
,pair 9 10,2
,10 9 ),6
,9 74,1
,Rectangle 9 11,2
,pair 9 421,1
,105 9 ),1
,Row 9 (,1
,9 421,1
,4 9 .,2
,20 9 10,1
,pair 9 0,3
,) 9 (,1
,. 9 0,1
,. 9 2,1
,10 9 8,1
,8 9 10,11
,. 9 -1,1
,hex 9 ),1
,6 9 ),1
,rectangle 9 6,2
,13 9 7,1
,15 9 .,1
,58 9 10,1
,pair 9 88,1
,9 88,1
,Multiplier 9 =,1
,pair 9 100,2
,pair 9 6,1
,. 9 ),27
,Rectangle 9 15,1
,rectangle 9 14,1
,9 =,1
,9 100,2
,Triangle 9 ),1
,{ 9 3,5
,14 9 },4
,26 9 },3
,16 9 },1
,{ 9 25,3
,. 9 34,2
,9 25,3
,9 34,2
,{ 9 5,4
,{ 9 9,5
,9 9 },5
,15 9 },2
,{ 9 13,5
,{ 9 16,2
,9 16,2
,{ 9 8,1
,T33434 9 ),2
,10 9 13,1
,rectangle 9 9,1
,{ 9 4,5
,Count 9 at:4,1
,9 at:4,1
,60 9 },1
,68 9 },1
,hint 9 0,1
,35 9 ),1
,42 9 },2
,{ 9 21,1
,} 9 ),3
,9 21,1
,0 9 18,2
,4 9 14,1
,128 9 },1
,47 9 },1
,148 9 },1
,172 9 },1
,360 9 },1
,180 9 },1
,212 9 },1
,226 9 },1
,311 9 },1
,318 9 },1
,hint 9 2,1
,58 9 },1
,37 9 },1
,75 9 },1
,2 9 10,2
,24 9 },2
,tri 9 ),1
,46 9 },1
,63 9 },1
,8 9 18,1
,0 9 10,1
,pair 9 91,1
,24 9 ),1
,9 91,1
;,source ; however,1
,; however,1
,pieces ; (,1
,; (,1
,> ; <,1
,> ; ---------------------------------------------,1
,; <,1
,; ---------------------------------------------,1
<,STRING < (,477
,> < (,402
,< (,1366
,> < {,111
,< {,271
,( < (,184
,> < STRING,1
,< STRING,19
,( < 16,1
,< 16,1
,( < 6,1
,< 6,1
,> < phases:,4
,< phases:,10
,<2> < (,47
,<3> < (,29
,( < 0,139
,( < 1,141
,< 0,139
,< 1,141
,<> < (,26
,<4> < (,36
,( < 2,8
,<5> < {,8
,<11> < {,3
,<17> < {,3
,<23> < {,2
,< 2,21
,<20> < {,3
,<25> < {,3
,<30> < {,3
,<35> < {,2
,<40> < {,2
,<45> < {,2
,<50> < {,2
,<55> < {,2
,<60> < {,2
,<65> < {,2
,<70> < {,2
,<75> < {,2
,<80> < {,2
,<85> < {,2
,<90> < {,2
,<95> < {,2
,<100> < {,2
,( < Undefined,1
,<2> < {,7
,<4> < {,8
,<6> < {,6
,< Undefined,1
,( < STRING,2
,<5> < (,12
,<6> < (,17
,<3> < {,9
,<7> < {,5
,<8> < {,5
,<7> < (,8
,<8> < (,14
,<16> < (,7
,<10> < (,12
,<9> < (,4
,<11> < (,2
,<12> < (,8
,<13> < (,2
,<14> < (,6
,<15> < (,2
,STRING < >,3
,< >,22
,> < >,17
,( < 8,1
,< 8,1
,STRING < {,38
,( < 50,1
,< 50,1
,( < 10,1
,< 10,1
,<18> < (,1
,<20> < (,12
,STRING < skipIf:,1
,< skipIf:,1
,STRING < phases:,6
,8> < (,2
,7> < (,2
,<Hexagon> < (,3
,<Limping> < (,3
,( < 4,1
,< 4,4
,Orthogonal> < (,2
,STRING < Capture,4
,< Capture,4
,3> < (,1
,5> < (,2
,9> < (,1
,RookRight2Start < {,2
,Bishop2Start < {,2
,Knight2Start < {,2
,STRING < ifAfterwards:True,1
,STRING < ifAfterwards:,1
,< ifAfterwards:True,1
,< ifAfterwards:,1
,<25> < (,15
,<30> < (,6
,<40> < (,1
,<50> < (,1
,<60> < (,1
,<70> < (,1
,<80> < (,1
,<90> < (,1
,<100> < (,1
,<10> < {,2
,<12> < {,1
,<13> < {,2
,<14> < {,1
,<15> < {,2
,<16> < {,1
,<18> < {,1
,<19> < {,2
,<21> < {,1
,<22> < {,1
,<24> < {,1
,<26> < {,1
,<27> < {,1
,<28> < {,1
,<29> < {,1
,loops:3> < (,1
,from:1> < (,1
,STRING < STRING,16
,> < 2,13
,> < 100,11
,> < 4,3
,> < 200,3
,> < 150,2
,< 100,11
,< 200,3
,< 150,2
,<4> < >,2
,Diamond> < (,6
,<square> < (,1
,variants: < {,1
,; < {,1
,- < {,1
,> < ),1
,< ),1
,<9> < {,1
,4> < (,1
,6> < (,1
,12> < (,1
,10> < (,1
,46> < (,1
=,! = 0,158
,( = 1,309
,( = 0,267
,= 0,428
,= 1,333
,( = (,1462
,= (,1841
,! = (,379
,( = 62,1
,= 62,1
,( = 6,27
,= 6,29
,( = 3,84
,= 3,89
,( = STRING,44
,= STRING,63
,( = #1,197
,= #1,203
,( = Off,42
,= Off,56
,( = End,24
,= End,24
,! = 1,22
,! = #1,6
,! = STRING,19
,( = 2,108
,= 2,121
,( = 4,83
,= 4,90
,( = 5,24
,= 5,25
,( = 10,4
,( = 15,5
,( = 20,2
,= 10,4
,= 15,5
,= 20,2
,! = 6,2
,( = 14,1
,= 14,1
,( = 7,7
,= 7,7
,! = Off,14
,! = 26,3
,! = 27,3
,= 26,3
,= 27,3
,( = #2,2
,= #2,2
,#1 = To,1
,#2 = Direction,1
,Direction = Forward,2
,#3 = Then,1
,#1 = Direction,1
,= To,1
,= Direction,2
,= Forward,2
,= Then,1
,( = 9,1
,= 9,1
,pips = 2,1
,! = Infinity,9
,= Infinity,10
,! = 3,5
,( = 36,1
,( = 38,1
,= 36,1
,= 38,1
,! = 4,7
,( = Undefined,5
,= Undefined,10
,! = 2,11
,( = 29,1
,= 29,1
,moves = draw,1
,= draw,1
,! = Undefined,5
,( = 42,2
,= 42,2
,( = 8,8
,= 8,12
,( = 54,1
,= 54,1
,) = 8,2
,( = 32,1
,= 32,1
,STRING = Move,1
,= Move,1
,( = 12,1
,= 12,1
,! = 5,1
,state = 2,1
,state = 1,1
,#1 = fire,1
,#2 = mover,1
,= fire,1
,= mover,1
,state = 8,2
,1 = Human,1
,2 = Direct,1
,3 = Indirect,1
,4 = Aircraft,1
,5 = Boat,1
,6 = Building,1
,7 = Cost,1
,8 = Damage,1
,9 = First,1
,10 = Counter,1
,11 = Random,1
,12 = Random,1
,= Human,1
,= Direct,1
,= Indirect,1
,= Aircraft,1
,= Boat,1
,= Building,1
,= Cost,1
,= Damage,1
,= First,1
,= Counter,1
,= Random,2
,( = -1,3
,1 = liberties,1
,liberties = 1,1
,Liberties = 0,1
,! = -1,1
,= -1,4
,= liberties,1
,( = Infinity,1
,. = 0,2
,( = <challenge:limit>,2
,= <challenge:limit>,2
>,) > STRING,680
,) > <,443
,> STRING,1364
,> <,568
,STRING > STRING,465
,} > STRING,213
,) > <1>,4
,) > <2>,2
,> <1>,5
,> <2>,2
,( > (,364
,> (,364
,<size > },1
,> },1
,) > <>,34
,> <>,37
,( > 2,8
,> 2,8
,( > 3,16
,} > <,43
,> 3,16
,STRING > <,32
,} > <>,3
,STRING > <7,2
,STRING > <8,1
,STRING > <9,1
,STRING > <10,1
,< > STRING,5
,> <7,3
,> <8,2
,> <9,2
,> <10,2
,STRING > <24,1
,STRING > <27,1
,STRING > <30,2
,STRING > <33,1
,> <24,1
,> <27,1
,> <30,2
,> <33,1
,STRING > <18,1
,STRING > <22,1
,STRING > <26,1
,STRING > <34,1
,STRING > <38,1
,> <18,1
,> <22,1
,> <26,1
,> <34,1
,> <38,1
,STRING > <12>,1
,STRING > <14>,1
,> <12>,1
,> <14>,2
,( > 4,16
,> 4,16
,( > 9,2
,> 9,2
,( > 6,8
,> 6,8
,( > 7,7
,> 7,7
,( > 5,1
,> 5,1
,) > <4>,2
,} > <3>,2
,> <4>,2
,> <3>,8
,( > 8,2
,> 8,2
,) > <phases:,1
,> <phases:,1
,STRING > <numSides:6>,2
,STRING > <numSides:4>,2
,STRING > <numSides:3>,2
,> <numSides:6>,2
,> <numSides:4>,2
,> <numSides:3>,2
,) > <5>,4
,) > <6>,1
,) > <7>,1
,> <5>,5
,> <6>,1
,> <7>,1
,) > <Step,1
,) > <Slide>,1
,> <Step,1
,> <Slide>,1
,( > 24,1
,> 24,1
,} > Pawn1Start,2
,STRING > King2Start,2
,STRING > Queen2Start,2
,STRING > RookLeft2Start,2
,STRING > RookRight2Start,2
,} > Bishop2Start,2
,} > Knight2Start,2
,} > Pawn2Start,2
,> Pawn1Start,2
,> King2Start,2
,> Queen2Start,2
,> RookLeft2Start,2
,> RookRight2Start,2
,> Bishop2Start,2
,> Knight2Start,2
,> Pawn2Start,2
,ifAfterwards:True > STRING,1
,( > #1,1
,> #1,1
,2 > <,13
,< > <,17
,100 > <,11
,4 > <,3
,200 > <,3
,150 > <,2
,STRING > <Orthogonal>,24
,STRING > <Adjacent>,2
,STRING > <All>,14
,> <Orthogonal>,24
,> <Adjacent>,2
,> <All>,14
,liberties > 1,1
,( > 0,3
,> 1,1
,> 0,3
,} > <5,1
,} > <10,1
,} > <14>,1
,} > <19>,1
,} > <23>,1
,> <5,2
,> <19>,1
,> <23>,1
,} > ;,2
,} > and,1
,} > <0,4
,> ;,2
,> and,1
,> <0,4
,dual > <,1
,) > <3>,6
,) > <11>,1
,> <11>,1
,20 > <149>,1
,> <149>,1
,590 > <5>,1
,STRING > <3,1
,STRING > <13,1
,STRING > <21,1
,> <3,2
,> <13,1
,> <21,1
,STRING > <34>,1
,STRING > <1>,1
,STRING > <16>,1
,> <34>,1
,> <16>,1
,) > <2,1
,) > <3,1
,) > <4,1
,) > <5,1
,) > <6,1
,) > <7,1
,) > <8,1
,) > <9,1
,> <2,1
,> <4,1
,> <6,1
?,P1 ? Not,2
,? Not,2
,Hops-a-Daisy ? (,1
,? (,2
,elements ? (,1
@,) @ Start,1
,@ Start,1
A,) A rat,1
,A rat,1
,as: A player,1
,A player,2
,STRING A 3-player,1
,Note: A player,1
,A 3-player,1
B,. B .,1
,B .,1
role,current role },2
,role },2
,) role function,1
,role function,1
100%,) 100% damage,1
,100% damage,1
<TurnType>,STRING <TurnType> args:,1
,<TurnType> args:,1
D,by D .,1
,D .,1
E,P2 E STRING,1
,E STRING,2
,S E W,10
,E W,74
,P1 E (,1
,E (,7
,2 E through:,4
,3 E through:,1
,E through:,5
,) E ),41
,E ),108
,steps:8 E ),1
,Side E ),9
,W E },5
,E },9
,from:19 E included:True,1
,from:0 E included:True,1
,E included:True,2
,player E ),12
,steps:3 E ),3
,steps:2 E ),15
,steps:1 E ),3
,N E },2
,STRING E ),5
,3 E exact:True,1
,E exact:True,1
,STRING E W,7
,W E ),3
,N E ),2
,S E ),2
,steps:5 E ),2
,steps:6 E ),2
,steps:7 E ),2
,steps:4 E ),1
,P3 E (,1
,P4 E (,1
,STRING E 2,19
,STRING E 3,40
,E 2,19
,E 3,40
,NNW E },2
,{ E S,1
,STRING E (,4
,E S,1
,STRING E 4,1
,STRING E 5,1
,E 4,1
,E 5,1
,( E or,1
,E or,1
,Adjacent E ),4
,{ E W,57
,#2 E ),1
,P1 E STRING,1
F,{ F R,6
,R F R,6
,R F },11
,F R,15
,F },41
,{ F },6
,{ F F,11
,F F R,3
,F F L,3
,L F },9
,R F F,3
,F F },15
,{ F L,3
,L F F,7
,F F,34
,F L,8
,F F F,13
,L F L,2
forAll,( forAll Hint,4
,forAll Hint,4
,( forAll Cell,2
,( forAll Vertex,1
,forAll Cell,2
,forAll Vertex,1
roll,( roll ),183
,roll ),183
,( roll #6,1
,roll #6,1
,( roll (,1
,roll (,1
I,. I start,1
,I start,1
slowing,also slowing the,1
,slowing the,1
turn,first turn (,4
,a turn (,2
,turn (,6
,next turn .,3
,turn .,3
,next turn --COMMA--,1
,a turn where,1
,turn --COMMA--,1
,turn where,1
,each turn phase,1
,turn phase,1
,passed turn at,1
,Each turn -,1
,turn at,1
,turn -,1
L,F L F,8
,L F,18
,{ L F,7
,{ L L,3
,L L F,3
,L L L,1
,L L,4
M,Jay M .,8
,M .,8
N,P2 N (,10
,N (,18
,P1 N (,3
,P2 N STRING,1
,N STRING,4
,) N ),23
,N ),199
,P2 N <Moves:dog>,1
,N <Moves:dog>,1
,{ N S,54
,N S,61
,2 N through:,2
,N through:,2
,steps:6 N ),1
,steps:5 N ),2
,steps:16 N ),2
,steps:3 N ),2
,player N ),118
,from:55 N included:True,1
,from:56 N included:True,1
,N included:True,2
,P1 N STRING,3
,Side N ),11
,{ N E,2
,N E,4
,--COMMA-- N --COMMA--,1
,S N ),4
,STRING N SW,1
,N --COMMA--,1
,N SW,1
,steps:4 N ),1
,steps:8 N ),1
,steps:10 N ),1
,steps:15 N ),1
,STRING N ),1
,3 N exact:True,1
,N exact:True,1
,STRING N S,7
,STRING N E,2
,STRING N W,2
,N W,3
,P1 N ),23
,P4 N (,1
,{ N },1
,N },1
,S N WSW,1
,{ N ENE,1
,N WSW,1
,N ENE,1
,STRING N 2,6
,N 2,6
,{ N W,1
,STRING N (,4
,steps:2 N ),1
,Adjacent N ),4
,Forward N ),1
,) N stop:,5
,N stop:,5
,Diagonal N ),1
,#2 N ),1
result,( result P1,230
,result P1,230
,( result P2,186
,result P2,186
,( result Mover,699
,result Mover,699
,( result TeamMover,20
,result TeamMover,20
,( result Player,49
,result Player,49
,( result P3,12
,( result P4,10
,result P3,12
,result P4,10
,( result #1,3
,( result #2,1
,result #1,3
,result #2,1
,( result Next,39
,result Next,39
,( result Team1,4
,( result Team2,4
,result Team1,4
,result Team2,4
,( result <Players:player2>,1
,( result <Players:player1>,1
,result <Players:player2>,1
,result <Players:player1>,1
,( result Draw,1
,result Draw,1
,not result in,1
,result in,1
,( result P5,6
,( result P6,6
,( result P7,5
,( result P8,5
,( result P9,4
,( result P10,4
,( result P11,3
,( result P12,3
,( result P13,2
,( result P14,2
,( result P15,1
,( result P16,1
,result P5,6
,result P6,6
,result P7,5
,result P8,5
,result P9,4
,result P10,4
,result P11,3
,result P12,3
,result P13,2
,result P14,2
,result P15,1
,result P16,1
,( result <Result>,2
,result <Result>,2
,( result All,2
,result All,2
characters,two characters to,1
,characters to,1
R,F R F,15
,R F,20
,{ R F,3
,{ R R,2
,R R F,2
,R R,2
corners,on corners (,2
,corners (,2
S,) S included:True,1
,S included:True,3
,P1 S (,1
,N S E,10
,S (,8
,S E,12
,) S ),20
,S ),194
,2 S through:,2
,S through:,2
,steps:16 S ),2
,steps:6 S ),1
,steps:5 S ),1
,steps:3 S ),2
,player S ),118
,N S },44
,S },46
,from:94 S included:True,1
,from:93 S included:True,1
,P2 S STRING,3
,S STRING,3
,Side S ),11
,( S --COMMA--,1
,STRING S N,3
,STRING S NW,1
,S --COMMA--,1
,S N,5
,S NW,1
,) S (,1
,STRING S ),4
,3 S exact:True,1
,S exact:True,1
,N S ),5
,STRING S E,2
,STRING S W,2
,S W,4
,P2 S ),23
,P2 S (,3
,P3 S (,1
,{ S },1
,N S ENE,1
,WSW S N,1
,{ S WSW,1
,S ENE,1
,S WSW,1
,) S N,1
,STRING S 2,2
,STRING S 3,4
,S 2,2
,S 3,4
,{ S W,1
,E S },1
,STRING S (,2
,steps:2 S ),1
,Adjacent S ),4
,Forward S ),1
,N S W,1
,#2 S ),1
same,the same player,1
,the same colour,3
,same player,1
,same colour,3
W,E W },67
,W },71
,2 W through:,4
,3 W through:,1
,W through:,5
,) W ),39
,W ),110
,player W ),12
,Side W ),9
,{ W E,5
,W E,8
,from:34 W included:True,1
,from:50 W included:True,1
,W included:True,2
,steps:3 W ),3
,steps:2 W ),15
,steps:1 W ),3
,STRING W ),5
,3 W exact:True,1
,W exact:True,1
,E W ),7
,STRING W E,2
,S W ),2
,N W ),2
,steps:5 W ),2
,steps:6 W ),2
,steps:7 W ),2
,steps:4 W ),1
,P1 W (,1
,P2 W (,1
,W (,7
,STRING W 2,56
,W 2,56
,STRING W 3,3
,W 3,3
,SSE W },2
,N W },1
,S W },1
,STRING W (,5
,STRING W 4,2
,W 4,2
,or W ),1
,Adjacent W ),4
,S W E,1
,#2 W ),1
,P1 W STRING,1
,W STRING,1
@example,. @example (,1
,@example (,1
after,swapping after everyone's,4
,after everyone's,4
,even after complicated,1
,seconds after the,1
,states after move,1
,after complicated,1
,after the,1
,after move,1
,yields after any,1
,after any,1
flip,( flip (,5
,flip (,5
^,( ^ <Board:size>,1
,^ <Board:size>,1
hand,( hand P1,24
,hand P1,24
,( hand P2,3
,hand P2,3
,( hand Each,361
,hand Each,361
,the hand and,3
,hand and,3
,( hand Shared,13
,hand Shared,13
,the hand of,2
,hand of,2
,( hand P3,2
,hand P3,2
,the hand to,1
,hand to,1
<NumOfPlayers:BoardShape>,board <NumOfPlayers:BoardShape> ),2
,<NumOfPlayers:BoardShape> ),2
a,needs a condition,2
,a condition,2
,from a site,1
,a site,2
,Move a piece,2
,Enter a captured,1
,Enter a new,1
,a piece,21
,a captured,1
,a new,1
,that's a counter,1
,that's a twin,1
,capture a twin,1
,a counter,3
,a twin,2
,If a piece,1
,With a lower,2
,a lower,2
,Defines a hop,2
,a hop,2
,Move a tower,1
,contain a mover/own,1
,Sacrifice a tower,2
,from a 3-stack/catapult,1
,Throw a stone,2
,a tower,3
,a mover/own,1
,a 3-stack/catapult,1
,a stone,2
,to a player,1
,a player,3
,if a capture,1
,a capture,2
,not a slide,1
,a slide,1
,had a turn,2
,had a move,2
,a turn,3
,a move,3
,add a piece,1
,reach a terminal,1
,a terminal,1
,Block a piece,4
,Rescue a piece,3
,Release a piece,3
,Capture a piece,1
,move a Baidaq,2
,to a site,1
,a Baidaq,2
,Forward a pawn,1
,a pawn,2
,If a pawn,1
,Here's a curious,1
,with a suitable,1
,If a player,2
,of a castling,1
,a curious,1
,a suitable,1
,a castling,1
,on a board,1
,on a hexagonal,1
,When a Pawn,2
,when a Pawn,1
,until a piece,2
,that a Knight,1
,to a space,1
,to a Rook,1
,or a Knight,1
,to a piece,1
,If a Pawn,1
,on a turn,1
,when a King,1
,is a stalemate,1
,without a capture,1
,in a stalemate,1
,with a rule,1
,exposes a threat,1
,had a chance,1
,a board,1
,a hexagonal,1
,a Pawn,4
,a Knight,2
,a space,1
,a Rook,1
,a King,1
,a stalemate,2
,a rule,1
,a threat,1
,a chance,1
,that a piece,1
,its a building,2
,Attacking a building,1
,Attacking a unit,1
,is a counter,2
,a building,3
,a unit,1
,wins a tie,1
,a tie,1
,helped a lot,1
,of a piece,1
,on a cell,1
,changes a few,1
,a lot,1
,a cell,1
,a few,1
,to a friendly,1
,with a limit,1
,a friendly,1
,a limit,1
,is a series,1
,of a total,1
,of a move,1
,as a removal,1
,by a destination,1
,as a destination,1
,After a passed,1
,place a piece,1
,for a pie,1
,Make a large,1
,a series,1
,a total,1
,a removal,1
,a destination,2
,a passed,1
,a pie,1
,a large,1
,or a set,1
,a set,1
<369>,<81> <369> STRING,1
,<369> STRING,1
<row>,{ <row> },1
,<row> },1
Infinity,= Infinity (,10
,Infinity (,10
e,move e .,1
,e .,5
,. e .,4
spiral,( spiral turns:5,4
,spiral turns:5,4
,the spiral board,1
,spiral board,1
i,( i .,1
,i .,4
,) i .,2
,difference i .,1
<Player:startP3>,) <Player:startP3> <Player:startP4>,3
,<Player:startP3> <Player:startP4>,3
the,for the winning,2
,in the source,3
,the winning,2
,the source,3
,to the hand,3
,to the starting,4
,the hand,6
,the starting,6
,Reset the value,1
,the value,1
,Remove the Twin,1
,to the centre,1
,the Twin,1
,the centre,1
,of the knight,1
,all the possibilities,1
,on the goal,1
,of the enemy,1
,the knight,1
,the possibilities,1
,the goal,1
,the enemy,2
,in the target,1
,the target,3
,if the to,1
,on the to,1
,if the from,1
,to the to,1
,store the piece,1
,in the next,1
,not the previous,1
,of the piece,3
,in the hand,2
,the to,3
,the from,1
,the piece,5
,the next,5
,the previous,2
,in the given,1
,all the orthogonal,1
,the given,3
,the orthogonal,1
,in the water,1
,the water,1
,into the two,1
,if the destination,1
,removes the only,1
,in the 'to',2
,between the 3-stack,2
,and the target,2
,the two,2
,the destination,1
,the only,1
,the 'to',2
,the 3-stack,2
,look the notched,1
,the notched,2
,build the building,1
,the building,1
,is the notched,1
,store the next,2
,in the pending,2
,the pending,2
,pending the next,1
,at the initial,2
,the initial,3
,update the number,1
,the number,1
,of the P1,1
,of the P2,1
,the P1,1
,the P2,1
,without the simultaneous,2
,the simultaneous,2
,check the previous,1
,except the last,1
,the last,3
,represents the phase,4
,the phase,4
,separate the four,1
,of the board,3
,the four,1
,the board,4
,in the STRING,1
,the STRING,2
,in the designated,1
,in the supergame,1
,the designated,1
,the supergame,1
,following the rules,1
,and the game,1
,for the mover,1
,the rules,4
,the game,8
,the mover,1
,capturing the attacker,3
,of the pieces,4
,the attacker,3
,the pieces,4
,do the promoted,1
,the promoted,1
,for the last,1
,Only the king,1
,the king,1
,of the game,2
,in the rules,2
,in the promotion,1
,in the second,1
,the promotion,2
,the second,1
,begin the playing,1
,the playing,1
,in the other,1
,the other,3
,be the compass,1
,the compass,1
,whatever the die,1
,the die,1
,For the initial,1
,of the pawns,1
,the pawns,1
,for the Persians,1
,Furthermore the Persian,1
,Kings the Spartans,1
,all the Kings,1
,on the board,1
,at the time,1
,Then the rules,1
,the Persians,1
,the Persian,1
,the Spartans,1
,the Kings,1
,the time,1
,reaches the side,1
,then the Pawn,2
,of the captured,1
,as the player,1
,of the given,2
,reaches the far,1
,on the player's,2
,--COMMA-- the Pawn,1
,of the 6,1
,of the six,2
,of the Rooks,1
,to the same,1
,neither the King,1
,nor the Rook,1
,of the same,3
,as the space,1
,on the current,1
,reaching the side,1
,reaches the farthest,1
,where the delayed,1
,--COMMA-- the possible,1
,of the Pawn,1
,before the promotion,1
,When the game,2
,--COMMA-- the checkmating,1
,--COMMA-- the checkmated,1
,and the remaining,1
,passes the current,1
,--COMMA-- the first,1
,of the other,1
,the side,2
,the Pawn,4
,the captured,1
,the player,1
,the far,1
,the player's,2
,the 6,1
,the six,2
,the Rooks,1
,the same,4
,the King,1
,the Rook,1
,the space,1
,the current,2
,the farthest,1
,the delayed,1
,the possible,1
,the checkmating,1
,the checkmated,1
,the remaining,3
,the first,1
,on the palace,1
,on the Palace,1
,the palace,1
,the Palace,1
,remove the dice,2
,the dice,2
,from the hand,1
,to the central,1
,from the central,1
,to the entry,1
,of the spiral,1
,capturing the other,1
,on the two,1
,of the spirale,1
,the central,2
,the entry,1
,the spiral,1
,the spirale,1
,from the unit,1
,Sets the owner,1
,at the end,1
,at the rotation,1
,outnumber the enemy,1
,attack the CannonOutline,1
,the unit,1
,the owner,1
,the end,1
,the rotation,1
,the CannonOutline,1
,of the attacking,2
,the attacking,2
,) the script,1
,on the AI,1
,slowing the script,1
,Sometimes the locations,1
,og the secone,1
,and the size,1
,of the indecise,1
,after the move,1
,for the players,1
,understand the game,1
,filter the Add,1
,during the game,1
,the script,2
,the AI,1
,the locations,1
,the secone,1
,the size,1
,the indecise,1
,the move,1
,the players,1
,the Add,1
,to the Influence,1
,around the starting,1
,defining the individual,1
,and the resulting,1
,as the remaining,2
,at the starting,1
,start the hopping,1
,Handles the STRING,1
,into the define,1
,handling the moves,1
,STRING the last,1
,restore the included,1
,Selects the piece,1
,in the listing,1
,on the next,1
,of the moves,1
,in the listiong,1
,Defining the structure,1
,clearing the remembered,1
,for the double,1
,for the game:,2
,Defining the option,1
,Boards the game,1
,because the regions,1
,when the tri,1
,eg the bitter,1
,the Influence,1
,the individual,1
,the resulting,1
,the hopping,1
,the define,1
,the moves,2
,the included,1
,the listing,1
,the listiong,1
,the structure,1
,the remembered,1
,the double,1
,the game:,2
,the option,1
,the regions,1
,the tri,1
,the bitter,1
straight,--COMMA-- straight ahead,2
,straight ahead,2
p,. p .,1
,p .,1
1008,1007 1008 1340,1
,1008 1340,1
1007,1055 1007 1008,1
,1007 1008,1
1006,1005 1006 1055,1
,1006 1055,1
1005,955 1005 1006,1
,1005 1006,1
,{ 1005 },1
,1005 },1
1004,1003 1004 955,1
,1004 955,1
1003,1002 1003 1004,1
,1003 1004,1
,{ 1003 },1
,1003 },1
1002,953 1002 1003,1
,1002 1003,1
,{ 1002 },1
,1002 },1
<Players:regions>,) <Players:regions> },1
,<Players:regions> },1
1001,{ 1001 },1
,1001 },1
obvious,an obvious implementation,1
,obvious implementation,1
{,equipment { (,957
,start { (,642
,sites { STRING,680
,end { (,303
,args: { <dogs>,1
,} { (,515
,{ (,5480
,{ STRING,2491
,{ <dogs>,1
,merge { (,104
,sites { 6,25
,phases: { (,318
,{ 6,329
,counts: { 5,2
,{ 5,258
,equipment { <Board:type>,4
,args: { <tigerSites>,1
,args: { <type>,70
,edges: { {,148
,{ { {,3
,{ { 0,185
,} { 1,329
,} { {,17
,{ { 1,25
,} { 2,341
,{ { 2,18
,} { 3,281
,{ { 3,10
,} { 4,333
,{ { 4,13
,} { 0,354
,args: { <move>,5
,rulesets { (,168
,STRING { STRING,1361
,{ <Board:type>,4
,{ <tigerSites>,1
,{ <type>,70
,{ {,340
,{ 0,936
,{ 1,446
,{ 2,418
,{ 3,349
,{ 4,384
,{ <move>,5
,args: { <tigers>,1
,{ <tigers>,1
,{ { 6,8
,equipment { <Board>,4
,union { (,188
,args: { <hare>,1
,{ <Board>,4
,{ <hare>,1
,args: { <coyote>,1
,STRING { },60
,{ <coyote>,1
,{ },78
,} { 18,84
,} { 14,96
,} { 10,242
,< { STRING,51
,vertices: { 32,1
,{ 18,118
,{ 14,110
,{ 10,262
,{ 32,39
,) { (,180
,args: { <leopard>,1
,priority { (,54
,{ <leopard>,1
,start { <Place:geese>,1
,args: { <geese>,1
,{ <Place:geese>,1
,{ <geese>,1
,directions { Rightward,57
,{ Rightward,57
,concentric { 1,14
,} { 9,140
,} { 12,146
,} { 5,218
,sites { 1,50
,and { (,494
,{ 9,165
,{ 12,185
,poly { {,32
,{ { -3,1
,} { 11,160
,or { (,414
,{ -3,4
,{ 11,176
,} { 15,99
,} { 7,200
,} { 17,67
,} { 16,87
,} { 19,62
,} { 20,66
,{ { 11,2
,} { 6,257
,} { 13,110
,} { 8,262
,{ 15,108
,{ 7,247
,{ 17,81
,{ 16,97
,{ 19,99
,{ 20,108
,{ 13,211
,{ 8,305
,vertices: { 3,1
,directions { FR,283
,{ FR,283
,equipment { <Variant:board>,2
,args: { <board>,10
,vertices: { {,89
,{ { 25,2
,} { 25,26
,} { 27,42
,{ <Variant:board>,2
,{ <board>,10
,{ 25,77
,{ 27,75
,args: { <pieces>,3
,{ <pieces>,3
,args: { <dog>,1
,{ <dog>,1
,vertices: { 24,1
,{ 24,93
,counts: { 2,5
,vertices: { 5,1
,} { 22,56
,} { 24,42
,} { 26,43
,} { 28,29
,} { 30,22
,} { 32,11
,} { 34,10
,} { 36,10
,} { 38,11
,} { 40,12
,} { 42,10
,} { 44,8
,} { 46,10
,} { 48,6
,} { 50,9
,} { 52,8
,} { 54,1
,} { 56,7
,} { 58,2
,} { 60,8
,sites { 0,81
,{ 22,70
,{ 26,77
,{ 28,79
,{ 30,58
,{ 34,30
,{ 36,34
,{ 38,18
,{ 40,25
,{ 42,19
,{ 44,25
,{ 46,15
,{ 48,19
,{ 50,10
,{ 52,12
,{ 54,10
,{ 56,15
,{ 58,10
,{ 60,23
,{ { 17,3
,args: { <bean>,1
,{ <bean>,1
,{ { 13,4
,args: { <num>,66
,{ <num>,66
,directions { Forwards,32
,args: { <hopCapture>,1
,directions { N,56
,directions { NE,12
,{ Forwards,32
,{ <hopCapture>,1
,{ N,59
,{ NE,12
,args: { <start>,18
,{ <start>,18
,args: { <kingHop>,1
,{ <kingHop>,1
,vertices: { 2,2
,} { -0,10
,} { -1,9
,} { -2,8
,} { -3,3
,{ -0,12
,{ -1,11
,{ -2,9
,args: { <pieceMoves>,1
,{ <pieceMoves>,1
,args: { <seleucid>,2
,{ <seleucid>,2
,equipment { STRING,8
,STRING { 14,3
,map { (,92
,args: { <carnarvon>,1
,{ <carnarvon>,1
,{ { 5,5
,} { 35,7
,sites { 3,16
,1 { P1,87
,2 { P2,55
,{ 35,31
,{ P1,90
,{ P2,55
,STRING { 6,20
,STRING { 19,29
,P1 { 20,8
,P2 { 7,8
,sites { 10,14
,{ { 8,25
,cells: { {,13
,STRING { (,323
,sites { 60,10
,STRING { 0,217
,STRING { 12,13
,sites { 12,19
,STRING { 24,36
,STRING { 25,38
,args: { <rules>,18
,{ <rules>,18
,sites { #2,1
,faces: { 1,5
,sites { 61,3
,sites { 21,3
,sites { 91,1
,sites { 33,4
,{ #2,3
,{ 61,8
,{ 21,58
,{ 91,7
,{ 33,39
,STRING { 26,25
,STRING { 27,20
,directions { Forward,120
,args: { <size,1
,{ Forward,120
,{ <size,1
,sites { 15,5
,concentric { 24,1
,P1 { 23,1
,P2 { 11,1
,P3 { 0,1
,P4 { 12,1
,sites { 13,13
,sites { 22,1
,{ 23,127
,sites { (,198
,sites { 18,5
,P1 { 0,7
,P2 { 13,3
,byScore { (,109
,P1 { 7,1
,P2 { 20,3
,} { 37,10
,sites { 41,4
,facesByDie: { {,6
,args: { <piece>,4
,variations: { STRING,105
,{ 37,24
,{ 41,19
,{ <piece>,4
,games { (,3
,P1 { 13,2
,P2 { 12,2
,sites { 5,18
,end { <Player:end>,1
,{ <Player:end>,1
,STRING { 7,3
,STRING { 18,26
,sites { 7,21
,sites { 16,5
,sites { 51,1
,{ 51,14
,STRING { 11,5
,sites { 23,3
,args: { <site1>,1
,< { 0,40
,< { 6,7
,< { 12,2
,< { 18,1
,{ <site1>,1
,args: { <ludus>,1
,{ <ludus>,1
,args: { <size>,138
,{ <size>,138
,sites { 20,6
,sites { 4,13
,) { <Players:tracks>,3
,STRING { 13,76
,start { <Players:start>,2
,STRING { 29,26
,STRING { 30,26
,STRING { 31,25
,3 { P3,3
,STRING { 32,22
,{ <Players:tracks>,3
,{ <Players:start>,2
,{ 29,51
,{ 31,46
,{ P3,5
,sites { 27,5
,} { -4,1
,sites { 2,26
,< { (,136
,sites { 58,6
,{ -4,1
,sites { 25,7
,) { <Track>,2
,{ <Track>,2
,or { Square,2
,or { #2,1
,and { #2,1
,args: { <track>,1
,args: { <dice>,3
,args: { <throw>,1
,whats: { (,12
,+ { (,13
,STRING { Ruleset,9
,{ Square,2
,{ <track>,1
,{ <dice>,3
,{ <throw>,1
,{ Ruleset,9
,sites { 14,3
,STRING { 23,66
,args: { <numPlayers>,13
,{ <numPlayers>,13
,priority { If,1
,{ If,1
,start { <Version:start>,3
,{ <Version:start>,3
,} { 23,51
,intersection { (,10
,STRING { 57,3
,STRING { 227,1
,STRING { 87,1
,STRING { 189,1
,{ 57,10
,{ 227,2
,{ 87,3
,{ 189,3
,concentric { 4,2
,STRING { 28,42
,sites { 32,4
,and { STRING,18
,players { (,115
,or { STRING,37
,sites { 85,1
,sites { 31,3
,sites { 54,4
,sites { 35,1
,sites { 95,1
,sites { 17,2
,{ 85,6
,{ 95,4
,sites { 106,1
,{ 106,3
,start { <Board:start>,2
,{ <Board:start>,2
,<Each:AIstyle> { (,1
,args: { <AIstyle>,1
,{ <AIstyle>,1
,P1 { 30,1
,P2 { 0,1
,Piece { STRING,32
,items: { STRING,23
,STRING { 86,2
,args: { <number>,4
,{ 86,6
,{ <number>,4
,args: { <rule>,14
,{ <rule>,14
,directions { W,5
,{ W,5
,concentric { 44,7
,vertices: { 43,7
,{ { 20,8
,STRING { 39,27
,sites { 36,7
,{ 43,20
,{ 39,37
,start { <Player:start>,1
,{ <Player:start>,1
,sites { <Board:rangeP1>,1
,sites { <Board:rangeP2>,1
,args: { <limit>,2
,args: { <shape>,4
,args: { <event>,1
,{ <Board:rangeP1>,1
,{ <Board:rangeP2>,1
,{ <limit>,2
,{ <shape>,4
,{ <event>,1
,} { 29,23
,} { 39,5
,} { 41,4
,} { 45,7
,2 { P3,2
,{ 45,12
,args: { <capture>,3
,{ <capture>,3
,sites { 55,2
,{ 55,6
,STRING { 61,1
,args: { <wikipedia>,1
,{ <wikipedia>,1
,} { 80,2
,} { 116,1
,} { 152,1
,} { 188,1
,} { 224,1
,} { 260,1
,} { 296,1
,} { 332,1
,} { 368,2
,} { 404,1
,} { 440,1
,} { 476,1
,} { 512,1
,} { 548,1
,{ { 35,1
,STRING { 22,12
,< { 389,1
,< { 393,1
,< { 401,1
,{ 80,5
,{ 116,3
,{ 152,3
,{ 188,2
,{ 224,2
,{ 260,1
,{ 296,1
,{ 332,1
,{ 368,2
,{ 404,1
,{ 440,1
,{ 476,2
,{ 512,1
,{ 548,2
,{ 389,1
,{ 393,2
,{ 401,2
,concentric { <Player:num>,1
,STRING { 36,11
,STRING { 37,11
,STRING { 38,6
,STRING { 54,2
,STRING { 55,1
,STRING { 56,6
,STRING { 58,1
,STRING { 59,1
,STRING { 72,1
,STRING { 73,1
,STRING { 74,1
,STRING { 75,1
,STRING { 76,1
,STRING { 77,1
,STRING { 78,1
,STRING { 79,1
,STRING { 90,1
,STRING { 91,1
,STRING { 92,1
,STRING { 93,1
,STRING { 94,1
,STRING { 95,1
,STRING { 96,1
,STRING { 97,1
,STRING { 98,2
,STRING { 99,1
,{ <Player:num>,1
,{ 59,5
,{ 72,7
,{ 73,6
,{ 74,7
,{ 75,5
,{ 76,4
,{ 77,4
,{ 78,5
,{ 79,3
,{ 90,3
,{ 92,4
,{ 93,4
,{ 94,5
,{ 96,6
,{ 97,5
,{ 98,4
,{ 99,2
,sites { 63,2
,{ 63,5
,priority { <Play:enterBoard>,1
,args: { <enterBoard>,1
,{ <Play:enterBoard>,1
,{ <enterBoard>,1
,Pattern { F,3
,{ F,26
,array { (,1
,STRING { 85,2
,STRING { 4,5
,STRING { 5,1
,sites { 67,1
,{ 67,4
,vertices: { 0,5
,start { <Player:init>,1
,{ <Player:init>,1
,faces: { 0,1
,items: { <Player:initHorse>,1
,{ <Player:initHorse>,1
,} { -6,4
,} { -5,8
,} { 33,9
,} { 43,4
,{ -6,4
,{ -5,8
,concentric { 0,2
,cells: { 1,2
,STRING { 35,17
,STRING { 71,1
,STRING { 119,1
,STRING { 179,1
,STRING { 251,1
,STRING { 335,1
,{ 71,4
,{ 119,1
,{ 179,3
,{ 251,2
,{ 335,2
,store:None { (,63
,counts: { 4,2
,sites { <Board:LeftInnerHolesP1>,1
,sites { <Board:LeftInnerHolesP2>,1
,phases: { <Phase:opening>,1
,args: { <rowSize>,4
,args: { <opening>,2
,{ <Board:LeftInnerHolesP1>,1
,{ <Board:LeftInnerHolesP2>,1
,{ <Phase:opening>,1
,{ <rowSize>,4
,{ <opening>,2
,args: { <numSeed>,2
,{ <numSeed>,2
,sites { <Board:HalfRightInnerP1>,1
,sites { <Board:HalfRightInnerP2>,1
,{ <Board:HalfRightInnerP1>,1
,{ <Board:HalfRightInnerP2>,1
,start { <Start:rules>,1
,{ <Start:rules>,1
,phases: { <Start:misoroPhase>,2
,counts: { 3,10
,{ <Start:misoroPhase>,2
,sites { <Row:specialHoles>,1
,sites { <Row:singleHoles>,1
,{ <Row:specialHoles>,1
,{ <Row:singleHoles>,1
,sites { 19,3
,sites { 26,5
,sites { 39,1
,sites { 47,2
,sites { 40,3
,sites { 8,3
,sites { 9,11
,{ 47,8
,store:None { <Board:tracks>,1
,{ <Board:tracks>,1
,sites { <Row:size>,1
,{ <Row:size>,1
,sites { 24,4
,sites { 28,3
,sites { 30,4
,sites { 34,1
,sites { 38,1
,equipment { <Board:board>,1
,counts: { STRING,8
,concentric { 20,1
,{ <Board:board>,1
,sites { <Board:thirdHoleInnerP1>,2
,sites { <Board:thirdHoleInnerP2>,1
,{ <Board:thirdHoleInnerP1>,2
,{ <Board:thirdHoleInnerP2>,1
,STRING { 8,8
,concentric { 10,1
,concentric { (,1
,byScore { <Player:scores>,1
,args: { <numSeeds>,2
,sites { 11,4
,{ <Player:scores>,1
,{ <numSeeds>,2
,concentric { 7,1
,5 { (,1
,args: { <doneSoFar>,1
,{ <doneSoFar>,1
,4 { (,2
,args: { <directionP1>,1
,{ <directionP1>,1
,7 { (,1
,args: { <sitesP1>,1
,< { 9,1
,< { 10,3
,{ <sitesP1>,1
,STRING { <Row:hogon>,1
,{ <Row:hogon>,1
,6 { (,2
,STRING { 1,7
,phases: { <Variant:opening>,1
,{ <Variant:opening>,1
,sites { 29,1
,args: { <value>,3
,{ <value>,3
,args: { <cond>,1
,{ <cond>,1
,P1 { F,1
,P2 { F,2
,args: { <result>,5
,{ <result>,5
,STRING { 20,12
,P1 { R,1
,{ R,5
,start { <Board:placement>,1
,{ <Board:placement>,1
,args: { <direction>,2
,args: { <hand>,1
,{ <direction>,2
,{ <hand>,1
,STRING { 3,2
,STRING { 2,3
,<phases: { (,1
,Random { STRING,29
,Connected { (,8
,P1 { (,9
,P2 { (,9
,args: { <mover>,1
,{ <mover>,1
,* { 3,12
,STRING { #1,2
,{ #1,5
,meta { (,1
,All { (,2
,Orthogonal { (,4
,args: { <smallSide>,8
,{ <smallSide>,8
,P3 { (,1
,args: { <nonMover>,1
,args: { <playRules>,1
,{ <nonMover>,1
,{ <playRules>,1
,rotations { N,1
,numSides:4 { (,2
,args: { <target_zone>,1
,{ <target_zone>,1
,start { <Board:seed>,1
,{ <Board:seed>,1
,directions { NW,6
,{ NW,6
,. { {,1
,{ { F,11
,} { F,9
,args: { <BoardDef>,1
,cells: { 0,14
,{ <BoardDef>,1
,equipment { <Model:board>,1
,{ <Model:board>,1
,args: { <exact>,1
,{ <exact>,1
,7 { 0,1
,8 { 0,1
,9 { 0,1
,10 { 0,1
,11 { 0,1
,12 { 0,1
,13 { 0,1
,14 { 0,1
,15 { 0,1
,16 { 0,1
,17 { 0,1
,args: { <player1>,1
,{ <player1>,1
,vertices: { 8,1
,{ { 7,5
,intersect { (,1
,args: { <where>,1
,{ <where>,1
,end { Shape,1
,{ Shape,1
,args: { <players>,2
,{ <players>,2
,{ { 26,1
,args: { <choice>,1
,{ <choice>,1
,sites { 57,1
,sites { 81,1
,} { 81,1
,priority { Move,1
,{ 81,4
,{ Move,1
,vertices: { 4,1
,} { 21,39
,whats: { 1,2
,whats: { 2,1
,cells: { 7,1
,phases: { <Rules:play>,2
,{ <Rules:play>,2
,sites { 73,1
,sites { 137,1
,sites { 99,1
,{ 137,3
,args: { <activate>,2
,args: { <version>,2
,sites { 104,1
,{ <activate>,2
,{ <version>,2
,{ 104,3
,args: { <captureType>,1
,{ <captureType>,1
,union { <Board:startP1>,1
,union { <Board:startP2>,1
,{ <Board:startP1>,1
,{ <Board:startP2>,1
,or { Capture,1
,{ Capture,1
,args: { <boardSize>,2
,{ <boardSize>,2
,Cell { STRING,1
,directions { FL,10
,directions { BL,6
,{ FL,10
,{ BL,6
,step: { {,11
,start { <Start:rule>,1
,{ <Start:rule>,1
,} { 70,3
,} { 72,4
,} { 64,4
,{ 70,5
,{ 64,7
,args: { <rules>>,1
,{ <rules>>,1
,{ { -0,2
,equipment { <Start:board>,1
,{ <Start:board>,1
,start { <Start>,2
,{ <Start>,3
,vertices: { 1,1
,} { 66,4
,} { 76,3
,} { 68,5
,{ 66,9
,{ 68,7
,args: { <armSize>,1
,{ <armSize>,1
,args: { <promotedCaptureMove>,1
,{ <promotedCaptureMove>,1
,directions { BR,50
,{ BR,50
,Leap { {,4
,sites { 52,1
,sites { 44,1
,args: { <murray>,1
,{ <murray>,1
,piece { STRING,35
,STRING { N,2
,} { S,2
,STRING { WNW,6
,} { WSW,6
,STRING { NNW,8
,} { SSW,6
,{ S,3
,{ WNW,7
,{ WSW,6
,{ NNW,8
,{ SSW,6
,Random { (,2
,} { SSE,2
,STRING { <BoardConfig:RookLeft2Start>,1
,args: { <BoardLayout>,1
,cells: { 36,1
,{ SSE,2
,{ <BoardConfig:RookLeft2Start>,1
,{ <BoardLayout>,1
,start { <NumOfPlayers:PieceSetup>,2
,args: { <NumPlayers>,2
,{ <NumOfPlayers:PieceSetup>,2
,{ <NumPlayers>,2
,args: { <Pawn1>,1
,{ <Pawn1>,1
,directions { S,1
,directions { E,58
,directions { SW,1
,directions { SE,1
,STRING { {,6
,{ E,58
,{ SW,1
,{ SE,1
,args: { <doubleStep>,1
,{ <doubleStep>,1
,components: { STRING,96
,directions { WNW,1
,args: { <PlacementConditions>,1
,{ <PlacementConditions>,1
,} { L,10
,} { R,4
,{ L,10
,piece { (,1
,directions { Backward,12
,directions { Rightwards,8
,directions { Backwards,25
,directions { Leftward,1
,start { Row,3
,{ Backward,12
,{ Rightwards,8
,{ Backwards,25
,{ Leftward,1
,{ Row,3
,start { <PiecePlacement:PiecePlacement>,1
,args: { <PiecePlacement>,1
,{ <PiecePlacement:PiecePlacement>,1
,{ <PiecePlacement>,1
,P1 { 3,3
,P1 { 4,1
,P2 { 66,4
,P2 { 67,1
,P1 { 2,1
,P2 { 30,1
,start { <Player:team>,5
,2 { P4,5
,STRING { 21,10
,2 { P5,5
,2 { P6,5
,STRING { 33,22
,2 { P7,5
,STRING { 34,16
,2 { P8,5
,2 { P9,5
,STRING { 40,6
,STRING { 41,10
,STRING { 42,5
,STRING { 43,5
,STRING { 44,6
,{ <Player:team>,5
,{ P4,7
,{ P5,5
,{ P6,5
,{ P7,5
,{ P8,5
,{ P9,5
,P2 { 24,1
,Hidden { What,4
,{ What,4
,start { <Player:teams>,1
,{ <Player:teams>,1
,args: { <name>,2
,{ <name>,2
,{ { -1,2
,{ { 16,1
,concentric { 26,1
,) { <Row:track>,1
,{ <Row:track>,1
,args: { <to>,2
,{ <to>,2
,concentric { 49,1
,STRING { 48,8
,{ 49,5
,{ { 9,3
,STRING { 144,1
,{ 144,2
,directions { #1,1
,Rotation { 0,2
,) { #1,1
,sites { 343,1
,sites { 395,1
,sites { 449,1
,sites { 499,1
,sites { 939,1
,sites { 932,1
,sites { 677,1
,sites { 726,1
,{ 343,3
,{ 395,2
,{ 449,2
,{ 499,2
,{ 939,1
,{ 932,2
,{ 677,1
,{ 726,2
,by:Mover { STRING,3
,* { (,1
,start { <Scenario:buildingSetup>,1
,and { <FogOfWar:EachMove>,2
,args: { <playerMaps>,1
,4 { P4,2
,sites { },18
,args: { <AttackCheck>,1
,args: { <doctrine>,4
,{ <Scenario:buildingSetup>,1
,{ <FogOfWar:EachMove>,2
,{ <playerMaps>,1
,{ <AttackCheck>,1
,{ <doctrine>,4
,args: { <Move>,1
,{ <Move>,1
,args: { <moves>,1
,{ <moves>,1
,args: { <selGame>,2
,args: { <selScoring>,2
,args: { <gridType>,8
,{ <selGame>,2
,{ <selScoring>,2
,{ <gridType>,8
,P1 { <Board:regionsP1>,1
,P2 { <Board:regionsP2>,1
,{ <Board:regionsP1>,1
,{ <Board:regionsP2>,1
,phases: { STRING,3
,args: { <calculation>,1
,{ <calculation>,1
,args: { <distance>,1
,args: { <defs>,1
,{ <distance>,1
,{ <defs>,1
,args: { <updateOption>,1
,args: { <turnOption>,1
,{ <updateOption>,1
,{ <turnOption>,1
,} { 31,12
,} { 47,4
,} { 51,7
,addScore { P1,3
,end { <Version:result>,1
,{ <Version:result>,1
,args: { <play>,2
,{ <play>,2
,+ { <NumberPlayers:inGame>,1
,args: { <inGame>,1
,< { 2,4
,< { 3,3
,< { 4,4
,< { 5,3
,args: { <enemyHops>,1
,args: { <prioritySetting>,1
,args: { <method>,1
,args: { <location>,1
,args: { <discVal>,1
,{ <NumberPlayers:inGame>,1
,{ <inGame>,1
,{ <enemyHops>,1
,{ <prioritySetting>,1
,{ <method>,1
,{ <location>,1
,{ <discVal>,1
,args: { <stack>,1
,{ <stack>,1
,union { <Board:north>,1
,Orthogonal { <Board:north>,1
,Orthogonal { <Board:east>,1
,sites { 43,1
,sites { 149,1
,args: { <controlType>,2
,{ <Board:north>,2
,{ <Board:east>,1
,{ 149,3
,{ <controlType>,2
,args: { <color>,1
,{ <color>,1
,< { 8,2
,args: { <qtyMax>,1
,args: { <nbrMax>,1
,{ <qtyMax>,1
,{ <nbrMax>,1
,tri { 7,1
,< { 143,1
,< { 27,1
,< { 127,2
,< { 40,2
,< { 103,1
,< { 85,1
,< { 60,1
,< { 1,1
,< { 100,1
,args: { <starting>,1
,{ 143,2
,{ 127,4
,{ 103,2
,{ 100,1
,{ <starting>,1
,args: { <begin>,1
,{ <begin>,1
,equipment { <Players:board>,1
,{ <Players:board>,1
,args: { <row>,1
,{ <row>,1
,args: { <pile>,1
,{ <pile>,1
,regions { Columns,10
,satisfy { (,13
,set { {,10
,{ Columns,10
,hints { <Challenge:hints>,4
,{ <Challenge:hints>,4
,hints { (,4
,hint { 0,4
,hint { 1,6
,hint { 8,3
,hint { 21,6
,hint { 23,6
,hint { 24,4
,hint { 6,7
,hint { 9,5
,hint { 13,3
,hint { 16,4
,hint { 20,3
,hint { 17,4
,regions { 0,11
,regions { 17,5
,regions { 18,2
,regions { 27,4
,regions { 36,3
,regions { 45,3
,regions { 47,1
,regions { 51,1
,regions { 53,2
,regions { 1,4
,regions { 2,4
,regions { 14,3
,regions { 9,4
,regions { 20,1
,regions { 24,4
,{ { 53,1
,{ 53,6
,hint { 2,11
,hint { 5,7
,hint { 3,6
,hint { 4,6
,hint { 7,5
,hint { 14,5
,hint { 19,5
,hint { 25,4
,hint { 28,5
,hint { 31,6
,hint { 34,3
,hint { 37,3
,hint { 40,2
,hint { 46,4
,hint { 49,2
,hint { 53,2
,hint { 57,3
,hint { 61,2
,hint { 67,1
,hint { 75,1
,hint { 80,1
,hint { 85,2
,hint { 91,3
,hint { 97,3
,hint { 101,1
,hint { 105,2
,hint { 109,2
,hint { 112,2
,hint { 118,1
,hint { 121,2
,hint { 124,2
,hint { 127,2
,hint { 130,1
,hint { 134,1
,hint { 137,2
,hint { 141,2
,hint { 146,2
,hint { 149,1
,hint { 153,1
,hint { 32,1
,hint { 42,3
,hint { 10,2
,hint { 35,3
,hint { 64,2
,hint { 68,2
,hint { 51,4
,hint { 102,3
,hint { 116,2
,hint { 95,1
,hint { 86,2
,hint { 135,2
,hint { 89,1
,hint { 138,1
,hint { 94,2
,hint { 11,3
,hint { 43,3
,hint { 47,1
,hint { 56,2
,hint { 65,3
,hint { 73,1
,hint { 77,2
,hint { 81,2
,hint { 84,2
,hint { 88,2
,hint { 96,2
,hint { 106,1
,hint { 52,2
,hint { 33,3
,hint { 44,2
,hint { 48,4
,hint { 82,1
,hint { 93,2
,hint { 74,3
,hint { 78,2
,hint { 79,1
,{ 101,2
,{ 105,2
,{ 109,3
,{ 112,2
,{ 118,2
,{ 121,4
,{ 124,4
,{ 130,1
,{ 134,1
,{ 141,2
,{ 146,4
,{ 153,1
,{ 102,3
,{ 135,3
,{ 89,2
,{ 138,1
,{ 65,7
,{ 84,4
,{ 88,6
,{ 82,1
,args: { <hints>,1
,hint { 36,2
,hint { 41,1
,hint { 54,1
,hint { 58,1
,hint { 69,2
,hint { 70,1
,hint { 72,1
,{ <hints>,1
,{ 69,4
,regions { (,1
,regions { AllDirections,1
,{ AllDirections,1
,regions { 54,2
,regions { 64,1
,regions { 74,1
,regions { 3,5
,regions { 4,4
,regions { 5,2
,regions { 6,5
,regions { 7,1
,regions { 8,1
,regions { 30,3
,regions { 33,1
,regions { 57,1
,regions { 60,4
,regions { 88,3
,regions { 97,1
,regions { 106,1
,regions { 115,2
,regions { 124,1
,regions { 133,1
,regions { 142,3
,regions { 152,1
,regions { 162,1
,regions { 89,1
,regions { 90,1
,regions { 91,2
,regions { 92,1
,regions { 93,1
,regions { 94,2
,regions { 95,1
,regions { 96,1
,regions { 118,1
,regions { 121,1
,regions { 146,1
,regions { 149,1
,regions { 70,1
,regions { 80,2
,regions { 84,2
,regions { 356,1
,regions { 182,1
,regions { 183,3
,regions { 196,1
,regions { 206,1
,regions { 61,1
,regions { 62,1
,regions { 63,2
,regions { 352,1
,regions { 143,1
,regions { 144,1
,regions { 145,1
,regions { 87,1
,regions { 172,1
,regions { 189,1
,regions { 176,3
,regions { 190,1
,regions { 200,1
,regions { 210,2
,regions { 219,1
,regions { 228,1
,regions { 237,2
,regions { 246,1
,regions { 255,1
,regions { 177,1
,regions { 178,1
,regions { 179,2
,regions { 180,1
,regions { 181,1
,regions { 185,1
,regions { 187,1
,regions { 213,1
,regions { 216,1
,regions { 240,1
,regions { 243,1
,regions { 265,3
,regions { 278,1
,regions { 288,1
,regions { 298,2
,regions { 307,1
,regions { 316,1
,regions { 325,2
,regions { 334,1
,regions { 343,1
,regions { 269,1
,regions { 271,1
,regions { 272,2
,regions { 273,1
,regions { 274,1
,regions { 275,2
,regions { 276,1
,regions { 277,1
,regions { 301,1
,regions { 304,1
,regions { 346,1
,regions { 331,1
,} { 88,1
,} { 92,2
,} { 96,2
,} { 98,1
,} { 101,1
,} { 104,1
,} { 109,1
,} { 111,1
,} { 117,1
,} { 121,1
,} { 124,1
,} { 125,1
,} { 128,1
,} { 131,1
,} { 132,1
,} { 135,1
,} { 139,1
,} { 57,2
,} { 59,3
,} { 352,1
,} { 146,1
,} { 148,1
,} { 65,4
,} { 353,1
,} { 157,1
,} { 160,1
,} { 74,2
,} { 78,2
,} { 83,1
,} { 163,1
,} { 167,1
,} { 171,1
,} { 86,2
,} { 172,1
,} { 356,1
,} { 357,1
,} { 360,1
,} { 363,1
,} { 364,1
,} { 186,1
,} { 264,1
,} { 176,1
,} { 180,1
,} { 189,1
,} { 266,1
,} { 273,1
,} { 277,1
,} { 191,1
,} { 194,1
,} { 367,1
,} { 283,1
,} { 286,1
,} { 203,1
,} { 205,1
,} { 292,1
,} { 294,1
,} { 212,1
,} { 216,1
,} { 300,1
,} { 304,1
,} { 219,1
,} { 220,1
,} { 223,1
,} { 226,1
,} { 227,1
,} { 307,1
,} { 308,1
,} { 311,1
,} { 314,1
,} { 315,1
,} { 230,1
,} { 234,1
,} { 318,1
,} { 322,1
,} { 240,1
,} { 242,1
,} { 328,1
,} { 330,1
,} { 247,1
,} { 250,1
,} { 253,1
,} { 335,1
,} { 338,1
,} { 341,1
,} { 255,1
,} { 259,1
,} { 263,1
,} { 343,1
,} { 347,1
,} { 351,1
,{ 115,2
,{ 133,2
,{ 142,4
,{ 162,1
,{ 356,2
,{ 182,1
,{ 183,3
,{ 196,1
,{ 206,2
,{ 62,2
,{ 352,2
,{ 145,2
,{ 172,2
,{ 176,5
,{ 190,1
,{ 200,2
,{ 210,3
,{ 219,2
,{ 228,1
,{ 237,3
,{ 246,2
,{ 255,2
,{ 177,1
,{ 178,1
,{ 180,3
,{ 181,1
,{ 185,1
,{ 187,2
,{ 213,2
,{ 216,2
,{ 240,2
,{ 243,1
,{ 265,3
,{ 278,2
,{ 288,1
,{ 298,2
,{ 307,2
,{ 316,1
,{ 325,3
,{ 334,2
,{ 269,2
,{ 271,2
,{ 272,2
,{ 273,2
,{ 274,1
,{ 275,3
,{ 276,2
,{ 277,2
,{ 301,1
,{ 304,3
,{ 346,1
,{ 331,2
,{ 111,2
,{ 117,1
,{ 125,2
,{ 128,1
,{ 131,1
,{ 132,2
,{ 139,1
,{ 148,2
,{ 353,2
,{ 157,1
,{ 160,1
,{ 83,1
,{ 163,1
,{ 167,2
,{ 171,2
,{ 357,1
,{ 360,1
,{ 363,2
,{ 364,2
,{ 186,1
,{ 264,1
,{ 266,2
,{ 191,1
,{ 194,2
,{ 367,1
,{ 283,2
,{ 286,1
,{ 203,2
,{ 205,1
,{ 292,1
,{ 294,1
,{ 212,2
,{ 300,2
,{ 220,1
,{ 223,2
,{ 226,1
,{ 308,2
,{ 311,1
,{ 314,1
,{ 315,2
,{ 230,1
,{ 234,1
,{ 318,2
,{ 322,2
,{ 242,2
,{ 328,1
,{ 330,2
,{ 247,1
,{ 250,1
,{ 253,2
,{ 338,1
,{ 341,2
,{ 259,1
,{ 263,1
,{ 347,1
,{ 351,2
,hint { 12,2
,hint { 15,4
,hint { 26,2
,hint { 27,3
,hint { 22,1
,hint { 29,1
,hint { 30,1
,hint { 39,1
,hint { 45,1
,hint { 50,1
,hint { 55,1
,hint { 59,1
,hint { 66,1
,hint { 71,1
,hint { 90,1
,hint { 98,1
,hint { 103,1
,hint { 104,1
,hint { 108,1
,hint { 111,1
,hint { 114,1
,hint { 125,1
,hint { 129,1
,hint { 132,1
,hint { 133,1
,hint { 140,1
,hint { 142,1
,hint { 145,1
,hint { 148,1
,hint { 152,1
,hint { 154,1
,hint { 158,1
,hint { 159,1
,hint { 165,1
,hint { 166,1
,hint { 167,1
,hint { 169,1
,hint { 171,1
,hint { 174,1
,hint { 175,1
,hint { 176,1
,hint { 180,1
,hint { 187,1
,hint { 188,1
,hint { 194,1
,hint { 195,1
,hint { 197,1
,hint { 199,1
,hint { 200,1
,hint { 201,1
,hint { 202,1
,hint { 203,1
,hint { 206,1
,hint { 207,1
,hint { 210,1
,hint { 212,1
,hint { 213,1
,hint { 215,1
,hint { 217,1
,hint { 218,1
,hint { 221,1
,hint { 222,1
,hint { 223,1
,hint { 224,1
,hint { 225,1
,hint { 229,1
,hint { 235,1
,hint { 236,1
,hint { 237,1
,hint { 242,1
,hint { 246,1
,hint { 249,1
,hint { 251,1
,hint { 253,1
,hint { 256,1
,hint { 262,1
,hint { 266,1
,hint { 267,1
,hint { 269,1
,hint { 271,1
,hint { 275,1
,hint { 276,1
,hint { 278,1
,hint { 279,1
,hint { 280,1
,hint { 283,1
,hint { 284,1
,hint { 287,1
,hint { 289,1
,hint { 290,1
,hint { 291,1
,hint { 297,1
,hint { 299,1
,hint { 300,1
,hint { 302,1
,hint { 304,1
,hint { 306,1
,hint { 308,1
,hint { 309,1
,hint { 310,1
,hint { 313,1
,hint { 315,1
,hint { 318,1
,hint { 319,1
,hint { 322,1
,hint { 325,1
,hint { 330,1
,hint { 331,1
,hint { 334,1
,hint { 336,1
,hint { 339,1
,hint { 341,1
,hint { 344,1
,hint { 345,1
,hint { 349,1
,hint { 351,1
,hint { 353,1
,hint { 354,1
,hint { 359,1
,hint { 361,1
,hint { 363,1
,hint { 364,1
,hint { 366,1
,hint { 370,1
,hint { 371,1
,hint { 374,1
,hint { 377,1
,hint { 379,1
,hint { 381,1
,hint { 382,1
,hint { 383,1
,hint { 384,1
,hint { 385,1
,hint { 387,1
,hint { 388,1
,hint { 391,1
,hint { 393,1
,hint { 395,1
,hint { 397,1
,hint { 400,1
,hint { 401,1
,hint { 403,1
,hint { 408,1
,hint { 410,1
,hint { 411,1
,hint { 413,1
,hint { 416,1
,hint { 418,1
,hint { 419,1
,hint { 422,1
,hint { 423,1
,hint { 425,1
,hint { 427,1
,hint { 429,1
,hint { 434,1
,hint { 435,1
,hint { 436,1
,hint { 439,1
,hint { 441,1
,hint { 442,1
,hint { 445,1
,hint { 447,1
,hint { 448,1
,hint { 449,1
,hint { 450,1
,hint { 454,1
,hint { 458,1
,hint { 461,1
,hint { 463,1
,hint { 464,1
,hint { 465,1
,hint { 467,1
,hint { 468,1
,hint { 469,1
,hint { 470,1
,hint { 471,1
,hint { 472,1
,hint { 476,1
,hint { 478,1
,hint { 479,1
,hint { 481,1
,hint { 484,1
,hint { 485,1
,hint { 487,1
,hint { 489,1
,hint { 491,1
,hint { 496,1
,hint { 499,1
,hint { 501,1
,hint { 503,1
,hint { 504,1
,hint { 506,1
,hint { 507,1
,hint { 510,1
,hint { 514,1
,hint { 520,1
,hint { 522,1
,hint { 524,1
,hint { 525,1
,hint { 528,1
,hint { 533,1
,hint { 535,1
,hint { 536,1
,hint { 538,1
,hint { 539,1
,hint { 540,1
,hint { 541,1
,hint { 544,1
,hint { 548,1
,hint { 549,1
,hint { 553,1
,hint { 554,1
,hint { 555,1
,hint { 556,1
,hint { 560,1
,hint { 563,1
,hint { 564,1
,hint { 565,1
,hint { 571,1
,hint { 573,1
,hint { 575,1
,hint { 577,1
,hint { 579,1
,hint { 583,1
,hint { 586,1
,hint { 589,1
,hint { 590,1
,hint { 591,1
,hint { 592,1
,hint { 594,1
,hint { 595,1
,hint { 599,1
,hint { 600,1
,hint { 602,1
,hint { 603,1
,hint { 604,1
,hint { 607,1
,hint { 608,1
,hint { 613,1
,hint { 616,1
,hint { 618,1
,hint { 621,1
,hint { 623,1
,hint { 625,1
,hint { 626,1
,hint { 629,1
,hint { 632,1
,hint { 639,1
,hint { 642,1
,hint { 644,1
,hint { 648,1
,hint { 649,1
,hint { 650,1
,hint { 654,1
,hint { 656,1
,hint { 658,1
,hint { 659,1
,hint { 660,1
,hint { 661,1
,hint { 662,1
,hint { 665,1
,hint { 667,1
,hint { 671,1
,hint { 673,1
,hint { 674,1
,hint { 678,1
,hint { 680,1
,hint { 683,1
,hint { 684,1
,hint { 686,1
,hint { 687,1
,hint { 691,1
,hint { 694,1
,hint { 697,1
,hint { 698,1
,hint { 702,1
,hint { 706,1
,hint { 707,1
,hint { 710,1
,hint { 712,1
,hint { 714,1
,hint { 715,1
,hint { 716,1
,hint { 717,1
,hint { 720,1
,hint { 721,1
,hint { 722,1
,hint { 725,1
,hint { 726,1
,hint { 729,1
,hint { 731,1
,hint { 733,1
,hint { 735,1
,hint { 736,1
,hint { 738,1
,hint { 742,1
,hint { 744,1
,hint { 748,1
,hint { 753,1
,hint { 754,1
,hint { 756,1
,hint { 757,1
,hint { 759,1
,hint { 763,1
,hint { 764,1
,hint { 767,1
,hint { 769,1
,hint { 772,1
,hint { 773,1
,hint { 774,1
,hint { 778,1
,hint { 779,1
,hint { 780,1
,hint { 782,1
,hint { 784,1
,hint { 785,1
,hint { 786,1
,hint { 788,1
,hint { 790,1
,hint { 791,1
,hint { 793,1
,hint { 799,1
,hint { 802,1
,hint { 805,1
,hint { 806,1
,hint { 809,1
,hint { 810,1
,hint { 812,1
,hint { 813,1
,hint { 816,1
,hint { 818,1
,hint { 821,1
,hint { 829,1
,hint { 830,1
,hint { 836,1
,hint { 838,1
,hint { 839,1
,hint { 840,1
,hint { 841,1
,hint { 842,1
,hint { 843,1
,hint { 844,1
,hint { 846,1
,hint { 848,1
,hint { 852,1
,hint { 853,1
,hint { 854,1
,hint { 861,1
,hint { 863,1
,hint { 865,1
,hint { 866,1
,hint { 867,1
,hint { 868,1
,hint { 870,1
,hint { 871,1
,hint { 873,1
,hint { 874,1
,hint { 876,1
,hint { 877,1
,hint { 878,1
,hint { 879,1
,hint { 881,1
,hint { 884,1
,hint { 893,1
,hint { 894,1
,hint { 895,1
,hint { 897,1
,hint { 902,1
,hint { 903,1
,hint { 904,1
,hint { 907,1
,hint { 908,1
,hint { 911,1
,hint { 915,1
,hint { 919,1
,hint { 926,1
,hint { 928,1
,hint { 930,1
,hint { 932,1
,hint { 933,1
,hint { 935,1
,hint { 936,1
,hint { 937,1
,hint { 938,1
,hint { 941,1
,hint { 942,1
,hint { 945,1
,hint { 946,1
,hint { 949,1
,hint { 953,1
,hint { 956,1
,hint { 957,1
,hint { 959,1
,hint { 962,1
,hint { 966,1
,hint { 967,1
,hint { 969,1
,hint { 971,1
,hint { 976,1
,hint { 977,1
,hint { 980,1
,hint { 984,1
,hint { 985,1
,hint { 988,1
,hint { 989,1
,hint { 990,1
,hint { 992,1
,hint { 995,1
,hint { 996,1
,hint { 998,1
,hint { 999,1
,hint { 1001,1
,hint { 1002,1
,hint { 1003,1
,hint { 1005,1
,hint { 1009,1
,hint { 1012,1
,hint { 1016,1
,hint { 1018,1
,hint { 1021,1
,hint { 1022,1
,hint { 1024,1
,hint { 1026,1
,hint { 1031,1
,hint { 1032,1
,hint { 1037,1
,hint { 1039,1
,hint { 1041,1
,hint { 1044,1
,hint { 1046,1
,hint { 1049,1
,hint { 1050,1
,hint { 1053,1
,hint { 1055,1
,hint { 1056,1
,hint { 1057,1
,hint { 1058,1
,hint { 1059,1
,hint { 1061,1
,hint { 1064,1
,hint { 1068,1
,hint { 1070,1
,hint { 1073,1
,hint { 1074,1
,hint { 1078,1
,hint { 1081,1
,hint { 1083,1
,hint { 1084,1
,hint { 1085,1
,hint { 1088,1
,hint { 1091,1
,hint { 1095,1
,hint { 1098,1
,hint { 1104,1
,hint { 1105,1
,hint { 1109,1
,hint { 1111,1
,hint { 1112,1
,hint { 1114,1
,hint { 1118,1
,hint { 1119,1
,hint { 1122,1
,hint { 1127,1
,hint { 1129,1
,hint { 1131,1
,hint { 1134,1
,hint { 1136,1
,hint { 1137,1
,hint { 1138,1
,hint { 1139,1
,hint { 1140,1
,hint { 1141,1
,hint { 1142,1
,hint { 1143,1
,hint { 1144,1
,hint { 1146,1
,hint { 1147,1
,hint { 1150,1
,hint { 1151,1
,hint { 1152,1
,hint { 1158,1
,hint { 1165,1
,hint { 1169,1
,hint { 1171,1
,hint { 1177,1
,hint { 1179,1
,hint { 1182,1
,hint { 1185,1
,hint { 1188,1
,hint { 1189,1
,hint { 1192,1
,hint { 1193,1
,hint { 1194,1
,hint { 1195,1
,hint { 1197,1
,hint { 1199,1
,hint { 1200,1
,hint { 1201,1
,hint { 1204,1
,hint { 1205,1
,hint { 1206,1
,hint { 1208,1
,hint { 1211,1
,hint { 1212,1
,hint { 1214,1
,hint { 1215,1
,hint { 1216,1
,hint { 1217,1
,hint { 1218,1
,hint { 1219,1
,hint { 1220,1
,hint { 1222,1
,hint { 1223,1
,hint { 1224,1
,hint { 1228,1
,hint { 1234,1
,hint { 1237,1
,hint { 1240,1
,hint { 1243,1
,hint { 1246,1
,hint { 1250,1
,hint { 1251,1
,hint { 1252,1
,hint { 1254,1
,hint { 1256,1
,hint { 1257,1
,hint { 1258,1
,hint { 1262,1
,hint { 1268,1
,hint { 1269,1
,hint { 1270,1
,hint { 1271,1
,hint { 1273,1
,hint { 1274,1
,hint { 1277,1
,hint { 1281,1
,hint { 1284,1
,hint { 1286,1
,hint { 1287,1
,hint { 1289,1
,hint { 1291,1
,hint { 1292,1
,hint { 1293,1
,hint { 1295,1
,hint { 1300,1
,hint { 1303,1
,hint { 1306,1
,hint { 1307,1
,hint { 1309,1
,hint { 1311,1
,hint { 1313,1
,hint { 1315,1
,hint { 1316,1
,hint { 1320,1
,hint { 1321,1
,hint { 1322,1
,hint { 1324,1
,hint { 1326,1
,hint { 1329,1
,hint { 1330,1
,hint { 1332,1
,hint { 1335,1
,hint { 1337,1
,hint { 1340,1
,hint { 1341,1
,hint { 1343,1
,hint { 1345,1
,hint { 1348,1
,{ 108,1
,{ 114,1
,{ 129,1
,{ 140,1
,{ 154,1
,{ 158,1
,{ 159,1
,{ 165,1
,{ 166,1
,{ 169,1
,{ 174,1
,{ 175,1
,{ 195,1
,{ 197,1
,{ 199,1
,{ 201,1
,{ 202,1
,{ 207,1
,{ 215,1
,{ 217,1
,{ 218,1
,{ 221,1
,{ 222,1
,{ 225,1
,{ 229,1
,{ 235,1
,{ 236,1
,{ 249,1
,{ 256,1
,{ 262,1
,{ 267,1
,{ 279,1
,{ 280,1
,{ 284,1
,{ 287,1
,{ 289,1
,{ 290,1
,{ 291,1
,{ 297,1
,{ 299,1
,{ 302,1
,{ 306,1
,{ 309,1
,{ 310,1
,{ 313,1
,{ 319,1
,{ 336,1
,{ 339,1
,{ 344,1
,{ 345,1
,{ 349,1
,{ 354,1
,{ 359,1
,{ 361,1
,{ 366,1
,{ 370,1
,{ 371,1
,{ 374,1
,{ 377,1
,{ 379,1
,{ 381,1
,{ 382,1
,{ 383,1
,{ 384,1
,{ 385,1
,{ 387,1
,{ 388,1
,{ 391,1
,{ 397,1
,{ 400,1
,{ 403,1
,{ 408,1
,{ 410,1
,{ 411,1
,{ 413,1
,{ 416,1
,{ 418,1
,{ 419,1
,{ 422,1
,{ 423,1
,{ 425,1
,{ 427,1
,{ 429,1
,{ 434,1
,{ 435,1
,{ 436,1
,{ 439,1
,{ 441,1
,{ 442,1
,{ 445,1
,{ 447,1
,{ 448,1
,{ 450,1
,{ 454,1
,{ 458,1
,{ 461,1
,{ 463,1
,{ 464,1
,{ 465,1
,{ 467,1
,{ 468,1
,{ 469,1
,{ 470,1
,{ 471,1
,{ 472,1
,{ 478,1
,{ 479,1
,{ 481,1
,{ 484,1
,{ 485,1
,{ 487,1
,{ 489,1
,{ 491,1
,{ 496,1
,{ 501,1
,{ 503,1
,{ 504,1
,{ 506,1
,{ 507,1
,{ 510,1
,{ 514,1
,{ 520,1
,{ 522,1
,{ 524,1
,{ 525,1
,{ 528,1
,{ 533,1
,{ 535,1
,{ 536,1
,{ 538,1
,{ 539,1
,{ 540,1
,{ 541,1
,{ 544,1
,{ 549,1
,{ 553,1
,{ 554,1
,{ 555,1
,{ 556,1
,{ 560,1
,{ 563,1
,{ 564,1
,{ 565,1
,{ 571,1
,{ 573,1
,{ 575,1
,{ 577,1
,{ 579,1
,{ 583,1
,{ 586,1
,{ 589,1
,{ 590,1
,{ 591,1
,{ 592,1
,{ 594,1
,{ 595,1
,{ 599,1
,{ 600,1
,{ 602,1
,{ 603,1
,{ 604,1
,{ 607,1
,{ 608,1
,{ 613,1
,{ 616,1
,{ 618,1
,{ 621,1
,{ 623,1
,{ 625,1
,{ 626,1
,{ 629,1
,{ 632,1
,{ 639,1
,{ 642,1
,{ 644,1
,{ 648,1
,{ 649,1
,{ 650,1
,{ 654,1
,{ 656,1
,{ 658,1
,{ 659,1
,{ 660,1
,{ 661,1
,{ 662,1
,{ 665,1
,{ 667,1
,{ 671,1
,{ 673,1
,{ 674,1
,{ 678,1
,{ 680,1
,{ 683,1
,{ 684,1
,{ 686,1
,{ 687,1
,{ 691,1
,{ 694,1
,{ 697,1
,{ 698,1
,{ 702,1
,{ 706,1
,{ 707,1
,{ 710,1
,{ 712,1
,{ 714,1
,{ 715,1
,{ 716,1
,{ 717,1
,{ 720,1
,{ 721,1
,{ 722,1
,{ 725,1
,{ 729,1
,{ 731,1
,{ 733,1
,{ 735,1
,{ 736,1
,{ 738,1
,{ 742,1
,{ 744,1
,{ 748,1
,{ 753,1
,{ 754,1
,{ 756,1
,{ 757,1
,{ 759,1
,{ 763,1
,{ 764,1
,{ 767,1
,{ 769,1
,{ 772,1
,{ 773,1
,{ 774,1
,{ 778,1
,{ 779,1
,{ 780,1
,{ 782,1
,{ 784,1
,{ 785,1
,{ 786,1
,{ 788,1
,{ 790,1
,{ 791,1
,{ 793,1
,{ 799,1
,{ 802,1
,{ 805,1
,{ 806,1
,{ 809,1
,{ 810,1
,{ 812,1
,{ 813,1
,{ 816,1
,{ 818,1
,{ 821,1
,{ 829,1
,{ 830,1
,{ 836,1
,{ 838,1
,{ 839,1
,{ 840,1
,{ 841,1
,{ 842,1
,{ 843,1
,{ 844,1
,{ 846,1
,{ 848,1
,{ 852,1
,{ 853,1
,{ 854,1
,{ 861,1
,{ 863,1
,{ 865,1
,{ 866,1
,{ 867,1
,{ 868,1
,{ 870,1
,{ 871,1
,{ 873,1
,{ 874,1
,{ 876,1
,{ 877,1
,{ 878,1
,{ 879,1
,{ 881,1
,{ 884,1
,{ 893,1
,{ 894,1
,{ 895,1
,{ 897,1
,{ 902,1
,{ 903,1
,{ 904,1
,{ 907,1
,{ 908,1
,{ 911,1
,{ 915,1
,{ 919,1
,{ 926,1
,{ 928,1
,{ 930,1
,{ 933,1
,{ 935,1
,{ 936,1
,{ 937,1
,{ 938,1
,{ 941,1
,{ 942,1
,{ 945,1
,{ 946,1
,{ 949,1
,{ 953,1
,{ 956,1
,{ 957,1
,{ 959,1
,{ 962,1
,{ 966,1
,{ 967,1
,{ 969,1
,{ 971,1
,{ 976,1
,{ 977,1
,{ 980,1
,{ 984,1
,{ 985,1
,{ 988,1
,{ 989,1
,{ 990,1
,{ 992,1
,{ 995,1
,{ 996,1
,{ 998,1
,{ 999,1
,{ 1001,1
,{ 1002,1
,{ 1003,1
,{ 1005,1
,{ 1009,1
,{ 1012,1
,{ 1016,1
,{ 1018,1
,{ 1021,1
,{ 1022,1
,{ 1024,1
,{ 1026,1
,{ 1031,1
,{ 1032,1
,{ 1037,1
,{ 1039,1
,{ 1041,1
,{ 1044,1
,{ 1046,1
,{ 1049,1
,{ 1050,1
,{ 1053,1
,{ 1055,1
,{ 1056,1
,{ 1057,1
,{ 1058,1
,{ 1059,1
,{ 1061,1
,{ 1064,1
,{ 1068,1
,{ 1070,1
,{ 1073,1
,{ 1074,1
,{ 1078,1
,{ 1081,1
,{ 1083,1
,{ 1084,1
,{ 1085,1
,{ 1088,1
,{ 1091,1
,{ 1095,1
,{ 1098,1
,{ 1104,1
,{ 1105,1
,{ 1109,1
,{ 1111,1
,{ 1112,1
,{ 1114,1
,{ 1118,1
,{ 1119,1
,{ 1122,1
,{ 1127,1
,{ 1129,1
,{ 1131,1
,{ 1134,1
,{ 1136,1
,{ 1137,1
,{ 1138,1
,{ 1139,1
,{ 1140,1
,{ 1141,1
,{ 1142,1
,{ 1143,1
,{ 1144,1
,{ 1146,1
,{ 1147,1
,{ 1150,1
,{ 1151,1
,{ 1152,1
,{ 1158,1
,{ 1165,1
,{ 1169,1
,{ 1171,1
,{ 1177,1
,{ 1179,1
,{ 1182,1
,{ 1185,1
,{ 1188,1
,{ 1189,1
,{ 1192,1
,{ 1193,1
,{ 1194,1
,{ 1195,1
,{ 1197,1
,{ 1199,1
,{ 1200,1
,{ 1201,1
,{ 1204,1
,{ 1205,1
,{ 1206,1
,{ 1208,1
,{ 1211,1
,{ 1212,1
,{ 1214,1
,{ 1215,1
,{ 1216,1
,{ 1217,1
,{ 1218,1
,{ 1219,1
,{ 1220,1
,{ 1222,1
,{ 1223,1
,{ 1224,1
,{ 1228,1
,{ 1234,1
,{ 1237,1
,{ 1240,1
,{ 1243,1
,{ 1246,1
,{ 1250,1
,{ 1251,1
,{ 1252,1
,{ 1254,1
,{ 1256,1
,{ 1257,1
,{ 1258,1
,{ 1262,1
,{ 1268,1
,{ 1269,1
,{ 1270,1
,{ 1271,1
,{ 1273,1
,{ 1274,1
,{ 1277,1
,{ 1281,1
,{ 1284,1
,{ 1286,1
,{ 1287,1
,{ 1289,1
,{ 1291,1
,{ 1292,1
,{ 1293,1
,{ 1295,1
,{ 1300,1
,{ 1303,1
,{ 1306,1
,{ 1307,1
,{ 1309,1
,{ 1311,1
,{ 1313,1
,{ 1315,1
,{ 1316,1
,{ 1320,1
,{ 1321,1
,{ 1322,1
,{ 1324,1
,{ 1326,1
,{ 1329,1
,{ 1330,1
,{ 1332,1
,{ 1335,1
,{ 1337,1
,{ 1340,1
,{ 1341,1
,{ 1343,1
,{ 1345,1
,{ 1348,1
,} { 73,2
,} { 75,3
,} { 55,2
,cells: { 73,1
,regions { 39,3
,regions { 35,2
,regions { 42,1
,regions { 44,1
,set { <Challenge:start>,1
,} { 67,1
,} { 71,2
,} { 87,1
,{ <Challenge:start>,1
,regions { 11,1
,regions { 69,1
,regions { 48,1
,regions { 72,1
,} { 53,1
,} { 49,1
,} { 61,1
,} { 62,1
,} { 63,1
,} { 69,1
,} { 77,1
,} { 79,1
,sites { #1,1
,start { <challenge:start>,2
,STRING { 9,1
,STRING { 49,1
,STRING { 46,1
,STRING { 52,1
,STRING { 51,1
,STRING { 45,1
,{ <challenge:start>,2
,concentric { 5,1
,Target { 2,2
,STRING { <Board:start1>,1
,STRING { <Board:start2>,1
,STRING { <Board:walls>,1
,args: { <walls>,2
,{ <Board:start1>,1
,{ <Board:start2>,1
,{ <Board:walls>,3
,{ <walls>,2
,STRING { <Board:exit>,2
,sites { <Board:walls>,2
,{ <Board:exit>,2
,Random { <Version:random>,1
,Target { <Version:order>,2
,{ <Version:random>,1
,{ <Version:order>,2
,{ { -2,1
,) { STRING,1
,args: { <boardHeight>,1
,args: { <extraBoardSize>,1
,{ <boardHeight>,1
,{ <extraBoardSize>,1
,args: { <threat>,1
,{ <threat>,1
,sites { <Start>,1
|,Forward | Backward,2
,| Backward,2
everyone's,after everyone's had,4
,everyone's had,4
},) } ),4687
,STRING } ),2054
,<dogs> } {,1
,} ),9198
,} {,5273
,18 } ),23
,) } (,290
,} (,378
,5 } ),46
,<tigerSites> } {,1
,<type> } {,44
,0 } {,297
,1 } },10
,} } {,17
,1 } {,250
,2 } },15
,2 } {,310
,3 } },20
,3 } {,267
,4 } },30
,} } },3
,} } ),208
,<playMove> } {,1
,} },339
,<tigers> } {,1
,8 } {,276
,7 } {,245
,9 } },22
,9 } {,202
,8 } },28
,<hare> } {,1
,<coyote> } {,1
,{ } ),78
,<initTiger> } {,1
,5 } },27
,15 } {,97
,11 } {,183
,STRING } >,51
,} } vertices:,2
,25 } ),21
,} >,281
,} vertices:,2
,<leopard> } {,1
,<geese> } {,1
,Leftward } ),95
,12 } ),42
,14 } {,85
,15 } },4
,4 } ),33
,4 } {,338
,-3 } {,2
,11 } },6
,<leopardGoal> } {,1
,18 } {,83
,17 } {,98
,16 } {,79
,10 } {,228
,19 } {,83
,5 } {,252
,12 } },10
,6 } {,312
,. } ),5
,3 } ),23
,FL } ),237
,<p1Moves> } {,1
,-2 } {,3
,-2 } },2
,} } edges:,80
,31 } {,20
,29 } {,31
,32 } },4
,} edges:,81
,<pieces> } {,2
,12 } {,145
,13 } {,128
,13 } },4
,<dog> } {,1
,6 } },6
,19 } ),3
,2 } ),17
,21 } {,68
,23 } {,70
,25 } {,48
,27 } {,34
,33 } {,18
,35 } {,10
,37 } {,3
,39 } {,5
,41 } {,7
,43 } {,3
,45 } {,6
,47 } {,4
,49 } {,3
,51 } {,5
,53 } {,3
,55 } {,4
,57 } {,1
,59 } {,1
,61 } {,1
,63 } },1
,<bean> } {,1
,14 } },3
,<num> } {,27
,* } ),133
,<rememberHopCapture> } {,1
,W } ),71
,SW } ),12
,<play> } {,10
,) } >,146
,<numKings> } {,1
,333 } },1
,17 } },1
,<Variant:pieceMoves> } ),1
,<endRules> } {,2
,<seleucid> } {,2
,53 } ),8
,<carnarvon> } {,1
,76 } {,4
,76 } },1
,34 } ),10
,P3 } ),28
,P4 } ),29
,End } P1,20
,End } P2,20
,) } use:Vertex,82
,} P1,122
,} P2,122
,} use:Vertex,83
,13 } P1,4
,13 } P2,14
,17 } ),16
,12 } P1,13
,12 } P2,9
,<rules> } {,19
,<move> } {,6
,#2 } ),6
,6 } num:3,2
,56 } ),4
,1 } ),20
,90 } ),1
,50 } ),3
,} num:3,4
,25 } P1,6
,Rightward } ),3
,> } {,1
,5 } P1,2
,17 } P2,4
,14 } ),15
,24 } ),6
,1 } P2,4
,10 } P3,1
,22 } P4,1
,13 } ),14
,10 } ),16
,22 } ),18
,23 } ),25
,11 } ),21
,0 } ),5
,} P3,64
,} P4,63
,0 } P2,26
,28 } {,28
,36 } {,8
,23 } },5
,<Players:track4> } use:Vertex,1
,45 } ),8
,32 } ),5
,} } num:4,4
,<track4> } {,1
,<piece> } {,3
,** } ),27
,STRING } variations:,105
,} num:4,4
,} variations:,105
,0 } P1,32
,25 } P2,2
,7 } ),18
,P2 } ),27
,26 } {,49
,44 } },1
,0 } },40
,<Player:trackP3P4> } ),1
,52 } ),1
,<Player:startP3P4> } ),1
,<Player:end> } ),1
,<end> } {,5
,7 } P1,3
,20 } P2,3
,9 } ),18
,15 } ),14
,23 } directed:True,1
,} directed:True,14
,<sites> } {,1
,5 } >,5
,11 } >,1
,27 } >,1
,23 } >,1
,Home } ),5
,<ludus> } {,1
,<track> } {,8
,19 } >,1
,24 } >,1
,29 } >,1
,34 } >,1
,39 } >,1
,44 } >,1
,49 } >,1
,54 } >,1
,59 } >,1
,64 } >,1
,69 } >,1
,74 } >,1
,79 } >,1
,84 } >,1
,89 } >,1
,94 } >,1
,99 } >,1
,20 } ),17
,28 } directed:True,2
,<Players:start> } ),3
,<start> } {,37
,28 } P1,9
,28 } P2,9
,P1 } ),23
,28 } P3,7
,28 } P4,6
,24 } {,67
,6 } ),33
,42 } ),4
,-1 } {,2
,20 } },2
,<Players:endTracks> } ),1
,<playingTeamPieces> } {,1
,57 } ),8
,P5 } ),9
,P6 } ),14
,27 } ),8
,40 } ),7
,<Track> } ),2
,<dice> } {,2
,<throw> } {,1
,Reconstruct } ),9
,17 } P1,1
,8 } ),31
,23 } P1,16
,11 } P2,1
,20 } >,1
,25 } >,1
,30 } >,1
,35 } >,1
,40 } >,1
,45 } >,1
,50 } >,1
,55 } >,1
,60 } >,2
,65 } >,1
,70 } >,1
,75 } >,1
,80 } >,1
,85 } >,2
,90 } >,1
,95 } >,1
,100 } >,1
,30 } },4
,<Players:home> } ),2
,<sizeHome> } {,1
,<size> } {,80
,<home> } {,1
,<Version:home> } ),1
,<Version:start> } ),4
,21 } },1
,98 } state:,1
,190 } state:,1
,80 } state:,1
,216 } state:,1
,} state:,4
,2 } P3,2
,3 } P4,2
,value } ),1
,<Player:trackP4> } ),3
,<Player:startP4> } ),3
,<trackP4> } {,3
,<map> } {,1
,64 } ),1
,88 } ),1
,36 } ),6
,92 } ),1
,182 } ),1
,<Board:start> } ),3
,<AIstyle> } {,1
,35 } ),10
,STRING } (,71
,STRING } STRING,8
,} STRING,52
,0 } directed:True,5
,<init> } {,6
,<rule> } {,14
,E } ),7
,S } ),46
,44 } ),15
,39 } },7
,34 } loop:True,10
,35 } loop:True,11
,) } use:Edge,9
,39 } ),5
,10 } },15
,} } num:3,2
,} loop:True,127
,} use:Edge,9
,<Player:start> } ),2
,<Board:rangeP1> } ),1
,<Board:rangeP2> } ),1
,<End:event> } ),1
,<limit> } {,5
,<rangeP2> } {,1
,<event> } {,1
,66 } {,7
,22 } {,44
,40 } {,6
,50 } {,3
,46 } {,4
,38 } {,1
,50 } },1
,<goal> } {,1
,30 } ),10
,48 } ),3
,<wikipedia> } {,1
,71 } {,1
,107 } {,1
,143 } {,1
,179 } {,1
,215 } {,1
,251 } {,1
,287 } {,1
,323 } {,1
,359 } {,1
,395 } {,1
,431 } {,1
,467 } {,1
,503 } {,1
,539 } {,1
,575 } {,1
,35 } },1
,} } cells:,1
,548 } },1
,<Player:track916> } ),1
,16 } num:2,1
,336 } ),1
,<track916> } {,1
,390 } >,1
,394 } >,1
,402 } >,1
,} cells:,1
,} num:2,4
,6 } num:2,2
,<Player:num> } ),1
,<Player:center> } ),1
,<tracks> } {,10
,16 } P1,1
,32 } P1,1
,33 } P2,1
,34 } P3,1
,35 } P4,1
,48 } P1,1
,49 } P2,1
,50 } P3,1
,51 } P4,1
,52 } P5,1
,53 } P6,1
,64 } P1,1
,65 } P2,1
,66 } P3,1
,67 } P4,1
,68 } P5,1
,69 } P6,1
,70 } P7,1
,71 } P8,1
,80 } P1,1
,81 } P2,1
,82 } P3,1
,83 } P4,1
,84 } P5,1
,85 } P6,1
,86 } P7,1
,87 } P8,1
,88 } P9,1
,89 } P10,1
,} P5,57
,} P6,57
,} P7,47
,} P8,47
,} P9,37
,} P10,37
,<capture> } {,1
,75 } },1
,<movePiece> } {,1
,F } whats:,2
,} whats:,2
,<Players:regions> } ),1
,<pathRule> } {,1
,<Players:tracks> } ),2
,<Players:entries> } ),2
,<entries> } {,2
,<Player:teams> } ),2
,<teams> } {,1
,1 } directed:True,1
,STRING } 16,7
,} 16,21
,5 } directed:True,2
,85 } directed:True,1
,20 } {,72
,30 } {,24
,28 } },4
,<Player:init> } ),1
,4 } num:2,1
,<startRules> } {,1
,up } ),1
,<Player:initHorse> } 0,1
,<initHorse> } {,1
,} 0,60
,34 } {,14
,40 } },1
,84 } ),1
,1 } loop:True,2
,13 } loop:True,39
,37 } loop:True,1
,73 } loop:True,1
,121 } loop:True,1
,181 } loop:True,1
,253 } loop:True,1
,<track2> } {,16
,<Board:LeftInnerHolesP1> } ),1
,<Board:LeftInnerHolesP2> } ),1
,<InitTwoSeeds> } {,1
,<opening> } {,2
,<numSeed> } {,2
,<Board:HalfRightInnerP1> } ),1
,<Board:HalfRightInnerP2> } ),1
,<HalfRightInnerP2> } {,1
,<CW2> } {,1
,<Start:rules> } ),1
,21 } ),6
,<misoroPhase> } {,2
,2 } state:1,2
,2 } state:2,2
,3 } state:2,3
,3 } state:1,3
,} state:1,87
,} state:2,14
,<Row:specialHoles> } ),1
,<Row:singleHoles> } ),1
,<singleHoles> } {,1
,<Board:track2> } ),1
,<Board:regions> } ),2
,<regions> } {,2
,29 } ),9
,41 } ),9
,47 } ),8
,55 } ),6
,16 } ),10
,<Board:tracks> } ),1
,<CCW2> } {,2
,<innerInitP2> } {,1
,28 } ),7
,31 } ),4
,33 } ),3
,37 } ),5
,46 } ),2
,<Board:leftMostP2> } ),1
,<leftMostP2> } {,1
,<Board:rightMostInnerHoleP1> } ),1
,<Board:rightMostInnerHoleP2> } ),1
,<Board:thirdHoleInnerP2> } ),1
,<rightMostInnerHoleP2> } {,1
,<Board:stores> } ),1
,3 } loop:True,2
,9 } loop:True,2
,4 } loop:True,2
,12 } loop:True,2
,<trackCW2> } {,1
,45 } },1
,<Player:regions> } ),1
,<Player:scores> } ),1
,<numSeeds> } {,1
,<scores> } {,1
,1 } >,3
,2 } >,6
,2 } loop:True,2
,home } ),14
,<ruleSecondCapture> } {,1
,<trackDirection> } {,1
,<Board:centreMove> } ),1
,<centreMove> } {,1
,<stores> } {,1
,<sitesP2> } {,1
,9 } >,3
,10 } >,2
,13 } >,1
,hole } ),1
,<Row:hogon> } ),1
,<hogon> } {,1
,<usingHogon> } {,1
,7 } loop:True,1
,10 } loop:True,3
,<Board:homeTracks> } ),1
,<openingRegions> } {,1
,26 } ),10
,<value> } {,3
,holes } ),1
,<cond> } {,1
,F } numSides:4,4
,<result> } {,6
,} numSides:4,4
,7 } },10
,<Board:placement> } ),1
,<placement> } {,1
,<direction> } {,2
,STRING } count:29,1
,STRING } count:30,1
,} count:29,1
,} count:30,1
,<board> } {,3
,<number> } {,1
,<next> } {,1
,#1 } ),15
,<cornerSetup> } {,2
,<smallSide> } {,8
,<mover> } {,1
,<playRules> } {,3
,role } ),2
,move } ),2
,#3 } ),1
,<target_zone> } {,1
,<seed> } {,1
,STRING } count:1,6
,STRING } count:3,1
,} count:1,6
,} count:3,1
,SE } ),6
,<endScore> } {,1
,<shape> } {,1
,<3dSites> } {,1
,<piece2> } {,2
,F } {,23
,F } },11
,} } (,14
,<Board:ExtraCols> } ),1
,<ExtraCols> } {,1
,80 } ),6
,<exact> } {,1
,} } 6,1
,625 } 7,1
,3 } 8,1
,3 } 9,1
,01 } 10,1
,1725 } 11,1
,4375 } 12,1
,4375 } 13,1
,1725 } 14,1
,075 } 15,1
,075 } 16,1
,535 } 17,1
,535 } 18,1
,18 } edges:,1
,} 6,17
,} 7,12
,} 8,6
,} 9,4
,} 10,9
,} 11,4
,} 12,7
,} 13,6
,} 14,9
,} 15,9
,} 17,12
,} 18,2
,24 } },9
,18 } },5
,<player2> } {,1
,<where> } {,1
,) } if:,4
,} if:,4
,<players> } {,1
,<choice> } {,1
,74 } ),2
,77 } ),3
,89 } ),3
,80 } {,4
,F } #1,1
,} #1,1
,83 } ),1
,43 } state:1,1
,44 } state:2,1
,<distance> } {,3
,168 } ),3
,78 } ),3
,103 } ),1
,102 } ),1
,<kingMove> } {,1
,<activate> } {,2
,<version> } {,2
,104 } ),1
,<numPieces> } {,1
,<Jarl:captureType> } ),1
,<captureType> } {,1
,<Board:startP1> } ),1
,<Board:startP2> } ),1
,<startP2> } {,2
,<pieceNumber> } {,1
,FR } ),29
,BR } ),20
,<Start:rule> } ),1
,60 } {,3
,70 } {,2
,64 } {,2
,56 } {,3
,48 } {,5
,32 } {,14
,22 } },2
,<rules>> } {,1
,Leftward } bySite:True,2
,} bySite:True,2
,42 } {,1
,<Start> } ),3
,72 } {,1
,68 } {,1
,52 } {,1
,44 } {,2
,<numPiece> } {,1
,<endRule> } {,1
,STRING } state:1,80
,BL } ),55
,Forward } ),16
,king } ),1
,60 } ),2
,51 } ),3
,59 } ),1
,62 } ),2
,<murray> } {,1
,N } {,1
,ENE } {,7
,ESE } ),7
,NNE } {,6
,SSE } ),6
,99 } ),3
,E } {,2
,WSW } ),1
,<BoardConfig:RookRight2Start> } state:1,1
,<RegionMediumPhase> } {,1
,<NumOfPlayers:BoardRegions> } ),2
,<NumOfPlayers:PieceSetup> } ),2
,<CheckMate> } {,2
,<Pawn2> } {,1
,NW } ),1
,NE } ),1
,<movement> } {,1
,) } #2,1
,<doubleStep> } {,1
,} #2,1
,397 } ),1
,STRING } state:0,1
,} state:0,1
,<PlacementConditions> } {,1
,} } rotations:False,2
,94 } ),1
,} rotations:False,2
,Backward } ),87
,Backwards } ),5
,Leftwards } ),19
,Forwards } ),20
,BLL } ),1
,) } STRING,39
,BRR } ),1
,Rightwards } ),1
,<PiecePlacement:PiecePlacement> } ),1
,<PiecePlacement> } {,1
,FL } of:All,8
,86 } ),3
,85 } ),1
,} of:All,13
,<Player:team> } ),5
,18 } P1,10
,18 } P2,10
,18 } P3,10
,0 } P4,20
,0 } P5,28
,0 } P6,24
,0 } P3,25
,18 } P4,8
,18 } P5,6
,18 } P6,6
,P8 } ),12
,0 } P7,26
,0 } P8,23
,18 } P7,3
,18 } P8,3
,P10 } ),7
,23 } P2,15
,23 } P3,15
,23 } P4,15
,23 } P5,15
,0 } P9,24
,0 } P10,20
,23 } P6,13
,23 } P7,11
,23 } P8,9
,23 } P9,9
,23 } P10,9
,P12 } ),7
,0 } P11,18
,0 } P12,15
,23 } P11,6
,23 } P12,6
,P7 } ),7
,P14 } ),6
,0 } P13,12
,0 } P14,10
,23 } P13,3
,23 } P14,3
,P16 } ),6
,28 } P5,5
,28 } P6,5
,28 } P7,5
,28 } P8,5
,0 } P15,6
,0 } P16,5
,28 } P9,3
,28 } P10,3
,28 } P11,3
,28 } P12,3
,28 } P13,3
,28 } P14,3
,28 } P15,3
,28 } P16,3
,} P11,27
,} P12,27
,} P13,18
,} P14,18
,} P15,9
,} P16,9
,<tracks>> } {,1
,STRING } count:5,2
,STRING } count:2,11
,Who } (,2
,} count:5,2
,} count:2,11
,} } STRING,5
,0 } loop:True,38
,13 } P4,7
,13 } P6,6
,13 } P8,5
,P9 } ),2
,13 } P10,4
,P11 } ),2
,13 } P12,3
,P13 } ),1
,13 } P14,2
,P15 } ),1
,13 } P16,1
,<option> } {,1
,STRING } value:1,8
,} value:1,8
,23 } loop:True,1
,16 } loop:True,2
,<name> } {,2
,8 } loop:True,3
,87 } {,2
,1 } P1,1
,End } directed:True,2
,8 } P2,1
,<trackP2> } {,1
,<throwValues> } {,1
,<trackTeam2> } {,1
,<Row:track> } ),1
,<Option:start3> } ),1
,<to> } {,2
,<start3> } {,1
,<EnemyTrack2> } {,1
,49 } ),3
,46 } loop:True,1
,<Players:setupRules> } ),1
,<setupRules> } {,1
,151 } loop:True,1
,6 } previous:False,2
,#1 } previous:False,1
,1503 } ),1
,1164 } ),1
,1115 } ),1
,1429 } ),1
,1081 } ),1
,535 } ),1
,} previous:False,3
,<FogOfWar:AttackCheck> } ),1
,Value } at:,2
,<FogOfWar:EachMove> } ),3
,<terrainScale> } {,1
,<Metadata> } {,1
,<doctrine> } {,4
,} at:,2
,BR } of:All,1
,Backward } of:All,2
,Leftward } of:All,1
,FR } of:All,1
,STRING } rotation:0,7
,STRING } rotation:4,7
,STRING } rotation:1,1
,STRING } rotation:3,1
,STRING } rotation:5,1
,STRING } rotation:7,1
,} rotation:0,7
,} rotation:4,7
,} rotation:1,1
,} rotation:3,1
,} rotation:5,1
,} rotation:7,1
,<Ending> } {,1
,<moves> } {,1
,<selGame> } {,2
,<selScoring> } {,2
,<directionScored> } {,3
,<directionsWin> } {,2
,<Board:regionsP1> } ),1
,<Board:regionsP2> } ),1
,<regionsP2> } {,1
,<ForcedFillLevel> } {,1
,<calculation> } {,1
,<gridType> } {,2
,*** } ),2
,<defs> } {,1
,<updateOption> } {,1
,<turnOption> } {,1
,<numPlayers> } {,5
,54 } },1
,16 } },8
,54 } {,3
,48 } },1
,19 } },4
,P2 } {,3
,<Version:result> } ),1
,STRING } state:2,8
,STRING } state:3,8
,STRING } state:4,8
,STRING } state:5,8
,STRING } state:6,8
,STRING } state:7,8
,STRING } state:8,8
,} state:3,8
,} state:4,8
,} state:5,8
,} state:6,8
,} state:7,8
,} state:8,8
,-1 } ),3
,<inGame> } {,1
,3 } >,3
,4 } >,4
,6 } >,5
,<friendHops> } {,1
,Equi } ),1
,<prioritySetting> } {,1
,<influence> } {,1
,<method> } {,1
,Hops-a-Daisy } ),1
,<suicideOption> } {,1
,Equiversi } ),1
,<discVal> } {,1
,<stack> } {,1
,<Board:west> } (,1
,<Board:south> } ),1
,<Board:west> } ),1
,<west> } {,1
,323 } ),2
,159 } ),1
,139 } ),1
,147 } ),1
,<controlType> } {,2
,everything } ),1
,<color> } {,1
,152 } ),1
,piece } ),1
,<ctr> } {,1
,workaround } ),1
,<qtyMax> } {,1
,<nbrMax> } {,1
,126 } ),1
,214 } ),1
,143 } >,1
,37 } >,1
,127 } >,2
,47 } >,2
,12 } >,1
,111 } >,1
,<centering> } {,1
,101 } >,1
,<pieOrNot> } {,1
,31 } },2
,25 } },1
,26 } },1
,29 } },1
,<Players:initP3> } ),1
,<Players:betP3> } ),1
,<Players:showHandP3> } ),1
,<Players:removeP3> } ),1
,<Players:endP3> } ),1
,<endP3> } {,1
,<row> } {,1
,<pile> } {,1
,<piles> } {,1
,SubGrids } ),4
,<Challenge:hints> } ),3
,<hints> } {,5
,Rows } ),5
,) } Vertex,2
,} Vertex,2
,3 } 4,1
,7 } 6,1
,11 } 7,1
,9 } 4,1
,10 } 7,1
,11 } 6,1
,2 } 10,1
,5 } 14,1
,11 } 18,1
,16 } 13,1
,23 } 15,1
,26 } 17,1
,29 } 11,1
,7 } 4,1
,25 } 12,1
,26 } 21,1
,21 } 22,1
,28 } 16,1
,11 } 10,1
,29 } 13,1
,3 } 16,1
,7 } 24,1
,10 } 13,1
,15 } 14,1
,19 } 20,1
,22 } 14,1
,26 } 3,2
,29 } 4,1
,32 } 17,1
,35 } 3,1
,38 } 4,1
,44 } 25,1
,47 } 16,1
,51 } 24,1
,55 } 6,1
,59 } 24,1
,65 } 35,1
,71 } 35,1
,76 } 17,1
,81 } 17,1
,89 } 27,1
,95 } 22,1
,99 } 6,1
,103 } 7,1
,107 } 7,1
,110 } 4,1
,116 } 32,1
,119 } 16,1
,122 } 12,1
,125 } 15,1
,128 } 14,1
,131 } 6,1
,135 } 4,1
,139 } 22,1
,142 } 7,1
,147 } 7,1
,151 } 15,1
,154 } 6,1
,15 } 17,1
,18 } 14,1
,21 } 16,1
,40 } 3,2
,44 } 16,1
,54 } 4,1
,61 } 19,1
,62 } 34,1
,65 } 31,1
,67 } 38,1
,70 } 37,1
,71 } 24,1
,88 } 24,1
,92 } 24,1
,99 } 31,1
,105 } 34,1
,114 } 4,1
,121 } 11,1
,124 } 12,1
,128 } 12,1
,131 } 14,1
,146 } 22,1
,147 } 3,1
,149 } 37,1
,150 } 16,1
,151 } 35,1
,153 } 4,1
,154 } 24,1
,4 } 23,1
,8 } 24,1
,14 } 30,1
,19 } 30,1
,22 } 12,1
,26 } 24,1
,29 } 16,1
,33 } 19,1
,37 } 23,1
,45 } 17,1
,49 } 8,1
,54 } 10,1
,59 } 10,1
,63 } 7,1
,67 } 6,1
,75 } 6,1
,79 } 6,1
,82 } 8,1
,86 } 7,1
,89 } 4,1
,94 } 11,1
,99 } 15,1
,104 } 9,1
,108 } 7,1
,31 } 23,1
,32 } 28,1
,13 } 16,1
,24 } 23,1
,45 } 24,1
,36 } 30,1
,17 } 16,1
,28 } 24,1
,29 } 17,1
,61 } 4,1
,62 } 3,1
,73 } 15,1
,54 } 7,1
,66 } 4,1
,77 } 16,1
,58 } 6,1
,59 } 4,1
,91 } 10,1
,102 } 6,1
,103 } 9,1
,104 } 10,1
,85 } 6,1
,106 } 6,1
,107 } 8,1
,108 } 10,1
,99 } 7,1
,} 4,15
,} 21,1
,} 22,5
,} 24,11
,} 20,4
,} 3,149
,} 25,2
,} 35,3
,} 27,2
,} 32,1
,} 19,2
,} 34,2
,} 31,2
,} 38,1
,} 37,2
,} 23,4
,} 30,3
,} 28,1
,27 } 27,1
,10 } 8,1
,11 } 16,1
,22 } 10,1
,6 } 13,1
,8 } 17,1
,15 } 15,1
,26 } 14,1
,29 } 6,1
,39 } 20,1
,49 } 17,1
,32 } 20,1
,38 } 13,1
,34 } 6,1
,44 } 12,1
,45 } 6,1
,47 } 14,1
,57 } 9,1
,59 } 8,1
,52 } 17,1
,61 } 20,1
,80 } 15,1
,64 } 25,1
,77 } 22,1
,66 } 17,1
,78 } 4,1
,79 } 16,1
,73 } 3,1
,76 } 15,1
,Diagonals } ),1
,<sum> } {,1
,AllDirections } ),1
,72 } ),1
,82 } ),3
,75 } ),1
,76 } ),2
,79 } ),2
,81 } ),1
,96 } ),1
,105 } ),1
,114 } ),2
,123 } ),1
,132 } ),1
,141 } ),2
,151 } ),1
,161 } ),1
,171 } ),3
,162 } ),1
,164 } ),1
,165 } ),3
,166 } ),1
,167 } ),1
,169 } ),1
,170 } ),1
,108 } ),1
,111 } ),1
,135 } ),1
,138 } ),1
,145 } ),1
,155 } ),1
,175 } ),1
,364 } ),1
,270 } ),2
,271 } ),1
,281 } ),1
,291 } ),3
,206 } ),1
,207 } ),1
,208 } ),3
,209 } ),1
,368 } ),1
,289 } ),2
,288 } ),1
,290 } ),1
,163 } ),1
,186 } ),1
,267 } ),1
,187 } ),1
,198 } ),1
,218 } ),1
,227 } ),1
,236 } ),2
,245 } ),1
,254 } ),1
,263 } ),3
,255 } ),1
,256 } ),1
,257 } ),2
,258 } ),1
,259 } ),1
,260 } ),2
,261 } ),1
,262 } ),1
,202 } ),1
,205 } ),1
,230 } ),1
,233 } ),1
,277 } ),1
,287 } ),1
,297 } ),2
,306 } ),1
,315 } ),1
,324 } ),2
,333 } ),1
,342 } ),1
,351 } ),3
,343 } ),1
,344 } ),1
,345 } ),2
,346 } ),1
,347 } ),1
,348 } ),1
,349 } ),1
,350 } ),1
,294 } ),1
,318 } ),1
,321 } ),1
,330 } ),1
,<Challenge:hints> } Cell,1
,1 } 2,2
,2 } 3,2
,4 } 1,1
,6 } 2,2
,7 } 1,1
,12 } 1,1
,15 } 0,1
,2 } 2,1
,3 } 2,1
,5 } 2,2
,10 } 2,1
,11 } 2,1
,13 } 2,2
,14 } 2,1
,15 } 2,1
,19 } 2,1
,20 } 2,1
,21 } 2,1
,23 } 2,1
,24 } 3,1
,26 } 2,1
,27 } 2,1
,31 } 2,1
,0 } 3,1
,4 } 0,1
,14 } 3,1
,15 } 1,2
,17 } 2,1
,21 } 3,1
,22 } 0,1
,27 } 0,1
,31 } 3,1
,33 } 3,1
,34 } 1,1
,43 } 0,1
,44 } 2,1
,46 } 1,1
,48 } 3,1
,3 } 1,1
,6 } 1,1
,8 } 1,1
,12 } 2,1
,16 } 3,1
,17 } 1,1
,20 } 1,1
,23 } 1,1
,24 } 1,1
,27 } 3,1
,29 } 3,1
,30 } 1,1
,31 } 1,1
,34 } 3,1
,36 } 2,1
,37 } 1,1
,39 } 2,1
,42 } 2,1
,43 } 1,1
,45 } 2,1
,46 } 2,1
,48 } 1,1
,50 } 3,1
,52 } 3,1
,55 } 1,1
,57 } 2,1
,59 } 1,1
,64 } 2,1
,66 } 3,1
,68 } 2,1
,69 } 1,1
,71 } 1,1
,74 } 3,1
,77 } 1,1
,78 } 2,1
,84 } 1,1
,88 } 2,1
,90 } 2,1
,93 } 0,1
,94 } 1,1
,96 } 2,1
,97 } 0,1
,98 } 2,1
,102 } 3,1
,103 } 2,1
,104 } 3,1
,105 } 2,1
,108 } 2,1
,109 } 1,1
,111 } 3,1
,114 } 3,1
,116 } 3,1
,121 } 1,1
,124 } 0,1
,125 } 1,1
,127 } 2,1
,129 } 3,1
,132 } 3,1
,133 } 2,1
,135 } 1,1
,137 } 3,1
,140 } 2,1
,142 } 1,1
,145 } 1,1
,146 } 0,1
,148 } 1,1
,152 } 3,1
,154 } 2,1
,158 } 1,1
,159 } 1,1
,165 } 2,1
,166 } 3,1
,167 } 2,1
,169 } 1,1
,171 } 3,1
,174 } 1,1
,175 } 1,1
,176 } 3,1
,180 } 1,1
,187 } 3,1
,188 } 3,1
,194 } 2,1
,195 } 0,1
,197 } 3,1
,199 } 1,1
,200 } 1,1
,201 } 1,1
,202 } 1,1
,203 } 3,1
,206 } 2,1
,207 } 1,1
,210 } 1,1
,212 } 2,1
,213 } 3,1
,215 } 1,1
,217 } 1,1
,218 } 2,1
,221 } 2,1
,222 } 1,1
,223 } 2,1
,224 } 2,1
,225 } 1,1
,229 } 1,1
,235 } 2,1
,236 } 1,1
,237 } 1,1
,242 } 1,1
,246 } 3,1
,249 } 3,1
,251 } 3,1
,253 } 1,1
,256 } 1,1
,262 } 3,1
,266 } 2,1
,267 } 3,1
,269 } 2,1
,271 } 2,1
,275 } 2,1
,276 } 2,1
,278 } 1,1
,279 } 0,1
,280 } 2,1
,283 } 3,1
,284 } 1,1
,287 } 1,1
,289 } 2,1
,290 } 2,1
,291 } 1,1
,297 } 3,1
,299 } 1,1
,300 } 1,1
,302 } 3,1
,304 } 0,1
,306 } 2,1
,308 } 1,1
,309 } 3,1
,310 } 2,1
,313 } 1,1
,315 } 3,1
,318 } 2,1
,319 } 1,1
,322 } 1,1
,325 } 1,1
,330 } 0,1
,331 } 1,1
,334 } 2,1
,336 } 2,1
,339 } 1,1
,341 } 1,1
,344 } 1,1
,345 } 1,1
,349 } 1,1
,351 } 3,1
,353 } 2,1
,354 } 3,1
,359 } 3,1
,361 } 3,1
,363 } 1,1
,364 } 0,1
,366 } 1,1
,370 } 2,1
,371 } 1,1
,374 } 2,1
,377 } 1,1
,379 } 1,1
,381 } 1,1
,382 } 1,1
,383 } 2,1
,384 } 3,1
,385 } 3,1
,387 } 1,1
,388 } 2,1
,391 } 2,1
,393 } 2,1
,395 } 0,1
,397 } 1,1
,400 } 1,1
,401 } 3,1
,403 } 2,1
,408 } 1,1
,410 } 2,1
,411 } 0,1
,413 } 2,1
,416 } 2,1
,418 } 0,1
,419 } 1,1
,422 } 2,1
,423 } 3,1
,425 } 2,1
,427 } 1,1
,429 } 1,1
,434 } 0,1
,435 } 1,1
,436 } 2,1
,439 } 2,1
,441 } 3,1
,442 } 2,1
,445 } 3,1
,447 } 1,1
,448 } 1,1
,449 } 2,1
,450 } 1,1
,454 } 1,1
,458 } 0,1
,461 } 1,1
,463 } 2,1
,464 } 2,1
,465 } 3,1
,467 } 2,1
,468 } 0,1
,469 } 1,1
,470 } 1,1
,471 } 2,1
,472 } 3,1
,476 } 1,1
,478 } 2,1
,479 } 3,1
,481 } 3,1
,484 } 2,1
,485 } 1,1
,487 } 1,1
,489 } 0,1
,491 } 1,1
,496 } 2,1
,499 } 1,1
,501 } 1,1
,503 } 1,1
,504 } 3,1
,506 } 2,1
,507 } 2,1
,510 } 2,1
,514 } 1,1
,520 } 1,1
,522 } 3,1
,524 } 1,1
,525 } 1,1
,528 } 1,1
,533 } 3,1
,535 } 3,1
,536 } 2,1
,538 } 2,1
,539 } 1,1
,540 } 3,1
,541 } 2,1
,544 } 1,1
,548 } 2,1
,549 } 2,1
,553 } 2,1
,554 } 1,1
,555 } 1,1
,556 } 0,1
,560 } 1,1
,563 } 1,1
,564 } 2,1
,565 } 3,1
,571 } 2,1
,573 } 3,1
,575 } 1,1
,577 } 2,1
,579 } 2,1
,583 } 3,1
,586 } 2,1
,589 } 3,1
,590 } 3,1
,591 } 3,1
,592 } 2,1
,594 } 2,1
,595 } 2,1
,599 } 3,1
,600 } 3,1
,602 } 3,1
,603 } 1,1
,604 } 2,1
,607 } 2,1
,608 } 2,1
,613 } 1,1
,616 } 2,1
,618 } 2,1
,621 } 1,1
,623 } 3,1
,625 } 2,1
,626 } 3,1
,629 } 3,1
,632 } 2,1
,639 } 3,1
,642 } 2,1
,644 } 1,1
,648 } 2,1
,649 } 3,1
,650 } 3,1
,654 } 2,1
,656 } 3,1
,658 } 0,1
,659 } 3,1
,660 } 1,1
,661 } 1,1
,662 } 2,1
,665 } 0,1
,667 } 1,1
,671 } 2,1
,673 } 2,1
,674 } 3,1
,678 } 0,1
,680 } 2,1
,683 } 2,1
,684 } 2,1
,686 } 2,1
,687 } 3,1
,691 } 1,1
,694 } 2,1
,697 } 1,1
,698 } 1,1
,702 } 3,1
,706 } 1,1
,707 } 3,1
,710 } 1,1
,712 } 2,1
,714 } 2,1
,715 } 3,1
,716 } 2,1
,717 } 2,1
,720 } 2,1
,721 } 1,1
,722 } 3,1
,725 } 3,1
,726 } 1,1
,729 } 3,1
,731 } 1,1
,733 } 2,1
,735 } 2,1
,736 } 1,1
,738 } 1,1
,742 } 0,1
,744 } 2,1
,748 } 0,1
,753 } 1,1
,754 } 1,1
,756 } 1,1
,757 } 1,1
,759 } 1,1
,763 } 2,1
,764 } 2,1
,767 } 1,1
,769 } 3,1
,772 } 3,1
,773 } 1,1
,774 } 1,1
,778 } 0,1
,779 } 1,1
,780 } 1,1
,782 } 2,1
,784 } 2,1
,785 } 0,1
,786 } 1,1
,788 } 3,1
,790 } 1,1
,791 } 1,1
,793 } 2,1
,799 } 1,1
,802 } 1,1
,805 } 2,1
,806 } 3,1
,809 } 3,1
,810 } 1,1
,812 } 2,1
,813 } 0,1
,816 } 1,1
,818 } 2,1
,821 } 3,1
,829 } 2,1
,830 } 3,1
,836 } 1,1
,838 } 2,1
,839 } 0,1
,840 } 1,1
,841 } 2,1
,842 } 1,1
,843 } 3,1
,844 } 2,1
,846 } 1,1
,848 } 1,1
,852 } 1,1
,853 } 1,1
,854 } 2,1
,861 } 2,1
,863 } 2,1
,865 } 1,1
,866 } 1,1
,867 } 2,1
,868 } 1,1
,870 } 2,1
,871 } 2,1
,873 } 1,1
,874 } 1,1
,876 } 1,1
,877 } 1,1
,878 } 1,1
,879 } 0,1
,881 } 2,1
,884 } 2,1
,893 } 1,1
,894 } 3,1
,895 } 0,1
,897 } 3,1
,902 } 2,1
,903 } 1,1
,904 } 1,1
,907 } 1,1
,908 } 2,1
,911 } 2,1
,915 } 1,1
,919 } 3,1
,926 } 2,1
,928 } 3,1
,930 } 1,1
,932 } 2,1
,933 } 3,1
,935 } 2,1
,936 } 2,1
,937 } 2,1
,938 } 0,1
,941 } 1,1
,942 } 2,1
,945 } 1,1
,946 } 2,1
,949 } 1,1
,953 } 3,1
,956 } 1,1
,957 } 2,1
,959 } 1,1
,962 } 1,1
,966 } 1,1
,967 } 1,1
,969 } 3,1
,971 } 1,1
,976 } 1,1
,977 } 0,1
,980 } 1,1
,984 } 1,1
,985 } 2,1
,988 } 3,1
,989 } 1,1
,990 } 2,1
,992 } 1,1
,995 } 1,1
,996 } 1,1
,998 } 2,1
,999 } 1,1
,1001 } 1,1
,1002 } 1,1
,1003 } 1,1
,1005 } 1,1
,1009 } 1,1
,1012 } 3,1
,1016 } 0,1
,1018 } 2,1
,1021 } 2,1
,1022 } 2,1
,1024 } 1,1
,1026 } 1,1
,1031 } 1,1
,1032 } 1,1
,1037 } 3,1
,1039 } 2,1
,1041 } 1,1
,1044 } 0,1
,1046 } 3,1
,1049 } 2,1
,1050 } 2,1
,1053 } 2,1
,1055 } 3,1
,1056 } 2,1
,1057 } 0,1
,1058 } 1,1
,1059 } 2,1
,1061 } 1,1
,1064 } 2,1
,1068 } 2,1
,1070 } 3,1
,1073 } 3,1
,1074 } 2,1
,1078 } 3,1
,1081 } 2,1
,1083 } 2,1
,1084 } 0,1
,1085 } 2,1
,1088 } 1,1
,1091 } 2,1
,1095 } 2,1
,1098 } 0,1
,1104 } 1,1
,1105 } 1,1
,1109 } 2,1
,1111 } 1,1
,1112 } 1,1
,1114 } 0,1
,1118 } 3,1
,1119 } 2,1
,1122 } 0,1
,1127 } 1,1
,1129 } 1,1
,1131 } 3,1
,1134 } 1,1
,1136 } 3,1
,1137 } 3,1
,1138 } 1,1
,1139 } 1,1
,1140 } 2,1
,1141 } 1,1
,1142 } 1,1
,1143 } 2,1
,1144 } 3,1
,1146 } 2,1
,1147 } 1,1
,1150 } 2,1
,1151 } 3,1
,1152 } 1,1
,1158 } 1,1
,1165 } 2,1
,1169 } 2,1
,1171 } 2,1
,1177 } 2,1
,1179 } 3,1
,1182 } 1,1
,1185 } 3,1
,1188 } 3,1
,1189 } 0,1
,1192 } 0,1
,1193 } 1,1
,1194 } 2,1
,1195 } 1,1
,1197 } 1,1
,1199 } 1,1
,1200 } 2,1
,1201 } 2,1
,1204 } 2,1
,1205 } 1,1
,1206 } 1,1
,1208 } 1,1
,1211 } 1,1
,1212 } 0,1
,1214 } 3,1
,1215 } 3,1
,1216 } 2,1
,1217 } 2,1
,1218 } 0,1
,1219 } 3,1
,1220 } 1,1
,1222 } 1,1
,1223 } 0,1
,1224 } 2,1
,1228 } 3,1
,1234 } 1,1
,1237 } 3,1
,1240 } 2,1
,1243 } 3,1
,1246 } 2,1
,1250 } 1,1
,1251 } 3,1
,1252 } 3,1
,1254 } 3,1
,1256 } 2,1
,1257 } 2,1
,1258 } 3,1
,1262 } 2,1
,1268 } 2,1
,1269 } 3,1
,1270 } 1,1
,1271 } 2,1
,1273 } 0,1
,1274 } 2,1
,1277 } 2,1
,1281 } 1,1
,1284 } 2,1
,1286 } 2,1
,1287 } 3,1
,1289 } 2,1
,1291 } 2,1
,1292 } 3,1
,1293 } 0,1
,1295 } 1,1
,1300 } 1,1
,1303 } 3,1
,1306 } 2,1
,1307 } 3,1
,1309 } 3,1
,1311 } 0,1
,1313 } 1,1
,1315 } 3,1
,1316 } 3,1
,1320 } 1,1
,1321 } 2,1
,1322 } 3,1
,1324 } 2,1
,1326 } 2,1
,1329 } 2,1
,1330 } 3,1
,1332 } 2,1
,1335 } 1,1
,1337 } 2,1
,1340 } 2,1
,1341 } 3,1
,1343 } 2,1
,1345 } 0,1
,1348 } 2,1
,} Cell,2
,} 2,226
,} 1,232
,) } Cell,1
,43 } ),1
,38 } ),4
,<Challenge:start> } ),1
,0 } >,1
,65 } ),1
,68 } ),1
,STRING } count:16,3
,} count:16,3
,STRING } count:,1
,} count:,1
,<challenge:start> } ),2
,58 } ),3
,63 } ),2
,54 } ),1
,61 } ),1
,<Board:start1> } ),1
,<Board:start2> } ),1
,<Board:walls> } ),3
,<start2> } {,1
,<Board:exit> } ),2
,<exit> } {,1
,<Version:pieces> } ),2
,<Version:random> } ),1
,<Version:order> } ),1
,<order> } {,1
,<OuterRing:tilePlacementRegion> } ),1
,STRING } count:<Size:numTiles>,1
,<numTiles> } {,1
,<tilePlacementRegion> } {,1
,} count:<Size:numTiles>,1
,<walls> } {,1
,<threat> } {,1
,<Version:order> } 2,1
,STRING } 0,8
~,STRING ~ ~,9
,~ ~ at:EndOfTurn,2
,~ ~,16
,~ at:EndOfTurn,2
,) ~ (,16
,) ~ ~,3
,~ ~ ),2
,) ~ ),6
,~ (,41
,~ ),29
,STRING ~ (,14
,STRING ~ ),1
,All ~ ),9
,Diagonal ~ ),6
,Orthogonal ~ ),5
,Orthogonal ~ (,3
,Diagonal ~ (,3
,STRING ~ STRING,2
,Forward ~ STRING,4
,) ~ STRING,4
,~ ~ STRING,1
,~ ~ after:34,2
,Diagonal ~ ~,1
,Forwards ~ (,2
,~ ~ (,3
,~ ~ ~,2
,~ ~ after:35,4
,Orthogonal ~ ~,1
,~ STRING,14
,~ after:34,2
,~ after:35,4
,Diagonal ~ STRING,1
,Orthogonal ~ STRING,1
,Adjacent ~ STRING,1
1009,{ 1009 },1
,1009 },1
Add,move Add (,194
,Add (,194
,or Add bridge,1
,) Add bridge,1
,Add bridge,2
,the Add moves,1
,Add moves,1
path:True,) path:True ),2
,path:True ),2
size:<Board:numPieces>,Each size:<Board:numPieces> ),1
,size:<Board:numPieces> ),1
1022,{ 1022 },1
,1022 },1
1021,{ 1021 },1
,1021 },1
1020,1069 1020 971,1
,1020 971,1
good,as good -,1
,good -,1
Spiral>,<brick Spiral> STRING,1
,Spiral> STRING,1
directed:True,P1 directed:True ),230
,P2 directed:True ),231
,directed:True ),1093
,P3 directed:True ),98
,P4 directed:True ),91
,} directed:True ),14
,<Board:track> directed:True ),2
,P5 directed:True ),60
,P6 directed:True ),60
,1 directed:True ),1
,2 directed:True ),1
,3 directed:True ),1
,4 directed:True ),1
,STRING directed:True ),13
,P7 directed:True ),49
,P8 directed:True ),49
,P9 directed:True ),38
,P10 directed:True ),38
,P11 directed:True ),28
,P12 directed:True ),28
,P13 directed:True ),19
,P14 directed:True ),19
,P15 directed:True ),10
,P16 directed:True ),10
,loop:True directed:True ),2
empty,Any empty site,1
,empty site,2
,an empty site,1
,are empty or,1
,empty or,1
,any empty cell,2
,empty cell,3
,case: empty cell,1
,on empty location,1
,empty location,1
<CW2>,<CW1> <CW2> <LeftInnerHolesP1>,1
,<CW2> <LeftInnerHolesP1>,1
,<CW1> <CW2> },1
,<CW2> },1
tie,a tie ),1
,tie ),1
1018,{ 1018 },1
,1018 },1
1016,{ 1016 },1
,1016 },1
<Minotaur>,STRING <Minotaur> args:,2
,<Minotaur> args:,2
intersection,( intersection (,424
,intersection (,424
,( intersection {,10
,intersection {,10
,( intersection STRING,5
,intersection STRING,5
,( intersection #2,1
,( intersection <Multi:suicide>,1
,intersection #2,1
,intersection <Multi:suicide>,1
1012,1061 1012 963,1
,1012 963,1
,{ 1012 },1
,1012 },1
cosmetic,( cosmetic --COMMA--,1
,cosmetic --COMMA--,1
Quadrant,Opposite Quadrant of,4
,Quadrant of,4
1033,1034 1033 1032,1
,1033 1032,1
1032,1033 1032 1031,1
,1032 1031,1
,{ 1032 },1
,1032 },1
1031,1032 1031 1030,1
,1031 1030,1
,{ 1031 },1
,1031 },1
check,We check the,1
,check the,1
,in check .,1
,to check during,1
,check .,1
,check during,1
,escape check passes,1
,check passes,1
,to check if,1
,check if,1
1030,1031 1030 1029,1
,1030 1029,1
<celtic>,STRING <celtic> STRING,1
,<celtic> STRING,1
<CW1>,<CCW2> <CW1> <CW2>,2
,<CW1> <CW2>,2
1029,1030 1029 1079,1
,1029 1079,1
aside,set aside for,1
,aside for,1
1026,{ 1026 },1
,1026 },1
1024,{ 1024 },1
,1024 },1
Unique,is Unique ),1
,Unique ),1
size:6,Each size:6 ),6
,size:6 ),6
unique:True,#1 unique:True ),2
,unique:True ),12
,) unique:True ),10
,) unique:True (,7
,unique:True (,7
size:5,Each size:5 ),8
,size:5 ),8
size:8,Each size:8 ),1
,size:8 ),2
,Shared size:8 ),1
size:7,Each size:7 ),4
,size:7 ),4
<Fox>,STRING <Fox> args:,1
,<Fox> args:,1
size:2,Each size:2 ),9
,size:2 ),14
,Shared size:2 ),5
<Player:center>,) <Player:center> },1
,<Player:center> },1
size:1,P1 size:1 ),1
,size:1 ),1
size:4,Each size:4 ),2
,size:4 ),2
Directions,- Directions #2,1
,- Directions (,2
,Directions #2,1
,Directions (,2
size:3,Each size:3 ),5
,size:3 ),5
1044,1043 1044 1045,1
,1044 1045,1
,{ 1044 },1
,1044 },1
<Center:controlType>,( <Center:controlType> ),1
,<Center:controlType> ),1
1043,1042 1043 1044,1
,1043 1044,1
1042,1584 1042 1043,1
,1042 1043,1
King_noCross,to King_noCross .,2
,King_noCross .,2
1041,{ 1041 },1
,1041 },1
1039,{ 1039 },1
,1039 },1
<home>,<numPlayers> <home> <start>,2
,<home> <start>,3
,<num> <home> <start>,1
,<size> <home> },1
,<home> },1
1038,989 1038 1037,1
,1038 1037,1
1037,1038 1037 1036,1
,1037 1036,1
,{ 1037 },1
,1037 },1
1036,1037 1036 1035,1
,1036 1035,1
1035,1036 1035 1034,1
,1035 1034,1
1034,1035 1034 1033,1
,1034 1033,1
multiplayer,advanced multiplayer about,1
,multiplayer about,1
blocks,piece blocks all,1
,blocks all,1
1055,1006 1055 1007,1
,1055 1007,1
,{ 1055 },1
,1055 },1
<discVal>,{ <discVal> },1
,<discVal> },1
1054,1053 1054 1103,1
,1054 1103,1
1053,1101 1053 1054,1
,1053 1054,1
,{ 1053 },1
,1053 },1
1052,515 1052 1101,1
,1052 1101,1
1050,{ 1050 },1
,1050 },1
<Players:endTracks>,) <Players:endTracks> },1
,<Players:endTracks> },1
1049,{ 1049 },1
,1049 },1
1046,1045 1046 997,1
,1046 997,1
,{ 1046 },1
,1046 },1
1045,1044 1045 1046,1
,1045 1046,1
suitable,a suitable definition,1
,suitable definition,1
handling,in handling the,1
,plus handling follow-up,1
,handling the,1
,handling follow-up,1
<Board:type>,{ <Board:type> (,4
,<Board:type> (,4
,board <Board:type> use:Vertex,10
,<Board:type> use:Vertex,10
,board <Board:type> ),2
,<Board:type> ),4
,( <Board:type> <BoardSize>,2
,<Board:type> <BoardSize>,2
,board <Board:type> use:Edge,10
,<Board:type> use:Edge,10
,trim <Board:type> ),2
passant,en passant setup,2
,en passant directions,2
,En passant -,6
,passant setup,2
,passant directions,2
,passant -,6
,en passant capture,2
,passant capture,2
CaterpillarTree,is CaterpillarTree Mover,2
,CaterpillarTree Mover,2
<player1>,{ <player1> <player2>,1
,<player1> <player2>,1
1064,{ 1064 },1
,1064 },1
1061,1110 1061 1012,1
,1061 1012,1
,{ 1061 },1
,1061 },1
Eqiversi,) Eqiversi Hops-a-Daisy,1
,Eqiversi Hops-a-Daisy,1
<Players:tracks>,{ <Players:tracks> (,1
,<Players:tracks> (,1
,) <Players:tracks> use:Vertex,1
,<Players:tracks> use:Vertex,1
,{ <Players:tracks> },2
,<Players:tracks> },2
<RegionDarkPhase>,<Pawn2Start> <RegionDarkPhase> <RegionLightPhase>,1
,<RegionDarkPhase> <RegionLightPhase>,1
1059,{ 1059 },1
,1059 },1
1058,{ 1058 },1
,1058 },1
1057,{ 1057 },1
,1057 },1
1056,{ 1056 },1
,1056 },1
block,not block movement,1
,block movement,1
to:,) to: (,100
,to: (,345
,3 to: (,15
,2 to: (,44
,4 to: (,59
,1 to: (,28
,5 to: (,20
,15 to: (,3
,9 to: (,6
,8 to: (,8
,6 to: (,16
,29 to: (,1
,10 to: (,8
,<Start:numSeeds> to: (,2
,<Counters> to: (,1
,7 to: (,10
,12 to: (,5
,<Board:init> to: (,1
,<Players:init> to: (,1
,STRING to: (,2
,from:#1 to: (,1
,11 to: (,4
,13 to: (,3
,14 to: (,3
,16 to: (,2
,17 to: (,1
,18 to: (,1
order,in order to,2
,order to,2
,board order .,1
,order .,1
<Phase>,STRING <Phase> args:,1
,<Phase> args:,1
<teams>,<num> <teams> },1
,<teams> },1
,<num> <teams> <tracks>,1
,<teams> <tracks>,1
,<startingMoney> <teams> <pieceFlip>,1
,<teams> <pieceFlip>,1
<Capture:ruleSecondCapture>,. <Capture:ruleSecondCapture> Only,1
,<Capture:ruleSecondCapture> Only,1
<player2>,<player1> <player2> },1
,<player2> },1
1074,{ 1074 },1
,1074 },1
1073,{ 1073 },1
,1073 },1
propose,( propose STRING,1
,propose STRING,1
<selScoring>,{ <selScoring> },2
,<selScoring> },2
1070,1119 1070 1118,1
,1070 1118,1
,{ 1070 },1
,1070 },1
<stack>,{ <stack> },1
,<stack> },1
1069,1118 1069 1020,1
,1069 1020,1
1068,{ 1068 },1
,1068 },1
spots,Move spots Human,1
,spots Human,1
Limping>,<hex Limping> STRING,2
,Limping> STRING,4
,<tri Limping> STRING,1
,<brick Limping> STRING,1
Bishop,) Bishop (,8
,Promoted Bishop (,7
,Bishop (,15
BLL,BL BLL },1
,BLL },1
Draw,Mover Draw ),67
,Draw ),69
,P1 Draw ),1
,result Draw ),1
<Players:Play>,) <Players:Play> <Players:end>,1
,<Players:Play> <Players:end>,1
<Board:rangeP1>,{ <Board:rangeP1> },1
,<Board:rangeP1> },1
1088,1185 1088 1186,1
,1088 1186,1
,{ 1088 },1
,1088 },1
1087,1230 1087 1136,1
,1087 1136,1
1086,988 1086 1135,1
,1086 1135,1
1085,{ 1085 },1
,1085 },1
<exact>,{ <exact> },1
,<exact> },1
1084,{ 1084 },1
,1084 },1
1083,1128 1083 1132,1
,1083 1132,1
,{ 1083 },1
,1083 },1
1082,1131 1082 1425,1
,1082 1425,1
1081,890 1081 },1
,1081 },2
,{ 1081 },1
<endRules>,<pieceMoves> <endRules> },1
,<endRules> },2
,<consequence> <endRules> },1
too,down too much,1
,too much,1
,with too many,1
,too many,1
1079,1029 1079 1128,1
,1079 1128,1
1078,{ 1078 },1
,1078 },1
have,and have to,3
,which have to,3
,have to,7
,we have to,1
,to have .,1
,to have on,1
,they have lost,1
,they have state,1
,have .,1
,have on,1
,have lost,1
,have state,1
,moved have moved,1
,have moved,1
<ThrowSix:value>,6 <ThrowSix:value> ),1
,<ThrowSix:value> ),1
<Version:rulesCommander>,) <Version:rulesCommander> (,1
,<Version:rulesCommander> (,1
1091,1090 1091 1140,1
,1091 1140,1
,{ 1091 },1
,1091 },1
2-stack,( 2-stack ),1
,2-stack ),1
1090,1089 1090 1091,1
,1090 1091,1
<Variant:board>,{ <Variant:board> (,2
,<Variant:board> (,2
apply:,) apply: (,122
,apply: (,223
,if:True apply: (,5
,sow apply: (,60
,STRING apply: (,34
,numPerHole:4 apply: (,1
,count:2 apply: (,1
1098,{ 1098 },1
,1098 },1
1095,{ 1095 },1
,1095 },1
1089,1328 1089 1090,1
,1089 1090,1
<Board:rangeP2>,{ <Board:rangeP2> },1
,<Board:rangeP2> },1
markers,move markers changes,1
,broken markers (,1
,bridging markers need,1
,new markers .,1
,markers changes,1
,markers (,1
,markers need,1
,markers .,1
All,Value All ),8
,All ),103
,STRING All ),64
,difference All Backwards,2
,All Backwards,2
,) All flat,1
,) All round,1
,All flat,1
,All round,1
,Pieces All in:,69
,All in:,69
,Pieces All ),6
,Connected All Mover,1
,All Mover,1
,Connected All {,2
,All {,2
,6 All ),1
,5 All ),4
,4 All ),1
,5 All <Exact>,1
,All <Exact>,1
,) All (,6
,Vertex All (,3
,All (,16
,5 All throughAny:,4
,All throughAny:,4
,Distance All from:,1
,All from:,1
,Step All (,2
,3 All ),2
,4 All whats:,6
,4 All P1,1
,4 All P2,1
,All whats:,6
,All P1,1
,All P2,1
,Slide All ),3
,3 All through:,1
,All through:,1
,) All ),11
,P1 All ),1
,P2 All ),1
,Hop All (,3
,STRING All STRING,3
,STRING All ~,9
,All STRING,3
,All ~,9
,Orthogonal All ),1
,Slide All (,1
,Step All <Step:to>,1
,All <Step:to>,1
,) All to,1
,All to,1
,regions All (,1
,result All Loss,1
,result All Win,1
,All Loss,1
,All Win,1
<Movement>,STRING <Movement> args:,1
,<Movement> args:,1
T333333_33434>,<tiling T333333_33434> STRING,1
,T333333_33434> STRING,1
prameter-shift,note prameter-shift (,1
,prameter-shift (,1
pips,( pips ),192
,pips ),192
,count pips =,1
,pips =,1
<activate>,{ <activate> },2
,<activate> },2
upon,promoted upon reaching,1
,upon reaching,1
Copyright,Chess Copyright 2020,6
,Copyright 2020,8
,Hexchess Copyright 2020,1
,Starchess Copyright 2020,1
<CapOption>,STRING <CapOption> args:,1
,<CapOption> args:,1
Random,sites Random (,103
,Random (,124
,value Random (,20
,place Random {,32
,Random {,32
,= Random Damage,2
,Random Damage,2
,sites Random ),1
,Random ),1
,place Random (,1
row:,coord row: (,33
,row: (,33
Disc,use Disc (,1
,Disc (,1
function,role function define,1
,function define,1
<14><18><6>,STRING <14><18><6> STRING,1
,<14><18><6> STRING,1
<Board:excludeFromEdge>,) <Board:excludeFromEdge> ),1
,<Board:excludeFromEdge> ),1
<wikipedia>,{ <wikipedia> },1
,<wikipedia> },1
<Hidden>,<Orthogonal> <Hidden> <Orthogonal>,19
,<Adjacent> <Hidden> <Adjacent>,2
,<Orthogonal> <Hidden> <All>,2
,<Hidden> <Orthogonal>,21
,<Hidden> <Adjacent>,2
,<Hidden> <All>,2
,<All> <Hidden> <Orthogonal>,2
,<Orthogonal> <Hidden> <3>,3
,<All> <Hidden> <7>,1
,<Hidden> <3>,3
,<Hidden> <7>,1
tower,a tower (,1
,a tower piece,2
,tower (,1
,tower piece,2
to:Next,STRING to:Next ),6
,to:Next ),23
,) to:Next ),5
,False to:Next ),12
including,--COMMA-- including those,1
,including those,1
to:Mover,) to:Mover ),2
,False to:Mover ),9
,to:Mover ),22
,Hidden to:Mover ),3
,What to:Mover ),8
,False to:Mover #1,1
,to:Mover #1,1
tri,( tri Hexagon,7
,tri Hexagon,7
,( tri Limping,7
,tri Limping,7
,( tri 2,2
,tri 2,2
,( tri 13,1
,tri 13,1
,( tri 1,2
,tri 1,2
,( tri 4,1
,( tri 5,1
,( tri 6,2
,( tri 7,3
,( tri 8,3
,tri 4,1
,tri 5,1
,tri 6,2
,tri 7,3
,tri 8,3
,( tri <Board:size>,1
,tri <Board:size>,1
,( tri {,1
,the tri grid,1
,( tri (,1
,tri {,1
,tri grid,1
,tri (,1
,( tri 3,6
,tri 3,6
,( tri 9,1
,tri 9,1
<Board>,STRING <Board> args:,153
,<Board> args:,153
,{ <Board> (,4
,<Board> (,6
,square <Board> ),7
,<Board> ),37
,2 <Board> store:None,1
,<Board> store:None,1
,hex <Board> ),13
,board <Board> use:Vertex,13
,<Board> use:Vertex,13
,Diamond <Board> ),3
,Triangle <Board> ),4
,( <Board> ),1
,square <Board> pyramidal:True,2
,<Board> pyramidal:True,2
,) <Board> ),4
,+ <Board> 1,4
,- <Board> 1,6
,<Board> 1,10
,board <Board> ),3
,<Boundary:shape> <Board> ),1
,Hexagon <Board> ),1
,/ <Board> 2,2
,<Board> 2,2
,* <Board> (,2
,( <Board> <Size>,1
,<Board> <Size>,1
Wagon,Bridge Wagon (,1
,Wagon (,1
length:,Mover length: (,8
,length: (,8
condition,a condition for,2
,condition for,2
,- condition to,1
,condition to,1
200,199 200 194,1
,200 194,1
,pair 200 380,1
,200 380,1
,face 200 ),1
,200 ),1
,< 200 >,3
,200 >,3
,190 200 201,1
,200 201,1
,{ 200 .,1
,190 200 210,1
,192 200 .,1
,200 .,2
,200 210,1
,{ 200 },1
,200 },1
,180 200 220,1
,200 220,1
,163 200 144,1
,200 144,1
201,195 201 208,1
,201 208,1
,59 201 ),1
,163 201 ),1
,191 201 ),1
,pair 201 495,1
,327 201 ),1
,201 ),5
,201 495,1
,face 201 ),1
,191 201 202,2
,201 202,3
,200 201 202,1
,191 201 211,1
,201 211,1
,{ 201 },1
,201 },1
,183 201 238,1
,201 238,1
202,rotate 202 .,1
,178 202 226,1
,202 .,1
,202 226,1
,60 202 ),1
,164 202 ),1
,192 202 ),1
,pair 202 496,1
,328 202 ),1
,202 ),5
,202 496,1
,face 202 ),1
,201 202 203,2
,202 203,2
,201 202 206,1
,202 206,1
,192 202 212,1
,. 202 },1
,202 212,1
,202 },2
,{ 202 },1
203,pair 203 497,1
,239 203 ),1
,241 203 ),1
,281 203 ),1
,203 497,1
,203 ),4
,face 203 ),1
,202 203 204,2
,203 204,2
,193 203 213,1
,195 203 .,1
,{ 203 2,1
,203 213,1
,203 .,1
,203 2,1
,{ 203 },1
,203 },1
204,pair 204 498,1
,240 204 ),1
,242 204 ),1
,204 498,1
,204 ),2
,203 204 205,2
,204 205,2
,194 204 214,1
,204 214,1
improve,to improve with,1
,improve with,1
205,181 205 229,1
,205 229,1
,pair 205 499,1
,205 499,1
,254 205 156,1
,205 156,1
,204 205 210,2
,205 210,2
,195 205 215,1
,. 205 },1
,{ 205 8,1
,205 215,1
,205 },1
,205 8,1
206,215 206 197,1
,206 197,1
,pair 206 500,1
,206 500,1
,202 206 207,1
,206 207,2
,{ 206 207,1
,196 206 },1
,196 206 216,1
,198 206 .,1
,206 },2
,206 216,1
,206 .,1
,{ 206 },1
207,9 207 ),1
,207 ),1
,pair 207 501,1
,207 501,1
,206 207 208,2
,207 208,2
,197 207 },1
,197 207 217,1
,207 },2
,207 217,1
,{ 207 },1
,189 207 153,1
,207 153,1
Connectivity,) Connectivity and,1
,Connectivity and,1
208,201 208 216,1
,208 216,1
,216 208 192,1
,208 192,1
,pair 208 502,1
,208 502,1
,207 208 209,2
,208 209,2
,198 208 },1
,. 208 },2
,198 208 218,1
,208 },3
,208 218,1
<Sow:numSeed>,) <Sow:numSeed> ),1
,<Sow:numSeed> ),2
,STRING <Sow:numSeed> ),1
try,of try .,1
,try .,1
Row,sites Row 2,42
,Row 2,46
,sites Row (,18
,Row (,19
,sites Row STRING,1
,Row STRING,1
,sites Row 1,78
,Row 1,82
,sites Row 0,13
,sites Row 3,21
,Row 0,14
,Row 3,25
,sites Row 4,15
,Row 4,19
,Middle Row (,1
,sites Row 7,13
,sites Row 9,3
,sites Row 14,1
,Row 7,19
,Row 9,6
,Row 14,1
,STRING Row 0,1
,STRING Row 1,1
,STRING Row 2,1
,STRING Row 3,1
,STRING Row 4,1
,STRING Row 5,1
,STRING Row 6,1
,STRING Row 7,4
,STRING Row 8,4
,STRING Row 9,2
,STRING Row 10,2
,STRING Row 11,1
,STRING Row 12,1
,Row 5,22
,Row 6,60
,Row 8,16
,Row 10,9
,Row 11,4
,Row 12,5
,sites Row 5,18
,sites Row 6,56
,sites Row 8,10
,sites Row 10,6
,sites Row 12,3
,sites Row 11,2
,{ Row 1,3
,) Row 2,3
,) Row 3,3
,) Row 4,3
,) Row 5,3
,) Row 6,3
,) Row 7,2
,sites Row 18,1
,) Row 8,2
,Row 18,1
,) Row 36,1
,) Row 35,1
,) Row 34,1
,) Row 33,1
,) Row 32,1
,) Row 31,1
,) Row 30,1
,) Row 29,1
,) Row 9,1
,) Row 28,1
,) Row 10,1
,) Row 27,1
,) Row 11,1
,) Row 26,1
,sites Row 25,1
,) Row 12,1
,) Row 25,1
,Row 36,1
,Row 35,1
,Row 34,1
,Row 33,1
,Row 32,1
,Row 31,1
,Row 30,1
,Row 29,1
,Row 28,1
,Row 27,1
,Row 26,1
,Row 25,2
,column Row row,1
,Row row,1
209,231 209 210,1
,209 210,2
,pair 209 503,1
,209 503,1
,208 209 210,1
,208 209 368,1
,199 209 },1
,279 209 368,1
,209 368,2
,209 },1
<size,{ <size >,1
,<size >,1
20>,. 20> <8,1
,<7 20> STRING,1
,20> <8,1
,20> STRING,3
,<10 20> STRING,1
,62 20> STRING,1
rightMost,The rightMost hole,1
,rightMost hole,1
<100>,STRING <100> <,3
,<100> <,3
,STRING <100> STRING,1
,<100> STRING,1
Any,) Any empty,1
,Any empty,1
210,209 210 214,1
,210 214,1
,pair 210 504,1
,210 504,1
,205 210 211,2
,210 211,3
,209 210 211,1
,{ 210 .,2
,200 210 219,1
,210 .,2
,210 219,1
,{ 210 },1
,210 },1
,211 210 228,1
,210 228,1
211,171 211 195,1
,211 195,1
,155 211 ),1
,pair 211 505,1
,211 ),1
,211 505,1
,210 211 212,3
,211 212,4
,201 211 220,1
,211 220,1
,173 211 212,1
,212 211 210,1
,211 210,1
times,2 times board,1
,times board,1
212,156 212 ),1
,pair 212 506,1
,212 ),1
,212 506,1
,211 212 218,2
,212 218,2
,211 212 213,2
,212 213,2
,202 212 221,1
,. 212 219,1
,{ 212 9,1
,212 221,1
,212 219,1
,212 9,1
,{ 212 },1
,212 },1
,230 212 211,1
,212 211,1
213,pair 213 411,1
,213 411,1
,212 213 214,1
,213 214,1
,203 213 222,1
,{ 213 .,1
,213 222,1
,213 .,1
,{ 213 },1
,213 },1
,212 213 231,1
,213 231,1
214,210 214 215,1
,214 215,1
,174 214 198,1
,214 198,1
,pair 214 412,1
,214 412,1
,213 214 },1
,214 },1
,204 214 223,1
,214 223,1
,196 214 122,1
,214 122,1
215,214 215 196,1
,215 196,1
,152 215 },1
,152 215 206,1
,215 },2
,215 206,1
,127 215 ),1
,pair 215 477,1
,215 ),1
,215 477,1
,310 215 166,1
,215 166,1
,205 215 224,1
,. 215 222,1
,215 224,1
,215 222,1
,{ 215 },1
,175 215 299,1
,215 299,1
216,208 216 },1
,216 },1
,232 216 208,1
,216 208,1
,rotate 216 (,3
,216 (,3
,128 216 ),1
,pair 216 478,1
,216 ),1
,216 478,1
,206 216 225,1
,{ 216 .,1
,{ 216 5,1
,216 225,1
,216 .,1
,216 5,1
,198 216 234,1
,216 234,1
217,pair 217 323,1
,217 323,1
,207 217 226,1
,217 226,1
,{ 217 },1
,217 },1
,218 217 177,1
,217 177,1
218,pair 218 324,1
,218 324,1
,212 218 219,2
,218 219,2
,. 218 },1
,208 218 227,1
,. 218 225,1
,218 },2
,218 227,1
,218 225,1
,{ 218 },1
,238 218 217,1
,218 217,1
219,235 219 154,1
,219 154,1
,pair 219 507,1
,335 219 ),1
,219 507,1
,219 ),1
,218 219 220,2
,219 220,2
,{ 219 .,1
,210 219 228,1
,212 219 .,1
,{ 219 7,1
,219 .,2
,219 228,1
,219 7,1
,239 219 199,1
,219 199,1
direction,given direction --COMMA--,1
,direction --COMMA--,2
,any direction into,1
,direction into,1
,forward direction --COMMA--,1
,other direction .,1
,direction .,2
,- direction (,2
,- direction #2,2
,direction (,2
,direction #2,2
,adjacent direction .,1
,their direction of,1
,direction of,1
21>,. 21> <18,1
,<18 21> STRING,1
,21> <18,1
,21> STRING,1
That,Comment: That game,1
,That game,1
<ruleSecondCapture>,<numCounters> <ruleSecondCapture> },1
,<ruleSecondCapture> },1
SSE,SSW SSE ),1
,NNW SSE NNE,1
,NNE SSE NNW,1
,SSW SSE },6
,SSE ),7
,SSE NNE,1
,SSE NNW,1
,SSE },6
,{ SSE W,2
,SSE W,2
,STRING SSE ),3
,NNW SSE ),2
,#2 SSE ),1
RegularGraph,is RegularGraph Neutral,3
,RegularGraph Neutral,3
,is RegularGraph Mover,4
,RegularGraph Mover,4
forEach,( forEach Piece,1093
,forEach Piece,1093
,( forEach Site,272
,forEach Site,272
,( forEach (,173
,forEach (,173
,( forEach Die,98
,forEach Die,98
,( forEach Level,82
,forEach Level,82
,( forEach Value,44
,forEach Value,44
,( forEach Player,18
,forEach Player,18
,( forEach NonMover,35
,forEach NonMover,35
,( forEach Group,3
,forEach Group,3
,( forEach Direction,33
,forEach Direction,33
,( forEach Track,1
,forEach Track,1
,( forEach Team,2
,forEach Team,2
,( forEach <PlaceDisc:suicideOption>,1
,forEach <PlaceDisc:suicideOption>,1
by:Player,Occupied by:Player STRING,5
,by:Player STRING,5
Centre,sites Centre ),77
,Centre ),77
chooses,player chooses .,1
,chooses .,1
Array,size Array (,32
,Array (,32
220,pair 220 508,1
,336 220 ),1
,220 508,1
,220 ),1
,416 220 221,1
,220 221,3
,219 220 221,2
,211 220 229,1
,{ 220 8,1
,220 229,1
,220 8,1
,200 220 240,1
,220 240,1
221,pair 221 175,1
,221 175,1
,220 221 184,1
,221 184,1
,220 221 231,2
,221 231,2
,212 221 230,1
,. 221 228,1
,221 230,1
,221 228,1
,{ 221 },1
,221 },1
,222 221 242,1
,221 242,1
222,238 222 157,1
,222 157,1
,pair 222 176,1
,222 176,1
,213 222 231,1
,215 222 .,1
,222 231,1
,222 .,1
,{ 222 },1
,222 },1
,182 222 221,1
,222 221,1
,185 222 242,1
,222 242,1
223,pair 223 397,1
,223 397,1
,214 223 232,1
,{ 223 3,1
,223 232,1
,223 3,1
,{ 223 },1
,223 },1
224,{ 224 287,1
,233 224 287,1
,224 287,2
,pair 224 398,1
,224 398,1
,215 224 233,1
,. 224 231,1
,224 233,1
,224 231,1
,{ 224 },1
,224 },1
,262 224 264,1
,224 264,2
,169 224 264,1
225,rotate 225 (,1
,225 (,1
,pair 225 391,1
,225 391,1
,216 225 234,1
,218 225 .,1
,225 234,1
,225 .,1
,{ 225 },1
,225 },1
226,202 226 160,1
,226 160,1
,pair 226 392,1
,226 392,1
,217 226 235,1
,{ 226 9,1
,226 235,1
,226 9,1
,187 226 227,1
,226 227,1
SSW,STRING SSW SSE,1
,NNE SSW SSW,1
,SSW SSW NNE,1
,{ SSW SSE,6
,SSW SSE,7
,SSW SSW,1
,SSW NNE,1
,player SSW ),1
,SSW ),7
,STRING SSW ),3
,NNE SSW ),2
,#2 SSW ),1
227,{ 227 231,1
,227 231,1
,pair 227 245,1
,227 245,1
,. 227 },1
,218 227 236,1
,. 227 234,1
,{ 227 1,1
,227 },1
,227 236,1
,227 234,1
,227 1,1
,226 227 266,1
,227 266,1
,267 227 190,1
,227 190,1
228,pair 228 246,1
,228 246,1
,116 228 179,1
,228 179,1
,{ 228 .,1
,219 228 237,1
,221 228 .,1
,228 .,2
,228 237,1
,210 228 229,1
,228 229,1
229,205 229 163,1
,229 163,1
,pair 229 309,1
,229 309,1
,220 229 238,1
,229 238,1
,{ 229 },1
,229 },1
,289 229 189,1
,229 189,1
,228 229 193,1
,229 193,1
Incident,sites Incident Edge,40
,Incident Edge,40
,sites Incident Cell,10
,Incident Cell,10
,sites Incident Vertex,15
,Incident Vertex,15
NotBlockedBy,in NotBlockedBy (,1
,NotBlockedBy (,1
Edge,items:<Player:init> Edge STRING,1
,Edge STRING,1
,Incident Edge of:Cell,22
,to Edge (,19
,Empty Edge ),22
,Outer Edge ),3
,Edge of:Cell,22
,Edge (,89
,Edge ),56
,STRING Edge 36,1
,STRING Edge 38,1
,Edge 36,1
,Edge 38,1
,STRING Edge (,9
,Incident Edge of:Vertex,17
,Empty Edge (,4
,Edge of:Vertex,17
,who Edge at:,2
,remove Edge (,15
,from Edge ),2
,Pieces Edge #1,1
,#1 Edge ),1
,Edge at:,9
,Edge #1,1
,cost Edge at:,4
,Neutral Edge (,10
,Board Edge ),27
,1 Edge at:0,8
,2 Edge at:1,8
,3 Edge at:2,8
,1 Edge at:3,8
,2 Edge at:4,8
,3 Edge at:5,7
,1 Edge at:6,8
,2 Edge at:7,8
,3 Edge at:8,7
,3 Edge at:9,7
,1 Edge at:10,8
,2 Edge at:11,8
,3 Edge at:12,7
,1 Edge at:13,7
,2 Edge at:14,7
,3 Edge at:15,6
,1 Edge at:16,7
,2 Edge at:17,7
,3 Edge at:18,7
,3 Edge at:19,6
,1 Edge at:20,7
,2 Edge at:21,6
,3 Edge at:22,5
,1 Edge at:23,6
,2 Edge at:24,6
,3 Edge at:25,6
,1 Edge at:26,6
,2 Edge at:27,6
,3 Edge at:28,6
,3 Edge at:29,5
,1 Edge at:30,6
,2 Edge at:31,6
,3 Edge at:32,4
,1 Edge at:33,5
,2 Edge at:34,5
,3 Edge at:35,5
,1 Edge at:36,3
,2 Edge at:37,3
,3 Edge at:38,3
,3 Edge at:39,2
,1 Edge at:40,3
,2 Edge at:41,3
,3 Edge at:42,2
,1 Edge at:43,2
,2 Edge at:44,2
,Edge at:0,8
,Edge at:1,8
,Edge at:2,8
,Edge at:3,8
,Edge at:4,8
,Edge at:5,8
,Edge at:6,8
,Edge at:7,8
,Edge at:8,8
,Edge at:9,8
,Edge at:10,8
,Edge at:11,8
,Edge at:12,7
,Edge at:13,7
,Edge at:14,7
,Edge at:15,7
,Edge at:16,7
,Edge at:17,7
,Edge at:18,7
,Edge at:19,7
,Edge at:20,7
,Edge at:21,6
,Edge at:22,6
,Edge at:23,6
,Edge at:24,6
,Edge at:25,6
,Edge at:26,6
,Edge at:27,6
,Edge at:28,6
,Edge at:29,6
,Edge at:30,6
,Edge at:31,6
,Edge at:32,5
,Edge at:33,5
,Edge at:34,5
,Edge at:35,5
,Edge at:36,3
,Edge at:37,3
,Edge at:38,3
,Edge at:39,3
,Edge at:40,3
,Edge at:41,3
,Edge at:42,2
,Edge at:43,2
,Edge at:44,2
,Shared Edge (,14
,P1 Edge (,8
,P2 Edge (,6
,cost Edge in:,2
,4 Edge at:5,1
,4 Edge at:9,1
,4 Edge at:19,1
,4 Edge at:22,1
,4 Edge at:29,1
,4 Edge at:32,1
,4 Edge at:39,1
,Edge in:,2
,0 Edge at:8,1
,0 Edge at:15,1
,State Edge at:,1
,Path Edge Mover,7
,Edge Mover,7
,Group Edge at:,2
,Incident Edge of:Edge,1
,Edge of:Edge,1
,values Edge (,1
,Count Edge (,3
,Groups Edge ),1
22>,<9 22> <8,1
,22> <8,1
<Doctrine1:doctrine>,mapEntry <Doctrine1:doctrine> #2,1
,<Doctrine1:doctrine> #2,1
Jay,--COMMA-- Jay M,8
,Jay M,8
,STRING Jay Coskey,1
,Jay Coskey,1
BRR,BR BRR },1
,BRR },1
DoCastle,- DoCastle (,3
,DoCastle (,3
prev,( prev ),6
,prev ),6
,( prev MoverLastTurn,1
,prev MoverLastTurn,1
<OuterRing>,STRING <OuterRing> args:,1
,<OuterRing> args:,1
pits,storage pits ),41
,pits ),41
,previous pits only,1
,pits only,1
Booleans:,for Booleans: (,1
,Booleans: (,1
defines,macro defines one,1
,defines one,1
,region defines (,1
,constants defines (,1
,functional defines (,1
,defines (,4
,Functional defines (,1
230,pair 230 310,1
,230 310,1
,221 230 239,1
,. 230 },1
,{ 230 4,1
,230 239,1
,230 },1
,230 4,1
,250 230 212,1
,230 212,1
231,227 231 209,1
,231 209,1
,10 231 ),1
,231 ),1
,pair 231 509,1
,231 509,1
,221 231 232,2
,231 232,3
,222 231 240,1
,224 231 .,1
,231 240,1
,231 .,1
,213 231 232,1
232,144 232 184,1
,168 232 216,1
,232 184,1
,232 216,1
,pair 232 510,1
,232 510,1
,231 232 233,3
,232 233,3
,223 232 241,1
,232 241,1
233,242 233 224,1
,233 224,1
,pair 233 283,1
,233 283,1
,232 233 239,2
,233 239,2
,224 233 242,1
,. 233 },1
,233 242,1
,233 },1
,232 233 273,1
,233 273,1
<Next>,STRING <Next> STRING,2
,<Next> STRING,2
<maxVal>,<size> <maxVal> <sum>,1
,<maxVal> <sum>,1
234,pair 234 284,1
,234 284,1
,225 234 243,1
,227 234 .,1
,{ 234 8,1
,234 243,1
,234 .,1
,234 8,1
,216 234 253,1
,234 253,1
235,195 235 219,1
,235 219,1
,pair 235 169,1
,235 169,1
,284 235 186,1
,235 186,1
,226 235 244,1
,235 244,1
,{ 235 },1
,235 },1
236,pair 236 170,1
,236 170,1
,533 236 237,1
,236 237,1
,. 236 },2
,227 236 245,1
,236 },3
,236 245,1
,{ 236 },1
237,pair 237 167,1
,237 167,1
,236 237 286,1
,237 286,1
,{ 237 .,2
,228 237 246,1
,237 .,2
,237 246,1
,{ 237 },1
,237 },1
merge,( merge (,50
,merge (,50
,( merge {,104
,merge {,104
238,198 238 222,1
,238 222,1
,pair 238 168,1
,238 168,1
,229 238 247,1
,238 247,1
,258 238 218,1
,238 218,1
,201 238 319,1
,238 319,1
counter-attack,) counter-attack (,1
,counter-attack (,1
239,pair 239 203,1
,239 203,1
,190 239 288,1
,239 288,1
,233 239 240,2
,239 240,2
,230 239 248,1
,. 239 246,1
,239 248,1
,239 246,1
,259 239 219,1
,239 219,1
Then,= Then moves,1
,Then moves,1
,. Then the,1
,Then the,1
,. Then --COMMA--,1
,Then --COMMA--,1
state,( state at:,392
,state at:,392
,( state at:#1,46
,state at:#1,46
,- state (,5
,state (,9
,next state .,1
,state .,1
,initial state (,2
,( state ),1
,state ),1
,terminal state with,1
,state with,1
,have state 0,1
,state 0,1
,Local state =,2
,state =,4
,) state =,2
,STRING state (,2
,Allow state to,1
,state to,1
,without state changes,2
,state changes,2
,( state at:0,2
,( state at:1,2
,( state at:2,1
,state at:0,2
,state at:1,2
,state at:2,1
23>,. 23> <9,1
,<8 23> STRING,1
,23> <9,1
,23> STRING,1
<Option:board>,surakartaBoard <Option:board> ),1
,<Option:board> ),1
opposite,compass opposite of,1
,opposite of,1
,board opposite its,1
,opposite its,1
Rotational,Slide Rotational (,1
,Rotational (,1
<board>,{ <board> <p1Moves>,1
,<board> <p1Moves>,1
,{ <board> <start>,1
,<board> <start>,1
,{ <board> <tracks>,1
,<board> <tracks>,1
,{ <board> },3
,<board> },3
,{ <board> <rules>,2
,<board> <rules>,2
,<players> <board> <start1>,1
,<board> <start1>,1
,<num> <board> <sumFingers>,1
,<board> <sumFingers>,1
,{ <board> <piles>,1
,<board> <piles>,1
,{ <board> <noPieceSite>,1
,<board> <noPieceSite>,1
each,of each player,5
,each player,5
,of each piece,1
,each piece,2
,and each piece,1
,with each side,1
,and each space,1
,each side,1
,each space,1
,of each entrenchment,1
,of each turn,1
,each entrenchment,1
,each turn,1
,of each marker,1
,each marker,1
,of each individual,1
,each individual,1
240,256 240 376,1
,240 376,1
,pair 240 204,1
,240 204,1
,face 240 ),1
,240 ),2
,285 240 241,1
,240 241,1
,colour 240 240,1
,240 240 240,1
,240 240 ),1
,240 240,2
,239 240 246,2
,240 246,2
,231 240 249,1
,{ 240 .,1
,{ 240 3,1
,240 249,1
,240 .,1
,240 3,1
,220 240 260,1
,240 260,1
<0><,STRING <0>< (,1
,<0>< (,1
241,pair 241 203,1
,241 203,1
,face 241 ),1
,241 ),1
,240 241 290,1
,241 290,1
,232 241 250,1
,241 250,1
242,251 242 233,1
,242 233,1
,pair 242 204,1
,242 204,1
,face 242 ),1
,242 ),1
,233 242 251,1
,. 242 249,1
,{ 242 4,1
,242 251,1
,242 249,1
,242 4,1
,{ 242 },1
,242 },1
,221 242 262,1
,242 262,1
,222 242 169,1
,242 169,1
243,259 243 250,1
,243 250,1
,pair 243 245,1
,243 245,1
,face 243 ),1
,243 ),1
,234 243 252,1
,{ 243 .,1
,243 252,1
,243 .,1
<team>,<size> <team> <tracks>,4
,<team> <tracks>,4
,<size> <team> <tracks>>,1
,<team> <tracks>>,1
244,pair 244 246,1
,244 246,1
,235 244 253,1
,244 253,1
,245 244 172,1
,244 172,1
245,227 245 ),1
,243 245 ),1
,245 ),2
,. 245 },1
,236 245 254,1
,. 245 252,1
,245 },1
,245 254,1
,245 252,1
,246 245 244,1
,245 244,1
246,262 246 253,1
,246 253,1
,228 246 ),1
,244 246 ),1
,246 ),2
,240 246 247,2
,246 247,2
,{ 246 .,1
,237 246 255,1
,239 246 .,1
,246 .,2
,246 255,1
,{ 246 },1
,246 },1
,190 246 245,1
,246 245,1
247,rotate 247 .,1
,247 .,1
,pair 247 511,1
,247 511,1
,246 247 257,2
,247 257,2
,238 247 256,1
,{ 247 4,1
,247 256,1
,247 4,1
248,pair 248 512,1
,248 512,1
,239 248 257,1
,. 248 255,1
,248 257,1
,248 255,1
249,pair 249 513,1
,249 513,1
,240 249 258,1
,242 249 .,1
,249 258,1
,249 .,1
,{ 249 },1
,249 },1
Influence,the Influence of,1
,is Influence at,1
,Influence of,1
,Influence at,1
Group,size Group at:,15
,Group at:,26
,sites Group at:,11
,forEach Group (,1
,Group (,1
,sizes Group P1,3
,sizes Group P2,3
,sizes Group P3,2
,sizes Group P4,1
,Group P1,3
,Group P2,3
,Group P3,2
,Group P4,1
,sites Group from:,2
,Group from:,2
,sizes Group STRING,16
,Group STRING,16
,sizes Group <BoardShape:directionsUsed>,3
,sizes Group Orthogonal,3
,Group <BoardShape:directionsUsed>,3
,Group Orthogonal,5
,forEach Group Orthogonal,2
,sites Group Edge,2
,Group Edge,2
<BoardLayout>,{ <BoardLayout> <Pawn1Start>,1
,<BoardLayout> <Pawn1Start>,1
<removeLastPiece>,<start> <removeLastPiece> <end>,1
,<removeLastPiece> <end>,1
<Row:track>,{ <Row:track> },1
,<Row:track> },1
<CapOption:enemyHops>,STRING <CapOption:enemyHops> <Multi:capture>,1
,<CapOption:enemyHops> <Multi:capture>,1
two,the two nearest,1
,or two in,1
,or two enemy,1
,right two or,2
,two nearest,1
,two in,1
,two enemy,1
,two or,2
,and two round,1
,two round,1
,piece two Cells,1
,in two separate,2
,two Cells,1
,two separate,2
,leap two spaces,1
,two spaces,1
,to two steps,9
,two steps,9
,the two sense,1
,two sense,1
,between two new,1
,two new,1
,last two characters,1
,two characters,1
250,243 250 256,1
,250 256,1
,pair 250 514,1
,250 514,1
,241 250 259,1
,{ 250 5,1
,250 259,1
,250 5,1
,271 250 230,1
,250 230,1
251,188 251 },1
,188 251 242,1
,251 },2
,251 242,1
,{ 251 .,1
,251 .,1
,pair 251 515,1
,251 515,1
,242 251 260,1
,. 251 258,1
,251 260,1
,251 258,1
,{ 251 },1
252,254 252 253,1
,252 253,1
,pair 252 516,1
,252 516,1
,243 252 261,1
,245 252 .,1
,252 261,1
,252 .,1
,253 252 522,1
,252 522,1
253,246 253 286,1
,253 286,1
,252 253 },1
,1 253 ),1
,253 },2
,253 ),1
,pair 253 97,1
,253 97,1
,244 253 262,1
,{ 253 1,1
,253 262,1
,253 1,1
,{ 253 },1
,234 253 252,1
,253 252,1
254,. 254 252,1
,254 252,1
,pair 254 98,1
,254 98,1
,303 254 205,1
,254 205,1
,. 254 },1
,245 254 263,1
,. 254 261,1
,254 },1
,254 263,1
,254 261,1
promote,( promote (,61
,promote (,61
,To promote to,20
,promote to,20
,can promote --COMMA--,1
,promote --COMMA--,1
255,11 255 ),1
,255 ),3
,pair 255 379,1
,255 379,1
,59 255 256,1
,255 256,1
,colour 255 255,4
,255 255 255,4
,255 255 ),2
,255 255 120,2
,255 255,8
,255 120,2
,{ 255 .,1
,246 255 },1
,248 255 .,1
,{ 255 3,1
,255 .,2
,255 },1
,255 3,1
,275 255 35,1
,255 35,1
,317 255 275,1
,255 275,1
256,250 256 240,1
,256 240,1
,pair 256 380,1
,256 380,1
,255 256 399,1
,256 399,1
,247 256 },1
,256 },2
,{ 256 },1
,277 256 276,1
,256 276,1
257,pair 257 31,1
,257 31,1
,258 257 463,1
,257 463,1
,247 257 258,2
,257 258,2
,248 257 },1
,. 257 },1
,257 },2
<Board:thirdHoleInnerP2>,{ <Board:thirdHoleInnerP2> <Board:rightMostInnerHoleP2>,1
,<Board:thirdHoleInnerP1> <Board:thirdHoleInnerP2> },1
,<Board:thirdHoleInnerP2> <Board:rightMostInnerHoleP2>,1
,<Board:thirdHoleInnerP2> },1
258,pair 258 32,1
,258 32,1
,259 258 257,1
,258 257,1
,257 258 264,2
,258 264,2
,249 258 },1
,251 258 .,1
,258 },1
,258 .,1
,280 258 238,1
,258 238,1
259,370 259 243,1
,259 243,1
,pair 259 37,1
,259 37,1
,260 259 258,1
,259 258,1
,250 259 },1
,{ 259 8,1
,259 },1
,259 8,1
,279 259 239,1
,259 239,1
does,it does not,1
,does not,3
,away does not,1
,This does not,1
,Shooter does double,1
,Shooter does 150%,1
,Shooter does 250%,1
,Shooter does 200%,1
,does double,1
,does 150%,1
,does 250%,1
,does 200%,1
attack,Can attack all,2
,Cannot attack the,1
,attack all,2
,attack the,1
<90>,STRING <90> <,3
,<90> <,3
,STRING <90> STRING,1
,<90> STRING,1
25>,<10 25> <9,1
,25> <9,1
,. 25> <22,1
,<22 25> STRING,1
,25> <22,1
,25> STRING,1
---------------------------------------------,) --------------------------------------------- Options,1
,; --------------------------------------------- (,1
,--------------------------------------------- Options,1
,--------------------------------------------- (,1
clause,then clause (,2
,remember clause (,2
,between clause (,1
,clause (,5
<Scenario:boardShape>,board <Scenario:boardShape> ),1
,<Scenario:boardShape> ),1
<Scenario:playerMaps>,) <Scenario:playerMaps> STRING,1
,<Scenario:playerMaps> STRING,1
replaced,typ replaced (,1
,replaced (,1
team,( team ),2
,team ),2
260,{ 260 323,1
,269 260 323,1
,260 323,2
,pair 260 38,1
,260 38,1
,261 260 259,1
,260 259,1
,251 260 },1
,. 260 },1
,260 },2
,240 260 280,1
,260 280,1
261,pair 261 517,1
,261 517,1
,262 261 260,1
,261 260,1
,252 261 },1
,254 261 .,1
,261 },1
,261 .,1
262,192 262 246,1
,262 246,1
,pair 262 518,1
,262 518,1
,263 262 261,1
,262 261,1
,253 262 },1
,262 },2
,{ 262 },1
,242 262 224,1
,262 224,1
They,- They slide,1
,. They castle,1
,They slide,1
,They castle,1
263,pair 263 477,1
,263 477,1
,264 263 262,1
,263 262,1
,. 263 },2
,254 263 },1
,{ 263 4,1
,263 },3
,263 4,1
264,280 264 307,1
,264 307,1
,pair 264 478,1
,264 478,1
,265 264 263,1
,264 263,1
,258 264 269,2
,264 269,2
,267 264 268,1
,362 264 265,1
,364 264 268,1
,{ 264 7,1
,264 268,2
,264 265,1
,264 7,1
,224 264 284,1
,264 284,1
,224 264 305,1
,264 305,1
265,pair 265 519,1
,265 519,1
,266 265 264,1
,265 264,1
,266 265 269,1
,264 265 278,1
,{ 265 269,2
,{ 265 278,1
,265 269,3
,265 278,2
LineOfSight,sites LineOfSight Farthest,4
,LineOfSight Farthest,4
,sites LineOfSight at:,8
,LineOfSight at:,8
,sites LineOfSight Empty,3
,sites LineOfSight Piece,8
,LineOfSight Empty,3
,LineOfSight Piece,8
266,pair 266 520,1
,266 520,1
,267 266 265,1
,266 265,2
,366 266 265,1
,267 266 279,1
,366 266 199,1
,{ 266 2,1
,266 279,1
,266 199,1
,266 2,1
,{ 266 },1
,266 },1
,227 266 267,1
,266 267,1
267,283 267 274,1
,267 274,1
,pair 267 521,1
,267 521,1
,268 267 266,1
,267 266,2
,365 267 264,1
,361 267 266,1
,365 267 },1
,267 264,1
,267 },2
,{ 267 },1
,266 267 124,1
,267 124,1
,308 267 227,1
,267 227,1
268,pair 268 522,1
,268 522,1
,269 268 267,1
,268 267,1
,264 268 270,2
,363 268 269,1
,268 270,2
,268 269,1
269,278 269 260,1
,269 260,1
,pair 269 523,1
,269 523,1
,270 269 268,1
,269 268,1
,264 269 279,2
,269 279,2
,265 269 271,3
,268 269 280,1
,{ 269 280,1
,269 271,3
,269 280,2
,{ 269 },1
,269 },1
,270 269 289,1
,269 289,1
<Board:thirdHoleInnerP1>,{ <Board:thirdHoleInnerP1> <Board:rightMostInnerHoleP1>,1
,{ <Board:thirdHoleInnerP1> <Board:thirdHoleInnerP2>,1
,<Board:thirdHoleInnerP1> <Board:rightMostInnerHoleP1>,1
,<Board:thirdHoleInnerP1> <Board:thirdHoleInnerP2>,1
26>,. 26> <10,1
,<9 26> STRING,1
,26> <10,1
,26> STRING,1
thing,curious thing .,1
,thing .,1
Shooter,) Shooter does,1
,( Shooter does,3
,Shooter does,4
<numSeed>,{ <numSeed> },2
,<numSeed> },2
typ,piece typ replaced,1
,typ replaced,1
270,rotate 270 (,7
,270 (,7
,286 270 277,1
,270 277,1
,pair 270 524,1
,270 524,1
,271 270 269,2
,270 269,2
,268 270 },2
,364 270 271,1
,270 },2
,270 271,1
source,the source .,2
,source .,2
,the source ;,1
,source ;,1
271,pair 271 525,1
,271 525,1
,272 271 270,2
,271 270,2
,269 271 },1
,270 271 281,1
,269 271 .,1
,{ 271 281,1
,269 271 278,1
,271 },2
,271 281,2
,271 .,1
,271 278,1
,{ 271 },1
,311 271 250,1
,271 250,1
272,pair 272 526,1
,272 526,1
,273 272 271,2
,272 271,2
,{ 272 282,1
,{ 272 .,1
,272 282,1
,272 .,1
273,pair 273 527,1
,273 527,1
,274 273 272,1
,273 272,2
,{ 273 283,1
,{ 273 3,1
,273 283,1
,273 3,1
,233 273 272,1
274,267 274 280,1
,274 280,1
,pair 274 528,1
,274 528,1
,275 274 273,1
,274 273,1
,{ 274 284,1
,. 274 282,1
,274 284,1
,274 282,1
275,pair 275 407,1
,275 407,1
,276 275 274,1
,275 274,1
,{ 275 285,1
,{ 275 .,1
,275 285,1
,275 .,1
,{ 275 },1
,275 },1
,276 275 255,1
,275 255,1
,255 275 316,1
,275 316,1
276,pair 276 408,1
,276 408,1
,277 276 275,2
,276 275,2
,{ 276 286,1
,276 286,1
,{ 276 },1
,276 },1
,256 276 317,1
,276 317,1
trail:,) trail: (,2
,trail: (,2
277,270 277 310,1
,277 310,1
,pair 277 33,1
,277 33,1
,278 277 276,2
,277 276,2
,. 277 },1
,{ 277 287,1
,. 277 285,1
,{ 277 6,1
,277 },1
,277 287,1
,277 285,1
,277 6,1
,318 277 256,1
,277 256,1
278,287 278 269,1
,278 269,1
,35 278 279,1
,278 279,1
,pair 278 34,1
,278 34,1
,327 278 277,1
,278 277,2
,279 278 280,1
,265 278 288,2
,{ 278 280,1
,271 278 280,1
,278 280,3
,278 288,2
,{ 278 },1
,278 },1
,38 278 277,1
279,12 279 ),1
,279 ),1
,278 279 300,1
,279 300,1
,pair 279 157,1
,279 157,1
,269 279 288,2
,279 288,2
,367 279 278,1
,266 279 289,1
,367 279 209,1
,279 278,1
,279 289,1
,279 209,1
,{ 279 },1
,279 },1
,299 279 259,1
,279 259,1
,341 279 422,1
,279 422,1
There,* There are,1
,. There is,1
,There are,1
,There is,1
This,) This removes,2
,This removes,2
,) This macro,1
,STRING This will,1
,This macro,1
,This will,1
,--COMMA-- This does,1
,This does,1
<center>,<start> <center> <tracks>,1
,<center> <tracks>,1
chess,3-player chess variant,1
,chess variant,1
280,274 280 264,1
,280 264,1
,pair 280 158,1
,280 158,1
,face 280 ),1
,280 ),1
,278 280 281,2
,269 280 290,2
,278 280 .,1
,280 281,2
,280 290,2
,280 .,1
,{ 280 },1
,280 },1
,260 280 258,1
,280 258,1
Movement:,Pawn Movement: En,1
,Movement: En,1
,Piece Movement: *,1
,Movement: *,1
281,pair 281 203,1
,281 203,1
,face 281 ),1
,281 ),1
,280 281 },1
,271 281 291,2
,280 281 288,1
,281 },1
,281 291,2
,281 288,1
282,face 282 ),1
,282 ),1
,272 282 292,1
,274 282 .,1
,282 292,1
,282 .,1
,283 282 303,1
,282 303,1
283,376 283 267,1
,283 267,1
,233 283 ),1
,pair 283 529,1
,305 283 ),1
,283 ),3
,283 529,1
,face 283 ),1
,273 283 293,1
,{ 283 6,1
,283 293,1
,283 6,1
,{ 283 },1
,283 },1
,284 283 282,1
,283 282,1
<dice>,{ <dice> },2
,<dice> },2
,{ <dice> <movement>,1
,<dice> <movement>,1
,<size> <dice> <tracks>,1
,<dice> <tracks>,1
284,234 284 ),1
,pair 284 530,1
,306 284 ),1
,284 ),2
,284 530,1
,333 284 235,1
,284 235,1
,274 284 294,1
,. 284 292,1
,284 294,1
,284 292,1
,{ 284 },1
,284 },1
,264 284 88,1
,284 88,1
,325 284 283,1
,284 283,1
285,. 285 0,3
,285 0,3
,pair 285 531,1
,285 531,1
,334 285 240,1
,285 240,1
,275 285 295,1
,277 285 .,1
,285 295,1
,285 .,1
286,253 286 270,1
,286 270,1
,pair 286 532,1
,286 532,1
,237 286 335,1
,286 335,1
,276 286 296,1
,{ 286 2,1
,286 296,1
,286 2,1
,287 286 308,1
,286 308,1
287,224 287 },1
,224 287 278,1
,287 },3
,287 278,1
,11 287 ),1
,pair 287 533,1
,287 ),1
,287 533,1
,. 287 },1
,277 287 297,1
,. 287 295,1
,287 297,1
,287 295,1
,{ 287 },1
,288 287 286,1
,287 286,1
288,304 288 355,1
,288 355,1
,12 288 ),1
,pair 288 534,1
,288 ),1
,288 534,1
,239 288 337,1
,288 337,1
,279 288 291,2
,288 291,2
,289 288 290,1
,278 288 },1
,{ 288 290,1
,278 288 298,1
,281 288 290,1
,288 290,3
,288 },1
,288 298,1
,289 288 287,1
,288 287,1
These,) These are,1
,These are,1
289,368 289 288,1
,279 289 },1
,368 289 },1
,289 288,2
,289 },3
,{ 289 },1
,269 289 229,1
,289 229,1
,309 289 288,1
28>,<11 28> <10,1
,28> <10,1
,27 28> STRING,1
,28> STRING,1
fixed,are fixed .,1
,fixed .,1
full,- full moves,1
,full moves,1
<site1>,{ <site1> <site2>,1
,<site1> <site2>,1
<BoardSize:smallSide>,square <BoardSize:smallSide> ),7
,<BoardSize:smallSide> ),16
,- <BoardSize:smallSide> 1,11
,+ <BoardSize:smallSide> 1,4
,Hexagon <BoardSize:smallSide> ),8
,- <BoardSize:smallSide> 2,4
,<BoardSize:smallSide> 1,15
,<BoardSize:smallSide> 2,4
,<BoardShape:gridType> <BoardSize:smallSide> ),1
to:3,from:1 to:3 colour:2,1
,from:2 to:3 colour:2,1
,to:3 colour:2,2
away,going away (,3
,away (,3
,Cells away does,1
,away does,1
,facing away from,1
,away from,1
to:1,) to:1 (,1
,to:1 (,1
,from:0 to:1 colour:1,1
,to:1 colour:1,1
to:2,) to:2 (,2
,to:2 (,2
,from:0 to:2 colour:1,1
,to:2 colour:1,1
to:0,) to:0 (,2
,to:0 (,2
290,241 290 339,1
,290 339,1
,288 290 291,2
,280 290 },1
,288 290 .,1
,280 290 299,1
,290 291,2
,290 },2
,290 .,1
,290 299,1
,{ 290 },1
291,307 291 298,1
,291 298,1
,288 291 292,2
,291 292,2
,290 291 },2
,281 291 },1
,281 291 300,1
,291 },4
,291 300,1
,{ 291 },1
,292 291 312,1
,291 312,1
<NumberPlayers:inGame>,- <NumberPlayers:inGame> 2,1
,) <NumberPlayers:inGame> ),3
,{ <NumberPlayers:inGame> (,1
,players <NumberPlayers:inGame> ),1
,<NumberPlayers:inGame> 2,1
,<NumberPlayers:inGame> ),4
,<NumberPlayers:inGame> (,1
292,rotate 292 .,1
,292 .,2
,291 292 295,2
,292 295,2
,282 292 301,1
,284 292 .,1
,{ 292 1,1
,292 301,1
,292 1,1
,374 292 291,1
,292 291,1
293,pair 293 535,1
,293 535,1
,In 293 (,1
,293 (,1
,283 293 302,1
,293 302,1
294,310 294 301,1
,294 301,1
,pair 294 536,1
,294 536,1
,284 294 303,1
,. 294 },1
,{ 294 5,1
,294 303,1
,294 },1
,294 5,1
,295 294 314,1
,294 314,1
<endRule>,<promotedMove> <endRule> },1
,<endRule> },1
295,109 295 ),1
,pair 295 537,1
,295 ),1
,295 537,1
,292 295 296,2
,295 296,2
,285 295 304,1
,287 295 .,1
,295 304,1
,295 .,1
,376 295 294,1
,295 294,1
<PlaceDisc>,STRING <PlaceDisc> args:,1
,<PlaceDisc> args:,1
<numPlayers>,{ <numPlayers> <home>,2
,<numPlayers> <home>,2
,{ <numPlayers> <start>,1
,<numPlayers> <start>,1
,{ <numPlayers> <endScore>,1
,<numPlayers> <endScore>,1
,{ <numPlayers> <playRules>,2
,<numPlayers> <playRules>,2
,{ <numPlayers> <setupRules>,1
,<numPlayers> <setupRules>,1
,<playerMaps> <numPlayers> <boardShape>,1
,<numPlayers> <boardShape>,1
,{ <numPlayers> <rulesCommander>,1
,<numPlayers> <rulesCommander>,1
,{ <numPlayers> },5
,<numPlayers> },5
296,{ 296 359,1
,305 296 359,1
,296 359,2
,110 296 ),1
,pair 296 538,1
,296 ),1
,296 538,1
,295 296 297,2
,296 297,2
,286 296 305,1
,296 305,1
297,107 297 ),1
,pair 297 539,1
,297 ),1
,297 539,1
,296 297 298,2
,297 298,2
,. 297 },2
,287 297 306,1
,297 },3
,297 306,1
,{ 297 },1
298,291 298 304,1
,298 304,1
,108 298 ),1
,pair 298 540,1
,298 ),1
,298 540,1
,297 298 299,2
,298 299,2
,{ 298 .,2
,288 298 307,1
,298 .,2
,298 307,1
,319 298 318,1
,298 318,1
299,pair 299 31,1
,299 31,1
,298 299 300,2
,299 300,2
,290 299 308,1
,299 308,1
,{ 299 },1
,299 },1
,215 299 279,1
,299 279,1
next:False,previous:False next:False ),4
,next:False ),4
Mountain,) Mountain move,1
,Mountain move,1
before:,STRING before: (,26
,before: (,59
,between before: (,30
,Diagonal before: (,1
,) before: (,2
29>,. 29> <11,1
,<10 29> STRING,1
,29> <11,1
,29> STRING,2
,. 29> <26,1
,<26 29> STRING,1
,29> <26,1
<throwValues>,<num> <throwValues> },1
,<throwValues> },1
<Players:track>,6 <Players:track> ),1
,<Players:track> ),1
<rule>,{ <rule> },14
,<rule> },14
start,( start {,673
,start {,673
,( start (,272
,start (,272
,( start <Rules:start>,1
,start <Rules:start>,1
,( start <Board:start>,6
,start <Board:start>,6
,( start <Version:start>,2
,start <Version:start>,2
,( start <Play:start>,1
,start <Play:start>,1
,I start by,1
,to start the,1
,start by,1
,start the,1
,( start <Size:piles>,1
,start <Size:piles>,1
,( start <Challenge>,7
,start <Challenge>,7
,( start <Challenge:start>,1
,start <Challenge:start>,1
<numKings>,<kingHop> <numKings> },1
,<numKings> },1
origin:11,expand origin:11 steps:6,1
,origin:11 steps:6,1
***,) *** (,4
,*** (,4
,) *** },2
,*** },2
origin:10,expand origin:10 steps:6,1
,origin:10 steps:6,1
pair,( pair 5,73
,( pair 7,52
,( pair 34,10
,( pair 36,12
,pair 5,73
,pair 7,52
,pair 34,10
,pair 36,12
,( pair P1,162
,( pair P2,163
,( pair P3,26
,( pair P4,24
,pair P1,162
,pair P2,163
,pair P3,26
,pair P4,24
,( pair 1,209
,( pair 2,209
,pair 1,209
,pair 2,209
,( pair 0,65
,( pair 3,120
,( pair 4,112
,( pair 6,70
,pair 0,65
,pair 3,120
,pair 4,112
,pair 6,70
,( pair 37,11
,( pair 15,20
,( pair 20,16
,( pair 16,20
,( pair 21,15
,( pair 35,12
,( pair 17,17
,( pair 22,13
,( pair P5,4
,( pair P6,4
,pair 37,11
,pair 15,20
,pair 20,16
,pair 16,20
,pair 21,15
,pair 35,12
,pair 17,17
,pair 22,13
,pair P5,4
,pair P6,4
,in pair .,1
,pair .,1
,( pair STRING,19
,pair STRING,19
,( pair 8,47
,( pair 9,40
,( pair 10,40
,( pair 11,41
,( pair 12,38
,( pair 13,19
,( pair 14,19
,pair 8,47
,pair 9,40
,pair 10,40
,pair 11,41
,pair 12,38
,pair 13,19
,pair 14,19
,( pair P7,2
,( pair P8,2
,( pair P9,1
,( pair P10,1
,pair P7,2
,pair P8,2
,pair P9,1
,pair P10,1
,( pair 18,16
,( pair 19,14
,( pair 23,13
,( pair 24,13
,( pair 25,13
,( pair 26,11
,( pair 27,13
,( pair 28,11
,( pair 29,9
,( pair 30,11
,( pair 31,9
,( pair 32,10
,( pair 33,9
,( pair 38,9
,( pair 39,10
,( pair 40,9
,( pair 41,10
,( pair 42,10
,( pair 43,9
,( pair 44,6
,( pair 45,6
,( pair 46,7
,( pair 47,8
,( pair 48,8
,( pair 49,8
,( pair 50,7
,( pair 51,7
,( pair 52,7
,( pair 53,6
,( pair 54,7
,( pair 55,7
,( pair 56,7
,( pair 57,7
,( pair 58,7
,( pair 59,8
,( pair 60,7
,( pair 61,7
,( pair 62,7
,( pair 63,7
,( pair 64,7
,( pair 65,7
,( pair 66,7
,( pair 67,7
,( pair 68,8
,( pair 69,8
,( pair 70,7
,( pair 71,7
,( pair 72,7
,( pair 73,7
,( pair 74,6
,( pair 75,7
,( pair 76,6
,( pair 77,6
,( pair 78,6
,( pair 79,6
,( pair 80,6
,( pair 81,7
,( pair 82,4
,( pair 83,4
,( pair 84,4
,( pair 85,4
,( pair 86,4
,( pair 87,4
,( pair 88,4
,( pair 89,4
,( pair 90,4
,( pair 91,4
,( pair 92,4
,( pair 93,3
,( pair 94,4
,( pair 95,4
,( pair 96,4
,( pair 97,4
,( pair 98,4
,pair 18,16
,pair 19,14
,pair 23,13
,pair 24,13
,pair 25,13
,pair 26,11
,pair 27,13
,pair 28,11
,pair 29,9
,pair 30,11
,pair 31,9
,pair 32,10
,pair 33,9
,pair 38,9
,pair 39,10
,pair 40,9
,pair 41,10
,pair 42,10
,pair 43,9
,pair 44,6
,pair 45,6
,pair 46,7
,pair 47,8
,pair 48,8
,pair 49,8
,pair 50,7
,pair 51,7
,pair 52,7
,pair 53,6
,pair 54,7
,pair 55,7
,pair 56,7
,pair 57,7
,pair 58,7
,pair 59,8
,pair 60,7
,pair 61,7
,pair 62,7
,pair 63,7
,pair 64,7
,pair 65,7
,pair 66,7
,pair 67,7
,pair 68,8
,pair 69,8
,pair 70,7
,pair 71,7
,pair 72,7
,pair 73,7
,pair 74,6
,pair 75,7
,pair 76,6
,pair 77,6
,pair 78,6
,pair 79,6
,pair 80,6
,pair 81,7
,pair 82,4
,pair 83,4
,pair 84,4
,pair 85,4
,pair 86,4
,pair 87,4
,pair 88,4
,pair 89,4
,pair 90,4
,pair 91,4
,pair 92,4
,pair 93,3
,pair 94,4
,pair 95,4
,pair 96,4
,pair 97,4
,pair 98,4
,( pair (,666
,pair (,666
,( pair 99,1
,( pair 100,1
,( pair 101,1
,( pair 102,1
,( pair 103,1
,( pair 104,1
,( pair 105,1
,( pair 106,1
,( pair 107,1
,( pair 108,1
,( pair 109,1
,( pair 110,1
,( pair 111,1
,( pair 112,1
,( pair 113,1
,( pair 114,1
,( pair 115,1
,( pair 116,1
,( pair 117,1
,( pair 118,1
,( pair 119,1
,( pair 120,1
,( pair 121,1
,( pair 122,1
,( pair 123,1
,( pair 124,1
,( pair 125,1
,( pair 126,1
,( pair 127,1
,( pair 128,1
,( pair 133,1
,( pair 134,1
,( pair 135,1
,( pair 136,1
,( pair 137,1
,( pair 138,1
,( pair 139,1
,( pair 140,1
,( pair 141,1
,( pair 142,1
,( pair 143,1
,( pair 144,1
,( pair 145,1
,( pair 146,1
,( pair 147,1
,( pair 148,1
,( pair 149,1
,( pair 150,1
,( pair 151,1
,( pair 152,1
,( pair 153,1
,( pair 154,1
,( pair 155,1
,( pair 156,1
,( pair 157,1
,( pair 158,1
,( pair 159,1
,( pair 160,1
,( pair 161,1
,( pair 162,1
,( pair 163,1
,( pair 164,1
,( pair 165,1
,( pair 166,1
,( pair 169,1
,( pair 170,1
,( pair 171,1
,( pair 172,1
,( pair 173,1
,( pair 174,1
,( pair 175,1
,( pair 176,1
,( pair 177,1
,( pair 178,1
,( pair 179,1
,( pair 180,1
,( pair 181,1
,( pair 182,1
,( pair 183,1
,( pair 184,1
,( pair 185,1
,( pair 186,1
,( pair 187,1
,( pair 188,1
,( pair 189,1
,( pair 190,1
,( pair 191,1
,( pair 192,1
,( pair 193,1
,( pair 194,1
,( pair 195,1
,( pair 196,1
,( pair 197,1
,( pair 198,1
,( pair 199,1
,( pair 200,1
,( pair 201,1
,( pair 202,1
,( pair 203,1
,( pair 204,1
,( pair 205,1
,( pair 206,1
,( pair 207,1
,( pair 208,1
,( pair 209,1
,( pair 210,1
,( pair 211,1
,( pair 212,1
,( pair 213,1
,( pair 214,1
,( pair 215,1
,( pair 216,1
,( pair 217,1
,( pair 218,1
,( pair 219,1
,( pair 220,1
,( pair 221,1
,( pair 222,1
,( pair 223,1
,( pair 224,1
,( pair 225,1
,( pair 226,1
,( pair 227,1
,( pair 228,1
,( pair 229,1
,( pair 230,1
,( pair 231,1
,( pair 232,1
,( pair 233,1
,( pair 234,1
,( pair 235,1
,( pair 236,1
,( pair 237,1
,( pair 238,1
,( pair 239,1
,( pair 240,1
,( pair 241,1
,( pair 242,1
,( pair 243,1
,( pair 244,1
,( pair 247,1
,( pair 248,1
,( pair 249,1
,( pair 250,1
,( pair 251,1
,( pair 252,1
,( pair 253,1
,( pair 254,1
,( pair 255,1
,( pair 256,1
,( pair 257,1
,( pair 258,1
,( pair 259,1
,( pair 260,1
,( pair 261,1
,( pair 262,1
,( pair 263,1
,( pair 264,1
,( pair 265,1
,( pair 266,1
,( pair 267,1
,( pair 268,1
,( pair 269,1
,( pair 270,1
,( pair 271,1
,( pair 272,1
,( pair 273,1
,( pair 274,1
,( pair 275,1
,( pair 276,1
,( pair 277,1
,( pair 278,1
,( pair 279,1
,( pair 280,1
,( pair 281,1
,( pair 283,1
,( pair 284,1
,( pair 285,1
,( pair 286,1
,( pair 287,1
,( pair 288,1
,( pair 293,1
,( pair 294,1
,( pair 295,1
,( pair 296,1
,( pair 297,1
,( pair 298,1
,( pair 299,1
,( pair 300,1
,( pair 301,1
,( pair 302,1
,( pair 303,1
,( pair 304,1
,( pair 305,1
,( pair 306,1
,( pair 307,1
,( pair 308,1
,( pair 309,1
,( pair 310,1
,( pair 311,1
,( pair 312,1
,( pair 313,1
,( pair 314,1
,( pair 315,1
,( pair 316,1
,( pair 317,1
,( pair 318,1
,( pair 319,1
,( pair 320,1
,( pair 321,1
,( pair 322,1
,( pair 323,1
,( pair 324,1
,( pair 325,1
,( pair 326,1
,( pair 327,1
,( pair 328,1
,( pair 333,1
,( pair 334,1
,( pair 335,1
,( pair 336,1
,( pair 337,1
,( pair 338,1
,( pair 339,1
,( pair 340,1
,( pair 341,1
,( pair 342,1
,( pair 343,1
,( pair 344,1
,( pair 345,1
,( pair 346,1
,( pair 347,1
,( pair 348,1
,( pair 349,1
,( pair 350,1
,( pair 351,1
,( pair 352,1
,( pair 353,1
,( pair 354,1
,( pair 355,1
,( pair 356,1
,( pair 357,1
,( pair 358,1
,( pair 359,1
,( pair 360,1
,( pair 361,1
,( pair 362,1
,( pair 363,1
,( pair 364,1
,( pair 365,1
,( pair 366,1
,( pair 371,1
,( pair 372,1
,( pair 373,1
,( pair 374,1
,( pair 375,1
,( pair 376,1
,( pair 377,1
,( pair 378,1
,( pair 379,1
,( pair 380,1
,( pair 381,1
,( pair 382,1
,( pair 383,1
,( pair 384,1
,( pair 385,1
,( pair 386,1
,( pair 387,1
,( pair 388,1
,( pair 389,1
,( pair 390,1
,( pair 391,1
,( pair 392,1
,( pair 393,1
,( pair 394,1
,( pair 395,1
,( pair 396,1
,( pair 397,1
,( pair 398,1
,( pair 399,1
,( pair 400,1
,( pair 401,1
,( pair 402,1
,( pair 403,1
,( pair 404,1
,( pair 405,1
,( pair 406,1
,( pair 407,1
,( pair 408,1
,( pair 409,1
,( pair 410,1
,( pair 415,1
,( pair 416,1
,( pair 417,1
,( pair 418,1
,pair 99,1
,pair 100,1
,pair 101,1
,pair 102,1
,pair 103,1
,pair 104,1
,pair 105,1
,pair 106,1
,pair 107,1
,pair 108,1
,pair 109,1
,pair 110,1
,pair 111,1
,pair 112,1
,pair 113,1
,pair 114,1
,pair 115,1
,pair 116,1
,pair 117,1
,pair 118,1
,pair 119,1
,pair 120,1
,pair 121,1
,pair 122,1
,pair 123,1
,pair 124,1
,pair 125,1
,pair 126,1
,pair 127,1
,pair 128,1
,pair 133,1
,pair 134,1
,pair 135,1
,pair 136,1
,pair 137,1
,pair 138,1
,pair 139,1
,pair 140,1
,pair 141,1
,pair 142,1
,pair 143,1
,pair 144,1
,pair 145,1
,pair 146,1
,pair 147,1
,pair 148,1
,pair 149,1
,pair 150,1
,pair 151,1
,pair 152,1
,pair 153,1
,pair 154,1
,pair 155,1
,pair 156,1
,pair 157,1
,pair 158,1
,pair 159,1
,pair 160,1
,pair 161,1
,pair 162,1
,pair 163,1
,pair 164,1
,pair 165,1
,pair 166,1
,pair 169,1
,pair 170,1
,pair 171,1
,pair 172,1
,pair 173,1
,pair 174,1
,pair 175,1
,pair 176,1
,pair 177,1
,pair 178,1
,pair 179,1
,pair 180,1
,pair 181,1
,pair 182,1
,pair 183,1
,pair 184,1
,pair 185,1
,pair 186,1
,pair 187,1
,pair 188,1
,pair 189,1
,pair 190,1
,pair 191,1
,pair 192,1
,pair 193,1
,pair 194,1
,pair 195,1
,pair 196,1
,pair 197,1
,pair 198,1
,pair 199,1
,pair 200,1
,pair 201,1
,pair 202,1
,pair 203,1
,pair 204,1
,pair 205,1
,pair 206,1
,pair 207,1
,pair 208,1
,pair 209,1
,pair 210,1
,pair 211,1
,pair 212,1
,pair 213,1
,pair 214,1
,pair 215,1
,pair 216,1
,pair 217,1
,pair 218,1
,pair 219,1
,pair 220,1
,pair 221,1
,pair 222,1
,pair 223,1
,pair 224,1
,pair 225,1
,pair 226,1
,pair 227,1
,pair 228,1
,pair 229,1
,pair 230,1
,pair 231,1
,pair 232,1
,pair 233,1
,pair 234,1
,pair 235,1
,pair 236,1
,pair 237,1
,pair 238,1
,pair 239,1
,pair 240,1
,pair 241,1
,pair 242,1
,pair 243,1
,pair 244,1
,pair 247,1
,pair 248,1
,pair 249,1
,pair 250,1
,pair 251,1
,pair 252,1
,pair 253,1
,pair 254,1
,pair 255,1
,pair 256,1
,pair 257,1
,pair 258,1
,pair 259,1
,pair 260,1
,pair 261,1
,pair 262,1
,pair 263,1
,pair 264,1
,pair 265,1
,pair 266,1
,pair 267,1
,pair 268,1
,pair 269,1
,pair 270,1
,pair 271,1
,pair 272,1
,pair 273,1
,pair 274,1
,pair 275,1
,pair 276,1
,pair 277,1
,pair 278,1
,pair 279,1
,pair 280,1
,pair 281,1
,pair 283,1
,pair 284,1
,pair 285,1
,pair 286,1
,pair 287,1
,pair 288,1
,pair 293,1
,pair 294,1
,pair 295,1
,pair 296,1
,pair 297,1
,pair 298,1
,pair 299,1
,pair 300,1
,pair 301,1
,pair 302,1
,pair 303,1
,pair 304,1
,pair 305,1
,pair 306,1
,pair 307,1
,pair 308,1
,pair 309,1
,pair 310,1
,pair 311,1
,pair 312,1
,pair 313,1
,pair 314,1
,pair 315,1
,pair 316,1
,pair 317,1
,pair 318,1
,pair 319,1
,pair 320,1
,pair 321,1
,pair 322,1
,pair 323,1
,pair 324,1
,pair 325,1
,pair 326,1
,pair 327,1
,pair 328,1
,pair 333,1
,pair 334,1
,pair 335,1
,pair 336,1
,pair 337,1
,pair 338,1
,pair 339,1
,pair 340,1
,pair 341,1
,pair 342,1
,pair 343,1
,pair 344,1
,pair 345,1
,pair 346,1
,pair 347,1
,pair 348,1
,pair 349,1
,pair 350,1
,pair 351,1
,pair 352,1
,pair 353,1
,pair 354,1
,pair 355,1
,pair 356,1
,pair 357,1
,pair 358,1
,pair 359,1
,pair 360,1
,pair 361,1
,pair 362,1
,pair 363,1
,pair 364,1
,pair 365,1
,pair 366,1
,pair 371,1
,pair 372,1
,pair 373,1
,pair 374,1
,pair 375,1
,pair 376,1
,pair 377,1
,pair 378,1
,pair 379,1
,pair 380,1
,pair 381,1
,pair 382,1
,pair 383,1
,pair 384,1
,pair 385,1
,pair 386,1
,pair 387,1
,pair 388,1
,pair 389,1
,pair 390,1
,pair 391,1
,pair 392,1
,pair 393,1
,pair 394,1
,pair 395,1
,pair 396,1
,pair 397,1
,pair 398,1
,pair 399,1
,pair 400,1
,pair 401,1
,pair 402,1
,pair 403,1
,pair 404,1
,pair 405,1
,pair 406,1
,pair 407,1
,pair 408,1
,pair 409,1
,pair 410,1
,pair 415,1
,pair 416,1
,pair 417,1
,pair 418,1
equal,distance equal to,1
,equal to,1
by:Friend,Occupied by:Friend STRING,4
,by:Friend STRING,4
<Players:playingTeamPieces>,) <Players:playingTeamPieces> ),1
,<Players:playingTeamPieces> ),1
<95>,STRING <95> <,2
,<95> <,2
,STRING <95> STRING,1
,<95> STRING,1
exact:True,Orthogonal exact:True ),14
,exact:True ),20
,) exact:True ),2
,N exact:True ),1
,S exact:True ),1
,E exact:True ),1
,W exact:True ),1
<Player:startP3P4>,) <Player:startP3P4> },1
,<Player:startP3P4> },1
<boardRegins>,<boardShape> <boardRegins> <buildingSetup>,1
,<boardRegins> <buildingSetup>,1
Count,set Count at:,8
,Count at:,8
,set Count 3,15
,Count 3,15
,set Count 2,46
,Count 2,46
,set Count 4,59
,Count 4,59
,set Count 1,29
,Count 1,29
,set Count 5,23
,Count 5,23
,set Count 15,4
,set Count 9,7
,Count 15,4
,Count 9,7
,set Count 8,8
,set Count 6,16
,Count 8,8
,Count 6,16
,set Count (,1
,Count (,4
,set Count 32,2
,Count 32,2
,set Count 29,1
,Count 29,1
,set Count 10,8
,Count 10,8
,set Count <Start:numSeeds>,2
,Count <Start:numSeeds>,2
,set Count <Counters>,1
,Count <Counters>,1
,set Count 36,2
,Count 36,2
,set Count 7,11
,Count 7,11
,set Count 12,5
,Count 12,5
,set Count <Board:init>,1
,Count <Board:init>,1
,set Count <Players:init>,1
,Count <Players:init>,1
,set Count STRING,2
,Count STRING,2
,set Count <Size:pile>,1
,Count <Size:pile>,1
,set Count 11,5
,set Count 13,4
,set Count 14,3
,set Count 16,2
,set Count 17,2
,set Count 18,1
,set Count 19,1
,Count 11,5
,Count 13,4
,Count 14,3
,Count 16,2
,Count 17,2
,Count 18,1
,Count 19,1
,is Count (,3
,is Count Edge,3
,Count Edge,3
,is Count Vertex,1
,Count Vertex,1
distance:7,included:True distance:7 ),8
,distance:7 ),8
three,or three cells,2
,three cells,2
,move three steps,2
,to three steps,2
,three steps,4
distance:1,included:True distance:1 ),1
,distance:1 ),7
,) distance:1 ),3
,Forward distance:1 ),3
remembered,STRING remembered suicide,1
,remembered suicide,1
,the remembered values,1
,remembered values,1
distance:2,Forward distance:2 ),1
,distance:2 ),1
player:Next,note player:Next STRING,4
,player:Next STRING,4
<Play:enterBoard>,{ <Play:enterBoard> (,1
,<Play:enterBoard> (,1
specifically,) specifically for,1
,specifically for,1
enter,to enter again,3
,enter again,3
<Board:BoardDef>,board <Board:BoardDef> ),1
,<Board:BoardDef> ),1
<endTracks>,<entries> <endTracks> <startRules>,1
,<endTracks> <startRules>,1
Cavalry,) Cavalry (,1
,Cavalry (,1
<site3>,<site2> <site3> <site4>,1
,<site3> <site4>,1
<Jump:coyote>,or <Jump:coyote> (,1
,<Jump:coyote> (,1
players,( players 2,694
,players 2,694
,( players 4,26
,players 4,26
,( players <Players:num>,12
,players <Players:num>,12
,( players <Player:num>,27
,players <Player:num>,27
,( players <Players:numPlayers>,2
,players <Players:numPlayers>,2
,( players <Version:numPlayers>,11
,players <Version:numPlayers>,11
,( players {,115
,players {,115
,( players <Player:number>,3
,players <Player:number>,3
,( players STRING,2
,players STRING,2
,( players Team1,4
,( players Team2,1
,players Team1,4
,players Team2,1
,( players 7,3
,players 7,3
,( players <Players>,1
,players <Players>,1
,( players 3,4
,players 3,4
,( players <Num:players>,1
,players <Num:players>,1
,2 players *,2
,players *,2
,( players <NumOfPlayers:NumPlayers>,2
,players <NumOfPlayers:NumPlayers>,2
,all players draw,1
,players draw,1
,( players <Option:players>,1
,players <Option:players>,1
,( players Friend,5
,( players <Scenario:numPlayers>,1
,players Friend,5
,players <Scenario:numPlayers>,1
,( players 1,42
,players 1,42
,( players <NumberPlayers:inGame>,1
,players <NumberPlayers:inGame>,1
,both players use,1
,players use,1
,the players to,1
,players to,1
,swap players (,1
,players (,1
,( players 0,1
,players 0,1
quadrant,first quadrant ),6
,quadrant ),6
priority,( priority {,57
,priority {,57
,( priority (,14
,priority (,14
<Play:start>,start <Play:start> ),1
,<Play:start> ),1
<Player>,STRING <Player> args:,31
,<Player> args:,31
<Player:trackP3>,) <Player:trackP3> <Player:trackP4>,3
,<Player:trackP3> <Player:trackP4>,3
<Step>,STRING <Step> args:,1
,<Step> args:,1
<site2>,<site1> <site2> <site3>,1
,<site2> <site3>,1
'diagonally',space 'diagonally' (,1
,'diagonally' (,1
Scoring,Scoring options,1
at:StartOfMove,) at:StartOfMove ),3
,at:StartOfMove ),3
lot,a lot ),1
,lot ),1
<Player:trackP4>,<Player:trackP3> <Player:trackP4> },3
,<Player:trackP4> },3
<Board:initTiger>,STRING <Board:initTiger> ),1
,<Board:initTiger> ),1
<site5>,<site4> <site5> <site6>,1
,<site5> <site6>,1
sites:86,turns:5 sites:86 ),3
,sites:86 ),3
means,--COMMA-- means its,2
,means its,2
sites:88,turns:5 sites:88 ),1
,sites:88 ),1
initial,the initial state,2
,initial state,2
,the initial move,1
,initial move,1
centre,the centre (,1
,centre (,1
PipsMatch,is PipsMatch ),1
,PipsMatch ),1
coord:<BoardConfig:King2Start>,STRING coord:<BoardConfig:King2Start> state:1,1
,coord:<BoardConfig:King2Start> state:1,1
<Board:InitTwoSeeds>,STRING <Board:InitTwoSeeds> ),1
,<Board:InitTwoSeeds> ),1
<Column:size>,2 <Column:size> store:None,1
,<Column:size> store:None,1
<site4>,<site3> <site4> <site5>,1
,<site4> <site5>,1
<Player:teams>,) <Player:teams> },1
,<Player:teams> },2
,{ <Player:teams> },1
steps:5,Move steps:5 ),1
,steps:5 ),5
,) steps:5 S,1
,) steps:5 N,2
,steps:5 S,1
,steps:5 N,2
,#1 steps:5 ),2
,) steps:5 ),2
,) steps:5 W,2
,) steps:5 E,2
,steps:5 W,2
,steps:5 E,2
steps:6,from:#1 steps:6 ),6
,steps:6 ),29
,Move steps:6 ),1
,) steps:6 N,1
,) steps:6 S,1
,steps:6 N,1
,steps:6 S,1
,origin:1 steps:6 Out,1
,origin:0 steps:6 Out,1
,origin:2 steps:6 Out,1
,origin:3 steps:6 Out,1
,origin:4 steps:6 Out,1
,origin:5 steps:6 Out,1
,origin:6 steps:6 Out,1
,origin:7 steps:6 Out,1
,origin:8 steps:6 Out,1
,origin:9 steps:6 Out,1
,origin:10 steps:6 Out,1
,origin:11 steps:6 Out,1
,steps:6 Out,12
,#1 steps:6 ),6
,) steps:6 ),16
,) steps:6 W,2
,) steps:6 E,2
,steps:6 W,2
,steps:6 E,2
steps:3,) steps:3 ),78
,steps:3 ),85
,Move steps:3 ),1
,) steps:3 Orthogonal,2
,steps:3 Orthogonal,2
,) steps:3 S,2
,) steps:3 N,2
,steps:3 S,2
,steps:3 N,2
,) steps:3 W,3
,) steps:3 E,3
,steps:3 W,3
,steps:3 E,3
,#1 steps:3 ),2
,) steps:3 #1,2
,steps:3 #1,2
,) steps:3 STRING,2
,steps:3 STRING,2
,origin:181 steps:3 ),1
,origin:191 steps:3 ),1
,origin:174 steps:3 ),1
,origin:0 steps:3 ),1
steps:4,) steps:4 ),43
,steps:4 ),50
,Move steps:4 ),1
,) steps:4 Orthogonal,2
,steps:4 Orthogonal,2
,#1 steps:4 ),6
,) steps:4 N,1
,steps:4 N,1
,) steps:4 W,1
,) steps:4 E,1
,steps:4 W,1
,steps:4 E,1
steps:9,) steps:9 ),2
,steps:9 ),2
steps:7,#1 steps:7 ),2
,steps:7 ),2
,) steps:7 W,2
,) steps:7 E,2
,steps:7 W,2
,steps:7 E,2
friendly,No friendly hops,1
,friendly hops,1
,a friendly piece,1
,on friendly neighbors,1
,friendly piece,1
,friendly neighbors,1
steps:8,) steps:8 E,1
,steps:8 E,1
,#1 steps:8 ),6
,steps:8 ),18
,) steps:8 N,1
,steps:8 N,1
,) steps:8 Orthogonal,2
,steps:8 Orthogonal,2
,) steps:8 ),12
possession,takes possession of,1
,possession of,1
Cream,colour Cream ),1
,Cream ),1
shows,- shows in,1
,STRING shows as,1
,shows in,1
,shows as,1
zone,target zone (,1
,Transit zone from,1
,zone (,1
,zone from,1
<Tiling:tile>,tile <Tiling:tile> Each,2
,<Tiling:tile> Each,2
checked,--COMMA-- checked at,1
,checked at,1
speeds,them speeds up,1
,speeds up,1
Core,) Core -------------------------------------------------------,1
,Core -------------------------------------------------------,1
<BoardShape:directionUsed>,STRING <BoardShape:directionUsed> ),2
,<BoardShape:directionUsed> ),2
Opposite,) Opposite Quadrant,4
,Opposite Quadrant,4
mover/own,a mover/own singleton,1
,mover/own singleton,1
Queen,to Queen .,2
,Queen .,2
,( Queen --COMMA--,1
,Queen --COMMA--,1
Handles,#1 Handles the,1
,Handles the,1
<inGame>,{ <inGame> },1
,<inGame> },1
water,on water (,1
,water (,2
,the water first,1
,water first,1
,Forest/Shallow water move,1
,in water ),1
,in water (,1
,water move,1
,water ),1
done,captures done so,1
,capture done so,3
,done so,4
,is done twice,1
,done twice,1
illegal,is illegal to,1
,illegal to,1
<endP3>,<removeP3> <endP3> },1
,<endP3> },1
<location>,{ <location> <suicideOption>,1
,<location> <suicideOption>,1
<site6>,<site5> <site6> <sites>,1
,<site6> <sites>,1
steps:1,) steps:1 ),42
,steps:1 ),114
,Move steps:1 ),3
,#1 steps:1 ),8
,STRING steps:1 ),39
,#2 steps:1 ),17
,) steps:1 E,3
,) steps:1 W,3
,steps:1 E,3
,steps:1 W,3
,from:#1 steps:1 ),5
,) steps:1 #1,1
,) steps:1 #2,1
,steps:1 #1,1
,steps:1 #2,1
steps:2,) steps:2 ),168
,steps:2 ),181
,Move steps:2 ),1
,STRING steps:2 ),6
,) steps:2 E,15
,) steps:2 W,15
,steps:2 E,15
,steps:2 W,15
,#1 steps:2 ),6
,) steps:2 #1,3
,) steps:2 #2,2
,steps:2 #1,3
,steps:2 #2,2
,) steps:2 STRING,2
,steps:2 STRING,2
,) steps:2 Forward,1
,steps:2 Forward,1
,) steps:2 N,1
,) steps:2 S,1
,steps:2 N,1
,steps:2 S,1
<Edge:controlType>,( <Edge:controlType> ),1
,<Edge:controlType> ),1
LastSite,P2 LastSite ),33
,LastSite ),40
,P1 LastSite ),7
vertically,oriented vertically .,1
,vertically .,1
Friendly,STRING Friendly Hops,1
,Friendly Hops,1
boards,even boards ),1
,boards ),1
<south>,<north> <south> <east>,1
,<south> <east>,1
Cost,= Cost Multiplier,1
,Cost Multiplier,1
,set Cost 1,106
,set Cost 2,104
,set Cost 3,119
,Cost 1,106
,Cost 2,104
,Cost 3,119
,set Cost 4,7
,Cost 4,7
,set Cost 0,2
,Cost 0,2
notches,no notches (,2
,with notches up,1
,notches (,2
,notches up,1
Kings,many Kings the,1
,the Kings they,1
,Kings -------------------------------------------------------,1
,Kings the,1
,Kings they,1
,than Kings and,1
,* Kings can,1
,Kings and,1
,Kings can,1
splitCrossings,( splitCrossings (,7
,splitCrossings (,7
count:<Board:initTiger>,) count:<Board:initTiger> ),1
,count:<Board:initTiger> ),1
built,is built in,1
,built in,1
<nonMover>,{ <nonMover> <mover>,1
,<nonMover> <mover>,1
<Place>,STRING <Place> args:,1
,<Place> args:,1
<homeTracks>,<start> <homeTracks> <openingRegions>,1
,<homeTracks> <openingRegions>,1
Bar,) Bar (,12
,Bar (,12
third,) third choice,1
,third choice,1
build,to build the,1
,build the,1
,can't build entrenchment,1
,build entrenchment,1
Single,Pawns: Single step,1
,Single step,1
CCW,CW CCW ),2
,) CCW ),2
,CCW ),4
lud,. lud --COMMA--,9
,. lud -,38
,lud --COMMA--,9
,lud -,38
notched,the notched die,1
,notched die,1
,the notched stick,1
,notched stick,1
That's,. That's why,1
,That's why,1
path,( path from:0,2
,( path from:1,1
,( path from:2,1
,path from:0,2
,path from:1,1
,path from:2,1
<Board:CW1>,STRING <Board:CW1> loop:True,2
,<Board:CW1> loop:True,2
<10><1>,STRING <10><1> STRING,1
,<10><1> STRING,1
<Balance>,) <Balance> ),1
,STRING <Balance> args:,1
,<Balance> ),1
,<Balance> args:,1
record,to record which,1
,record which,1
Lion,Each Lion capturing,1
,Lion capturing,1
<promotedCaptureMove>,{ <promotedCaptureMove> <promotedMove>,1
,<promotedCaptureMove> <promotedMove>,1
T31212>,<tiling T31212> STRING,1
,T31212> STRING,1
pass,( pass ),3
,pass ),3
,and pass conditions,1
,double pass test,1
,pass conditions,1
,pass test,1
going,in going away,3
,going away,3
Palace,the Palace (,1
,Palace (,1
1110,1159 1110 1061,1
,1110 1061,1
whose,subgame whose supergame,1
,cell whose supergame,1
,whose supergame,2
<Doctrine2:doctrine>,mapEntry <Doctrine2:doctrine> #2,1
,<Doctrine2:doctrine> #2,1
Line,is Line 3,114
,Line 3,114
,is Line 2,14
,Line 2,14
,is Line 4,28
,Line 4,28
,is Line 5,24
,Line 5,24
,is Line 6,1
,Line 6,1
,is Line 7,2
,Line 7,2
,is Line <Board:size>,1
,Line <Board:size>,1
,is Line (,3
,Line (,3
,is Line <Line:size>,1
,Line <Line:size>,1
<Num:row>,STRING <Num:row> ),1
,<Num:row> ),1
1105,{ 1105 },1
,1105 },1
<Board:CW2>,STRING <Board:CW2> loop:True,2
,<Board:CW2> loop:True,2
1104,1153 1104 1352,1
,1104 1352,1
,{ 1104 },1
,1104 },1
1103,1054 1103 1264,1
,1103 1264,1
<num>,{ <num> },27
,<num> },27
,{ <num> <move>,1
,<num> <move>,1
,{ <num> <arc3>,1
,<num> <arc3>,1
,{ <num> <startP3P4>,1
,<num> <startP3P4>,1
,{ <num> <tracks>,2
,<num> <tracks>,2
,{ <num> <home>,1
,<num> <home>,1
,{ <num> <startP3>,3
,<num> <startP3>,3
,{ <num> <start>,12
,<num> <start>,12
,{ <num> <init>,1
,<num> <init>,1
,{ <num> <regions>,1
,<num> <regions>,1
,{ <num> <teams>,2
,<num> <teams>,2
,{ <num> <startPos>,1
,<num> <startPos>,1
,{ <num> <startRules>,1
,<num> <startRules>,1
,{ <num> <initHorse>,1
,<num> <initHorse>,1
,{ <num> <track>,2
,<num> <track>,2
,{ <num> <store>,1
,<num> <store>,1
,{ <num> <size>,5
,<num> <size>,5
,{ <num> <end>,1
,<num> <end>,1
,{ <num> <throwValues>,1
,<num> <throwValues>,1
,{ <num> <board>,1
,<num> <board>,1
1101,1052 1101 1053,1
,1101 1053,1
Note,. Note that,1
,Note that,1
<Stack>,STRING <Stack> args:,2
,<Stack> args:,2
1109,{ 1109 },1
,1109 },1
handSite,( handSite P1,415
,handSite P1,415
,( handSite Mover,644
,handSite Mover,644
,( handSite P2,373
,handSite P2,373
,( handSite Next,49
,handSite Next,49
,( handSite (,54
,handSite (,54
,( handSite P3,90
,( handSite P4,84
,handSite P3,90
,handSite P4,84
,( handSite P5,52
,( handSite P6,51
,handSite P5,52
,handSite P6,51
,( handSite #2,7
,handSite #2,7
,( handSite P7,43
,( handSite P8,42
,( handSite P9,34
,( handSite P10,33
,( handSite P11,26
,( handSite P12,25
,( handSite P13,17
,( handSite P14,16
,( handSite P15,9
,( handSite P16,8
,handSite P7,43
,handSite P8,42
,handSite P9,34
,handSite P10,33
,handSite P11,26
,handSite P12,25
,handSite P13,17
,handSite P14,16
,handSite P15,9
,handSite P16,8
,( handSite #1,56
,handSite #1,56
,( handSite Shared,60
,handSite Shared,60
,( handSite Player,3
,handSite Player,3
,( handSite 1,5
,( handSite 2,5
,handSite 1,5
,handSite 2,5
Set,move Set NextPlayer,3
,Set NextPlayer,3
,move Set Rotation,5
,Set Rotation,5
stepwise,in stepwise connections,1
,stepwise connections,1
Promoted,) Promoted Pawn,8
,) Promoted Silver,7
,) Promoted Rook,7
,) Promoted Bishop,7
,Promoted Pawn,8
,Promoted Silver,7
,Promoted Rook,7
,Promoted Bishop,7
,) Promoted Knight,5
,) Promoted Lance,5
,Promoted Knight,5
,Promoted Lance,5
manouvre,castling manouvre #1,1
,manouvre #1,1
1118,1070 1118 1069,1
,1118 1069,1
,{ 1118 },1
,1118 },1
1117,826 1117 1116,1
,1117 1116,1
1116,1117 1116 1115,1
,1116 1115,1
1115,1116 1115 },1
,1115 },1
1114,{ 1114 },1
,1114 },1
<Track:directionP2>,STRING <Track:directionP2> loop:True,1
,<Track:directionP2> loop:True,1
Sets,Entrenchments Sets the,1
,Sets the,1
1112,{ 1112 },1
,1112 },1
1111,{ 1111 },1
,1111 },1
<regionsP1>,<type> <regionsP1> <regionsP2>,1
,<regionsP1> <regionsP2>,1
Siegmund,by Siegmund Wellisch,1
,STRING Siegmund STRING,1
,Siegmund Wellisch,1
,Siegmund STRING,1
<10>,STRING <10> STRING,80
,<10> STRING,81
,<9> <10> <11>,1
,<10> <11>,1
,STRING <10> <3>,1
,<10> <3>,1
,<6> <10> <2>,1
,<10> <2>,1
,STRING <10> <,14
,<10> <,14
,<5> <10> STRING,1
,STRING <10> <20>,1
,<10> <20>,1
,STRING <10> <25>,5
,<10> <25>,5
1119,1168 1119 1070,1
,1119 1070,1
,{ 1119 },1
,1119 },1
mine,of mine .,2
,mine .,2
<Board:placement>,{ <Board:placement> },1
,<Board:placement> },1
<tile>,<type> <tile> <numSides>,2
,<tile> <numSides>,2
dots,neutral dots to,1
,dots to,1
1132,1083 1132 1181,1
,1132 1181,1
1131,1180 1131 1082,1
,1131 1082,1
,{ 1131 },1
,1131 },1
right,diagonally right --COMMA--,2
,or right two,2
,right --COMMA--,2
,right two,2
,half right inner,2
,right inner,2
,P1 right half,1
,P2 right half,1
,right half,2
,or right of,1
,right of,1
,Bottom right 9x9,1
,right 9x9,1
possible,not possible to,1
,possible to,1
,the possible post-promotion,1
,possible post-promotion,1
#1,Hop #1 #2,7
,#1 #2,136
,exact #1 ),2
,#1 ),704
,STRING #1 ),215
,) #1 (,10
,Hop #1 (,22
,Step #1 (,48
,#1 (,454
,from #1 ),54
,Score #1 (,3
,Mover #1 ),13
,= #1 Off,16
,#1 Off,16
,to #1 STRING,5
,) #1 ),86
,#1 STRING,126
,Move #1 #2,12
,Remove #1 ),2
,sites #1 STRING,78
,score #1 (,7
,mapEntry #1 ),41
,= #1 End,1
,In #1 (,59
,#1 End,1
,Move #1 steps:,10
,#1 steps:,10
,Move #1 steps:#2,27
,#1 steps:#2,32
,#2 #1 ),1
,- #1 1,3
,#1 1,16
,STRING #1 #2,71
,) #1 Bear,3
,rules #1 Starting,1
,Move #1 STRING,1
,#1 Bear,3
,#1 Starting,1
,= #1 P1,6
,= #1 P2,1
,= #1 P3,1
,#1 P1,7
,#1 P2,2
,#1 P3,2
,Var #1 ),2
,STRING #1 (,15
,sites #1 ),67
,) #1 -,25
,piece #1 #2,1
,STRING #1 STRING,6
,#1 -,29
,Move #1 steps:1,6
,#1 steps:1,8
,Around #1 Orthogonal,2
,result #1 #2,1
,#1 Orthogonal,18
,if #1 (,1
,. #1 =,1
,) #1 =,2
,#1 =,3
,) #1 steps:#2,5
,to #1 if:<Variant:moveCondition>,1
,Empty #1 ),3
,#1 if:<Variant:moveCondition>,1
,P3 #1 ),1
,P1 #1 ),1
,P4 #1 ),1
,P2 #1 ),1
,= #1 1,2
,= #1 2,2
,= #1 3,2
,#1 2,10
,#1 3,10
,to #1 <Play:capture>,1
,#1 <Play:capture>,1
,Mover #1 from:,2
,#1 from:,2
,0 #1 ),7
,if #1 STRING,1
,handSite #1 ),56
,- #1 (,9
,+ #1 (,9
,- #1 STRING,14
,+ #1 STRING,14
,= #1 (,169
,STRING #1 unique:True,2
,#1 unique:True,2
,sow #1 if:,1
,#1 if:,9
,id #1 ),12
,) #1 steps:1,2
,) #1 steps:2,5
,) #1 steps:3,2
,) #1 steps:4,6
,) #1 steps:5,2
,) #1 steps:6,6
,) #1 steps:7,2
,) #1 steps:8,6
,#1 steps:2,6
,#1 steps:3,2
,#1 steps:4,6
,#1 steps:5,2
,#1 steps:6,6
,#1 steps:7,2
,#1 steps:8,6
,) #1 1,8
,) #1 2,8
,) #1 3,8
,) #1 4,8
,) #1 5,8
,) #1 6,8
,#1 4,9
,#1 5,8
,#1 6,9
,Move #1 steps:2,1
,Player #1 ),1
,from #1 if:,4
,) #1 7,5
,#1 7,5
,is #1 (,2
,Around #1 ),11
,3 #1 #1,12
,#1 #1 },12
,4 #1 ),2
,5 #1 ),2
,3 #1 ),4
,* #1 #1,4
,#1 #1 ),4
,{ #1 (,2
,#1 #1,16
,#1 },16
,to #1 (,2
,Side #1 ),1
,#1 --COMMA--,1
,Orthogonal #1 ),4
,Orthogonal #1 min:3,2
,Orthogonal #1 min:5,1
,#1 min:3,2
,#1 min:5,1
,sites #1 #2,1
,) #1 #2,9
,coord #1 ),3
,Select #1 (,2
,steps:2 #1 ),3
,steps:3 #1 ),2
,} #1 ),1
,Different #1 if:,1
,STRING #1 UNE,2
,STRING #1 USE,1
,STRING #1 USW,1
,#1 UNE,2
,#1 USE,1
,#1 USW,1
,between #1 (,1
,to #1 ),2
,custodial #1 Orthogonal,5
,Hop #1 Orthogonal,8
,STRING #1 if:,1
,Step #1 Orthogonal,2
,ahead #1 #2,4
,Hop #1 Diagonal,5
,#1 Diagonal,5
,between #1 #2,6
,Pieces #1 ),2
,mapEntry #1 (,49
,Pieces #1 STRING,6
,STRING #1 Next,2
,#1 Next,2
,directions #1 ),8
,Slide #1 (,20
,steps:1 #1 ),1
,) #1 Mover,7
,#1 Mover,8
,piece #1 ),3
,Step #1 Forward,1
,#1 Forward,1
,Piece #1 ),5
,Active #1 ),6
,Leap #1 (,1
,Promote #1 (,4
,( #1 ),36
,1 #1 ),12
,------------------------------------------------------- #1 -,2
,. #1 -,1
,manouvre #1 -,1
,id #1 P1,1
,id #1 P2,1
,id #1 P3,1
,Slide #1 #2,3
,Pieces #1 in:,3
,result #1 Loss,1
,#1 in:,3
,#1 Loss,1
,State #1 #2,18
,2 #1 ),8
,6 #1 ),1
,12 #1 ),1
,= #1 12,1
,= #1 6,1
,#1 12,1
,) #1 },3
,tile #1 Each,1
,to:Mover #1 ),1
,result #1 Win,1
,#1 Each,1
,#1 Win,1
,where #1 Mover,1
,> #1 (,1
,Vertex #1 ),1
,Edge #1 ),1
,Cell #1 ),1
,STRING #1 Vertex,1
,STRING #1 Cell,1
,STRING #1 Edge,1
,#1 Vertex,1
,#1 Cell,1
,#1 Edge,1
,{ #1 #2,2
,site #1 (,1
,by #1 (,1
,site #1 from,1
,site #1 is,1
,in #1 (,1
,{ #1 },1
,Site #1 (,1
,) #1 previous:False,1
,#1 from,1
,#1 is,1
,#1 previous:False,1
,range #1 #2,1
,Damage #1 location,1
,* #1 (,1
,damage #1 location,1
,container:1 #1 ),1
,= #1 4,1
,#1 location,2
,Sites #1 if:,2
,array #1 ),1
,Around #1 STRING,1
,) #1 stop:,5
,#1 stop:,5
,( #1 (,2
,Cell #1 Orthogonal,1
,Value #1 (,4
,Remembered #1 ),7
,STRING #1 1,2
,) #1 Handles,1
,#1 Handles,1
,place #1 (,6
,copy:True #1 (,1
,amount #1 ),1
,addScore #1 1,1
,<Minotaur:move> #1 ),1
,score #1 ),1
#2,#1 #2 (,15
,#2 (,208
,STRING #2 ),28
,) #2 (,41
,#2 ),272
,#1 #2 steps:#3,11
,{ #2 },1
,#2 steps:#3,19
,#2 },6
,) #2 ),127
,from:#1 #2 steps:#3,8
,Track #2 #1,1
,#2 #1,1
,#1 #2 STRING,20
,#1 #2 ),50
,{ #2 Trap,1
,STRING #2 #4,1
,{ #2 (,1
,#2 STRING,21
,#2 Trap,1
,#2 #4,5
,sites #2 ),1
,region #2 -,4
,= #2 (,2
,) #2 },2
,piece #2 -,1
,player #2 -,1
,#2 -,14
,sites #2 STRING,1
,handSite #2 ),2
,result #2 #3,1
,#2 #3,32
,site #2 =,1
,#2 =,2
,between #2 if:,1
,#2 if:,10
,from:#1 #2 steps:1,17
,#2 steps:1,17
,Move #2 steps:,1
,#2 steps:,1
,to #2 ),2
,to #2 (,1
,In #2 (,138
,sow #2 owner:,1
,#2 owner:,1
,from:#1 #2 #3,9
,from:#1 #2 ),9
,sow #2 if:,2
,apply #2 ),1
,--COMMA-- #2 -,1
,Side #2 ),1
,- #2 1,1
,#2 1,8
,STRING #2 -,2
,coord #2 ),3
,steps:2 #2 ),2
,( #2 ),17
,) #2 #3,7
,ahead #2 #3,2
,STRING #2 #3,2
,between #2 #3,7
,#1 #2 if:,6
,directions #2 ),8
,#1 #2 #3,4
,steps:1 #2 ),1
,player #2 ),4
,} #2 ),1
,explicitly #2 -,1
,direction #2 -,2
,Directions #2 -,1
,STRING #2 (,1
,#1 #2 2,6
,#1 #2 1,6
,#1 #2 0,6
,#2 2,7
,#2 0,6
,Move #2 steps:#1,1
,#2 steps:#1,1
,Name #2 -,1
,Each #2 (,1
,then #2 ),1
,Mover #2 ),2
,remove #2 (,1
,#1 #2 },3
,site #2 (,2
,--COMMA-- #2 =,1
,id #2 ),1
,Value #2 (,3
,1 #2 ),1
,Occupied #2 components:#3,1
,#1 #2 #5,3
,piece #2 site,1
,piece #2 location,1
,to #2 if:,1
,<Doctrine1:doctrine> #2 ),1
,<Doctrine2:doctrine> #2 ),1
,<Doctrine3:doctrine> #2 ),1
,<Doctrine4:doctrine> #2 ),1
,#2 components:#3,1
,#2 #5,3
,#2 site,1
,#2 location,1
,between #2 ),1
,intersection #2 (,1
,le #2 (,1
,) #2 stop:,4
,#2 stop:,4
,Cell #2 W,1
,Cell #2 E,1
,Cell #2 WSW,1
,Cell #2 ENE,1
,Cell #2 SSW,1
,Cell #2 NNE,1
,Cell #2 S,1
,Cell #2 N,1
,Cell #2 SSE,1
,Cell #2 NNW,1
,Cell #2 Orthogonal,1
,2 #2 ),2
,0 #2 ),1
,#1 #2 #4,4
,#2 W,1
,#2 E,1
,#2 WSW,1
,#2 ENE,1
,#2 SSW,1
,#2 NNE,1
,#2 S,1
,#2 N,1
,#2 SSE,1
,#2 NNW,1
,#2 Orthogonal,1
,not #2 ),1
,Empty #2 ),1
,between #2 if:True,1
,#2 if:True,1
,handSite #2 1,1
,handSite #2 2,1
,handSite #2 3,1
,handSite #2 4,1
,handSite #2 5,1
,#2 3,1
,#2 4,1
,#2 5,1
,#1 #2 column,1
,#1 #2 row,1
,#2 column,1
,#2 row,1
#3,) #3 ),21
,#3 ),96
,) #3 Bear,1
,STRING #3 #4,11
,#3 Bear,1
,#3 #4,17
,region #3 -,1
,STRING #3 ),7
,) #3 -,2
,sites #3 ),6
,#3 -,4
,#2 #3 ),22
,Backward #3 =,1
,#3 =,1
,) #3 optional,1
,) #3 },1
,#3 optional,1
,#3 },1
,coord #3 ),3
,from #3 ),3
,#2 #3 if:,4
,#3 if:,4
,exact #3 ),27
,#2 #3 #4,6
,directions #3 ),1
,Paths #3 -,1
,piece #3 Each,1
,id #3 Mover,1
,#3 Each,1
,#3 Mover,1
,( #3 ),6
,) #3 location,1
,attacked #3 If,1
,if #3 (,1
,#3 location,1
,#3 If,1
,#3 (,4
,In #3 (,1
,sites #3 (,2
,( #3 of:#1,3
,( #3 of:#2,3
,( #3 of:,4
,#3 of:#1,3
,#3 of:#2,3
,#3 of:,4
Bet,move Bet Mover,1
,Bet Mover,1
,move Bet P1,1
,move Bet P2,1
,move Bet P3,1
,Bet P1,1
,Bet P2,1
,Bet P3,1
1129,{ 1129 },1
,1129 },1
#4,#2 #4 ),1
,#3 #4 #5,11
,#4 ),23
,#4 #5,16
,region #4 -,2
,) #4 ),9
,STRING #4 ),3
,#4 -,3
,coord #4 ),3
,from #4 ),2
,) #4 STRING,2
,#4 STRING,2
,#3 #4 ),2
,move #4 -,1
,#3 #4 if:True,3
,#4 if:True,3
,Occupied #4 components:,3
,Occupied #4 ),3
,attacked #4 If,1
,#4 components:,3
,#4 If,1
,id #4 Mover,1
,#4 Mover,1
,#3 #4 (,1
,STRING #4 #5,1
,#2 #4 #5,4
,#4 (,1
,( #4 of:#1,1
,( #4 of:#2,1
,#4 of:#1,1
,#4 of:#2,1
1128,1079 1128 1083,1
,1128 1083,1
#5,#4 #5 #7,2
,#5 #7,2
,blank #5 -,1
,from #5 if:,1
,capture #5 -,1
,) #5 (,1
,) #5 ),26
,#5 -,3
,#5 if:,1
,#5 (,7
,#5 ),39
,coord #5 ),3
,) #5 STRING,2
,#5 STRING,5
,#4 #5 True,3
,#4 #5 STRING,3
,#4 #5 ),5
,STRING #5 #6,2
,#5 True,3
,#5 #6,2
,slide #5 -,1
,#2 #5 ),3
,- #5 ),1
,STRING #5 (,3
,STRING #5 ),1
,#4 #5 (,3
1127,{ 1127 },1
,1127 },1
#6,roll #6 ),1
,#6 ),7
,coord #6 ),3
,#5 #6 ),2
,Mover #6 ),1
#7,#5 #7 ),2
,#7 ),5
,coord #7 ),3
,STRING #7 #8,2
,#7 #8,2
<Track:directionP1>,STRING <Track:directionP1> loop:True,1
,<Track:directionP1> loop:True,1
#8,coord #8 ),3
,#8 ),5
,#7 #8 ),2
complicated,after complicated optimizations,1
,complicated optimizations,1
1122,{ 1122 },1
,1122 },1
<regionsP2>,<regionsP1> <regionsP2> },1
,<regionsP2> },1
<Players:num>,players <Players:num> ),12
,<Players:num> ),13
,STRING <Players:num> ),1
<11>,STRING <11> STRING,70
,<11> STRING,71
,<10> <11> <,1
,<11> <,5
,STRING <11> <,4
,> <11> STRING,1
stack:,) stack: True,3
,stack: True,3
Neutral,STRING Neutral ),142
,Neutral ),147
,STRING Neutral (,4
,Neutral (,4
,STRING Neutral at:,16
,Neutral at:,16
,STRING Neutral maxState:10,1
,Neutral maxState:10,1
,) Neutral top:True,1
,Neutral top:True,1
,RegularGraph Neutral ),3
,set Neutral Edge,10
,Neutral Edge,10
,Tree Neutral ),2
die,notched die because,1
,die because,1
,the die value,1
,die value,1
added,be added to,1
,added to,1
Forfeit,) Forfeit move,1
,Forfeit move,1
Around,sites Around (,202
,Around (,202
,sites Around #1,14
,Around #1,14
,sites Around Cell,10
,Around Cell,10
,sites Around STRING,1
,Around STRING,1
1143,{ 1143 },1
,1143 },1
1142,{ 1142 },1
,1142 },1
1141,{ 1141 },1
,1141 },1
1140,1091 1140 1189,1
,1140 1189,1
,{ 1140 },1
,1140 },1
<goal>,<moveCondition> <goal> },1
,<goal> },1
down,slowed down too,1
,script down .,1
,down too,1
,down .,1
1139,{ 1139 },1
,1139 },1
1138,{ 1138 },1
,1138 },1
later,for later Pawn,1
,later Pawn,1
1137,{ 1137 },1
,1137 },1
1136,1087 1136 1185,1
,1136 1185,1
,{ 1136 },1
,1136 },1
1135,1086 1135 1184,1
,1135 1184,1
1134,{ 1134 },1
,1134 },1
at:#1,who at:#1 ),11
,Stack at:#1 ),3
,at:#1 ),79
,state at:#1 ),44
,State at:#1 1,18
,at:#1 1,18
,of:Cell at:#1 ),6
,state at:#1 level:#2,2
,State at:#1 level:#2,2
,at:#1 level:#2,4
,Piece at:#1 ),1
,count at:#1 ),6
,State at:#1 0,13
,at:#1 0,13
,of:Vertex at:#1 ),1
,what at:#1 ),7
,Stack at:#1 if:,2
,who at:#1 level:0,1
,at:#1 if:,2
,at:#1 level:0,1
at:#2,of:Cell at:#2 ),6
,at:#2 ),6
at:#3,what at:#3 ),1
,at:#3 ),1
<12>,STRING <12> STRING,66
,<12> STRING,70
,STRING <12> <13>,1
,<12> <13>,1
,STRING <12> <,9
,<12> <,9
,> <12> <19>,1
,<12> <19>,1
,<6> <12> STRING,2
,<5> <12> STRING,1
,STRING <12> <25>,5
,<12> <25>,5
,5> <12> STRING,1
3's,Player 3's King,2
,3's King,2
<14>,STRING <14> STRING,68
,<14> STRING,70
,<13> <14> <15>,1
,<14> <15>,1
,STRING <14> <,7
,<14> <,7
,> <14> <23>,1
,<14> <23>,1
,<4> <14> STRING,1
,<7> <14> STRING,1
,STRING <14> <25>,5
,<14> <25>,5
,> <14> <112>,1
,<14> <112>,1
test,One test in,1
,test in,1
,pass test .,1
,test .,1
1153,1202 1153 1104,1
,1153 1104,1
1152,{ 1152 },1
,1152 },1
1151,{ 1151 },1
,1151 },1
1150,{ 1150 },1
,1150 },1
graph,( graph vertices:,73
,graph vertices:,73
<Variant:capture>,if:<Variant:moveCondition> <Variant:capture> ),1
,<Variant:capture> ),1
CaptureForwardDiagonal,- CaptureForwardDiagonal (,3
,CaptureForwardDiagonal (,3
1147,{ 1147 },1
,1147 },1
1146,{ 1146 },1
,1146 },1
1144,{ 1144 },1
,1144 },1
Pawn1Start,> Pawn1Start STRING,2
,Pawn1Start STRING,2
RememberPieceHasMoved,- RememberPieceHasMoved (,3
,RememberPieceHasMoved (,3
9x9,left 9x9 square,2
,right 9x9 square,1
,Right 9x9 square,1
,9x9 square,4
<13>,STRING <13> STRING,47
,<13> STRING,47
,<12> <13> <14>,1
,<13> <14>,1
,STRING <13> <,4
,<13> <,4
pawn,a pawn to,1
,pawn to,1
,a pawn can,1
,pawn can,1
<Board:numPiece>,STRING <Board:numPiece> ),1
,<Board:numPiece> ),1
rulesets,( rulesets {,168
,rulesets {,168
<15>,STRING <15> STRING,53
,<15> STRING,56
,<14> <15> <16>,1
,<15> <16>,1
,STRING <15> <,4
,<15> <,4
,<5> <15> STRING,1
,<9> <15> STRING,1
,1> <15> STRING,1
1165,1166 1165 1164,1
,1165 1164,1
,{ 1165 },1
,1165 },1
back,go back to,3
,back to,3
1164,1165 1164 },1
,1164 },1
With,) With a,2
,With a,2
states,own states after,1
,states after,1
Processing,) Processing individual,1
,Processing individual,1
1159,1208 1159 1110,1
,1159 1110,1
<bgrd>,<size> <bgrd> <ctr>,1
,<bgrd> <ctr>,1
level:#2,at:#1 level:#2 ),2
,at:#1 level:#2 1,2
,level:#2 ),2
,level:#2 1,2
1158,{ 1158 },1
,1158 },1
human,least human play,1
,human play,1
MoverLastTurn,prev MoverLastTurn ),1
,MoverLastTurn ),1
<option>,<end> <option> },1
,<option> },1
<Players:endP3>,) <Players:endP3> },1
,<Players:endP3> },1
<16>,STRING <16> STRING,52
,<16> STRING,54
,<15> <16> <17>,1
,<16> <17>,1
,STRING <16> <,8
,<16> <,8
,<6> <16> STRING,1
,<8> <16> STRING,1
,STRING <16> <30>,5
,<16> <30>,5
,<4> <16> <34>,1
,<16> <34>,1
,> <16> <17,1
,<16> <17,1
length,having length 6,1
,length 6,1
1171,{ 1171 },1
,1171 },1
Chosen:nonMoverCaptures,see Chosen:nonMoverCaptures (,1
,Chosen:nonMoverCaptures (,1
Triggered,is Triggered STRING,31
,Triggered STRING,31
space---West,current space---West --COMMA--,1
,space---West --COMMA--,1
1169,{ 1169 },1
,1169 },1
1168,1217 1168 1119,1
,1168 1119,1
1167,1216 1167 1166,1
,1167 1166,1
<10><4>,STRING <10><4> STRING,1
,<10><4> STRING,1
1166,1167 1166 1165,1
,1166 1165,1
append,( append STRING,3
,append STRING,3
<17>,STRING <17> STRING,36
,<17> STRING,36
,<16> <17> <,1
,<17> <,3
,STRING <17> <,2
<Size:piles>,start <Size:piles> ),1
,<Size:piles> ),1
1186,1088 1186 1234,1
,1186 1234,1
1185,1136 1185 1088,1
,1185 1088,1
,{ 1185 },1
,1185 },1
1184,1135 1184 1180,1
,1184 1180,1
<leopardGoal>,<initLeopard> <leopardGoal> },1
,<leopardGoal> },1
entrenchments,Build entrenchments (,1
,entrenchments (,1
1182,{ 1182 },1
,1182 },1
1181,1132 1181 1230,1
,1181 1230,1
1180,1184 1180 1131,1
,1180 1131,1
<pieceSetup>,<buildingSetup> <pieceSetup> <startingMoney>,1
,<pieceSetup> <startingMoney>,1
1179,{ 1179 },1
,1179 },1
<piles>,<board> <piles> },1
,<piles> },1
1177,{ 1177 },1
,1177 },1
Even,is Even (,36
,Even (,36
,is Even STRING,2
,Even STRING,2
Distance,max Distance STRING,6
,Distance STRING,6
,max Distance (,3
,Distance (,10
,sites Distance All,1
,Distance All,1
,sites Distance Orthogonal,4
,Distance Orthogonal,4
,sites Distance from:,4
,Distance from:,4
,sites Distance (,7
1190,1189 1190 1239,1
,1190 1239,1
made,was made like,1
,made like,1
,board made of,1
,made of,1
<18>,STRING <18> STRING,47
,<18> STRING,48
,STRING <18> <19>,1
,<18> <19>,1
,STRING <18> <,2
,<18> <,2
,<9> <18> STRING,1
<BoardConfig:King2Start>,2 <BoardConfig:King2Start> ),1
,<BoardConfig:King2Start> ),1
1197,{ 1197 },1
,1197 },1
sense,two sense of,1
,sense of,1
being,Rook being moved,1
,not being able,1
,being moved,1
,being able,1
,currently being attacked,1
,being attacked,4
,is being attacked,1
,piece being attacked,2
1195,{ 1195 },1
,1195 },1
yielded,always yielded ),1
,yielded ),1
1194,{ 1194 },1
,1194 },1
1193,{ 1193 },1
,1193 },1
1192,{ 1192 },1
,1192 },1
<OuterRing:tilePlacementRegion>,) <OuterRing:tilePlacementRegion> },1
,<OuterRing:tilePlacementRegion> },1
<Version:home>,) <Version:home> },1
,<Version:home> },1
1189,1140 1189 1190,1
,1189 1190,1
,{ 1189 },1
,1189 },1
1188,{ 1188 },1
,1188 },1
skew,( skew .,2
,skew .,2
**,) ** (,103
,) ** },27
,** (,103
,** },27
Vertex,Board Vertex ),9
,Vertex ),18
,directions Vertex from:,11
,Vertex from:,11
,Steps Vertex All,3
,Vertex All,3
,Incident Vertex of:Cell,13
,Vertex of:Cell,13
,to Vertex (,5
,Empty Vertex ),4
,Vertex (,14
,from Vertex ),2
,Empty Vertex (,1
,Incident Vertex of:Edge,2
,who Vertex at:,2
,remove Vertex (,2
,Pieces Vertex #1,1
,#1 Vertex ),1
,Vertex of:Edge,2
,Vertex at:,3
,Vertex #1,1
,cost Vertex at:,1
,1 Vertex at:0,3
,2 Vertex at:1,3
,3 Vertex at:2,3
,1 Vertex at:3,3
,2 Vertex at:4,3
,3 Vertex at:5,3
,1 Vertex at:6,3
,2 Vertex at:7,3
,3 Vertex at:8,3
,3 Vertex at:9,3
,1 Vertex at:10,3
,2 Vertex at:11,3
,3 Vertex at:12,3
,1 Vertex at:13,3
,2 Vertex at:14,3
,3 Vertex at:15,3
,1 Vertex at:16,3
,2 Vertex at:17,3
,3 Vertex at:18,3
,3 Vertex at:19,3
,1 Vertex at:20,2
,2 Vertex at:21,2
,3 Vertex at:22,2
,1 Vertex at:23,2
,2 Vertex at:24,1
,Vertex at:0,3
,Vertex at:1,3
,Vertex at:2,3
,Vertex at:3,3
,Vertex at:4,3
,Vertex at:5,3
,Vertex at:6,3
,Vertex at:7,3
,Vertex at:8,3
,Vertex at:9,3
,Vertex at:10,3
,Vertex at:11,3
,Vertex at:12,3
,Vertex at:13,3
,Vertex at:14,3
,Vertex at:15,3
,Vertex at:16,3
,Vertex at:17,3
,Vertex at:18,3
,Vertex at:19,3
,Vertex at:20,2
,Vertex at:21,2
,Vertex at:22,2
,Vertex at:23,2
,Vertex at:24,1
,Path Vertex Mover,1
,Vertex Mover,1
,P1 Vertex (,1
,P2 Vertex (,1
,values Vertex (,2
,} Vertex ),2
,forAll Vertex (,1
,Count Vertex (,1
Minimum,Damage Minimum 12,1
,Minimum 12,1
<19>,STRING <19> STRING,46
,<19> STRING,46
,<18> <19> <20>,1
,<19> <20>,1
,<12> <19> <27>,1
,<19> <27>,1
,STRING <19> <,2
,<19> <,2
,> <19> <198>,1
,<19> <198>,1
<Win>,STRING <Win> STRING,14
,<Win> STRING,16
,STRING <Win> <Win>,1
,<Win> <Win> STRING,1
,<Win> <Win>,1
,<Loss> <Win> STRING,1
,STRING <Win> <Loss>,1
,<Win> <Loss>,1
mapEntry,( mapEntry (,120
,mapEntry (,120
,( mapEntry STRING,415
,mapEntry STRING,415
,( mapEntry #1,90
,mapEntry #1,90
,( mapEntry Mover,85
,mapEntry Mover,85
,( mapEntry P1,26
,( mapEntry P2,26
,( mapEntry Next,6
,mapEntry P1,26
,mapEntry P2,26
,mapEntry Next,6
,( mapEntry 1,2
,( mapEntry 2,2
,mapEntry 1,2
,mapEntry 2,2
,( mapEntry <Doctrine1:doctrine>,1
,( mapEntry <Doctrine2:doctrine>,1
,( mapEntry <Doctrine3:doctrine>,1
,( mapEntry <Doctrine4:doctrine>,1
,mapEntry <Doctrine1:doctrine>,1
,mapEntry <Doctrine2:doctrine>,1
,mapEntry <Doctrine3:doctrine>,1
,mapEntry <Doctrine4:doctrine>,1
<tigers>,{ <tigers> },1
,<tigers> },1
T3464>,<tiling T3464> STRING,1
,T3464> STRING,1
1199,{ 1199 },1
,1199 },1
stand,can stand on,1
,stand on,1
map,( map {,92
,map {,92
,( map STRING,313
,map STRING,313
<Scoring>,STRING <Scoring> args:,4
,<Scoring> args:,4
surround,( surround (,19
,surround (,19
state:4,) state:4 ),5
,state:4 ),16
,STRING state:4 ),3
,) state:4 value:50,1
,) state:4 value:80,1
,state:4 value:50,1
,state:4 value:80,1
,} state:4 ),8
state:3,) state:3 ),5
,state:3 ),28
,STRING state:3 ),3
,STRING state:3 value:1,4
,state:3 value:1,4
,count:76 state:3 ),2
,count:20 state:3 ),4
,count:10 state:3 ),4
,count:5 state:3 ),2
,) state:3 value:40,1
,) state:3 value:50,1
,state:3 value:40,1
,state:3 value:50,1
,} state:3 ),8
state:2,) state:2 ),6
,state:2 ),24
,STRING state:2 ),4
,STRING state:2 value:1,2
,state:2 value:1,2
,38 state:2 value:38,3
,39 state:2 value:39,1
,state:2 value:38,3
,state:2 value:39,1
,} state:2 ),14
,) state:2 value:3,17
,state:2 value:3,17
state:1,) state:1 ),34
,state:1 ),224
,count:2 state:1 ),4
,STRING state:1 ),98
,STRING state:1 value:1,4
,state:1 value:1,8
,36 state:1 value:36,3
,37 state:1 value:37,2
,state:1 value:36,3
,state:1 value:37,2
,} state:1 ),87
,) state:1 value:1,4
,coord:<BoardConfig:King2Start> state:1 ),1
,count:30 state:1 value:30,1
,count:50 state:1 value:40,1
,count:60 state:1 value:60,1
,count:80 state:1 value:60,1
,count:100 state:1 value:80,1
,count:80 state:1 value:50,2
,count:100 state:1 value:40,1
,count:60 state:1 value:40,1
,count:100 state:1 value:100,2
,count:120 state:1 value:100,1
,count:60 state:1 value:70,1
,count:120 state:1 value:120,1
,state:1 value:30,1
,state:1 value:40,3
,state:1 value:60,2
,state:1 value:80,1
,state:1 value:50,2
,state:1 value:100,3
,state:1 value:70,1
,state:1 value:120,1
Orthogonal,difference Orthogonal OppositeDirection,6
,Orthogonal OppositeDirection,6
,) Orthogonal (,99
,Orthogonal (,368
,Step Orthogonal (,60
,3 Orthogonal contiguous:False,1
,Orthogonal contiguous:False,1
,STRING Orthogonal ),70
,Orthogonal ),283
,steps:3 Orthogonal ),2
,steps:4 Orthogonal ),2
,) Orthogonal ),133
,) Orthogonal if:,15
,#1 Orthogonal if:,1
,Orthogonal if:,23
,steps:<Board:sizeHome> Orthogonal ),2
,step Orthogonal (,7
,Hop Orthogonal (,22
,Liberties Orthogonal ),8
,NotEmpty Orthogonal ),2
,Own Orthogonal ),6
,Connected Orthogonal {,6
,Orthogonal {,6
,#1 Orthogonal ),2
,Connected Orthogonal Mover,1
,Orthogonal Mover,3
,rotations Orthogonal ),1
,Groups Orthogonal if:,3
,Empty Orthogonal ),8
,Groups Orthogonal #1,7
,Orthogonal #1,7
,3 Orthogonal exact:True,14
,Orthogonal exact:True,14
,3 Orthogonal ),18
,3 Orthogonal through:,17
,Orthogonal through:,19
,2 Orthogonal ),2
,Slide Orthogonal ),13
,5 Orthogonal if:,1
,4 Orthogonal through:,2
,4 Orthogonal ),5
,7 Orthogonal ),1
,Slide Orthogonal (,129
,#1 Orthogonal (,15
,steps:8 Orthogonal ),2
,Enemy Orthogonal ),5
,Direction Orthogonal (,8
,Steps Orthogonal (,10
,STRING Orthogonal STRING,16
,Orthogonal STRING,16
,STRING Orthogonal ~,10
,Orthogonal ~,10
,Distance Orthogonal from:,4
,Orthogonal from:,4
,STRING Orthogonal (,15
,) Orthogonal Diagonal,1
,Orthogonal Diagonal,1
,) Orthogonal All,1
,Orthogonal All,1
,) Orthogonal includeSelf:True,6
,Orthogonal includeSelf:True,6
,Group Orthogonal Mover,2
,Group Orthogonal Next,1
,Orthogonal Next,1
,) Orthogonal stop:,1
,Orthogonal stop:,1
,#2 Orthogonal ),1
,) Orthogonal marking,1
,Orthogonal marking,1
,Related Orthogonal (,3
,Group Orthogonal if:,2
,Own Orthogonal if:,1
state:8,) state:8 ),2
,state:8 ),12
,STRING state:8 ),2
,) state:8 value:100,150
,state:8 value:100,150
,} state:8 ),8
may,ADD may leap,1
,may leap,1
,2 may not,1
,may not,1
,game may be,1
,may be,1
max,( max 2,131
,max 2,131
,( max Distance,9
,max Distance,9
,( max Moves,48
,max Moves,48
,( max 3,62
,max 3,62
,( max (,36
,max (,36
,( max 1,61
,max 1,61
,( max 5,21
,max 5,21
,( max 4,8
,( max 7,1
,max 4,8
,max 7,1
,( max Captures,1
,max Captures,1
,( max 0,4
,max 0,4
state:7,STRING state:7 ),6
,state:7 ),14
,} state:7 ),8
state:6,) state:6 ),4
,state:6 ),14
,STRING state:6 ),2
,} state:6 ),8
forward,one forward direction,1
,either forward diretion,1
,forward direction,1
,forward diretion,1
,space forward to,1
,of forward .,1
,forward to,1
,forward .,1
state:5,) state:5 ),5
,state:5 ),15
,STRING state:5 ),2
,} state:5 ),8
backtracking:True,) backtracking:True ),11
,backtracking:True ),19
,includeSelf:False backtracking:True ),7
,<Skip> backtracking:True ),1
state:0,) state:0 ),5
,state:0 ),7
,STRING state:0 ),1
,} state:0 ),1
300,279 300 325,1
,300 325,1
,pair 300 32,1
,300 32,1
,299 300 301,2
,300 301,2
,291 300 309,1
,. 300 307,1
,{ 300 1,1
,300 309,1
,300 307,1
,300 1,1
,{ 300 },1
,300 },1
,19 300 .,1
,300 .,1
301,294 301 334,1
,301 334,1
,pair 301 487,1
,301 487,1
,350 301 302,1
,301 302,3
,300 301 302,2
,292 301 310,1
,{ 301 .,1
,301 310,1
,301 .,1
<Limping>,STRING <Limping> <,3
,<Limping> <,3
,STRING <Limping> STRING,1
,<Limping> STRING,1
302,pair 302 488,1
,302 488,1
,301 302 303,3
,302 303,3
,293 302 311,1
,302 311,1
,{ 302 },1
,302 },1
303,13 303 ),1
,303 ),1
,pair 303 173,1
,303 173,1
,302 303 254,1
,303 254,1
,302 303 304,2
,303 304,2
,294 303 312,1
,. 303 310,1
,303 312,1
,303 310,1
,282 303 323,1
,303 323,1
<King2Start>,<Pawn1Start> <King2Start> <Queen2Start>,1
,<King2Start> <Queen2Start>,1
<Size:boardHeight>,+ <Size:boardHeight> <OuterRing:extraBoardSize>,1
,<Size:boardHeight> <OuterRing:extraBoardSize>,1
<Jump:hare>,or <Jump:hare> (,1
,<Jump:hare> (,1
304,298 304 288,1
,304 288,1
,pair 304 174,1
,304 174,1
,303 304 305,2
,304 305,2
,295 304 313,1
,{ 304 .,1
,{ 304 7,1
,304 313,1
,304 .,1
,304 7,1
,{ 304 },1
,304 },1
305,314 305 296,1
,305 296,1
,pair 305 283,1
,305 283,1
,304 305 306,2
,305 306,2
,296 305 314,1
,305 314,1
,264 305 325,1
,305 325,1
306,pair 306 284,1
,306 284,1
,305 306 307,2
,306 307,2
,. 306 },1
,297 306 315,1
,. 306 313,1
,306 },2
,306 315,1
,306 313,1
,{ 306 },1
307,264 307 291,1
,307 291,1
,pair 307 389,1
,307 389,1
,306 307 308,2
,307 308,2
,{ 307 .,1
,298 307 316,1
,300 307 .,1
,{ 307 7,1
,307 .,2
,307 316,1
,307 7,1
state:9,) state:9 ),2
,state:9 ),2
308,pair 308 390,1
,308 390,1
,307 308 309,2
,308 309,2
,299 308 317,1
,{ 308 3,1
,308 317,1
,308 3,1
,{ 308 },1
,308 },1
,286 308 267,1
,308 267,1
309,229 309 ),1
,pair 309 541,1
,309 ),1
,309 541,1
,308 309 310,2
,309 310,2
,300 309 318,1
,. 309 316,1
,309 318,1
,309 316,1
,{ 309 },1
,309 },1
,330 309 289,1
,309 289,1
<Scenario:numPlayers>,players <Scenario:numPlayers> ),1
,<Scenario:numPlayers> ),1
pathExtent,( pathExtent (,2
,pathExtent (,2
use,Cannot use STRING,1
,use STRING,1
,players use Disc,1
,use Disc,1
,Cannot use NonMover,1
,use NonMover,1
310,277 310 294,1
,310 294,1
,230 310 ),1
,pair 310 542,1
,310 ),1
,310 542,1
,359 310 215,1
,310 215,1
,309 310 311,2
,310 311,2
,301 310 319,1
,303 310 .,1
,310 319,1
,310 .,1
,{ 310 },1
,310 },1
311,pair 311 543,1
,311 543,1
,310 311 312,2
,311 312,2
,302 311 320,1
,{ 311 9,1
,311 320,1
,311 9,1
,312 311 271,1
,311 271,1
Swap,move Swap Pieces,7
,Swap Pieces,7
,move Swap Players,2
,Swap Players,2
,) Swap mover,1
,Swap mover,1
312,322 312 328,1
,312 328,1
,pair 312 544,1
,312 544,1
,311 312 313,2
,312 313,2
,303 312 321,1
,. 312 319,1
,312 321,1
,312 319,1
,291 312 311,1
,312 311,1
313,pair 313 543,1
,313 543,1
,312 313 314,2
,313 314,2
,304 313 322,1
,306 313 .,1
,313 322,1
,313 .,1
,{ 313 },1
,313 },1
,354 313 374,1
,313 374,1
314,323 314 305,1
,314 305,1
,pair 314 544,1
,314 544,1
,313 314 315,2
,314 315,2
,305 314 323,1
,{ 314 1,1
,314 323,1
,314 1,1
,294 314 334,1
,314 334,1
315,rotate 315 (,1
,331 315 322,1
,315 (,1
,315 322,2
,pair 315 545,1
,315 545,1
,314 315 316,2
,315 316,2
,. 315 },1
,306 315 324,1
,. 315 322,1
,{ 315 2,1
,315 },2
,315 324,1
,315 2,1
,{ 315 },1
316,pair 316 546,1
,316 546,1
,365 316 604,1
,316 604,1
,315 316 317,2
,316 317,2
,{ 316 .,1
,307 316 325,1
,309 316 .,1
,316 .,2
,316 325,1
,275 316 336,1
,316 336,1
<TurnType:turnOption>,) <TurnType:turnOption> ),1
,<TurnType:turnOption> ),1
317,pair 317 93,1
,317 93,1
,316 317 318,2
,317 318,2
,308 317 326,1
,317 326,1
,276 317 255,1
,317 255,1
318,334 318 325,1
,318 325,1
,pair 318 94,1
,318 94,1
,317 318 319,2
,318 319,2
,309 318 327,1
,. 318 },1
,{ 318 9,1
,318 327,1
,318 },2
,318 9,1
,{ 318 },1
,298 318 277,1
,318 277,1
319,pair 319 543,1
,319 543,1
,318 319 320,2
,319 320,2
,310 319 328,1
,312 319 .,1
,319 328,1
,319 .,1
,{ 319 },1
,319 },1
,. 319 38,1
,319 38,1
,238 319 298,1
,319 298,1
Here's,) Here's a,1
,Here's a,1
T33336,tiling T33336 3,1
,T33336 3,1
31>,. 31> <32,1
,31> <32,1
Doctrine,) Doctrine damage,1
,Doctrine damage,1
-0,0 -0 .,6
,-0 .,37
,5 -0 .,1
,{ -0 .,12
,25 -0 .,3
,23 -0 .,1
,1 -0 .,5
,45 -0 .,2
,6 -0 .,1
,shift -0 .,3
,2 -0 .,1
,3 -0 .,1
,-2 -0 .,1
-1,4 -1 (,1
,-1 (,22
,shift -1 3,6
,-1 3,6
,shift -1 1,4
,-1 1,4
,{ -1 .,8
,-1 .,23
,3 -1 (,2
,7 -1 (,1
,shift -1 .,10
,shift -1 -1,3
,-1 -1 (,3
,9 -1 (,1
,shift -1 9,2
,-1 -1,3
,-1 9,2
,Mover -1 ),2
,-1 ),12
,0 -1 },1
,-1 },5
,STRING -1 ),8
,) -1 ),2
,0 -1 (,5
,1 -1 (,4
,shift -1 -4,1
,-1 -4,1
,shift -1 2,3
,-1 2,4
,shift -1 6,1
,-1 6,1
,10 -1 (,1
,shift -1 10,1
,-1 10,1
,{ -1 0,2
,{ -1 2,1
,-1 0,2
,3 -1 },1
,9 -1 .,1
,1 -1 .,2
,3 -1 .,1
,) -1 },1
,= -1 (,4
,1 -1 },2
,0 -1 .,1
-2,0 -2 (,6
,-2 (,15
,2 -2 (,5
,3 -2 },2
,5 -2 },3
,-2 },5
,{ -2 .,4
,-2 .,7
,3 -2 (,1
,) -2 ),2
,Mover -2 ),1
,-2 ),3
,shift -2 .,1
,{ -2 -3,1
,{ -2 0,2
,-2 -3,2
,-2 0,2
,1 -2 (,2
,shift -2 -2,1
,-2 -2 (,1
,shift -2 -3,1
,shift -2 3,1
,shift -2 4,1
,4 -2 .,2
,shift -2 -4,1
,shift -2 -5,1
,-2 -2,1
,-2 3,2
,-2 4,1
,-2 -4,1
,-2 -5,1
,shift -2 2,2
,-2 2,3
,{ -2 2,1
,shift -2 -0,1
,-2 -0,1
,{ -2 3,1
<Play:capture>,#1 <Play:capture> ),1
,<Play:capture> ),1
-3,{ -3 4,1
,4 -3 },1
,-3 4,1
,-3 },2
,{ -3 9,1
,-3 9,1
,5 -3 .,1
,-3 .,8
,-2 -3 },1
,-2 -3 (,1
,3 -3 (,1
,shift -3 .,4
,4 -3 (,1
,-3 (,4
,2 -3 (,1
,{ -3 .,2
,3 -3 .,1
,shift -3 1,1
,-3 1,1
-4,0 -4 (,2
,-4 (,2
,1 -4 -4,1
,-4 -4 20,1
,-4 -4,1
,-4 20,1
,shift -4 .,1
,{ -4 .,1
,-4 .,9
,88 -4 .,1
,33 -4 .,1
,-2 -4 .,1
,2 -4 .,1
,-1 -4 .,1
,01 -4 .,1
,61 -4 .,1
,shift -4 0,1
,shift -4 3,1
,-4 0,1
,-4 3,1
,shift -4 1,1
,-4 1,1
-5,shift -5 .,2
,-5 .,13
,shift -5 10,1
,-5 10,1
,2 -5 .,2
,-2 -5 .,1
,005 -5 .,1
,4 -5 .,1
,{ -5 .,6
,{ -5 7,1
,{ -5 8,1
,-5 7,1
,-5 8,1
equipment,( equipment {,979
,equipment {,979
-6,shift -6 7,1
,-6 7,2
,6 -6 (,1
,-6 (,1
,{ -6 3,1
,{ -6 7,1
,{ -6 8,1
,{ -6 12,1
,-6 3,1
,-6 8,1
,-6 12,1
-7,shift -7 7,1
,shift -7 6,1
,-7 7,1
,-7 6,1
-8,39 -8 .,1
,8 -8 .,1
,-8 .,2
becomes,piece becomes available,1
,becomes available,1
max:3,min:2 max:3 (,1
,max:3 (,1
320,pair 320 544,1
,320 544,1
,face 320 ),1
,320 ),1
,319 320 321,2
,320 321,2
,311 320 329,1
,320 329,1
321,pair 321 547,1
,321 547,1
,face 321 ),1
,321 ),1
,320 321 322,2
,321 322,2
,312 321 330,1
,. 321 },1
,321 330,1
,321 },1
322,315 322 312,1
,322 312,1
,pair 322 548,1
,322 548,1
,face 322 ),1
,322 ),1
,321 322 323,2
,322 323,2
,313 322 331,1
,315 322 .,1
,{ 322 8,1
,322 331,1
,322 .,1
,322 8,1
,{ 322 },1
,322 },1
<Rows>,STRING <Rows> args:,5
,<Rows> args:,5
,rectangle <Rows> <Columns>,1
,<Rows> <Columns>,1
max:4,min:2 max:4 (,1
,max:4 (,1
directions,( directions {,746
,directions {,746
,orthogonal directions over,1
,( directions Forward,2
,( directions Backward,1
,directions over,1
,directions Forward,2
,directions Backward,1
,( directions Vertex,11
,directions Vertex,11
,( directions Cell,31
,directions Cell,31
,( directions Diagonal,1
,directions Diagonal,1
,( directions #1,8
,( directions #2,8
,separate directions .,2
,movement directions +,2
,passant directions ),2
,directions #1,8
,directions #2,8
,directions .,2
,directions +,2
,directions ),2
,( directions from:#1,1
,directions from:#1,1
,( directions #3,1
,adjacent directions from,1
,directions #3,1
,directions from,1
,( directions Forwards,2
,directions Forwards,2
323,260 323 },1
,260 323 314,1
,323 },3
,323 314,1
,217 323 ),1
,pair 323 549,1
,323 ),2
,323 549,1
,face 323 ),1
,322 323 },2
,314 323 332,1
,323 332,1
,303 323 590,1
,323 590,1
null,selecting null moves,1
,null moves,1
compass,the compass opposite,1
,compass opposite,1
324,218 324 ),1
,pair 324 550,1
,324 ),1
,324 550,1
,. 324 },2
,315 324 333,1
,324 },2
,324 333,1
325,318 325 358,1
,325 358,1
,300 325 88,1
,325 88,1
,pair 325 551,1
,325 551,1
,{ 325 .,2
,316 325 334,1
,325 .,2
,325 334,1
,{ 325 },1
,325 },1
,305 325 284,1
,325 284,1
lists,Find lists of,1
,lists of,1
326,pair 326 552,1
,326 552,1
,317 326 335,1
,326 335,1
Value,remember Value STRING,143
,forget Value All,8
,Value STRING,262
,Value All,8
,set Value Mover,121
,set Value Prev,4
,Value Mover,121
,Value Prev,4
,forEach Value (,26
,forget Value STRING,119
,Value (,42
,forEach Value min:1,10
,Value min:1,10
,forget Value (,5
,set Value at:,35
,Value at:,62
,set Value (,2
,set Value P3,1
,set Value P1,4
,set Value P4,1
,set Value P2,4
,Value P3,1
,Value P1,4
,Value P4,1
,Value P2,4
,count Value 1,1
,count Value 2,1
,count Value 3,1
,count Value 4,1
,count Value 5,1
,count Value 6,1
,Value 1,1
,Value 2,1
,Value 3,1
,Value 4,1
,Value 5,1
,Value 6,1
,forEach Value min:2,3
,Value min:2,3
,remember Value (,7
,) Value line,1
,Value line,1
,set Value Next,2
,Value Next,2
,forEach Value min:0,5
,Value min:0,5
,forget Value #2,2
,remember Value #2,1
,Value #2,3
,Hidden Value at:,27
,Hidden Value (,2
,State Value },2
,Value },2
,remember Value #1,2
,forget Value #1,2
,Value #1,4
327,14 327 ),1
,327 ),1
,pair 327 201,1
,327 201,1
,376 327 278,1
,327 278,1
,318 327 336,1
,. 327 334,1
,327 336,1
,327 334,1
,348 327 390,1
,327 390,1
328,312 328 363,1
,328 363,1
,pair 328 202,1
,328 202,1
,319 328 337,1
,339 328 .,1
,{ 328 7,1
,328 337,1
,328 .,1
,328 7,1
329,320 329 338,1
,329 338,1
<playerMaps>,{ <playerMaps> <numPlayers>,1
,<playerMaps> <numPlayers>,1
oriented,space oriented vertically,1
,oriented vertically,1
<Board:track>,STRING <Board:track> directed:True,2
,<Board:track> directed:True,2
,STRING <Board:track> loop:True,2
,<Board:track> loop:True,2
,store:None <Board:track> ),1
,<Board:track> ),1
,) <Board:track> use:Vertex,1
,<Board:track> use:Vertex,1
<turnOption>,{ <turnOption> },1
,<turnOption> },1
<RB2>,<RF2> <RB2> ),2
,<RB2> ),2
Entrenchments,) Entrenchments Sets,1
,Entrenchments Sets,1
<112>,<14> <112> STRING,1
,<112> STRING,1
Domino,take Domino ),1
,Domino ),1
330,321 330 339,1
,. 330 },1
,{ 330 4,1
,330 339,1
,330 },2
,330 4,1
,{ 330 },1
,371 330 309,1
,330 309,1
331,373 331 315,1
,331 315,1
,322 331 340,1
,{ 331 .,1
,331 340,1
,331 .,1
,{ 331 },1
,331 },1
332,{ 332 395,1
,341 332 395,1
,332 395,2
,323 332 341,1
,332 341,1
dominoes,( dominoes ),1
,dominoes ),1
333,. 333 },2
,333 },2
,pair 333 553,1
,337 333 ),1
,333 553,1
,333 ),1
,382 333 284,1
,333 284,1
,324 333 342,1
,. 333 340,1
,333 342,1
,333 340,1
334,301 334 318,1
,334 318,1
,pair 334 554,1
,338 334 ),1
,334 554,1
,334 ),1
,383 334 285,1
,334 285,1
,{ 334 .,1
,325 334 343,1
,327 334 .,1
,334 .,2
,334 343,1
,{ 334 },1
,334 },1
,314 334 354,1
,334 354,1
335,. 335 1,1
,335 1,1
,{ 335 .,1
,335 .,1
,137 335 ),1
,pair 335 219,1
,375 335 ),1
,335 ),2
,335 219,1
,286 335 384,1
,335 384,1
,326 335 344,1
,{ 335 5,1
,335 344,1
,335 5,1
336,360 336 },1
,336 },2
,138 336 ),1
,pair 336 220,1
,376 336 ),1
,336 ),3
,336 220,1
,327 336 345,1
,. 336 343,1
,336 345,1
,336 343,1
,{ 336 },1
,STRING 336 ),1
,316 336 356,1
,336 356,1
337,rotate 337 .,1
,337 .,2
,pair 337 333,1
,337 333,1
,288 337 386,1
,337 386,1
,328 337 346,1
,348 337 .,1
,337 346,1
repeat,( repeat 1,6
,( repeat 7,2
,repeat 1,6
,repeat 7,2
,( repeat 15,2
,repeat 15,2
,( repeat STRING,1
,repeat STRING,1
338,pair 338 334,1
,338 334,1
,329 338 347,1
,{ 338 8,1
,338 347,1
,338 8,1
339,355 339 346,1
,339 346,1
,pair 339 555,1
,339 555,1
,290 339 388,1
,339 388,1
,330 339 348,1
,. 339 328,1
,339 348,1
,339 328,1
,{ 339 },1
,339 },1
strokeColour:,) strokeColour: (,4
,strokeColour: (,4
<tracks>,<num> <tracks> <start>,1
,<tracks> <start>,1
,<num> <tracks> <entries>,1
,<tracks> <entries>,3
,<center> <tracks> },1
,<tracks> },10
,<start> <tracks> <entries>,2
,<size> <tracks> },3
,<board> <tracks> <stores>,1
,<tracks> <stores>,1
,<size> <tracks> <regions>,1
,<tracks> <regions>,1
,<team> <tracks> },4
,<teams> <tracks> },1
,<dice> <tracks> },1
make,can make any,1
,make any,1
,can make .,1
,make .,1
,to make sure,1
,make sure,1
included,the included then,1
,included then,1
33>,. 33> <30,1
,<30 33> STRING,1
,33> <30,1
,33> STRING,1
<Size:board>,1 <Size:board> ),1
,<Size:board> ),1
<RB1>,<RF1> <RB1> <LF2>,2
,<RB1> <LF2>,2
<111>,<36> <111> STRING,1
,<111> STRING,1
4x4x4x5x100x4,( 4x4x4x5x100x4 ),1
,4x4x4x5x100x4 ),1
structure,the structure of,1
,structure of,1
340,pair 340 556,1
,340 556,1
,rotate 340 .,1
,340 .,2
,331 340 349,1
,333 340 .,1
,340 349,1
341,350 341 332,1
,341 332,1
,pair 341 557,1
,341 557,1
,332 341 350,1
,{ 341 4,1
,341 350,1
,341 4,1
,{ 341 },1
,341 },1
,361 341 279,1
,341 279,1
342,358 342 349,1
,342 349,2
,pair 342 558,1
,342 558,1
,. 342 },1
,333 342 351,1
,. 342 349,1
,342 },1
,342 351,1
343,pair 343 559,1
,343 559,1
,{ 343 344,1
,343 344,1
,{ 343 .,1
,334 343 },1
,336 343 .,1
,{ 343 6,1
,343 .,2
,343 },1
,343 6,1
344,353 344 396,1
,344 396,1
,pair 344 560,1
,344 560,1
,343 344 345,1
,344 345,1
,335 344 },1
,344 },2
,{ 344 },1
345,87 345 ),1
,149 345 ),1
,pair 345 369,1
,345 ),2
,345 369,1
,344 345 346,1
,345 346,1
,336 345 },1
,. 345 },1
,345 },3
,{ 345 },1
346,339 346 352,1
,346 352,1
,88 346 ),1
,150 346 ),1
,pair 346 370,1
,346 ),2
,346 370,1
,345 346 347,1
,346 347,1
,337 346 },1
,{ 346 .,1
,346 },1
,346 .,1
due,stalemate due to,1
,due to,1
347,pair 347 25,1
,347 25,1
,346 347 348,1
,347 348,1
,338 347 },1
,{ 347 1,1
,347 },1
,347 1,1
348,pair 348 26,1
,348 26,1
,347 348 349,1
,348 349,1
,339 348 },1
,. 348 337,1
,348 },1
,348 337,1
,368 348 327,1
,348 327,1
349,342 349 366,1
,349 366,1
,pair 349 49,1
,349 49,1
,348 349 350,1
,349 350,1
,340 349 },1
,342 349 .,1
,349 },2
,349 .,1
,{ 349 },1
threat,a threat by,1
,threat by,1
Track,sites Track #2,1
,Track #2,1
,sites Track STRING,254
,Track STRING,254
,sites Track Mover,11
,Track Mover,11
,sites Track ),96
,Track ),96
,sites Track from:,15
,Track from:,15
,forEach Track if:,1
,Track if:,1
01,. 01 -4,1
,01 -4,1
,. 01 },1
,01 },1
02,. 02 -10,1
,. 02 10,1
,02 -10,1
,02 10,1
Promotion:,Pawn Promotion: *,1
,Promotion: *,1
04,. 04 1,1
,04 1,1
,. 04 (,1
,04 (,1
<Result:mover>,Mover <Result:mover> ),2
,<Result:mover> ),2
depend,conditions depend on,1
,depend on,1
Connected,) Connected sites,1
,Connected sites,1
,is Connected {,8
,Connected {,8
,is Connected Mover,7
,is Connected Next,1
,Connected Mover,7
,Connected Next,1
,is Connected All,3
,Connected All,3
,is Connected 3,4
,is Connected 2,1
,Connected 3,4
,Connected 2,1
,is Connected Orthogonal,7
,Connected Orthogonal,7
,is Connected <Connection:type>,1
,Connected <Connection:type>,1
<Placement>,STRING <Placement> args:,2
,<Placement> args:,2
<BoardSize>,STRING <BoardSize> args:,11
,<BoardSize> args:,11
,<Board:type> <BoardSize> ),2
,<BoardSize> ),2
<Exact>,All <Exact> ),1
,STRING <Exact> args:,1
,<Exact> ),1
,<Exact> args:,1
Booleans,for Booleans (,1
,Booleans (,1
about,player about 24,1
,multiplayer about 60,1
,strategy about 100,1
,about 24,1
,about 60,1
,about 100,1
,to about 30,1
,about 30,1
0:,State 0: liberties,1
,0: liberties,1
History,) History (,3
,History (,3
350,359 350 341,1
,350 341,1
,pair 350 50,1
,350 50,1
,349 350 301,1
,350 301,1
,341 350 },1
,350 },1
<198>,<19> <198> STRING,1
,<198> STRING,1
351,15 351 ),1
,351 ),1
,pair 351 561,1
,351 561,1
,400 351 352,1
,351 352,1
,. 351 },2
,342 351 },1
,{ 351 8,1
,351 },4
,351 8,1
,{ 351 },1
,413 351 392,1
,351 392,1
352,346 352 360,1
,352 360,1
,pair 352 562,1
,352 562,2
,351 352 562,1
,63 352 143,2
,{ 352 353,1
,{ 352 5,1
,352 143,2
,352 353,1
,352 5,1
353,382 353 344,1
,353 344,1
,pair 353 49,1
,353 49,1
,73 353 153,2
,352 353 354,1
,{ 353 2,1
,353 153,2
,353 354,1
,353 2,1
,{ 353 },1
,353 },1
354,pair 354 50,1
,354 50,1
,83 354 163,2
,353 354 355,1
,354 163,2
,354 355,1
,{ 354 },1
,354 },1
,334 354 313,1
,354 313,1
355,288 355 339,1
,355 339,1
,pair 355 563,1
,355 563,1
,87 355 173,2
,354 355 360,1
,355 173,2
,355 360,1
sizes,( sizes Group,31
,sizes Group,31
356,pair 356 564,1
,356 564,1
,{ 356 .,1
,84 356 182,1
,86 356 357,1
,{ 356 7,1
,356 .,1
,356 182,1
,356 357,1
,356 7,1
,336 356 376,1
,356 376,1
357,pair 357 49,1
,357 49,1
,85 357 184,1
,356 357 358,1
,{ 357 4,1
,357 184,1
,357 358,1
,357 4,1
358,325 358 342,1
,358 342,1
,pair 358 50,1
,358 50,1
,86 358 186,1
,357 358 182,1
,358 186,1
,358 182,1
359,296 359 },1
,296 359 350,1
,359 },2
,359 350,1
,pair 359 565,1
,359 565,1
,408 359 310,1
,359 310,1
,87 359 188,1
,173 359 360,1
,359 188,1
,359 360,1
,{ 359 },1
above,mentioned above --COMMA--,1
,above --COMMA--,1
<NeighborsOf>,STRING <NeighborsOf> args:,1
,<NeighborsOf> args:,1
stick,notched stick (,1
,stick (,1
distance:,Diagonal distance: (,1
,) distance: (,1
,distance: (,3
,stopIncluded:True distance: (,1
35>,. 35> <36,1
,35> <36,1
10,{ 10 5,15
,10 5,18
,16 10 },11
,19 10 },1
,10 },269
,2 10 },14
,{ 10 3,7
,10 3,9
,3 10 },11
,4 10 },20
,5 10 },27
,6 10 },22
,9 10 },32
,{ 10 11,36
,10 11,52
,{ 10 13,6
,10 13,9
,17 10 },1
,8 10 },28
,{ 10 12,7
,10 12,29
,STRING 10 ),8
,10 ),112
,{ 10 25,5
,11 10 9,13
,1 10 ),14
,10 25,5
,10 9,26
,8 10 12,20
,{ 10 8,14
,10 8,36
,) 10 (,6
,) 10 ),15
,0 10 (,4
,7 10 (,3
,10 (,30
,STRING 10 count:5,1
,10 count:5,1
,5 10 .,2
,10 .,13
,{ 10 .,5
,rectangle 10 1,3
,10 1,14
,>= 10 (,3
,. 10 },2
,79 10 .,1
,12 10 1,1
,-5 10 (,1
,5 10 (,3
,0 10 5,1
,P2 10 ),5
,1 10 15,2
,= 10 (,4
,0 10 ),6
,<= 10 (,1
,10 15,18
,3 10 ),5
,P4 10 ),1
,scale 10 2,1
,10 2,24
,1 10 },17
,15 10 },4
,square 10 ),17
,14 10 6,6
,10 6,24
,pair 10 4,14
,10 4,38
,12 10 8,18
,0 10 },38
,4 10 ),1
,STRING 10 count:4,1
,10 count:4,1
,{ 10 0,24
,33 10 },1
,66 10 },1
,{ 10 15,14
,10 0,33
,02 10 .,1
,15 10 .,1
,pair 10 231,1
,13 10 46,1
,10 231,1
,10 46,1
,6 10 14,4
,16 10 4,3
,4 10 16,4
,18 10 2,3
,2 10 18,3
,20 10 0,3
,0 10 20,3
,10 14,9
,10 16,9
,10 18,8
,10 20,9
,7 10 8,1
,pair 10 89,1
,91 10 ),1
,89 10 ),1
,pair 10 91,1
,pair 10 51,1
,10 89,1
,10 91,1
,10 51,1
,2 10 12,1
,pair 10 23,1
,23 10 ),2
,10 23,1
,shift 10 0,2
,0 10 .,1
,. 10 0,1
,) 10 is,1
,pair 10 15,1
,10 is,1
,Section 10 (,1
,rectangle 10 2,1
,7 10 ),2
,13 10 29,1
,10 29,2
,20 10 },2
,{ 10 },3
,Count 10 to:,8
,10 to:,8
,8 10 11,3
,pair 10 7,1
,10 7,12
,pair 10 3,1
,{ 10 29,1
,pair 10 1,2
,from 10 ),1
,11 10 },2
,< 10 (,1
,8 10 32,1
,10 32,1
,9 10 11,12
,Row 10 ),8
,Column 10 ),2
,} 10 {,1
,{ 10 4,21
,10 {,1
,Shared 10 ),2
,{ 10 7,11
,18 10 },1
,{ 10 2,17
,rectangle 10 11,1
,9 10 ),4
,{ 10 20,3
,7 10 },8
,. 10 14,2
,shift 10 -1,1
,-1 10 (,1
,shift 10 10,1
,10 10 (,1
,10 -1,1
,10 10,21
,15 10 6,1
,pair 10 68,1
,pair 10 9,2
,10 68,1
,0 10 21,1
,10 21,1
,pair 10 422,1
,106 10 ),1
,Row 10 (,1
,10 422,1
,rectangle 10 9,4
,rectangle 10 20,1
,pair 10 13,1
,shift 10 .,2
,shift 10 1,3
,<Row:num> 10 ),1
,9 10 59,1
,10 59,1
,pair 10 100,3
,10 100,3
,Multiplier 10 =,1
,pair 10 8,3
,pair 10 0,3
,6 10 ),1
,hex 10 ),1
,rectangle 10 14,1
,10 =,1
,Limping 10 ),1
,Triangle 10 ),1
,Star 10 ),1
,{ 10 6,16
,{ 10 9,6
,{ 10 10,19
,10 10 },19
,{ 10 19,11
,14 10 },4
,10 19,15
,{ 10 18,5
,{ 10 1,4
,{ 10 17,2
,10 17,3
,{ 10 24,2
,10 24,3
,6 10 5,1
,8 10 9,1
,7 10 6,1
,5 10 ),1
,rectangle 10 5,1
,rectangle 10 10,1
,10 10 ),1
,{ 10 14,2
,{ 10 16,5
,13 10 12,1
,13 10 20,1
,12 10 20,1
,12 10 13,1
,} 10 ),8
,{ 10 22,1
,10 22,1
,5 10 15,1
,1 10 19,1
,hint 10 2,1
,hint 10 3,1
,0 10 19,1
,17 10 2,1
,9 10 17,1
,9 10 13,1
,9 10 19,1
,116 10 19,1
,9 10 1,1
,pair 10 84,1
,pair 10 24,1
,10 84,1
11,2 11 },10
,11 },218
,9 11 },11
,{ 11 4,5
,4 11 },7
,11 4,6
,{ 11 6,5
,11 6,10
,{ 11 5,3
,3 11 },13
,11 5,6
,) 11 ),6
,11 ),66
,1 11 },11
,5 11 },19
,7 11 },15
,6 11 },23
,10 11 },39
,{ 11 12,28
,11 12,44
,8 11 },23
,{ 11 13,7
,11 13,30
,STRING 11 count:14,2
,11 count:14,2
,{ 11 11,17
,11 11 },16
,{ 11 8,16
,31 11 10,12
,11 11,18
,11 8,17
,11 10,15
,. 11 23,12
,23 11 .,8
,11 23,12
,11 .,23
,13 11 9,17
,27 11 9,1
,{ 11 9,6
,11 9,26
,. 11 },11
,STRING 11 count:2,4
,11 count:2,4
,shift 11 0,4
,shift 11 6,3
,11 0,16
,STRING 11 count:5,1
,11 count:5,1
,1 11 ),11
,1 11 (,1
,11 (,6
,{ 11 .,4
,P1 11 ),2
,STRING 11 count:15,1
,11 count:15,1
,32 11 .,1
,9 11 (,1
,24 11 .,3
,25 11 .,1
,STRING 11 count:8,1
,11 count:8,1
,. 11 End,2
,11 End,2
,{ 11 24,2
,11 24,4
,15 11 },5
,{ 11 17,10
,11 17,16
,STRING 11 ),3
,15 11 7,5
,11 7,8
,25 11 6,1
,7 11 ),1
,pair 11 3,1
,11 3,13
,9 11 13,18
,0 11 (,1
,{ 11 0,8
,{ 11 7,3
,0 11 },5
,13 11 },3
,shift 11 .,3
,58 11 .,1
,pair 11 255,1
,11 255,1
,7 11 15,3
,17 11 5,3
,5 11 17,4
,19 11 3,3
,3 11 19,3
,21 11 1,3
,1 11 21,5
,11 15,7
,11 19,12
,11 1,12
,11 21,9
,P4 11 ),1
,12 11 9,1
,pair 11 88,2
,88 11 ),2
,pair 11 50,3
,11 88,2
,11 50,3
,pair 11 1,1
,pair 11 24,1
,24 11 ),1
,rectangle 11 1,2
,pair 11 15,1
,Section 11 (,1
,21 11 .,2
,. 11 24,1
,. 11 33,1
,11 33,1
,10 11 9,1
,pair 11 6,1
,6 11 ),1
,2 11 ),2
,pair 11 2,1
,11 2,8
,8 11 32,1
,11 32,1
,P2 11 ),6
,0 11 ),2
,pair 11 0,4
,10 11 22,2
,11 22,4
,from 11 ),2
,to 11 ),1
,12 11 10,1
,10 11 15,1
,square 11 ),6
,Row 11 ),3
,Column 11 ),1
,} 11 {,1
,{ 11 16,18
,11 {,1
,11 16,21
,Shared 11 ),2
,{ 11 21,4
,. 11 18,2
,11 18,5
,19 11 },2
,14 11 },1
,{ 11 3,8
,9 11 22,1
,25 11 12,1
,10 11 ),1
,rectangle 11 16,2
,rectangle 11 12,2
,{ 11 14,3
,11 14,4
,6 11 12,1
,12 11 13,1
,) 11 12,2
,shift 11 1,2
,{ 11 27,1
,11 27,1
,88 11 12,1
,pair 11 75,1
,pair 11 12,2
,12 11 ),2
,11 75,1
,9 11 ),2
,pair 11 287,1
,Row 11 (,1
,11 287,1
,& 11 (,1
,. 11 16,1
,) 11 Off,1
,. 11 13,1
,11 Off,1
,14 11 10,1
,11 11 14,1
,Cell 11 ),2
,pair 11 89,1
,11 89,1
,Multiplier 11 =,1
,pair 11 4,1
,pair 11 30,1
,pair 11 8,1
,pair 11 100,15
,11 =,1
,11 30,1
,11 100,15
,10 11 13,2
,Triangle 11 ),1
,{ 11 2,7
,{ 11 1,3
,{ 11 19,7
,{ 11 18,3
,{ 11 20,2
,{ 11 44,1
,11 20,4
,11 44,1
,10 11 12,5
,12 11 17,1
,7 11 12,1
,rectangle 11 11,1
,11 11 ),1
,{ 11 10,1
,{ 11 15,2
,{ 11 22,1
,12 11 },1
,22 11 },1
,Count 11 at:5,1
,Count 11 to:,4
,11 at:5,1
,11 to:,4
,16 11 },1
,15 11 13,1
,45 11 19,1
,13 11 19,1
,13 11 35,1
,11 35,1
,} 11 ),3
,2 11 20,1
,{ 11 },1
,hint 11 1,1
,1 11 20,1
,18 11 3,1
,10 11 17,1
,33 11 34,1
,11 34,1
,20 11 12,1
,pair 11 92,1
,26 11 ),1
,pair 11 25,1
,11 92,1
,11 25,1
12,STRING 12 count:21,1
,12 count:21,1
,4 12 },22
,{ 12 14,9
,12 },224
,12 14,32
,{ 12 16,10
,18 12 },3
,12 16,17
,7 12 },21
,11 12 },27
,{ 12 13,25
,12 13,40
,square 12 ),10
,12 ),96
,{ 12 15,3
,12 15,3
,10 12 },4
,1 12 ),15
,6 12 .,8
,. 12 End,16
,. 12 },47
,STRING 12 count:2,4
,12 .,78
,12 End,16
,12 count:2,4
,. 12 25,12
,STRING 12 count:15,13
,12 25,16
,12 count:15,13
,6 12 ),4
,{ 12 .,32
,P2 12 ),8
,26 12 .,2
,10 12 14,21
,25 12 14,1
,P3 12 ),1
,14 12 },1
,25 12 .,7
,shift 12 .,3
,) 12 ),7
,STRING 12 count:5,5
,12 count:5,5
,19 12 .,4
,5 12 .,8
,P1 12 ),1
,0 12 .,7
,STRING 12 ),13
,19 12 10,1
,12 10,21
,{ 12 },6
,. 12 0,3
,12 0,16
,STRING 12 count:<Pieces:num>,1
,<= 12 (,4
,12 count:<Pieces:num>,1
,12 (,14
,rectangle 12 16,2
,8 12 },11
,4 12 ),4
,16 12 8,5
,12 8,9
,{ 12 25,2
,pair 12 3,1
,12 3,6
,14 12 10,18
,rectangle 12 1,1
,12 1,4
,3 12 .,1
,4 12 .,1
,8 12 .,1
,9 12 .,1
,10 12 .,1
,{ 12 1,2
,0 12 },5
,{ 12 22,1
,12 22,5
,7 12 ),1
,pair 12 279,1
,10 12 16,1
,12 279,1
,8 12 16,3
,18 12 6,4
,6 12 18,3
,20 12 4,3
,4 12 20,4
,22 12 2,3
,2 12 22,4
,12 6,16
,12 18,9
,12 4,17
,12 20,13
,12 2,9
,13 12 11,1
,pair 12 87,2
,87 12 ),2
,pair 12 49,1
,12 11,7
,12 87,2
,12 49,1
,0 12 ),1
,5 12 },9
,pair 12 25,1
,25 12 ),2
,pair 12 5,2
,12 5,6
,-6 12 },1
,15 12 },2
,0 12 24,1
,14 12 13,1
,12 24,4
,{ 12 8,2
,24 12 },1
,2 12 .,2
,{ 12 10,1
,5 12 ),2
,pair 12 1,1
,min 12 (,1
,13 12 },11
,Count 12 to:,5
,12 to:,5
,6 12 11,1
,Row 12 ),4
,Column 12 ),3
,} 12 {,1
,2 12 },4
,{ 12 9,1
,{ 12 3,4
,12 {,1
,12 9,3
,{ 12 24,1
,Shared 12 ),2
,22 12 },1
,{ 12 2,5
,{ 12 20,9
,9 12 },11
,3 12 (,1
,11 12 24,2
,8 12 ),2
,11 12 ),6
,11 12 17,1
,12 17,16
,6 12 },16
,{ 12 18,6
,16 12 },1
,7 12 11,1
,0 12 (,4
,shift 12 0,4
,pair 12 69,1
,pair 12 11,2
,12 69,1
,shift 12 12,2
,12 12 (,2
,12 12,6
,20 12 },1
,pair 12 288,1
,Row 12 (,1
,12 288,1
,& 12 (,1
,4 12 14,1
,) 12 6,2
,= 12 #1,1
,#1 12 ),1
,7 12 25,1
,12 #1,1
,pair 12 13,1
,) 12 Off,1
,12 Off,1
,rectangle 12 3,1
,rectangle 12 8,1
,17 12 13,1
,pair 12 101,1
,12 101,1
,Minimum 12 =,1
,pair 12 4,1
,pair 12 30,1
,pair 12 50,1
,pair 12 8,1
,pair 12 100,15
,pair 12 0,1
,pair 12 150,1
,12 =,1
,12 30,1
,12 50,1
,12 100,15
,12 150,1
,{ 12 4,12
,{ 12 6,10
,{ 12 12,3
,12 12 },3
,{ 12 17,15
,{ 12 7,6
,. 12 23,4
,12 7,6
,12 23,6
,1 12 },8
,{ 12 0,8
,{ 12 21,4
,12 21,6
,3 12 },5
,{ 12 19,1
,12 19,1
,19 12 },2
,11 12 13,7
,10 12 11,1
,rectangle 12 12,1
,12 12 ),1
,{ 12 26,1
,12 26,2
,{ 12 5,3
,9 12 13,2
,{ 12 23,2
,{ 12 11,1
,17 12 },1
,10 12 9,1
,14 12 9,1
,9 12 10,1
,} 12 ),6
,3 12 13,1
,7 12 16,1
,3 12 21,1
,hint 12 2,1
,2 12 21,1
,19 12 4,1
,5 12 13,2
,11 12 5,1
,pair 12 85,1
,pair 12 26,1
,12 85,1
13,{ 13 8,3
,13 8,5
,8 13 },32
,12 13 },27
,13 },235
,10 13 },6
,{ 13 14,22
,{ 13 7,2
,13 14,38
,13 7,5
,. 13 5,1
,11 13 },6
,{ 13 15,7
,13 5,9
,13 15,26
,2 13 ),34
,0 13 .,17
,. 13 0,22
,STRING 13 count:5,4
,13 ),85
,13 .,113
,13 0,27
,13 count:5,4
,. 13 },88
,15 13 },2
,15 13 11,19
,13 11,22
,) 13 ),3
,. 13 End,4
,{ 13 .,88
,13 End,4
,6 13 .,2
,STRING 13 count:15,4
,13 count:15,4
,5 13 (,1
,13 (,4
,{ 13 5,4
,{ 13 },3
,P1 13 ),2
,P2 13 ),4
,4 13 },3
,{ 13 0,2
,{ 13 9,6
,7 13 },18
,17 13 },1
,{ 13 19,2
,13 9,13
,13 19,6
,17 13 9,5
,pair 13 2,1
,13 2,3
,11 13 15,19
,{ 13 2,1
,{ 13 6,5
,{ 13 11,2
,0 13 },3
,2 13 },3
,6 13 },10
,{ 13 13,1
,13 13 },1
,5 13 },9
,13 6,8
,13 13,3
,pair 13 303,1
,6 13 10,1
,13 303,1
,13 10,4
,9 13 17,3
,19 13 7,3
,7 13 19,4
,21 13 5,3
,5 13 21,3
,23 13 3,4
,3 13 23,3
,13 17,22
,13 21,9
,13 3,6
,13 23,5
,14 13 12,1
,pair 13 86,2
,86 13 ),2
,pair 13 48,1
,STRING 13 ),4
,13 12,12
,13 86,2
,13 48,1
,19 13 .,1
,0 13 ),1
,pair 13 0,3
,6 13 ),2
,5 13 10,1
,. 13 27,1
,13 27,2
,11 13 14,2
,4 13 ),3
,pair 13 4,1
,13 4,4
,<= 13 (,1
,15 13 12,2
,square 13 ),9
,} 13 {,1
,1 13 },4
,{ 13 17,18
,13 {,1
,Shared 13 ),2
,3 13 },5
,{ 13 23,2
,21 13 },1
,square 13 diagonals:Solid,1
,13 diagonals:Solid,1
,tri 13 ),1
,1 13 25,2
,13 25,2
,. 13 18,1
,13 18,15
,{ 13 16,2
,13 16,4
,11 13 18,1
,8 13 ),4
,pair 13 423,1
,47 13 ),1
,153 13 ),1
,13 423,1
,& 13 (,1
,18 13 },4
,10 13 ),1
,12 13 ),1
,14 13 ),2
,16 13 ),1
,) 13 (,1
,11 13 .,1
,8 13 9,1
,9 13 13,1
,13 13 8,1
,rectangle 13 1,1
,13 1,3
,15 13 9,1
,STRING 13 count:7,1
,13 count:7,1
,12 13 16,1
,pair 13 90,1
,13 90,1
,pair 13 6,1
,pair 13 40,1
,pair 13 50,1
,pair 13 8,1
,pair 13 100,1
,28 13 14,3
,13 40,1
,13 50,1
,13 100,1
,{ 13 1,2
,{ 13 3,2
,{ 13 4,3
,{ 13 18,13
,{ 13 21,4
,5 13 .,4
,{ 13 20,6
,13 20,8
,{ 13 24,1
,13 24,1
,{ 13 12,9
,9 13 },5
,12 13 14,8
,6 13 21,1
,9 13 6,1
,12 13 20,2
,rectangle 13 13,1
,13 13 ),1
,14 13 },4
,Count 13 at:6,1
,Count 13 to:,3
,13 at:6,1
,13 to:,3
,hint 13 6,1
,11 13 10,1
,15 13 10,1
,10 13 11,1
,} 13 ),5
,12 13 22,1
,13 22,4
,8 13 17,1
,9 13 16,1
,4 13 22,1
,hint 13 2,1
,3 13 22,1
,20 13 5,1
,4 13 21,1
,10 13 14,1
,18 13 30,1
,18 13 14,1
,{ 13 22,1
,13 30,1
,pair 13 93,1
,pair 13 14,1
,28 13 ),1
,pair 13 27,1
,13 93,1
14,{ 14 3,2
,14 3,4
,12 14 },8
,14 },106
,18 14 },1
,20 14 },2
,{ 14 17,6
,14 17,9
,13 14 },25
,9 14 },19
,{ 14 16,5
,{ 14 15,21
,14 16,27
,14 15,34
,{ 14 24,6
,14 24,10
,. 14 },5
,12 14 16,22
,16 14 12,18
,14 12,21
,) 14 ),6
,) 14 (,4
,0 14 },4
,14 ),45
,14 (,6
,3 14 ),3
,STRING 14 count:2,1
,14 count:2,1
,= 14 (,1
,{ 14 .,12
,14 .,21
,P2 14 ),1
,P4 14 ),2
,18 14 10,5
,14 10,10
,pair 14 2,1
,14 2,5
,STRING 14 count:4,3
,14 count:4,3
,6 14 },4
,30 14 },1
,7 14 ),3
,pair 14 327,1
,14 327,1
,10 14 18,3
,20 14 8,3
,8 14 20,4
,22 14 6,3
,6 14 22,3
,24 14 4,3
,4 14 24,4
,14 18,5
,14 8,12
,14 20,8
,14 6,8
,14 22,7
,14 4,8
,15 14 13,2
,pair 14 85,2
,85 14 ),2
,pair 14 47,1
,STRING 14 ),1
,14 13,7
,14 85,2
,14 47,1
,12 14 22,2
,6 14 20,1
,1 14 ),1
,pair 14 1,1
,14 1,2
,1 14 .,1
,2 14 .,1
,3 14 .,1
,6 14 .,1
,7 14 .,1
,8 14 .,2
,4 14 },3
,5 14 },4
,{ 14 7,2
,{ 14 8,6
,14 7,2
,. 14 12,1
,P1 14 ),2
,28 14 },1
,. 14 17,2
,13 14 12,1
,pair 14 3,1
,16 14 },1
,Row 14 ),1
,} 14 {,1
,8 14 },5
,{ 14 4,5
,1 14 },1
,14 {,1
,Shared 14 ),1
,24 14 },2
,. 14 21,5
,14 21,5
,22 14 },1
,{ 14 11,1
,14 11,2
,11 14 },3
,10 14 .,2
,square 14 ),3
,{ 14 30,1
,14 30,1
,8 14 ),3
,rectangle 14 8,2
,pair 14 424,1
,48 14 ),1
,154 14 ),1
,14 424,1
,& 14 (,1
,pair 14 13,2
,{ 14 14,1
,14 14 11,1
,11 14 10,1
,14 14,2
,4 14 23,2
,5 14 15,1
,14 23,6
,STRING 14 count:7,1
,14 count:7,1
,pair 14 102,1
,14 102,1
,pair 14 6,1
,pair 14 40,1
,pair 14 50,1
,pair 14 8,1
,pair 14 100,1
,pair 14 0,1
,colour 14 49,1
,9 14 ),1
,10 14 ),1
,14 40,1
,14 50,1
,14 100,1
,14 0,1
,14 49,1
,{ 14 2,4
,{ 14 6,3
,{ 14 9,4
,{ 14 23,3
,14 9,4
,7 14 },3
,{ 14 18,1
,{ 14 10,4
,{ 14 19,11
,14 19,11
,19 14 },1
,15 14 },2
,3 14 },4
,Star 14 ),1
,13 14 15,10
,rectangle 14 14,1
,14 14 ),1
,10 14 },2
,{ 14 20,2
,{ 14 13,3
,{ 14 22,2
,Count 14 to:,3
,2 14 },1
,14 to:,3
,16 14 15,1
,{ 14 12,1
,{ 14 1,1
,} 14 ),8
,2 14 26,1
,14 26,1
,9 14 18,1
,10 14 17,1
,5 14 23,1
,{ 14 },3
,hint 14 3,1
,21 14 6,1
,13 14 20,1
,<13 14 15,1
,pair 14 86,1
,13 14 ),1
,27 14 ),1
,pair 14 28,1
,14 86,1
,14 28,1
15,0 15 },10
,15 },122
,5 15 },7
,{ 15 7,2
,{ 15 2,2
,15 7,7
,15 2,4
,scale 15 1,1
,12 15 },3
,15 1,5
,{ 15 16,23
,{ 15 4,3
,15 16,33
,15 4,3
,13 15 },6
,14 15 },24
,{ 15 17,1
,15 17,21
,) 15 ),9
,15 ),46
,{ 15 .,3
,15 .,9
,17 15 13,21
,13 15 17,20
,15 13,25
,) 15 (,4
,15 (,14
,. 15 },2
,20 15 ),1
,. 15 (,3
,0 15 (,1
,10 15 20,2
,= 15 (,5
,pair 15 15,1
,15 15 ),2
,15 20,17
,15 15,3
,{ 15 10,4
,15 10,6
,{ 15 11,5
,{ 15 21,9
,15 11,11
,15 21,14
,19 15 11,5
,pair 15 1,1
,10 15 },15
,{ 15 25,4
,15 25,7
,2 15 3,1
,15 3,3
,34 15 47,1
,15 47,2
,47 15 80,1
,15 80,1
,. 15 -10,1
,. 15 10,1
,1 15 ),3
,pair 15 351,1
,15 -10,1
,15 351,1
,11 15 19,3
,21 15 9,3
,9 15 21,4
,23 15 7,3
,7 15 23,5
,25 15 5,3
,5 15 25,3
,15 19,10
,15 9,6
,15 23,6
,15 5,4
,65 15 47,1
,16 15 14,1
,pair 15 68,1
,84 15 ),1
,68 15 ),1
,pair 15 84,1
,pair 15 55,1
,pair 15 53,1
,15 14,4
,15 68,1
,15 84,1
,15 55,1
,15 53,1
,47 15 },1
,8 15 },3
,{ 15 27,1
,15 27,1
,2 15 ),2
,pair 15 2,2
,10 15 ),1
,11 15 ),1
,4 15 },5
,9 15 },10
,{ 15 3,1
,{ 15 8,2
,{ 15 12,2
,15 8,4
,15 12,2
,P1 15 ),2
,Count 15 to:,3
,15 to:,3
,. 15 31,1
,15 31,1
,. 15 5,1
,. 15 24,1
,28 15 .,2
,15 24,3
,16 15 13,3
,P2 15 ),1
,18 15 },1
,11 15 16,1
,square 15 ),8
,} 15 {,1
,{ 15 6,1
,15 {,1
,15 6,2
,{ 15 18,2
,15 18,3
,3 15 ),2
,Shared 15 ),1
,8 15 .,2
,23 15 },1
,7 15 },4
,rectangle 15 21,1
,{ 15 19,6
,repeat 15 1,2
,21 15 10,1
,8 15 ),1
,pair 15 425,1
,15 425,1
,& 15 (,1
,pair 15 0,2
,15 0,6
,. 15 32,2
,15 32,2
,14 15 19,1
,{ 15 9,3
,{ 15 15,1
,15 15 },1
,pair 15 91,1
,15 91,1
,pair 15 7,1
,pair 15 60,1
,pair 15 40,1
,pair 15 8,1
,pair 15 100,1
,9 15 ),1
,1 15 29,1
,15 60,1
,15 40,1
,15 100,1
,15 29,1
,22 15 },3
,{ 15 20,15
,{ 15 30,3
,2 15 },3
,15 30,3
,{ 15 26,2
,{ 15 24,1
,15 26,2
,1 15 },7
,6 15 },3
,{ 15 14,2
,7 15 .,2
,{ 15 22,2
,15 22,2
,14 15 16,6
,4 15 23,1
,rectangle 15 15,1
,19 15 },1
,20 15 },3
,11 15 },1
,{ 15 0,3
,17 15 },1
,16 15 },1
,Count 15 at:7,1
,3 15 },2
,15 at:7,1
,14 15 11,1
,8 15 13,1
,16 15 8,1
,} 15 ),8
,11 15 18,1
,6 15 24,1
,{ 15 },4
,hint 15 3,1
,{ 15 1,1
,22 15 7,1
,8 15 16,2
,36 15 14,1
,14 15 0,1
,14 15 6,1
,pair 15 94,1
,pair 15 16,1
,16 15 ),1
,15 94,1
16,8 16 18,1
,STRING 16 count:8,1
,16 18,19
,16 count:8,1
,7 16 },4
,{ 16 10,11
,12 16 },12
,{ 16 5,2
,16 },103
,16 10,14
,16 5,2
,{ 16 19,3
,16 19,3
,< 16 (,1
,16 (,3
,15 16 },24
,6 16 },3
,14 16 },5
,{ 16 17,26
,16 17,32
,19 16 34,1
,16 34,1
,62 16 48,2
,16 48,3
,STRING 16 count:1,1
,16 count:1,1
,14 16 18,11
,18 16 14,6
,16 14,20
,{ 16 .,2
,16 .,7
,5 16 21,1
,16 21,12
,pair 16 2,1
,16 2,3
,STRING 16 count:3,3
,16 count:3,3
,face 16 ),1
,16 ),39
,12 16 ),2
,{ 16 7,3
,16 7,4
,20 16 12,5
,16 12,6
,pair 16 1,2
,16 1,3
,14 16 36,10
,36 16 14,11
,16 36,11
,89 16 48,1
,shift 16 .,2
,pair 16 375,1
,19 16 0,1
,16 375,1
,16 0,3
,12 16 20,3
,22 16 10,3
,10 16 22,4
,24 16 8,5
,8 16 24,3
,26 16 6,3
,6 16 26,4
,16 20,10
,16 22,6
,16 8,10
,16 24,10
,16 6,6
,16 26,7
,17 16 15,2
,pair 16 62,1
,83 16 ),1
,62 16 ),1
,pair 16 83,1
,pair 16 23,1
,pair 16 22,1
,STRING 16 ),2
,16 15,7
,16 62,1
,16 83,1
,16 23,5
,} 16 ),20
,{ 16 28,2
,16 28,2
,3 16 ),1
,pair 16 3,1
,16 3,3
,{ 16 18,7
,P2 16 ),2
,{ 16 23,2
,15 16 8,1
,32 16 },1
,3 16 .,2
,1 16 ),3
,18 16 15,2
,17 16 14,3
,} 16 {,1
,11 16 },18
,0 16 },5
,{ 16 6,2
,16 {,1
,{ 16 24,7
,26 16 },1
,{ 16 8,2
,11 16 ),2
,. 16 22,1
,20 16 },2
,13 16 },3
,{ 16 20,5
,. 16 20,1
,8 16 },7
,square 16 ),3
,{ 16 12,1
,. 16 },3
,rectangle 16 4,1
,16 4,1
,0 16 16,1
,16 16 16,2
,16 16 },1
,16 16,3
,pair 16 426,1
,16 426,1
,& 16 (,1
,11 16 .,1
,pair 16 13,1
,16 13,1
,) 16 (,1
,. 16 33,1
,. 16 0,1
,16 33,1
,13 16 17,1
,pair 16 103,1
,16 103,1
,pair 16 7,1
,pair 16 60,1
,pair 16 40,1
,pair 16 8,1
,pair 16 100,1
,pair 16 0,1
,16 60,1
,16 40,1
,16 100,1
,{ 16 9,1
,16 9,1
,{ 16 21,11
,{ 16 26,2
,9 16 },2
,15 16 17,4
,22 16 },3
,{ 16 25,1
,16 25,2
,10 16 },5
,21 16 },1
,{ 16 15,1
,Count 16 to:,2
,2 16 },1
,16 to:,2
,hint 16 6,1
,{ 16 11,1
,17 16 },1
,{ 16 2,2
,16 11,1
,14 16 15,1
,7 16 25,1
,{ 16 },1
,hint 16 3,1
,{ 16 1,1
,23 16 8,1
,15 16 23,2
,{ 16 3,1
,15 16 26,1
,rectangle 16 20,1
,77 16 36,1
,0 16 17,1
,pair 16 87,1
,15 16 ),1
,pair 16 15,1
,16 87,1
17,{ 17 4,2
,7 17 },5
,2 17 },4
,{ 17 9,2
,17 4,5
,17 },123
,17 9,5
,14 17 },7
,{ 17 10,2
,17 10,2
,{ 17 18,24
,{ 17 1,1
,17 18,44
,17 1,2
,. 17 1,1
,16 17 },23
,15 17 },2
,P3 17 ),1
,17 ),35
,STRING 17 count:3,4
,17 count:3,4
,18 17 .,11
,. 17 18,8
,. 17 },12
,17 .,14
,STRING 17 count:1,1
,17 count:1,1
,19 17 15,11
,15 17 19,6
,17 15,22
,17 19,13
,5 17 19,1
,pair 17 3,1
,17 3,2
,face 17 ),1
,{ 17 30,1
,17 30,1
,11 17 },11
,{ 17 13,1
,23 17 },1
,{ 17 21,2
,17 13,6
,17 21,5
,square 17 ),8
,21 17 13,5
,38 17 15,10
,15 17 38,11
,17 38,11
,26 17 8,1
,17 8,6
,13 17 21,3
,23 17 11,3
,11 17 23,3
,25 17 9,3
,9 17 25,3
,27 17 7,3
,7 17 27,3
,17 11,3
,17 23,8
,17 25,5
,17 7,4
,17 27,4
,23 17 16,1
,pair 17 63,1
,82 17 ),1
,63 17 ),1
,pair 17 82,1
,pair 17 23,1
,pair 17 22,1
,STRING 17 ),3
,17 16,6
,17 63,2
,17 82,1
,17 22,11
,{ 17 29,1
,17 29,3
,4 17 ),1
,pair 17 4,2
,{ 17 19,6
,P2 17 ),5
,14 17 .,2
,0 17 ),1
,pair 17 0,2
,17 0,2
,5 17 16,1
,19 17 },1
,{ 17 .,1
,9 17 63,1
,} 17 {,1
,13 17 },19
,{ 17 7,1
,6 17 },1
,{ 17 5,2
,17 {,1
,17 5,3
,{ 17 20,5
,17 20,7
,{ 17 27,1
,. 17 24,2
,17 24,2
,rectangle 17 18,2
,9 17 6,1
,17 6,3
,{ 17 22,10
,12 17 18,1
,18 17 },6
,pair 17 397,1
,17 397,1
,) 17 (,1
,17 (,1
,1 17 ),1
,16 17 12,1
,17 12,2
,pair 17 92,1
,17 92,1
,pair 17 5,1
,pair 17 60,1
,pair 17 40,1
,pair 17 8,1
,pair 17 100,1
,17 60,1
,17 40,1
,17 100,1
,15 17 18,2
,12 17 },15
,26 17 },4
,21 17 },3
,{ 17 8,4
,4 17 },1
,{ 17 48,1
,17 48,1
,8 17 },2
,10 17 },2
,{ 17 23,4
,16 17 20,2
,16 17 18,5
,11 17 6,1
,{ 17 15,1
,28 17 },1
,{ 17 12,1
,Count 17 at:8,1
,1 17 },1
,Count 17 to:,1
,17 at:8,1
,17 to:,1
,{ 17 16,3
,6 17 16,1
,{ 17 6,1
,} 17 ),11
,5 17 29,1
,16 17 25,1
,8 17 26,1
,17 26,1
,{ 17 },2
,hint 17 4,1
,{ 17 3,1
,{ 17 25,1
,11 17 18,1
,10 17 18,1
,0 17 32,1
,17 32,1
,98 17 37,1
,8 17 29,1
,17 37,1
,pair 17 88,1
,3 17 ),1
,17 88,1
18,16 18 },10
,STRING 18 count:8,1
,18 },169
,18 count:8,1
,{ 18 1,4
,18 1,4
,7 18 },4
,{ 18 14,1
,9 18 },3
,{ 18 12,3
,18 14,6
,18 12,7
,{ 18 21,4
,18 21,6
,17 18 },24
,3 18 },4
,. 18 20,24
,20 18 .,40
,18 20,42
,18 .,120
,. 18 17,11
,17 18 .,8
,18 17,17
,16 18 20,7
,P4 18 ),1
,20 18 16,3
,18 ),20
,18 16,8
,{ 18 .,31
,) 18 ),3
,. 18 },70
,0 18 (,1
,18 (,3
,P2 18 ),3
,5 18 .,1
,. 18 5,1
,18 5,3
,{ 18 6,1
,18 6,1
,. 18 End,2
,18 End,2
,STRING 18 count:7,1
,18 count:7,1
,STRING 18 count:5,3
,18 count:5,3
,5 18 },1
,22 18 14,5
,20 18 },7
,36 18 20,10
,20 18 36,11
,18 36,11
,STRING 18 ),3
,{ 18 16,1
,16 18 16,2
,14 18 22,3
,24 18 12,3
,12 18 24,3
,26 18 10,3
,10 18 26,3
,28 18 8,3
,8 18 28,4
,18 22,8
,18 24,13
,18 10,4
,18 26,4
,18 8,5
,18 28,4
,33 18 19,1
,pair 18 64,1
,76 18 ),1
,64 18 ),1
,pair 18 76,1
,pair 18 23,1
,pair 18 22,1
,18 19,38
,18 64,1
,18 76,1
,18 23,14
,pair 18 3,2
,18 3,3
,6 18 },3
,5 18 ),1
,pair 18 5,2
,26 18 21,1
,19 18 12,1
,8 18 .,1
,25 18 .,6
,to 18 ),1
,19 18 16,2
,. 18 15,1
,21 18 },1
,18 15,1
,} 18 },1
,{ 18 2,1
,18 2,1
,15 18 },3
,28 18 },1
,{ 18 8,1
,11 18 .,2
,{ 18 10,1
,17 18 ),2
,13 18 .,1
,19 18 },2
,{ 18 19,29
,17 18 23,1
,12 18 },6
,{ 18 24,10
,13 18 17,1
,Row 18 ),1
,& 18 (,1
,pair 18 398,1
,18 398,1
,22 18 .,5
,23 18 .,10
,24 18 .,10
,26 18 .,5
,20 18 13,1
,18 13,6
,) 18 (,1
,24 18 },1
,pair 18 104,1
,18 104,1
,pair 18 60,1
,pair 18 40,1
,pair 18 8,1
,pair 18 100,1
,pair 18 0,1
,18 60,1
,18 40,1
,18 100,1
,18 0,1
,0 18 ),1
,17 18 19,8
,13 18 },13
,{ 18 22,4
,14 18 },2
,{ 18 23,12
,10 18 },5
,{ 18 30,1
,11 18 },3
,18 30,1
,{ 18 17,5
,4 18 },2
,{ 18 25,1
,18 25,2
,8 18 },1
,{ 18 20,1
,{ 18 13,3
,{ 18 29,2
,{ 18 27,1
,23 18 },1
,18 29,2
,18 27,3
,0 18 },1
,Count 18 to:,1
,18 to:,1
,{ 18 4,1
,18 4,1
,38 18 21,1
,8 18 32,1
,21 18 32,1
,18 32,2
,} 18 ),1
,9 18 27,2
,hint 18 3,1
,9 18 26,1
,24 18 11,1
,18 11,1
,17 18 25,1
,25 18 13,1
,9 18 13,1
,159 18 38,1
,18 38,1
,pair 18 81,1
,4 18 ),1
,18 81,1
<defs>,{ <defs> },1
,<defs> },1
19,{ 19 10,1
,0 19 },2
,19 10,1
,19 },94
,24 19 },1
,16 19 },3
,5 19 ),2
,19 ),60
,{ 19 76,1
,3 19 16,1
,19 76,1
,19 16,2
,{ 19 25,12
,2 19 ),6
,19 25,16
,{ 19 0,15
,1 19 ),7
,19 0,16
,3 19 ),11
,rectangle 19 3,11
,19 3,11
,21 19 17,5
,17 19 21,1
,19 17,12
,19 21,22
,STRING 19 count:13,1
,19 count:13,1
,) 19 ),7
,{ 19 12,6
,19 12,8
,17 19 27,1
,19 27,5
,. 19 },1
,P2 19 ),6
,27 19 12,1
,STRING 19 count:1,1
,19 count:1,1
,. 19 39,1
,19 39,2
,13 19 },2
,23 19 },1
,23 19 15,5
,19 15,6
,{ 19 21,7
,21 19 38,10
,38 19 21,11
,19 38,11
,86 19 38,1
,shift 19 .,2
,22 19 16,1
,19 .,11
,STRING 19 ),2
,{ 19 17,2
,17 19 17,2
,15 19 23,3
,25 19 13,3
,13 19 25,4
,27 19 11,3
,11 19 27,3
,29 19 9,3
,9 19 29,4
,19 23,16
,19 13,4
,19 11,5
,19 9,4
,19 29,5
,18 19 20,7
,pair 19 65,1
,77 19 ),1
,65 19 ),1
,pair 19 77,1
,pair 19 23,1
,pair 19 22,1
,19 20,27
,19 65,1
,19 77,1
,19 22,2
,7 19 },3
,{ 19 13,1
,STRING 19 count:3,1
,19 count:3,1
,. 19 20,1
,20 19 .,1
,17 19 },7
,{ 19 18,3
,19 18,5
,{ 19 .,2
,. 19 23,2
,21 19 18,2
,4 19 .,1
,20 19 17,3
,square 19 ),15
,29 19 },1
,{ 19 9,1
,22 19 },1
,{ 19 11,2
,15 19 },6
,18 19 },31
,{ 19 20,17
,27 19 },1
,3 19 35,1
,19 35,1
,& 19 (,1
,19 (,2
,pair 19 397,1
,19 397,1
,) 19 (,1
,7 19 .,2
,27 19 .,2
,15 19 21,1
,17 19 20,2
,pair 19 93,1
,19 93,1
,pair 19 5,1
,pair 19 80,1
,pair 19 50,1
,pair 19 8,1
,pair 19 100,1
,pair 19 0,1
,19 5,1
,19 80,1
,19 50,1
,19 8,1
,19 100,1
,10 19 },11
,11 19 },6
,{ 19 23,10
,14 19 },11
,{ 19 24,9
,{ 19 26,3
,4 19 },3
,19 24,9
,19 26,4
,12 19 },1
,{ 19 14,1
,19 14,1
,5 19 .,1
,{ 19 15,1
,8 19 },1
,Count 19 at:9,1
,19 at:9,1
,{ 19 2,2
,19 2,3
,11 19 22,1
,11 19 21,1
,22 19 21,1
,} 19 ),2
,7 19 31,1
,{ 19 29,1
,19 31,1
,10 19 28,2
,19 28,2
,{ 19 },1
,hint 19 2,1
,hint 19 1,1
,19 1,1
,{ 19 4,1
,19 4,1
,10 19 27,1
,25 19 12,1
,11 19 26,1
,. 19 300,1
,19 300,1
,6 19 39,1
,10 19 32,1
,19 32,1
,pair 19 89,1
,pair 19 6,1
,19 89,1
,19 6,1
outer,P1 outer Home,14
,outer Home,24
,P2 outer Home,10
Sum,is Sum (,2
,Sum (,2
,is Sum STRING,1
,Sum STRING,1
,is Sum 38,1
,Sum 38,1
,is Sum <Challenge:sum>,1
,Sum <Challenge:sum>,1
,is Sum 3,1
,Sum 3,1
<p1_arg>,STRING <p1_arg> <p2_arg>,2
,<p1_arg> <p2_arg>,2
360,352 360 336,1
,360 336,1
,pair 360 566,1
,360 566,1
,face 360 ),1
,360 ),1
,355 360 365,1
,359 360 361,1
,{ 360 9,1
,360 365,1
,360 361,1
,360 9,1
1>,<2 1> <3>,1
,2 1> <7>,1
,2 1> <15>,1
,2 1> <31>,1
,2 1> <63>,1
,2 1> <127>,1
,2 1> <255>,1
,2 1> <511>,1
,1> <3>,1
,1> <7>,1
,1> <15>,1
,1> <31>,1
,1> <63>,1
,1> <127>,1
,1> <255>,1
,1> <511>,1
<rules>>,{ <rules>> },1
,<rules>> },1
361,pair 361 49,1
,361 49,1
,face 361 ),1
,361 ),1
,173 361 267,1
,360 361 188,1
,361 267,1
,361 188,1
,{ 361 },1
,361 },1
,402 361 341,1
,361 341,1
<pile>,{ <pile> },1
,<pile> },1
Giraffe,to Giraffe .,2
,Giraffe .,2
362,pair 362 50,1
,362 50,1
,face 362 ),1
,362 ),1
,172 362 264,1
,175 362 363,1
,362 264,1
,362 363,1
363,328 363 379,1
,363 379,1
,pair 363 567,1
,363 567,1
,face 363 ),1
,363 ),1
,174 363 268,1
,362 363 364,1
,{ 363 2,1
,363 268,1
,363 364,1
,363 2,1
,{ 363 },1
,363 },1
,364 363 385,1
,363 385,1
364,pair 364 568,1
,364 568,1
,. 364 },1
,175 364 270,1
,363 364 264,1
,{ 364 8,1
,364 },2
,364 270,1
,364 264,1
,364 8,1
,{ 364 },1
,366 364 363,1
,364 363,1
<Dual>,STRING <Dual> args:,1
,<Dual> args:,1
365,pair 365 49,1
,365 49,1
,414 365 316,1
,365 316,1
,188 365 267,2
,360 365 366,1
,365 267,2
,365 366,2
,386 365 366,1
component:#3,by:All component:#3 ),1
,component:#3 ),1
366,349 366 382,1
,366 382,1
,pair 366 50,1
,366 50,1
,189 366 266,2
,365 366 367,1
,366 266,2
,366 367,1
,{ 366 },1
,366 },1
,365 366 364,1
,366 364,1
367,199 367 279,2
,366 367 368,1
,{ 367 1,1
,367 279,2
,367 368,1
,367 1,1
368,{ 368 431,1
,377 368 431,1
,368 431,2
,209 368 289,2
,367 368 },1
,{ 368 4,1
,368 289,2
,368 },1
,368 4,1
,389 368 348,1
,368 348,1
369,345 369 ),1
,369 ),1
unique,. unique elements,1
,unique elements,1
post-promotion,possible post-promotion movement,1
,post-promotion movement,1
<Board:3dSites>,Sites <Board:3dSites> if:,1
,<Board:3dSites> if:,1
20,{ 20 14,2
,{ 20 4,1
,20 14,5
,20 4,2
,{ 20 23,9
,20 23,14
,{ 20 76,1
,20 76,1
,18 20 .,22
,. 20 18,40
,{ 20 .,16
,STRING 20 count:5,4
,20 .,42
,20 18,62
,20 count:5,4
,21 20 0,1
,20 0,13
,18 20 22,15
,22 20 18,12
,20 22,20
,) 20 ),5
,20 ),29
,. 20 },10
,20 },97
,) 20 15,1
,20 15,4
,STRING 20 count:4,4
,20 count:4,4
,) 20 (,3
,20 (,6
,-4 20 },1
,15 20 },17
,0 20 },2
,= 20 (,2
,pair 20 20,1
,20 20 ),1
,20 20,1
,STRING 20 count:8,1
,20 count:8,1
,Empty 20 ),1
,18 20 },3
,2 20 ),1
,24 20 16,5
,20 16,7
,0 20 ),1
,{ 20 18,7
,STRING 20 ),4
,16 20 24,3
,26 20 14,3
,14 20 26,4
,28 20 12,3
,12 20 28,3
,30 20 10,4
,10 20 30,3
,20 24,9
,20 26,7
,20 12,4
,20 28,5
,20 10,5
,20 30,6
,19 20 21,5
,pair 20 66,1
,78 20 ),1
,66 20 ),1
,pair 20 78,1
,pair 20 23,1
,pair 20 22,1
,20 21,32
,20 66,1
,20 78,1
,8 20 },1
,{ 20 27,1
,14 20 },3
,P2 20 ),1
,P3 20 ),2
,20 27,3
,7 20 ),1
,pair 20 7,1
,20 7,3
,19 20 .,1
,. 20 19,1
,20 19,4
,{ 20 },3
,. 20 23,2
,. 20 7,1
,. 20 32,1
,20 32,1
,2 20 store:None,1
,20 store:None,1
,6 20 19,1
,23 20 },1
,{ 20 21,22
,17 20 },5
,. 20 0,1
,{ 20 10,1
,{ 20 22,3
,12 20 },9
,10 20 },3
,{ 20 30,3
,{ 20 16,2
,{ 20 9,2
,20 9,3
,16 20 },5
,19 20 },15
,16 20 .,1
,{ 20 28,1
,29 20 12,1
,& 20 (,1
,pair 20 398,1
,20 398,1
,31 20 9,1
,{ 20 0,10
,25 20 18,1
,10 20 ),1
,32 20 .,2
,1 20 ),1
,18 20 19,2
,19 20 18,2
,26 20 },1
,4 20 ),1
,rectangle 20 4,1
,pair 20 105,1
,20 105,1
,pair 20 5,2
,pair 20 80,1
,pair 20 50,1
,pair 20 8,1
,pair 20 100,1
,pair 20 0,1
,20 5,2
,20 80,1
,20 50,1
,20 8,1
,20 100,1
,19 20 23,2
,{ 20 25,6
,20 25,6
,13 20 },6
,{ 20 24,5
,21 20 },5
,6 20 },3
,{ 20 31,4
,20 31,4
,11 20 },2
,17 20 21,2
,10 20 26,1
,{ 20 38,1
,20 38,1
,13 20 24,1
,{ 20 15,3
,{ 20 26,2
,25 20 },2
,{ 20 7,1
,10 20 22,1
,} 20 ),4
,19 20 29,1
,20 29,2
,11 20 29,1
,hint 20 3,1
,20 3,2
,{ 20 1,1
,20 1,1
,11 20 28,1
,26 20 13,1
,14 20 21,1
,{ 20 3,1
,20 13,1
,13 20 21,1
,12 20 27,1
,16 20 ),1
,90 20 >,1
,20 >,1
,square 20 ),1
,0 20 40,1
,20 40,1
,19 20 11,1
,20 11,1
,pair 20 82,1
,6 20 ),1
,20 82,1
,39 20 27,1
,28 20 21,1
Key,) Key concept:,1
,Key concept:,1
<extraBoardSize>,{ <extraBoardSize> <tilePlacementRegion>,1
,<extraBoardSize> <tilePlacementRegion>,1
21,18 21 },5
,21 },79
,P4 21 ),1
,21 ),21
,P2 21 ),1
,{ 21 20,6
,21 20,6
,23 21 19,15
,19 21 23,13
,21 19,17
,21 23,17
,) 21 ),3
,STRING 21 count:4,1
,STRING 21 count:3,1
,21 count:4,1
,21 count:3,1
,16 21 23,1
,pair 21 2,1
,21 2,1
,Empty 21 ),6
,) 21 (,2
,21 (,7
,17 21 },2
,15 21 },10
,25 21 17,5
,21 17,8
,6 21 27,1
,21 27,6
,{ 21 22,19
,21 22,26
,43 21 0,7
,19 21 },7
,21 0,18
,86 21 38,1
,21 38,1
,. 21 (,4
,. 21 0,1
,STRING 21 ),2
,17 21 25,3
,27 21 15,3
,15 21 27,3
,29 21 13,3
,13 21 29,4
,31 21 11,3
,11 21 31,4
,21 25,5
,21 15,4
,21 13,4
,21 29,6
,21 11,5
,21 31,5
,20 21 22,6
,pair 21 67,1
,79 21 ),1
,67 21 ),1
,pair 21 79,1
,pair 21 23,1
,pair 21 22,1
,21 67,1
,21 79,1
,8 21 ),1
,pair 21 8,2
,21 8,3
,{ 21 .,1
,21 .,7
,. 21 11,2
,22 21 19,2
,. 21 18,1
,24 21 },1
,21 18,2
,20 21 25,1
,11 21 },3
,14 21 .,5
,{ 21 13,1
,15 21 ),1
,. 21 },1
,20 21 },21
,{ 21 29,1
,11 21 23,1
,28 21 15,1
,10 21 31,1
,& 21 (,1
,119 21 ),1
,121 21 ),1
,11 21 63,1
,21 63,1
,{ 21 0,10
,19 21 .,1
,pair 21 94,1
,21 94,1
,pair 21 5,1
,pair 21 50,2
,pair 21 100,1
,pair 21 4,1
,pair 21 30,1
,21 5,1
,21 50,2
,21 100,1
,21 4,3
,21 30,3
,13 21 },4
,{ 21 24,1
,21 24,3
,16 21 },11
,{ 21 17,3
,12 21 },4
,{ 21 32,2
,21 32,2
,7 21 },1
,20 21 24,2
,13 21 27,1
,23 21 },1
,{ 21 27,1
,{ 21 16,1
,22 21 },2
,{ 21 26,5
,{ 21 25,1
,27 21 },1
,21 16,1
,21 26,5
,hint 21 4,2
,18 21 23,1
,19 21 18,1
,{ 21 3,2
,21 3,2
,} 21 ),1
,9 21 },1
,{ 21 30,1
,12 21 30,1
,{ 21 8,1
,{ 21 },2
,12 21 29,1
,27 21 14,1
,21 14,1
,20 21 28,1
,21 28,1
,1 21 },1
,30 21 },1
,1 21 41,1
,21 41,1
,pair 21 90,1
,7 21 ),1
,21 90,1
,28 21 36,1
,20 21 46,1
,21 36,1
,21 46,1
22,{ 22 25,2
,22 25,3
,. 22 8,1
,22 8,1
,20 22 23,2
,20 22 },4
,{ 22 20,1
,22 23,29
,22 },69
,22 20,12
,{ 22 28,5
,22 28,9
,STRING 22 count:3,1
,22 count:3,1
,pair 22 3,1
,22 3,1
,Empty 22 ),5
,) 22 (,2
,22 ),27
,22 (,3
,P3 22 ),1
,P1 22 ),1
,26 22 18,5
,22 18,10
,21 22 },20
,0 22 },7
,20 22 24,12
,24 22 20,11
,22 24,18
,2 22 ),1
,STRING 22 count:4,1
,22 count:4,1
,12 22 },1
,{ 22 26,8
,{ 22 23,20
,22 26,12
,rotate 22 .,1
,shift 22 .,2
,{ 22 19,2
,22 .,4
,22 19,3
,18 22 26,3
,28 22 16,3
,16 22 28,4
,30 22 14,3
,14 22 30,3
,32 22 12,3
,12 22 32,4
,22 16,6
,22 14,4
,22 30,4
,22 12,4
,22 32,4
,21 22 23,5
,pair 22 48,1
,80 22 ),1
,48 22 ),1
,pair 22 80,1
,16 22 ),1
,17 22 ),1
,18 22 ),1
,19 22 ),1
,20 22 ),1
,21 22 ),1
,22 48,1
,22 80,1
,P2 22 ),1
,14 22 },3
,9 22 ),1
,pair 22 9,1
,22 9,1
,9 22 25,1
,11 22 21,2
,22 21,4
,7 22 23,1
,{ 22 12,1
,{ 22 14,1
,11 22 24,1
,16 22 .,1
,17 22 },10
,. 22 26,1
,38 22 6,1
,22 6,1
,& 22 (,1
,120 22 ),1
,122 22 ),1
,{ 22 18,5
,{ 22 0,5
,22 0,5
,. 22 },1
,4 22 ),1
,pair 22 106,1
,22 106,1
,pair 22 5,1
,pair 22 50,2
,pair 22 100,1
,pair 22 4,1
,pair 22 30,1
,22 5,2
,22 50,2
,22 100,1
,22 4,2
,18 22 },4
,{ 22 24,4
,{ 22 15,3
,22 15,4
,32 22 },3
,{ 22 33,1
,22 33,1
,15 22 },2
,7 22 },2
,{ 22 16,3
,{ 22 27,4
,3 22 },1
,{ 22 21,2
,11 22 },1
,28 22 },1
,23 22 },4
,{ 22 11,1
,22 27,4
,22 11,1
,hint 22 5,1
,19 22 24,1
,20 22 19,1
,} 22 ),5
,10 22 34,1
,22 34,1
,13 22 },3
,13 22 31,1
,22 31,1
,{ 22 },2
,hint 22 4,1
,28 22 15,1
,14 22 29,1
,22 29,1
,2 22 42,1
,22 42,1
,<21 22 23,1
,pair 22 83,1
,pair 22 7,1
,8 22 ),1
,22 83,1
,22 7,1
23,20 23 },9
,23 },251
,11 23 .,11
,. 23 11,8
,23 .,174
,23 11,8
,22 23 21,2
,26 23 21,1
,{ 23 21,2
,21 23 },1
,23 21,16
,. 23 },162
,STRING 23 count:2,4
,23 count:2,4
,9 23 },3
,STRING 23 count:5,1
,23 count:5,1
,. 23 -0,1
,23 -0,1
,. 23 End,3
,{ 23 },3
,23 End,3
,STRING 23 ),5
,23 ),33
,STRING 23 count:3,1
,23 count:3,1
,7 23 .,1
,P1 23 ),1
,21 23 30,1
,23 30,3
,25 23 .,3
,9 23 .,1
,Empty 23 ),4
,) 23 (,1
,23 (,2
,{ 23 .,58
,{ 23 19,1
,{ 23 17,1
,23 19,6
,23 17,5
,27 23 19,5
,25 23 21,11
,21 23 25,12
,23 25,16
,22 23 },21
,shift 23 .,1
,19 23 27,3
,29 23 17,3
,17 23 29,3
,31 23 15,3
,15 23 31,3
,33 23 13,3
,13 23 33,3
,23 27,12
,23 29,6
,23 15,4
,23 31,6
,23 13,4
,23 33,3
,22 23 17,1
,pair 23 49,1
,81 23 ),1
,49 23 ),1
,pair 23 81,1
,16 23 ),1
,17 23 ),1
,18 23 ),1
,19 23 ),1
,20 23 ),1
,21 23 ),1
,9 23 ),2
,23 49,1
,23 81,1
,65 23 38,1
,P2 23 ),3
,23 38,1
,{ 23 30,1
,10 23 ),1
,pair 23 10,2
,23 10,2
,{ 23 24,19
,23 24,28
,16 23 25,1
,8 23 },2
,15 23 },2
,11 23 35,1
,23 35,1
,20 23 .,2
,19 23 .,2
,5 23 .,1
,22 23 20,1
,25 23 },1
,23 20,1
,13 23 },2
,{ 23 15,1
,18 23 24,1
,21 23 13,1
,) 23 ),1
,8 23 ),4
,rectangle 23 8,4
,23 8,4
,& 23 (,1
,pair 23 111,1
,23 111,1
,{ 23 18,11
,29 23 .,5
,30 23 .,10
,31 23 .,15
,32 23 .,15
,33 23 .,15
,34 23 .,10
,35 23 .,10
,36 23 .,5
,37 23 .,5
,23 18,11
,14 23 },5
,pair 23 95,1
,23 95,1
,pair 23 4,2
,pair 23 50,3
,pair 23 30,1
,23 4,3
,23 50,3
,20 23 24,2
,{ 23 27,7
,24 23 },5
,12 23 .,4
,19 23 },10
,{ 23 26,5
,18 23 },12
,23 26,5
,{ 23 31,3
,{ 23 25,3
,2 23 },2
,16 23 },2
,17 23 },4
,22 23 24,4
,15 23 24,1
,{ 23 29,3
,12 23 },2
,{ 23 28,3
,29 23 },1
,28 23 },1
,{ 23 22,4
,23 28,3
,23 22,4
,hint 23 6,1
,23 6,1
,21 23 27,1
,25 23 27,1
,} 23 ),4
,14 23 32,1
,{ 23 7,1
,23 32,1
,23 7,1
,hint 23 3,1
,23 3,1
,29 23 16,1
,23 16,1
,16 23 24,1
,{ 23 5,1
,23 5,1
,30 23 },1
,3 23 4,1
,pair 23 91,1
,23 91,1
24,{ 24 19,1
,24 19,1
,{ 24 27,2
,24 27,5
,14 24 43,1
,24 43,1
,{ 24 0,21
,24 0,22
,{ 24 },3
,24 },86
,STRING 24 count:5,1
,24 count:5,1
,STRING 24 count:3,1
,24 count:3,1
,. 24 },4
,{ 24 .,5
,24 .,9
,Empty 24 ),3
,) 24 (,1
,24 ),29
,24 (,3
,{ 24 11,3
,24 11,4
,. 24 49,1
,24 49,1
,11 24 },2
,28 24 20,5
,24 20,5
,STRING 24 ),5
,48 24 },1
,22 24 26,12
,26 24 22,11
,24 26,14
,24 22,11
,{ 24 25,17
,24 25,23
,37 24 27,1
,20 24 28,3
,30 24 18,3
,18 24 30,3
,32 24 16,3
,16 24 32,3
,34 24 14,3
,14 24 34,3
,24 28,6
,24 18,15
,24 30,8
,24 16,5
,24 32,7
,24 14,5
,24 34,3
,34 24 26,1
,pair 24 50,4
,55 24 ),1
,50 24 ),1
,pair 24 55,1
,24 50,4
,24 55,1
,11 24 ),1
,pair 24 11,1
,23 24 },18
,12 24 36,2
,2 24 ),1
,24 36,2
,P2 24 ),2
,. 24 16,2
,36 24 12,1
,24 12,1
,15 24 5,1
,P1 24 ),1
,11 24 .,1
,33 24 .,1
,24 5,1
,. 24 21,1
,27 24 },4
,24 21,1
,16 24 },7
,7 24 },1
,12 24 },1
,{ 24 14,2
,17 24 .,2
,> 24 (,1
,) 24 ),2
,32 24 },1
,23 24 29,1
,24 29,3
,{ 24 32,3
,18 24 },10
,{ 24 30,4
,34 24 },1
,12 24 37,1
,24 37,1
,& 24 (,1
,pair 24 112,1
,24 112,1
,{ 24 18,12
,30 24 },1
,pair 24 107,1
,24 107,1
,pair 24 4,2
,pair 24 30,1
,24 4,3
,23 24 25,5
,22 24 },5
,{ 24 23,5
,14 24 },6
,24 23,5
,20 24 },5
,21 24 },1
,19 24 },9
,{ 24 33,3
,24 33,5
,13 24 },1
,15 24 },1
,10 24 },2
,about 24 moves,1
,24 moves,1
,21 24 27,2
,23 24 33,1
,20 24 31,1
,24 31,3
,{ 24 28,3
,{ 24 26,1
,{ 24 29,2
,25 24 },1
,29 24 },1
,{ 24 8,1
,24 8,2
,22 24 25,1
,{ 24 6,1
,24 6,1
,} 24 ),11
,23 24 32,1
,15 24 33,1
,hint 24 1,1
,24 1,1
,hint 24 3,1
,24 3,1
,{ 24 31,1
,{ 24 9,2
,24 9,3
,23 24 31,1
,38 24 8,1
,{ 24 4,1
,44 24 66,1
,24 66,1
,23 24 0,1
,pair 24 84,1
,pair 24 9,1
,10 24 ),1
,24 84,1
25,26 25 },6
,25 },80
,{ 25 31,4
,{ 25 29,3
,25 31,8
,25 29,6
,22 25 },3
,. 25 4,1
,25 4,2
,. 25 End,9
,19 25 .,8
,. 25 },25
,STRING 25 count:2,5
,25 End,9
,25 .,41
,25 count:2,5
,12 25 .,12
,10 25 },3
,5 25 ),7
,25 ),37
,{ 25 0,18
,25 0,18
,27 25 .,3
,{ 25 12,4
,25 12,10
,{ 25 .,14
,2 25 ),4
,STRING 25 count:15,11
,25 count:15,11
,. 25 -0,3
,. 25 5,3
,25 -0,3
,25 5,3
,STRING 25 count:5,1
,25 count:5,1
,. 25 12,4
,. 25 (,1
,25 (,6
,P2 25 ),3
,26 25 .,1
,STRING 25 count:3,1
,25 count:3,1
,{ 25 23,3
,25 23,16
,P1 25 ),2
,to 25 (,2
,Empty 25 ),2
,) 25 (,1
,{ 25 11,1
,25 11,3
,6 25 .,3
,STRING 25 count:<Pieces:num>,1
,25 count:<Pieces:num>,1
,29 25 21,5
,25 21,5
,12 25 11,1
,) 25 ),6
,27 25 23,11
,23 25 27,11
,25 27,14
,15 25 },4
,24 25 },14
,10 25 30,2
,25 30,7
,7 25 30,1
,0 25 ),1
,21 25 29,3
,31 25 19,3
,19 25 31,4
,33 25 17,3
,17 25 33,3
,35 25 15,3
,15 25 35,3
,25 19,4
,25 17,3
,25 33,3
,25 15,3
,25 35,4
,35 25 27,1
,pair 25 51,1
,71 25 ),1
,51 25 ),1
,pair 25 71,1
,27 25 ),1
,25 51,1
,25 71,1
,STRING 25 ),1
,pair 25 2,1
,25 2,1
,12 25 ),1
,pair 25 12,2
,23 25 30,1
,8 25 18,2
,25 18,7
,26 25 23,1
,21 25 26,1
,25 26,23
,13 25 11,1
,13 25 75,1
,25 75,1
,square 25 ),1
,& 25 (,1
,pair 25 27,1
,347 25 ),1
,Row 25 ),1
,Row 25 (,1
,{ 25 18,5
,12 25 20,1
,25 20,3
,1 25 ),1
,pair 25 4,1
,pair 25 40,2
,pair 25 100,1
,pair 25 6,1
,pair 25 50,1
,25 40,2
,25 100,1
,25 6,2
,25 50,1
,24 25 26,8
,{ 25 26,11
,{ 25 3,4
,5 25 },3
,20 25 },6
,25 3,4
,29 25 },1
,9 25 },3
,23 25 },3
,18 25 },1
,12 25 39,1
,25 39,1
,{ 25 27,1
,16 25 },1
,19 25 },4
,{ 25 30,3
,{ 25 20,2
,{ 25 24,1
,21 25 },1
,30 25 },1
,31 25 },1
,25 24,1
,23 25 26,1
,24 25 23,1
,} 25 ),2
,{ 25 37,1
,{ 25 35,1
,25 37,1
,17 25 26,1
,16 25 34,1
,25 34,1
,{ 25 6,1
,35 25 26,1
,17 25 32,1
,30 25 19,1
,25 32,2
,18 25 32,1
,pair 25 92,1
,11 25 ),1
,25 92,1
26,31 26 25,1
,26 25,8
,{ 26 29,5
,26 29,5
,{ 26 12,2
,26 12,2
,{ 26 23,1
,26 23,1
,face 26 ),19
,26 ),33
,. 26 },6
,26 },67
,{ 26 25,6
,Square 26 (,2
,Empty 26 ),1
,) 26 (,1
,26 (,7
,= 26 (,3
,STRING 26 ),5
,30 26 22,5
,26 22,5
,P1 26 ),2
,24 26 28,13
,28 26 24,11
,26 28,17
,26 24,11
,22 26 },8
,{ 26 27,5
,{ 26 36,1
,26 27,12
,26 36,5
,STRING 26 count:4,1
,26 count:4,1
,4 26 ),1
,35 26 17,1
,26 17,5
,22 26 30,3
,32 26 20,3
,20 26 32,3
,34 26 18,3
,18 26 34,3
,36 26 16,3
,16 26 36,4
,26 30,4
,26 20,5
,26 32,8
,26 18,9
,26 34,4
,26 16,4
,pair 26 52,1
,56 26 ),1
,52 26 ),1
,pair 26 56,1
,26 52,1
,26 56,1
,{ 26 33,6
,26 33,7
,P2 26 ),1
,29 26 18,1
,{ 26 .,4
,26 .,5
,8 26 25,1
,28 26 },1
,25 26 27,5
,{ 26 16,1
,22 26 .,1
,{ 26 35,1
,26 35,2
,pair 26 28,1
,348 26 ),1
,Row 26 (,1
,{ 26 18,5
,{ 26 0,16
,26 0,16
,{ 26 },3
,29 26 20,1
,pair 26 4,1
,pair 26 40,2
,pair 26 100,1
,pair 26 6,1
,pair 26 50,1
,26 4,1
,26 40,2
,26 100,1
,26 6,1
,26 50,1
,25 26 },16
,7 26 },3
,{ 26 7,3
,{ 26 9,3
,{ 26 17,3
,26 7,3
,26 9,3
,23 26 },5
,{ 26 32,5
,19 26 },3
,15 26 },2
,16 26 },2
,32 26 },1
,20 26 34,1
,12 26 },1
,{ 26 28,1
,24 26 },1
,27 26 },6
,20 26 },3
,{ 26 31,1
,21 26 },5
,31 26 },1
,26 31,1
,{ 26 8,3
,26 8,3
,14 26 38,1
,26 38,1
,17 26 35,1
,25 26 17,1
,18 26 33,1
,31 26 20,1
,25 26 30,1
,{ 26 1,1
,26 1,1
,19 26 27,1
,16 26 28,1
,{ 26 45,1
,26 45,1
,42 26 27,1
,pair 26 85,1
,pair 26 11,1
,12 26 ),1
,26 85,1
,26 11,1
,<17 26 28,1
<Orthogonal>,STRING <Orthogonal> STRING,3
,<Orthogonal> STRING,27
,> <Orthogonal> <Hidden>,24
,<Hidden> <Orthogonal> STRING,21
,<Orthogonal> <Hidden>,24
,<ThinDashed> <Orthogonal> STRING,2
,<ThinDotted> <Orthogonal> STRING,1
27,{ 27 29,2
,{ 27 32,3
,27 29,15
,27 32,4
,24 27 },2
,27 },47
,{ 27 25,3
,27 25,15
,{ 27 11,1
,27 11,1
,face 27 ),13
,27 ),31
,19 27 41,1
,27 41,2
,. 27 },6
,{ 27 19,2
,27 19,7
,{ 27 33,1
,27 33,4
,Empty 27 ),1
,) 27 (,1
,27 (,6
,= 27 (,3
,STRING 27 ),4
,31 27 23,5
,27 23,5
,21 27 3,1
,27 3,1
,P2 27 ),4
,29 27 25,11
,25 27 29,12
,26 27 },5
,STRING 27 count:4,1
,27 count:4,1
,2 27 ),1
,24 27 30,1
,27 30,2
,23 27 31,3
,33 27 21,3
,21 27 33,3
,35 27 19,3
,19 27 35,3
,37 27 17,3
,17 27 37,3
,27 31,7
,27 21,5
,27 35,8
,27 17,3
,27 37,6
,pair 27 53,1
,72 27 ),1
,53 27 ),1
,pair 27 72,1
,pair 27 56,1
,pair 27 25,1
,27 53,2
,27 72,1
,27 56,1
,15 27 },1
,20 27 },1
,P4 27 ),1
,13 27 41,1
,{ 27 .,5
,27 .,6
,. 27 31,2
,6 27 .,1
,. 27 24,1
,30 27 },6
,27 24,4
,26 27 29,1
,17 27 },1
,<= 27 (,1
,{ 27 36,1
,27 36,2
,33 27 },1
,11 27 43,1
,27 43,1
,25 27 ),1
,pair 27 37,1
,117 27 ),1
,Row 27 (,1
,{ 27 0,15
,27 0,15
,. 27 19,2
,. 27 32,1
,STRING 27 count:7,1
,27 count:7,1
,pair 27 5,1
,pair 27 40,2
,pair 27 70,1
,pair 27 6,1
,pair 27 50,1
,27 5,1
,27 40,2
,27 70,1
,27 6,1
,27 50,1
,26 27 31,2
,23 27 },8
,{ 27 34,5
,{ 27 35,5
,{ 27 28,18
,31 27 },4
,27 34,7
,27 28,22
,{ 27 24,3
,1 27 },1
,24 27 28,2
,21 27 37,1
,26 27 28,2
,{ 27 37,1
,25 27 },1
,{ 27 26,6
,21 27 },1
,22 27 },4
,18 27 },2
,{ 27 21,1
,27 26,6
,hint 27 7,1
,27 7,1
,23 27 30,1
,} 27 ),2
,18 27 36,1
,{ 27 },3
,19 27 34,1
,32 27 21,1
,26 27 39,1
,20 27 34,1
,27 39,1
,43 27 55,1
,43 27 53,1
,27 55,1
,26 27 67,1
,27 67,1
,pair 27 93,1
,pair 27 14,1
,13 27 ),1
,27 93,1
,27 14,1
,20 27 28>,1
,27 28>,1
28,{ 28 31,1
,28 31,2
,8 28 48,12
,28 48,12
,face 28 ),11
,28 ),30
,22 28 },6
,28 },118
,. 28 },77
,8 28 },1
,Empty 28 ),1
,) 28 29,1
,28 29,24
,{ 28 24,2
,STRING 28 ),4
,28 24,5
,26 28 30,12
,30 28 26,11
,28 30,12
,28 26,12
,{ 28 29,17
,32 28 24,3
,24 28 32,3
,34 28 22,3
,22 28 3,3
,36 28 20,3
,20 28 36,3
,38 28 18,3
,18 28 38,3
,28 32,4
,28 22,5
,28 3,4
,28 20,4
,28 36,4
,28 18,4
,28 38,4
,pair 28 46,1
,57 28 ),2
,46 28 ),1
,pair 28 57,1
,54 28 ),1
,55 28 ),1
,56 28 ),1
,58 28 ),1
,59 28 ),1
,28 46,1
,28 57,1
,16 28 },2
,{ 28 34,4
,P3 28 ),1
,P4 28 ),1
,28 34,4
,42 28 14,1
,28 14,1
,{ 28 .,26
,28 .,67
,. 28 15,2
,28 15,2
,31 28 },2
,29 28 26,1
,{ 28 18,1
,26 28 41,1
,{ 28 35,1
,28 41,1
,28 35,2
,. 28 32,1
,20 28 },2
,{ 28 36,1
,36 28 21,1
,28 21,2
,26 28 ),1
,pair 28 38,1
,118 28 ),1
,Row 28 (,1
,28 (,1
,{ 28 0,15
,37 28 .,5
,38 28 .,5
,39 28 .,5
,40 28 .,5
,41 28 .,5
,42 28 .,5
,43 28 .,5
,44 28 .,5
,28 0,17
,. 28 0,2
,7 28 .,1
,STRING 28 count:7,1
,28 count:7,1
,pair 28 5,1
,pair 28 40,2
,pair 28 70,1
,pair 28 6,1
,pair 28 50,1
,43 28 13,1
,28 5,3
,28 40,3
,28 70,1
,28 6,1
,28 50,1
,28 13,4
,27 28 },16
,27 28 29,6
,26 28 },2
,24 28 },3
,29 28 },1
,23 28 },3
,{ 28 17,1
,{ 28 23,1
,{ 28 22,1
,28 17,1
,28 23,1
,{ 28 1,1
,28 1,1
,hint 28 5,1
,30 28 },1
,30 28 31,1
,{ 28 2,1
,28 2,1
,{ 28 40,1
,} 28 ),1
,18 28 },1
,{ 28 37,1
,28 37,2
,19 28 37,1
,{ 28 7,1
,28 7,1
,{ 28 5,1
,33 28 22,1
,{ 28 8,1
,28 8,1
,21 28 35,1
,{ 28 3,1
,19 28 13,1
,35 28 13,1
,41 28 },1
,pair 28 86,1
,pair 28 13,1
,14 28 ),1
,28 86,1
,48 28 21,1
,26 28 20,1
CannonOutline,the CannonOutline (,1
,CannonOutline (,1
29,25 29 },2
,27 29 },2
,29 },49
,26 29 },5
,) 29 ),6
,29 ),23
,. 29 },3
,{ 29 9,4
,29 9,4
,28 29 ),1
,. 29 59,1
,29 59,2
,{ 29 25,3
,STRING 29 ),5
,29 25,6
,31 29 27,11
,27 29 31,12
,29 27,11
,29 31,12
,28 29 },17
,{ 29 39,1
,29 39,5
,33 29 25,3
,25 29 33,3
,35 29 23,3
,23 29 35,3
,37 29 21,3
,21 29 37,3
,39 29 19,3
,19 29 39,3
,29 33,4
,29 23,10
,29 35,5
,29 21,3
,29 37,4
,29 19,4
,. 29 (,3
,pair 29 47,1
,73 29 ),1
,47 29 ),1
,pair 29 73,1
,30 29 ),1
,31 29 ),1
,32 29 ),1
,33 29 ),1
,34 29 ),1
,35 29 ),1
,68 29 ),1
,29 (,5
,29 47,1
,29 73,1
,17 29 },1
,. 29 39,1
,39 29 .,1
,29 .,2
,35 29 },1
,P1 29 ),1
,P2 29 ),1
,10 29 26,1
,29 26,2
,19 29 },2
,Count 29 to:,1
,= 29 (,1
,29 to:,1
,10 29 },1
,9 29 28,1
,31 29 },3
,{ 29 .,1
,29 28,2
,27 29 30,1
,29 30,18
,{ 29 19,1
,. 29 36,2
,29 36,3
,24 29 30,1
,21 29 },2
,{ 29 37,1
,39 29 20,1
,29 20,1
,pair 29 59,1
,Row 29 (,1
,{ 29 23,6
,{ 29 0,16
,29 0,16
,25 29 26,1
,pair 29 7,2
,pair 29 100,2
,pair 29 60,1
,pair 29 40,1
,15 29 116,1
,29 7,2
,29 100,2
,29 60,1
,29 40,2
,29 116,1
,{ 29 30,12
,32 29 },1
,28 29 35,2
,28 29 30,3
,{ 29 28,1
,23 29 },3
,24 29 },2
,18 29 },2
,{ 29 24,1
,29 24,1
,{ 29 8,1
,29 8,1
,17 29 41,1
,29 41,1
,20 29 },1
,20 29 38,1
,{ 29 5,1
,29 38,1
,29 5,1
,{ 29 },1
,hint 29 3,1
,29 3,2
,{ 29 3,1
,34 29 23,1
,28 29 33,1
,22 29 30,1
,21 29 36,1
,39 29 40,1
,17 29 42,1
,29 42,1
<FogOfWar:EachMove>,) <FogOfWar:EachMove> },1
,{ <FogOfWar:EachMove> },2
,<FogOfWar:EachMove> },3
2:,State 2: Liberties,1
,2: Liberties,1
<Ruleset:piece>,STRING <Ruleset:piece> ),1
,<Ruleset:piece> ),1
370,379 370 259,1
,370 259,1
,346 370 ),1
,370 ),1
,{ 370 },1
,370 },1
2>,1 2> STRING,1
,2> STRING,1
<Players:home>,) <Players:home> },2
,<Players:home> },2
371,pair 371 569,1
,371 569,1
,{ 371 },1
,371 },1
,372 371 330,1
,371 330,1
<NumOfPlayers>,STRING <NumOfPlayers> args:,2
,<NumOfPlayers> args:,2
372,pair 372 570,1
,372 570,1
,392 372 371,1
,372 371,1
373,382 373 331,1
,373 331,1
,pair 373 571,1
,373 571,1
remember,( remember Value,153
,remember Value,153
,( remember State,4
,remember State,4
,optional remember clause,2
,remember clause,2
,( remember ),1
,remember ),1
374,pair 374 572,1
,374 572,1
,{ 374 },1
,374 },1
,313 374 292,1
,374 292,1
into,direction into the,1
,into the,2
,swapped into our,2
,into our,2
,them into something,1
,move into omnicheck,1
,into something,1
,into omnicheck,1
,passed into the,1
375,16 375 ),1
,375 ),1
,pair 375 335,1
,375 335,1
376,240 376 283,1
,376 283,1
,pair 376 336,1
,376 336,1
,377 376 327,1
,376 327,1
,356 376 295,1
,376 295,1
1st,to 1st player,1
,1st player,1
min,( min (,16
,min (,16
,( min 12,1
,min 12,1
,( min 2,4
,min 2,4
,( min 3,1
,min 3,1
,( min 1,2
,min 1,2
377,386 377 368,1
,377 368,1
,85 377 ),1
,pair 377 379,1
,377 ),1
,377 379,1
,426 377 376,1
,377 376,1
,{ 377 },1
,377 },1
value:80,state:1 value:80 ),1
,state:4 value:80 ),1
,value:80 ),2
378,86 378 ),1
,pair 378 380,1
,378 ),1
,378 380,1
379,363 379 370,1
,379 370,1
,199 379 ),1
,255 379 ),1
,377 379 ),1
,pair 379 573,1
,379 ),3
,379 573,1
,{ 379 },1
,379 },1
,400 379 398,1
,379 398,1
outnumber,( outnumber the,1
,outnumber the,1
distance:<Equi:method>,) distance:<Equi:method> ),1
,distance:<Equi:method> ),1
37>,. 37> <34,1
,<34 37> STRING,1
,37> <34,1
,37> STRING,1
30,{ 30 33,1
,30 33,1
,rotate 30 (,13
,30 (,15
,{ 30 9,4
,30 9,5
,23 30 36,1
,30 36,7
,Square 30 (,1
,. 30 },6
,30 },40
,17 30 },1
,{ 30 26,2
,STRING 30 ),5
,30 26,5
,30 ),22
,{ 30 35,4
,30 35,5
,28 30 32,12
,32 30 28,12
,30 32,13
,30 28,13
,25 30 },6
,6 30 ),2
,25 30 14,1
,30 14,1
,27 30 70,1
,30 70,1
,34 30 26,3
,26 30 34,3
,36 30 24,3
,24 30 36,3
,38 30 22,3
,22 30 38,3
,40 30 20,3
,20 30 40,3
,30 34,4
,30 24,4
,30 22,3
,30 38,3
,30 20,4
,30 40,6
,pair 30 59,1
,58 30 ),1
,59 30 ),1
,pair 30 58,1
,pair 30 32,1
,41 30 ),1
,pair 30 29,1
,30 59,1
,30 58,1
,30 29,1
,86 30 47,1
,P4 30 ),1
,30 47,1
,23 30 },1
,. 30 9,1
,9 30 .,1
,30 .,7
,. 30 20,1
,{ 30 .,6
,33 30 },2
,. 30 27,1
,30 27,6
,29 30 31,4
,30 31,11
,20 30 },3
,{ 30 40,2
,29 30 35,1
,24 30 },4
,{ 30 36,2
,14 30 46,1
,30 46,1
,pair 30 60,2
,Row 30 (,1
,30 60,2
,) 30 ),1
,{ 30 23,10
,{ 30 0,10
,30 23,11
,30 0,10
,{ 30 24,1
,pair 30 7,2
,11 30 ),1
,12 30 ),1
,pair 30 100,2
,21 30 ),1
,22 30 ),1
,23 30 ),1
,24 30 ),1
,pair 30 40,1
,30 7,2
,30 100,2
,colour 30 30,1
,30 30 30,1
,30 30 ),1
,30 30,2
,29 30 },12
,{ 30 34,1
,{ 30 27,4
,15 30 },3
,18 30 },1
,about 30 --COMMA--,1
,30 --COMMA--,1
,{ 30 31,6
,{ 30 25,2
,30 25,2
,{ 30 8,1
,30 8,1
,hint 30 5,1
,30 5,1
,32 30 27,1
,27 30 28,1
,} 30 ),3
,21 30 39,2
,30 39,2
,{ 30 },1
,{ 30 1,1
,30 1,1
,26 30 31,1
,29 30 36,1
,13 30 23,1
,49 30 21,1
,30 21,1
31,32 31 26,1
,31 26,3
,25 31 },4
,31 },30
,28 31 },1
,51 31 11,12
,31 11,12
,) 31 ),6
,31 ),20
,{ 31 9,2
,31 9,2
,P2 31 ),1
,{ 31 27,6
,STRING 31 ),5
,31 27,9
,{ 31 32,7
,31 32,14
,33 31 29,12
,29 31 33,12
,31 29,15
,31 33,12
,35 31 27,3
,27 31 35,3
,37 31 25,3
,25 31 37,4
,39 31 23,3
,23 31 39,3
,41 31 21,3
,21 31 41,3
,31 35,4
,31 25,4
,31 37,5
,31 23,18
,31 39,3
,31 21,3
,31 41,3
,pair 31 58,1
,74 31 ),1
,58 31 ),1
,pair 31 74,1
,81 31 ),1
,42 31 ),1
,pair 31 29,1
,31 58,1
,31 74,1
,{ 31 .,3
,15 31 47,1
,31 .,7
,31 47,1
,. 31 },4
,27 31 .,2
,32 31 28,1
,31 28,2
,7 31 .,1
,32 31 29,1
,30 31 32,5
,. 31 0,6
,31 0,11
,21 31 42,1
,31 42,1
,257 31 ),1
,299 31 ),1
,Row 31 (,1
,31 (,1
,73 31 20,1
,31 20,1
,{ 31 23,15
,{ 31 0,5
,8 31 .,1
,pair 31 6,1
,pair 31 100,1
,pair 31 80,1
,pair 31 7,1
,pair 31 60,1
,pair 31 40,1
,31 6,1
,31 100,1
,31 80,1
,31 7,1
,31 60,1
,31 40,3
,27 31 32,2
,{ 31 35,1
,34 31 },3
,23 31 },3
,20 31 },4
,24 31 38,2
,31 38,2
,30 31 },6
,26 31 },1
,{ 31 26,1
,{ 31 25,1
,33 31 28,1
,28 31 29,1
,} 31 ),2
,19 31 43,1
,21 31 },1
,31 43,1
,{ 31 40,1
,22 31 40,1
,{ 31 },3
,{ 31 4,1
,31 4,1
,24 31 37,1
,35 31 26,1
holes,inner holes (,2
,holes (,6
,sides holes (,2
,End holes (,2
,Inner holes with,2
,holes with,2
,Rightmost holes of,2
,holes of,2
,First holes },1
,holes },1
32,{ 32 31,1
,32 31,3
,27 32 },3
,32 },27
,rectangle 32 2,1
,{ 32 35,1
,32 2,1
,32 35,2
,P4 32 ),1
,33 32 49,1
,32 ),12
,32 49,1
,0 32 },1
,{ 32 9,1
,32 9,1
,. 32 11,1
,32 11,1
,remove 32 ),1
,to 32 ),1
,{ 32 .,4
,32 .,10
,31 32 },6
,30 32 34,11
,34 32 30,12
,32 34,14
,32 30,13
,65 32 47,1
,32 47,1
,STRING 32 ),2
,36 32 28,3
,28 32 36,2
,28 32 },1
,38 32 26,3
,26 32 38,3
,40 32 24,3
,24 32 40,3
,42 32 22,3
,22 32 42,3
,32 28,3
,32 36,2
,32 26,4
,32 38,4
,32 24,4
,32 40,6
,32 22,6
,32 42,3
,30 32 43,1
,pair 32 57,1
,59 32 ),1
,57 32 ),1
,pair 32 59,1
,30 32 ),1
,pair 32 29,1
,32 43,1
,32 57,1
,32 59,1
,32 29,2
,pair 32 3,1
,32 3,1
,48 32 16,1
,32 16,1
,Count 32 at:,2
,32 at:,2
,20 32 7,1
,P1 32 ),1
,32 7,2
,11 32 31,1
,10 32 31,1
,. 32 },1
,31 32 33,5
,32 33,5
,. 32 39,2
,32 39,2
,40 32 },1
,{ 32 24,1
,28 32 .,1
,24 32 },4
,{ 32 40,2
,= 32 (,1
,32 (,2
,258 32 ),1
,300 32 ),1
,Row 32 (,1
,. 32 37,1
,32 37,1
,{ 32 23,15
,{ 32 0,5
,32 23,15
,32 0,5
,15 32 .,2
,48 32 .,2
,. 32 20,2
,27 32 .,1
,32 20,2
,81 32 },1
,pair 32 6,1
,pair 32 100,1
,pair 32 80,1
,pair 32 7,1
,pair 32 60,1
,pair 32 40,1
,32 6,3
,32 100,1
,32 80,1
,32 60,1
,31 32 34,2
,26 32 },5
,{ 32 29,1
,{ 32 22,3
,21 32 },2
,{ 32 26,1
,{ 32 5,1
,32 5,1
,hint 32 6,1
,18 32 30,1
,18 32 34,1
,{ 32 6,1
,} 32 ),1
,{ 32 44,1
,22 32 },1
,32 44,1
,23 32 41,1
,32 41,1
,25 32 38,1
,36 32 27,1
,31 32 35,1
,32 27,1
,25 32 },1
,17 32 45,1
,32 45,3
,{ 32 45,1
,19 32 45,1
33,30 33 },1
,33 },24
,{ 33 32,1
,33 32,1
,. 33 (,3
,33 (,4
,27 33 .,1
,33 .,7
,remove 33 ),1
,to 33 ),1
,33 ),8
,35 33 31,11
,31 33 35,11
,33 31,13
,33 35,11
,. 33 },7
,. 33 3,1
,. 33 4,2
,. 33 5,1
,. 33 8,1
,. 33 9,1
,. 33 10,1
,33 3,2
,33 4,3
,33 5,2
,33 8,1
,33 9,2
,33 10,1
,. 33 -4,1
,33 -4,1
,STRING 33 ),1
,37 33 29,3
,29 33 37,2
,29 33 },1
,39 33 27,3
,27 33 39,3
,41 33 25,3
,25 33 41,3
,43 33 23,3
,23 33 43,3
,33 29,4
,33 37,2
,33 27,4
,33 39,3
,33 25,3
,33 41,4
,33 23,18
,33 43,4
,31 33 18,1
,pair 33 56,1
,75 33 ),1
,56 33 ),1
,pair 33 75,1
,pair 33 29,1
,33 18,1
,33 56,1
,33 75,1
,26 33 },7
,{ 33 47,1
,33 47,1
,{ 33 .,5
,11 33 24,1
,P2 33 ),1
,33 24,1
,34 33 30,1
,33 30,2
,. 33 30,1
,32 33 34,4
,33 34,10
,39 33 },1
,{ 33 27,1
,71 33 ),1
,277 33 ),1
,Row 33 (,1
,{ 33 23,15
,{ 33 0,5
,33 0,5
,16 33 .,1
,rectangle 33 49,1
,33 49,1
,pair 33 6,1
,pair 33 70,1
,pair 33 50,1
,pair 33 5,1
,pair 33 60,1
,pair 33 40,1
,33 6,1
,33 70,1
,33 50,1
,33 60,1
,33 40,2
,{ 33 34,4
,24 33 },3
,22 33 },1
,24 33 57,1
,33 57,1
,44 33 31,1
,34 33 31,1
,34 33 44,1
,33 44,1
,32 33 },1
,{ 33 43,1
,24 33 42,1
,{ 33 2,1
,33 42,1
,33 2,1
,{ 33 },2
,{ 33 3,1
,44 33 34,1
,37 33 28,1
,29 33 34,1
,{ 33 9,1
,33 28,1
,39 33 40,1
,{ 33 4,1
,61 33 11,1
,33 11,1
,46 33 41,1
But,. But an,1
,But an,1
,. But at,1
,But at,1
34,{ 34 37,1
,34 37,2
,pair 34 48,1
,34 48,1
,16 34 },1
,34 },39
,. 34 (,3
,34 (,4
,63 34 35,1
,34 35,11
,. 34 },3
,36 34 },6
,. 34 69,1
,34 69,1
,remove 34 ),1
,to 34 ),1
,34 ),9
,32 34 },10
,39 34 32,11
,34 32,12
,65 34 15,1
,34 15,1
,40 34 37,1
,38 34 30,3
,30 34 38,2
,30 34 },2
,40 34 28,3
,42 34 26,3
,26 34 42,3
,44 34 24,3
,24 34 44,3
,34 30,3
,34 38,4
,34 28,3
,34 26,3
,34 42,4
,34 24,5
,34 44,3
,61 34 24,1
,pair 34 55,1
,54 34 ),1
,55 34 ),1
,pair 34 54,1
,pair 34 29,1
,34 55,1
,34 54,1
,34 29,2
,28 34 },4
,{ 34 .,1
,34 .,1
,P1 34 ),1
,35 34 33,2
,34 33,3
,33 34 35,5
,. 34 38,1
,44 34 },1
,{ 34 24,1
,72 34 ),1
,278 34 ),1
,Row 34 (,1
,{ 34 23,10
,{ 34 0,5
,34 23,10
,34 0,5
,32 34 36,1
,34 36,2
,pair 34 6,1
,pair 34 70,1
,pair 34 50,1
,pair 34 5,1
,pair 34 60,1
,pair 34 40,1
,8 34 42,1
,34 6,1
,34 70,1
,34 50,1
,34 5,2
,34 60,1
,34 40,2
,32 34 35,2
,33 34 },4
,27 34 },6
,{ 34 31,3
,9 34 35,2
,34 31,3
,26 34 41,1
,34 41,2
,{ 34 7,1
,34 7,1
,hint 34 8,1
,34 8,1
,35 34 32,1
,32 34 33,1
,{ 34 35,1
,} 34 ),2
,22 34 46,1
,34 46,1
,25 34 43,1
,34 43,1
,{ 34 },2
,{ 34 3,1
,34 3,1
,38 34 29,1
,33 34 38,1
,{ 34 5,1
,{ 34 1,1
,34 1,1
,40 34 41,1
,27 34 40,1
,{ 34 2,1
,34 2,1
,{ 34 58,1
,34 58,1
,11 34 36,1
35,32 35 },1
,35 },35
,{ 35 76,1
,35 76,1
,34 35 51,1
,35 51,2
,2 35 ),1
,35 ),16
,pair 35 2,1
,P2 35 ),4
,P4 35 ),2
,P6 35 ),1
,35 2,1
,. 35 },6
,{ 35 36,4
,35 36,16
,30 35 },4
,39 35 33,10
,33 35 },11
,35 33,11
,548 35 },1
,{ 35 26,1
,35 26,1
,39 35 31,3
,31 35 39,2
,31 35 },2
,41 35 29,3
,29 35 41,3
,43 35 27,3
,27 35 43,3
,45 35 25,3
,25 35 45,4
,35 31,4
,35 39,2
,35 29,5
,35 41,3
,35 27,3
,35 43,3
,35 25,5
,35 45,4
,36 35 25,1
,pair 35 54,1
,70 35 ),1
,54 35 ),1
,pair 35 70,1
,pair 35 67,1
,pair 35 29,1
,35 54,1
,35 70,1
,35 67,1
,{ 35 29,1
,{ 35 .,2
,35 .,4
,23 35 },1
,36 35 34,1
,35 34,3
,8 35 .,2
,34 35 36,7
,. 35 42,2
,35 42,3
,28 35 44,1
,35 44,3
,30 35 36,1
,. 35 1,1
,. 35 5,1
,35 1,2
,35 5,2
,19 35 51,1
,26 35 278,1
,35 278,1
,1 35 ),1
,0 35 ),1
,pair 35 37,1
,Row 35 (,1
,35 37,1
,35 (,1
,{ 35 23,10
,{ 35 0,5
,35 23,10
,35 0,5
,37 35 33,1
,pair 35 6,1
,pair 35 100,1
,pair 35 80,1
,pair 35 5,1
,pair 35 60,1
,pair 35 40,1
,35 6,2
,35 100,1
,35 80,1
,35 60,1
,35 40,2
,27 35 },5
,29 35 36,2
,hint 35 9,1
,35 9,1
,34 35 },2
,42 35 34,1
,45 35 34,1
,11 35 42,1
,} 35 ),3
,{ 35 47,1
,35 47,1
,{ 35 44,1
,26 35 44,1
,hint 35 4,1
,35 4,2
,{ 35 1,1
,{ 35 6,1
,34 35 25,1
,{ 35 40,1
,{ 35 31,1
,32 35 36,1
,{ 35 4,1
,28 35 },1
,STRING 35 ),1
,46 35 },1
,8 35 28,1
,35 28,1
,255 35 36,1
36,{ 36 39,2
,36 39,4
,pair 36 38,2
,36 38,3
,37 36 },3
,36 },16
,30 36 46,1
,36 46,5
,pair 36 3,1
,38 36 34,6
,36 3,1
,36 34,6
,35 36 },6
,STRING 36 count:4,1
,36 count:4,1
,16 36 18,10
,18 36 16,11
,{ 36 .,7
,36 18,10
,36 16,11
,36 .,9
,26 36 },2
,{ 36 40,1
,{ 36 41,1
,36 40,3
,36 41,3
,STRING 36 ),3
,{ 36 32,1
,32 36 32,2
,42 36 30,3
,30 36 42,3
,44 36 28,3
,28 36 44,3
,46 36 26,3
,26 36 46,3
,36 ),16
,36 32,4
,36 30,3
,36 42,4
,36 28,4
,36 44,3
,36 26,3
,76 36 40,1
,STRING 36 count:2,2
,P2 36 ),2
,36 count:2,3
,4 36 ),2
,Edge 36 count:2,1
,= 36 (,1
,36 (,2
,37 36 35,2
,pair 36 60,2
,69 36 ),1
,60 36 ),1
,pair 36 69,1
,pair 36 66,1
,37 36 ),1
,36 35,2
,36 60,2
,36 69,1
,36 66,1
,2 36 ),1
,STRING 36 state:1,3
,36 state:1,3
,{ 36 9,1
,36 9,1
,24 36 48,1
,38 36 37,1
,36 48,1
,36 37,12
,. 36 24,1
,36 24,1
,. 36 },1
,Count 36 at:,2
,36 at:,2
,29 36 .,2
,27 36 43,1
,36 43,3
,24 36 165,1
,. 36 53,1
,36 165,1
,36 53,1
,35 36 41,1
,30 36 },1
,{ 36 42,1
,28 36 },1
,{ 36 46,1
,{ 36 37,2
,{ 36 28,1
,89 36 37,1
,square 36 ),1
,Row 36 (,1
,{ 36 23,5
,{ 36 0,5
,36 23,5
,36 0,5
,face 36 ),2
,34 36 38,1
,pair 36 6,1
,pair 36 100,1
,pair 36 80,1
,pair 36 5,1
,pair 36 40,1
,36 6,1
,36 100,1
,36 80,1
,36 5,2
,35 36 37,6
,48 36 ),2
,35 36 39,2
,39 36 },1
,{ 36 5,1
,{ 36 45,1
,36 45,2
,27 36 45,1
,{ 36 4,1
,36 4,1
,{ 36 },1
,30 36 41,1
,39 36 32,1
,{ 36 8,2
,36 8,2
,30 36 37,1
,29 36 43,1
,43 36 37,1
,35 36 55,1
,36 55,1
,16 36 15,1
,34 36 64,1
,36 15,1
,36 64,1
,21 36 43,1
37,34 37 },1
,37 },12
,89 37 2,2
,37 2,2
,{ 37 36,3
,37 36,6
,pair 37 5,3
,37 5,4
,STRING 37 count:4,1
,37 count:4,1
,1 37 0,10
,0 37 1,11
,37 0,11
,37 1,11
,45 37 },1
,2 37 87,1
,37 87,1
,34 37 24,1
,37 24,1
,STRING 37 ),5
,{ 37 33,1
,33 37 33,2
,43 37 31,3
,31 37 43,3
,45 37 29,3
,29 37 45,3
,47 37 27,3
,27 37 47,3
,37 ),22
,37 33,4
,37 31,3
,37 43,3
,37 29,3
,37 45,5
,37 27,3
,37 47,4
,1 37 ),2
,38 37 36,2
,pair 37 84,1
,68 37 ),1
,84 37 ),1
,pair 37 68,1
,2 37 ),2
,3 37 ),2
,pair 37 36,1
,37 84,1
,37 68,1
,STRING 37 state:1,2
,37 state:1,2
,36 37 },4
,5 37 ),1
,. 37 },1
,31 37 5,1
,29 37 },1
,{ 37 45,1
,24 37 62,1
,37 62,1
,36 37 391,1
,37 391,1
,27 37 ),1
,35 37 ),1
,pair 37 167,1
,259 37 ),1
,37 167,1
,32 37 .,1
,37 .,1
,) 37 ),1
,{ 37 23,5
,{ 37 28,5
,37 23,5
,37 28,5
,face 37 ),2
,39 37 35,1
,37 35,1
,pair 37 120,1
,pair 37 50,2
,pair 37 80,1
,37 120,1
,37 50,2
,37 80,1
,36 37 39,2
,37 39,4
,{ 37 55,2
,37 55,2
,27 37 },2
,36 37 38,3
,37 38,5
,hint 37 8,1
,37 8,2
,47 37 40,1
,47 37 39,1
,40 37 39,1
,37 40,1
,{ 37 38,1
,25 37 49,1
,} 37 ),2
,{ 37 47,1
,37 49,1
,28 37 38,1
,28 37 46,1
,{ 37 8,1
,37 46,1
,{ 37 },1
,{ 37 9,1
,37 9,1
,31 37 },1
,40 37 33,1
,{ 37 0,1
,36 37 42,1
,{ 37 3,1
,37 42,1
,37 3,1
,36 37 45,1
,17 37 57,1
,37 57,1
38,{ 38 41,1
,38 41,1
,. 38 3,1
,38 3,5
,36 38 ),2
,38 ),18
,40 38 36,6
,38 36,7
,STRING 38 count:4,1
,38 count:4,1
,{ 38 39,9
,19 38 17,10
,17 38 19,11
,38 39,13
,38 17,10
,38 19,11
,46 38 },1
,38 },7
,STRING 38 ),5
,19 38 3,1
,21 38 3,1
,{ 38 34,1
,34 38 34,2
,44 38 32,3
,32 38 44,3
,46 38 30,3
,30 38 46,3
,48 38 28,3
,28 38 48,3
,38 34,4
,38 32,3
,38 44,3
,38 30,3
,38 46,3
,38 28,8
,38 48,4
,86 38 3,1
,2 38 ),1
,Edge 38 count:2,1
,= 38 (,1
,38 count:2,1
,38 (,1
,39 38 37,2
,pair 38 83,1
,67 38 ),1
,83 38 ),1
,pair 38 67,1
,4 38 ),2
,5 38 ),1
,6 38 ),1
,38 37,2
,38 83,1
,38 67,1
,23 38 3,1
,STRING 38 state:2,3
,38 state:2,3
,. 38 36,1
,{ 38 .,1
,38 .,2
,. 38 45,2
,38 45,2
,34 38 .,1
,54 38 22,1
,38 22,1
,28 38 ),1
,pair 38 168,1
,260 38 ),1
,38 168,1
,{ 38 28,5
,36 38 40,1
,38 40,3
,87 38 185,1
,38 185,1
,pair 38 5,2
,pair 38 120,1
,pair 38 50,2
,pair 38 80,1
,38 5,3
,38 120,1
,38 50,3
,38 80,1
,37 38 39,3
,20 38 48,1
,31 38 47,1
,38 47,2
,hint 38 5,1
,46 38 18,1
,46 38 40,1
,8 38 40,1
,38 18,1
,37 38 },2
,26 38 50,1
,} 38 ),1
,Sum 38 ),1
,29 38 47,1
,{ 38 1,1
,38 1,1
,32 38 },1
,41 38 34,1
,34 38 },1
,31 38 },1
,50 38 24,1
,38 24,1
,49 38 },1
,319 38 278,1
,38 278,1
,18 38 58,1
,38 58,1
,<31 38 39,1
39,36 39 },1
,39 },20
,) 39 ),3
,39 ),15
,. 39 },6
,19 39 .,1
,. 39 79,1
,39 .,6
,39 79,1
,STRING 39 count:4,1
,39 count:4,1
,38 39 },9
,{ 39 35,11
,{ 39 34,11
,39 35,13
,39 34,11
,29 39 },1
,{ 39 51,1
,{ 39 50,1
,39 51,1
,39 50,2
,. 39 -8,1
,. 39 8,1
,2 39 ),1
,39 -8,1
,39 8,2
,STRING 39 ),4
,35 39 35,2
,45 39 33,3
,33 39 45,3
,47 39 31,3
,31 39 47,3
,49 39 29,3
,29 39 49,3
,39 33,5
,39 45,3
,39 31,3
,39 47,3
,39 29,6
,39 49,4
,3 39 ),1
,40 39 38,1
,pair 39 82,1
,66 39 ),1
,82 39 ),1
,pair 39 66,1
,39 38,2
,39 82,1
,39 66,1
,pair 39 1,1
,39 1,1
,1 39 ),2
,STRING 39 state:2,1
,39 state:2,1
,29 39 .,1
,. 39 29,1
,{ 39 .,1
,P2 39 ),1
,9 39 38,1
,9 39 .,1
,32 39 .,2
,45 39 },1
,{ 39 33,1
,50 39 29,1
,pair 39 149,1
,189 39 ),1
,39 149,1
,. 39 44,1
,39 44,1
,{ 39 28,5
,39 28,5
,41 39 37,1
,39 37,1
,88 39 87,1
,39 87,1
,pair 39 8,1
,pair 39 100,1
,pair 39 0,1
,pair 39 5,1
,pair 39 80,1
,pair 39 50,1
,39 100,1
,39 0,1
,39 5,3
,39 80,1
,37 39 40,2
,39 40,8
,36 39 40,2
,38 39 40,3
,25 39 49,1
,36 39 41,1
,37 39 41,1
,37 39 36,1
,39 41,2
,39 36,2
,30 39 },1
,30 39 48,1
,39 48,1
,{ 39 },1
,hint 39 3,1
,39 3,1
,{ 39 5,2
,{ 39 43,1
,{ 39 36,1
,{ 39 40,1
,39 43,1
,27 39 33,1
,59 39 29,1
,19 39 59,1
,39 59,1
,38 39 20,1
,39 20,1
3>,<3 3> <,1
,3> <,1
,. 3> <50>,1
,3> <50>,1
,2 3> STRING,1
,3> STRING,1
380,200 380 ),1
,256 380 ),1
,378 380 ),1
,pair 380 574,1
,380 ),3
,380 574,1
many,how many Kings,1
,many Kings,1
,too many neighbors,1
,many neighbors,1
381,pair 381 575,1
,381 575,1
,{ 381 },1
,381 },1
382,366 382 373,1
,382 373,1
,391 382 353,1
,382 353,1
,pair 382 576,1
,382 576,1
,431 382 333,1
,382 333,1
,{ 382 },1
,382 },1
383,. 383 (,1
,383 (,1
,pair 383 577,1
,383 577,1
,384 383 334,1
,383 334,1
,{ 383 },1
,383 },1
384,STRING 384 ),1
,384 ),1
,pair 384 578,1
,384 578,1
,335 384 383,1
,384 383,1
,{ 384 },1
,384 },1
385,pair 385 389,1
,385 389,1
,{ 385 },1
,385 },1
,363 385 405,1
,385 405,1
value:70,state:1 value:70 ),1
,value:70 ),1
386,395 386 377,1
,386 377,1
,pair 386 390,1
,386 390,1
,337 386 435,1
,386 435,1
,427 386 365,1
,386 365,1
387,pair 387 579,1
,387 579,1
,388 387 430,1
,387 430,1
,{ 387 },1
,387 },1
,466 387 408,1
,387 408,1
388,pair 388 580,1
,388 580,1
,339 388 387,1
,388 387,1
,{ 388 },1
,388 },1
389,{ 389 390,1
,389 390,1
,175 389 ),1
,177 389 ),1
,181 389 ),1
,307 389 ),1
,385 389 ),1
,pair 389 395,1
,389 ),5
,389 395,1
,453 389 368,1
,389 368,1
by:P1,Occupied by:P1 ),25
,by:P1 ),25
,Occupied by:P1 STRING,6
,by:P1 STRING,6
,Occupied by:P1 top:True,1
,by:P1 top:True,1
<brick,STRING <brick Diamond>,3
,<brick Diamond>,3
,STRING <brick Spiral>,1
,STRING <brick Limping>,1
,<brick Spiral>,1
,<brick Limping>,1
STRING,game STRING (,942
,piece STRING P1,315
,or STRING STRING,55
,STRING STRING ),1222
,piece STRING P2,167
,P2 STRING ),116
,place STRING (,1426
,{ STRING },526
,place STRING STRING,1007
,( STRING Loss,49
,option STRING <Num>,10
,item STRING <0>,5
,<0> STRING ),5
,item STRING <9>,89
,<9> STRING ),66
,STRING (,12119
,STRING P1,1654
,STRING STRING,8323
,STRING ),13575
,STRING P2,1524
,STRING },2494
,STRING Loss,49
,STRING <Num>,10
,STRING <0>,5
,STRING <9>,89
,define STRING (,4014
,Piece STRING (,146
,( STRING ),3735
,Value STRING (,91
,) STRING ),1528
,{ STRING STRING,1899
,STRING STRING },1934
,Remembered STRING ),145
,regions STRING (,386
,Stack STRING (,722
,Stack STRING 6,9
,Stack STRING 8,1
,Stack STRING 16,5
,Stack STRING 18,5
,phase STRING P1,49
,( STRING Mover,153
,phase STRING (,680
,( STRING (,2226
,STRING 6,47
,STRING 8,25
,STRING 16,7
,STRING 18,8
,STRING Mover,751
,( STRING 5,20
,P1 STRING ),148
,STRING STRING STRING,3204
,STRING 5,34
,place STRING <Start:tigerSites>,1
,option STRING <Start>,15
,item STRING <,547
,> STRING ),1265
,option STRING <Board>,153
,option STRING <Tiger>,2
,ruleset STRING {,367
,STRING <Start:tigerSites>,1
,STRING <Start>,15
,STRING <,547
,STRING <Board>,153
,STRING <Tiger>,2
,STRING {,2765
,Stack STRING 12,25
,nextPhase STRING ),46
,STRING 12,37
,( STRING P1,157
,item STRING <15>,57
,<15> STRING ),40
,STRING <15>,57
,if STRING (,270
,option STRING <Jump>,3
,item STRING STRING,175
,STRING STRING >,186
,STRING <Jump>,3
,STRING >,574
,( STRING ~,26
,STRING ~,26
,place STRING <Board:initTiger>,1
,phase STRING P2,18
,( STRING P2,192
,STRING <Board:initTiger>,1
,STRING STRING count:2,9
,STRING STRING count:24,4
,option STRING <Move>,2
,Piece STRING STRING,8
,STRING count:2,9
,STRING count:24,4
,STRING <Move>,2
,option STRING <Place>,1
,STRING <Place>,1
,piece STRING Each,1623
,where STRING P2,26
,by:All STRING ),9
,piece STRING ),145
,where STRING P1,28
,STRING Each,1638
,id STRING ),258
,then STRING ),27
,piece STRING Neutral,74
,place STRING {,1141
,STRING Neutral,163
,<3> STRING ),82
,<5> STRING ),81
,E STRING ),2
,STRING STRING (,147
,N STRING ),4
,option STRING <Variant>,25
,< STRING >,17
,STRING <Variant>,25
,item STRING <3>,107
,item STRING <4>,129
,<4> STRING ),82
,item STRING <5>,102
,item STRING <6>,130
,<6> STRING ),82
,item STRING <7>,96
,<7> STRING ),71
,item STRING <8>,118
,<8> STRING ),74
,STRING <3>,107
,STRING <4>,129
,STRING <5>,102
,STRING <6>,130
,STRING <7>,96
,STRING <8>,118
,coord STRING ),104
,option STRING <Moves>,2
,STRING <Moves>,2
,Mover STRING ),507
,( STRING 3,27
,( STRING 4,20
,STRING 3,46
,STRING 4,51
,by:P2 STRING ),6
,place STRING 1,1
,STRING 1,161
,item STRING <1>,20
,<1> STRING ),22
,item STRING <2>,112
,<2> STRING ),53
,option STRING <Goat>,2
,item STRING <10>,101
,<10> STRING ),59
,item STRING <11>,74
,<11> STRING ),60
,item STRING <12>,81
,<12> STRING ),48
,item STRING <13>,51
,<13> STRING ),35
,item STRING <14>,80
,<14> STRING ),52
,item STRING <16>,65
,<16> STRING ),34
,item STRING <17>,38
,<17> STRING ),27
,item STRING <18>,50
,<18> STRING ),29
,item STRING <19>,48
,<19> STRING ),36
,item STRING <20>,33
,<20> STRING ),13
,item STRING <21>,17
,<21> STRING ),7
,item STRING <22>,14
,<22> STRING ),6
,item STRING <23>,7
,<23> STRING ),5
,STRING <1>,20
,STRING <2>,112
,STRING <Goat>,2
,STRING <10>,101
,STRING <11>,74
,STRING <12>,81
,STRING <13>,51
,STRING <14>,80
,STRING <16>,65
,STRING <17>,38
,STRING <18>,50
,STRING <19>,48
,STRING <20>,33
,STRING <21>,17
,STRING <22>,14
,STRING <23>,7
,Piece STRING #1,2
,Piece STRING #2,2
,option STRING <Fox>,1
,STRING #1,321
,STRING #2,34
,STRING <Fox>,1
,define STRING <Play:kingHop>,1
,option STRING <Play>,15
,STRING <Play:kingHop>,1
,STRING <Play>,15
,sites STRING ),1062
,Stack STRING 0,126
,STRING 0,218
,id STRING P1,617
,place STRING 0,2
,place STRING 3,3
,track STRING STRING,686
,STRING STRING P1,112
,STRING STRING P2,110
,= STRING End,8
,) STRING (,219
,= STRING Off,32
,In STRING (,26
,who STRING ),36
,to STRING STRING,36
,item STRING <>,55
,<> STRING ),76
,STRING End,10
,STRING Off,32
,STRING <>,55
,{ STRING (,38
,regions STRING {,12
,= STRING (,14
,to STRING ),67
,( STRING #1,197
,STRING STRING P3,35
,STRING STRING P4,27
,STRING STRING count:4,3
,STRING P3,180
,STRING P4,163
,STRING count:4,3
,what STRING ),5
,( STRING #2,23
,track STRING {,902
,( STRING STRING,908
,Stack STRING 17,5
,Stack STRING 20,10
,Stack STRING 4,12
,Stack STRING 7,16
,Stack STRING 13,9
,Stack STRING 25,19
,not STRING ),83
,firstMoveOnTrack STRING Mover,7
,if STRING STRING,73
,Distance STRING Mover,6
,STRING 17,8
,STRING 20,13
,STRING 7,31
,STRING 13,13
,STRING 25,20
,Stack STRING 11,9
,Stack STRING 10,3
,STRING 11,12
,STRING 10,10
,mapEntry STRING (,208
,map STRING {,313
,regions STRING P1,365
,regions STRING P2,365
,#1 STRING ),124
,Stack STRING 5,3
,option STRING <Dice>,5
,STRING <Dice>,5
,( STRING from:,111
,STRING from:,140
,Var STRING 0,68
,Var STRING 1,31
,var STRING ),274
,Value STRING All,63
,STRING All,76
,Stack STRING ),9
,Var STRING (,123
,regions STRING P3,26
,regions STRING P4,25
,( STRING Next,52
,trigger STRING Next,5
,Stack STRING 19,3
,Stack STRING 23,8
,Triggered STRING P1,2
,Triggered STRING P2,10
,STRING Next,369
,STRING 19,5
,STRING 23,11
,Move STRING steps:,28
,( STRING 1,44
,( STRING 2,32
,STRING STRING count:<Num:piece>,3
,option STRING <Players>,17
,STRING steps:,49
,STRING 2,165
,STRING count:<Num:piece>,3
,STRING <Players>,17
,match STRING (,6
,subgame STRING ),1
,Stack STRING 24,2
,STRING 24,7
,subgame STRING result:,3
,STRING result:,3
,option STRING <Player>,31
,STRING <Player>,31
,mapEntry STRING #1,3
,trigger STRING Mover,7
,define STRING 10,6
,id STRING P2,619
,mapEntry STRING Mover,153
,= STRING 1,7
,= STRING 5,1
,STRING STRING count:3,27
,STRING count:3,27
,option STRING <End>,11
,STRING <End>,11
,Stack STRING 21,3
,Stack STRING 14,5
,Stack STRING 22,2
,STRING 21,4
,STRING 14,6
,STRING 22,2
,( STRING from:0,2
,where STRING Shared,6
,track STRING <Board:track>,4
,piece STRING Shared,201
,item STRING <25>,10
,item STRING <30>,11
,item STRING <35>,5
,item STRING <40>,6
,item STRING <45>,5
,item STRING <50>,6
,item STRING <55>,3
,item STRING <60>,4
,item STRING <65>,3
,item STRING <70>,4
,item STRING <75>,3
,item STRING <80>,4
,item STRING <85>,3
,item STRING <90>,4
,item STRING <95>,3
,item STRING <100>,4
,STRING from:0,2
,STRING Shared,235
,STRING <Board:track>,4
,STRING <25>,10
,STRING <30>,11
,STRING <35>,5
,STRING <40>,6
,STRING <45>,5
,STRING <50>,6
,STRING <55>,3
,STRING <60>,4
,STRING <65>,3
,STRING <70>,4
,STRING <75>,3
,STRING <80>,4
,STRING <85>,3
,STRING <90>,4
,STRING <95>,3
,STRING <100>,4
,mapEntry STRING Next,13
,STRING STRING Mover,180
,Empty STRING ),3
,STRING STRING P5,3
,STRING STRING P6,3
,regions STRING P5,6
,regions STRING P6,6
,STRING P5,16
,STRING P6,15
,option STRING <Track>,3
,STRING <Track>,3
,#2 STRING ),14
,define STRING <Ruleset:piece>,1
,define STRING True,1
,define STRING #1,1
,( STRING #3,17
,option STRING <Throw>,1
,option STRING <Ruleset>,1
,STRING STRING count:5,3
,< STRING 4,2
,>= STRING 4,2
,STRING <Ruleset:piece>,1
,STRING True,2
,STRING #3,18
,STRING <Throw>,1
,STRING <Ruleset>,1
,STRING count:5,3
,subgame STRING next:1,1
,subgame STRING next:2,1
,subgame STRING next:0,1
,STRING next:1,1
,STRING next:2,1
,STRING next:0,1
,to STRING if:,1
,STRING if:,30
,id STRING P3,84
,id STRING P4,84
,Value STRING ),2
,id STRING Mover,170
,Var STRING 26,3
,Var STRING 27,3
,option STRING <Pieces>,1
,STRING 26,6
,STRING 27,6
,STRING <Pieces>,1
,) STRING #1,1
,Leap STRING (,102
,define STRING <Board:sizeHome>,1
,Each STRING ),74
,) STRING Orthogonal,6
,STRING <Board:sizeHome>,1
,STRING Orthogonal,111
,) STRING STRING,51
,if STRING Charge,1
,Hop STRING (,1
,STRING Charge,1
,and STRING (,20
,define STRING <Board:size>,21
,STRING <Board:size>,22
,option STRING <Version>,23
,STRING <Version>,23
,Piece STRING ),54
,define STRING 1,5
,define STRING 0,12
,( STRING #4,3
,piece:#1 STRING ),2
,STRING STRING #1,21
,regions STRING Shared,8
,P1 STRING STRING,4
,P2 STRING STRING,4
,Var STRING -1,8
,Decided STRING ),8
,Var STRING 11,1
,Proposed STRING ),16
,Vote STRING ),17
,Propose STRING (,7
,note STRING to:Next,1
,vote STRING ),2
,STRING #4,4
,STRING -1,8
,STRING to:Next,6
,Next STRING ),48
,apply STRING ),6
,where STRING Prev,10
,) STRING steps:1,34
,id STRING Shared,19
,id STRING #1,15
,place STRING 28,2
,place STRING 29,3
,place STRING 30,3
,place STRING 31,5
,( STRING Prev,1
,where STRING Mover,57
,where STRING P3,4
,where STRING P4,4
,STRING Prev,11
,STRING steps:1,39
,STRING 28,5
,STRING 29,5
,STRING 30,5
,STRING 31,5
,or STRING (,13
,by:#1 STRING ),8
,( STRING Orthogonal,105
,STRING STRING count:8,2
,STRING STRING count:1,7
,STRING count:8,2
,STRING count:1,7
,define STRING 24,5
,1 STRING ),84
,2 STRING ),86
,3 STRING ),24
,4 STRING ),21
,STRING STRING 1,10
,STRING STRING 2,5
,STRING STRING 3,5
,STRING STRING 4,2
,to STRING (,3
,P3 STRING ),5
,P4 STRING ),5
,option STRING <Tiling>,4
,item STRING <square>,6
,<square> STRING ),5
,item STRING <hex>,5
,<hex> STRING ),5
,STRING <Tiling>,4
,STRING <square>,6
,STRING <hex>,5
,Var STRING #1,3
,( STRING 0,7
,( STRING TeamMover,1
,STRING TeamMover,1
,regions STRING Neutral,2
,option STRING <Each>,1
,item STRING <priority>,1
,<priority> STRING ),1
,item STRING <or>,1
,<or> STRING ),1
,STRING <Each>,1
,STRING <priority>,1
,STRING <or>,1
,define STRING 12,9
,define STRING <Num:pieces>,1
,STRING <Num:pieces>,1
,place STRING 36,5
,place STRING 37,5
,place STRING 38,5
,place STRING 39,4
,by:Mover STRING ),29
,trigger STRING (,6
,Triggered STRING Mover,8
,STRING 36,9
,STRING 37,8
,STRING 38,9
,STRING 39,6
,STRING STRING directed:True,13
,pair STRING STRING,19
,} STRING ),52
,STRING directed:True,13
,where STRING Neutral,41
,Level STRING Neutral,16
,Track STRING from:,18
,id STRING Neutral,29
,id STRING Next,84
,STRING STRING state:1,102
,STRING STRING state:2,6
,STRING STRING state:3,7
,STRING STRING state:4,3
,STRING STRING state:5,2
,STRING STRING state:6,2
,STRING STRING state:7,2
,STRING STRING state:8,2
,STRING state:1,102
,STRING state:2,6
,STRING state:3,7
,STRING state:4,3
,STRING state:5,2
,STRING state:6,2
,STRING state:7,6
,STRING state:8,2
,Leap STRING forward:True,1
,STRING forward:True,1
,define STRING 73,1
,define STRING 2,2
,Value STRING #1,66
,) STRING 1,5
,Level STRING Mover,1
,( STRING Player,5
,STRING 73,2
,STRING Player,10
,Stack STRING 2,5
,option STRING <Stack>,2
,item STRING <rectangle,1
,55> STRING ),1
,item STRING <square,5
,63> STRING ),2
,item STRING <hex,9
,60> STRING ),1
,STRING <Stack>,2
,STRING <rectangle,1
,STRING <square,5
,STRING <hex,9
,piece STRING P3,6
,place STRING 6,6
,place STRING 5,3
,option STRING <Scoring>,4
,STRING <Scoring>,4
,define STRING 38,1
,Edge STRING ),1
,Stack STRING 9,1
,Stack STRING 26,1
,Stack STRING 52,1
,Stack STRING 27,2
,STRING 9,11
,STRING 52,1
,define STRING 96,2
,STRING 96,4
,define STRING 384,1
,define STRING 9,5
,regions STRING <Player:diceHand>,1
,STRING STRING P7,2
,STRING STRING P8,2
,STRING STRING P9,1
,STRING STRING P10,1
,STRING STRING P11,1
,STRING STRING P12,1
,STRING STRING P13,1
,STRING STRING P14,1
,STRING STRING P15,1
,STRING STRING P16,1
,STRING 384,1
,STRING <Player:diceHand>,1
,STRING P7,10
,STRING P8,6
,STRING P9,1
,STRING P10,1
,STRING P11,1
,STRING P12,1
,STRING P13,1
,STRING P14,1
,STRING P15,1
,STRING P16,1
,Stack STRING 61,1
,Stack STRING 58,1
,Stack STRING 62,1
,Stack STRING 88,1
,Stack STRING 91,1
,Stack STRING 87,1
,Stack STRING 32,1
,Stack STRING 33,1
,Stack STRING 48,1
,STRING 61,2
,STRING 58,4
,STRING 62,3
,STRING 88,2
,STRING 91,3
,STRING 87,3
,STRING 32,2
,STRING 33,1
,STRING 48,1
,place STRING 18,2
,place STRING 19,1
,place STRING 54,1
,place STRING 55,1
,place STRING 56,3
,place STRING 57,1
,place STRING 58,3
,place STRING 59,5
,place STRING 72,1
,place STRING 73,1
,place STRING 74,1
,place STRING 75,1
,place STRING 76,1
,place STRING 77,1
,place STRING 78,1
,place STRING 79,1
,place STRING 90,2
,place STRING 91,2
,place STRING 92,2
,place STRING 93,2
,place STRING 94,2
,place STRING 95,2
,place STRING 96,2
,place STRING 97,2
,place STRING 98,2
,place STRING 99,2
,STRING 54,1
,STRING 55,1
,STRING 56,3
,STRING 57,1
,STRING 59,5
,STRING 72,1
,STRING 74,1
,STRING 75,1
,STRING 76,4
,STRING 77,1
,STRING 78,1
,STRING 79,1
,STRING 90,2
,STRING 92,2
,STRING 93,2
,STRING 94,2
,STRING 95,2
,STRING 97,2
,STRING 98,2
,STRING 99,2
,STRING STRING loop:True,370
,STRING loop:True,370
,( STRING UNE,3
,( STRING USE,2
,( STRING USW,2
,( STRING UNW,1
,STRING STRING count:15,2
,STRING UNE,3
,STRING USE,2
,STRING USW,2
,STRING UNW,1
,STRING count:15,2
,where STRING #1,5
,define STRING <Players:num>,1
,players STRING ),2
,( STRING P3,23
,( STRING P4,18
,STRING <Players:num>,1
,0 STRING ),1
,Stack STRING 76,3
,Stack STRING 36,3
,Stack STRING 44,1
,STRING 44,1
,Mover STRING from:,4
,if:True STRING ),1
,Stack STRING 37,3
,Stack STRING 38,3
,Stack STRING 39,2
,Stack STRING Edge,2
,( STRING Team1,5
,Team1 STRING ),1
,( STRING Team2,5
,Team2 STRING ),1
,where STRING Team1,1
,where STRING Team2,1
,STRING Edge,11
,STRING Team1,6
,STRING Team2,6
,Value STRING 1,39
,mapEntry STRING 1,1
,mapEntry STRING 2,1
,mapEntry STRING 3,1
,mapEntry STRING 4,1
,mapEntry STRING 5,1
,mapEntry STRING 6,1
,5 STRING ),12
,mapEntry STRING 7,1
,6 STRING ),12
,mapEntry STRING 8,1
,mapEntry STRING 9,1
,mapEntry STRING 10,1
,mapEntry STRING 11,1
,mapEntry STRING 12,1
,mapEntry STRING 13,1
,mapEntry STRING 14,1
,mapEntry STRING 16,1
,mapEntry STRING 17,1
,mapEntry STRING 18,1
,mapEntry STRING 19,1
,mapEntry STRING 20,1
,mapEntry STRING 21,1
,define STRING 27,1
,define STRING 29,2
,define STRING 30,2
,define STRING 11,1
,define STRING 13,2
,define STRING 25,1
,define STRING 26,1
,define STRING 28,2
,define STRING 23,3
,Track STRING ),236
,define STRING 20,2
,define STRING 17,2
,define STRING 6,28
,define STRING 4,7
,define STRING 86,1
,define STRING 84,1
,define STRING 5,4
,STRING 86,3
,STRING 84,2
,Stack STRING 85,1
,STRING 85,2
,define STRING 16,1
,define STRING 7,13
,where STRING (,2
,Stack STRING STRING,97
,S STRING ),3
,place STRING Edge,9
,mapEntry STRING P1,7
,mapEntry STRING P2,7
,mapEntry STRING P3,2
,mapEntry STRING P4,2
,Move STRING steps:#1,2
,STRING steps:#1,2
,<2> STRING STRING,1
,<3> STRING STRING,1
,<4> STRING STRING,1
,<5> STRING STRING,1
,<6> STRING STRING,1
,<7> STRING STRING,1
,<8> STRING STRING,1
,<9> STRING STRING,1
,<10> STRING STRING,1
,<11> STRING STRING,2
,<12> STRING STRING,1
,<13> STRING STRING,1
,<14> STRING STRING,1
,<15> STRING STRING,2
,<16> STRING STRING,1
,place STRING 4,4
,define STRING From,1
,Propose STRING ),7
,STRING From,1
,Column STRING ),2
,Row STRING ),1
,define STRING 8,19
,* STRING 2,100
,count STRING ),117
,from STRING ),40
,4 STRING store:None,51
,STRING store:None,80
,sow STRING owner:,103
,STRING owner:,131
,track STRING <Board:track2>,5
,<6> STRING >,15
,<8> STRING >,18
,<10> STRING >,21
,<12> STRING >,21
,<14> STRING >,17
,<16> STRING >,19
,<18> STRING >,19
,<20> STRING >,17
,<22> STRING >,7
,item STRING <24>,13
,<24> STRING >,7
,item STRING <26>,8
,<26> STRING >,3
,item STRING <28>,8
,<28> STRING >,3
,STRING <Board:track2>,5
,STRING <24>,13
,STRING <26>,8
,STRING <28>,8
,) STRING steps:,21
,) STRING steps:2,6
,STRING steps:2,6
,define STRING <Board:rowSize>,4
,define STRING <Board:InitOneSeed>,1
,define STRING <Board:InitTwoSeeds>,1
,track STRING <Board:CCW2>,7
,track STRING <Board:CW1>,2
,track STRING <Board:CW2>,2
,<7> STRING >,11
,> STRING >,94
,20> STRING ),3
,23> STRING ),1
,<9> STRING >,14
,26> STRING ),1
,29> STRING ),2
,option STRING <Phase>,1
,Var STRING Undefined,4
,option STRING <Capture>,4
,STRING <Board:rowSize>,4
,STRING <Board:InitOneSeed>,1
,STRING <Board:InitTwoSeeds>,1
,STRING <Board:CCW2>,7
,STRING <Board:CW1>,2
,STRING <Board:CW2>,2
,STRING <Phase>,1
,STRING Undefined,4
,STRING <Capture>,4
,Pending STRING ),2
,option STRING <Sow>,2
,STRING <Sow>,2
,* STRING 3,8
,count:2 STRING owner:,2
,) STRING owner:,23
,39> STRING ),1
,44> STRING ),1
,49> STRING ),1
,54> STRING ),1
,from:#1 STRING steps:1,3
,Mover STRING from:#1,1
,numPerHole:2 STRING owner:,1
,STRING from:#1,1
,define STRING <Row:size>,15
,Player STRING ),15
,Var STRING <ExtraCapture:num>,1
,track STRING <Row:track2>,12
,remove STRING ),6
,option STRING <Row>,17
,<11> STRING >,9
,<13> STRING >,11
,<15> STRING >,14
,<17> STRING >,9
,<19> STRING >,9
,<21> STRING >,9
,option STRING <ExtraCapture>,2
,STRING <Row:size>,15
,STRING <ExtraCapture:num>,1
,STRING <Row:track2>,12
,STRING <Row>,17
,STRING <ExtraCapture>,2
,21> STRING ),1
,25> STRING ),1
,33> STRING ),1
,37> STRING ),1
,41> STRING ),1
,track STRING <Board:track1>,1
,STRING <Board:track1>,1
,- STRING 1,11
,Mover STRING STRING,1
,Var STRING 2,9
,from:#1 STRING steps:#2,14
,STRING steps:#2,14
,define STRING <Sow:numSeed>,1
,STRING <Sow:numSeed>,1
,count:4 STRING owner:,1
,remove STRING count:,6
,<24> STRING ),7
,STRING count:,6
,) STRING 2,4
,<4> STRING >,1
,track STRING <Row:trackCCW2>,1
,track STRING <Row:trackCW1>,1
,track STRING <Row:trackCW2>,1
,Var STRING 5,1
,Var STRING 3,1
,STRING <Row:trackCCW2>,1
,STRING <Row:trackCW1>,1
,STRING <Row:trackCW2>,1
,6 STRING store:None,1
,define STRING <Player:num>,1
,track STRING <Player:track>,1
,( STRING P5,5
,STRING <Player:num>,1
,STRING <Player:track>,1
,game STRING THIS,1
,3 STRING store:None,3
,. STRING owner:,1
,STRING THIS,1
,RememberValue STRING (,39
,FirstSite STRING from:,7
,2 STRING {,8
,sow STRING if:,3
,>= STRING <Capture:doneSoFar>,1
,STRING <Capture:doneSoFar>,1
,2 STRING store:None,25
,track STRING <Board:trackDirection>,1
,STRING <Board:trackDirection>,1
,sow STRING apply:,30
,STRING apply:,34
,option STRING <Counters>,1
,STRING <Counters>,1
,) STRING if:,3
,track STRING <Track:directionP1>,1
,track STRING <Track:directionP2>,1
,STRING <Track:directionP1>,1
,STRING <Track:directionP2>,1
,option STRING <Rightmost>,1
,STRING <Rightmost>,1
,STRING STRING steps:1,2
,<40> STRING ),4
,item STRING <41>,1
,<41> STRING ),1
,item STRING <42>,1
,<42> STRING ),1
,item STRING <43>,1
,<43> STRING ),1
,item STRING <44>,1
,<44> STRING ),1
,<45> STRING ),3
,item STRING <46>,1
,<46> STRING ),1
,item STRING <47>,1
,<47> STRING ),1
,item STRING <48>,1
,<48> STRING ),1
,item STRING <49>,1
,<49> STRING ),1
,<50> STRING ),4
,STRING <41>,1
,STRING <42>,1
,STRING <43>,1
,STRING <44>,1
,STRING <46>,1
,STRING <47>,1
,STRING <48>,1
,STRING <49>,1
,2 STRING (,46
,numPerHole:4 STRING apply:,3
,count:18 STRING apply:,1
,Count STRING to:,2
,STRING to:,2
,option STRING <Column>,1
,STRING <Column>,1
,option STRING <Skip>,1
,STRING <Skip>,1
,option STRING <Scale>,1
,item STRING <0,2
,8> STRING ),1
,STRING <Scale>,1
,STRING <0,2
,option STRING <Result>,15
,item STRING <Loss>,15
,<Loss> STRING ),15
,item STRING <Win>,16
,<Win> STRING ),16
,STRING <Result>,15
,STRING <Loss>,15
,STRING <Win>,16
,tile STRING P1,2
,tile STRING P2,2
,( STRING <End:result>,2
,option STRING <Rows>,5
,option STRING <Columns>,5
,STRING <End:result>,2
,STRING <Rows>,5
,STRING <Columns>,5
,item STRING <6,4
,item STRING <7,3
,STRING <6,4
,STRING <7,3
,option STRING <Tower>,1
,item STRING <Forwards>,1
,<Forwards> STRING ),1
,item STRING <Forward>,1
,<Forward> STRING ),1
,option STRING <Army>,1
,item STRING <Orthogonal>,3
,<Orthogonal> STRING ),27
,STRING <Tower>,1
,STRING <Forwards>,1
,STRING <Forward>,1
,STRING <Army>,1
,STRING <Orthogonal>,3
,tile STRING Each,15
,STRING STRING state:0,1
,STRING state:0,1
,and STRING STRING,3
,option STRING <Rules>,4
,STRING <Rules>,5
,Triggered STRING #1,3
,( STRING Friend,1
,( STRING Enemy,5
,STRING Friend,1
,STRING Enemy,5
,<19> STRING STRING,1
,note STRING to:All,8
,option STRING <Boundary>,2
,item STRING <Hexagon>,3
,item STRING <Limping>,4
,STRING to:All,8
,STRING <Boundary>,2
,STRING <Hexagon>,3
,STRING <Limping>,4
,option STRING <Meta>,5
,STRING <Meta>,5
,option STRING <BoardSize>,11
,STRING <BoardSize>,11
,option STRING <Swap>,1
,) STRING mover,1
,STRING <Swap>,1
,STRING mover,1
,define STRING 32,1
,/ STRING 4,1
,move STRING (,2
,tile STRING numSides:4,2
,<= STRING (,2
,STRING numSides:4,2
,( STRING S,14
,( STRING SW,9
,( STRING SE,10
,( STRING N,17
,option STRING <Edge>,2
,STRING S,20
,STRING SW,9
,STRING SE,10
,STRING N,23
,STRING <Edge>,2
,option STRING <Size>,9
,STRING <Size>,9
,( STRING if:,9
,item STRING <Draw>,1
,<Draw> STRING ),1
,STRING <Draw>,1
,5> STRING ),2
,6> STRING ),3
,item STRING <8,2
,7> STRING ),1
,STRING <8,2
,option STRING <Group>,1
,STRING <Group>,1
,define STRING <Stars>,1
,option STRING <Shape>,1
,item STRING <Triangle>,1
,<Triangle> STRING ),1
,item STRING <Diamond>,1
,<Diamond> STRING ),1
,item STRING <Star>,1
,<Star> STRING ),1
,<Limping> STRING ),1
,option STRING <Stars>,1
,option STRING <Balance>,1
,STRING <Stars>,2
,STRING <Shape>,1
,STRING <Triangle>,1
,STRING <Diamond>,1
,STRING <Star>,1
,STRING <Balance>,1
,place STRING <Board:dot0>,1
,STRING <Board:dot0>,1
,by:Next STRING ),54
,STRING STRING count:6,5
,STRING count:6,5
,item STRING <Hexagonal>,2
,<Hexagonal> STRING >,2
,<numSides:6> STRING >,2
,item STRING <Square>,2
,<Square> STRING >,2
,<numSides:4> STRING >,2
,item STRING <Triangular>,2
,<Triangular> STRING >,2
,<numSides:3> STRING >,2
,STRING <Hexagonal>,2
,STRING <Square>,2
,STRING <Triangular>,2
,STRING STRING count:18,1
,STRING count:18,1
,STRING STRING count:12,23
,STRING count:12,23
,use STRING macro,1
,the STRING option,1
,- STRING STRING,2
,STRING STRING #2,7
,( STRING Row,21
,( STRING Column,21
,STRING macro,1
,STRING option,1
,STRING Row,21
,STRING Column,21
,exact STRING ),2
,option STRING <Model>,1
,STRING <Model>,1
,item STRING <board,2
,use:Vertex> STRING ),1
,STRING <board,2
,( STRING E,17
,( STRING W,13
,nextPhase STRING STRING,1
,STRING E,77
,STRING W,73
,phase STRING <Rules>,1
,copy:True STRING ),1
,if STRING <Remove:rule>,4
,option STRING <Remove>,2
,STRING <Remove:rule>,4
,STRING <Remove>,2
,option STRING <Exact>,1
,item STRING <exact:True>,1
,<exact:True> STRING ),1
,STRING <Exact>,1
,STRING <exact:True>,1
,STRING STRING count:9,9
,STRING count:9,9
,STRING STRING count:<Board:size>,1
,STRING count:<Board:size>,1
,by:Enemy STRING ),13
,play STRING ),2
,item STRING <P2>,1
,<P1> STRING ),1
,item STRING <P1>,1
,<P2> STRING ),1
,STRING <P2>,1
,STRING <P1>,1
,option STRING <To>,1
,STRING <To>,1
,) STRING },9
,( STRING Left,4
,Left STRING ),2
,( STRING Right,4
,Right STRING ),2
,( STRING Bottom,5
,Bottom STRING ),2
,( STRING Top,5
,Top STRING ),2
,STRING Left,4
,STRING Right,4
,STRING Bottom,5
,STRING Top,5
,item STRING <5,5
,<5 STRING ),1
,<6 STRING ),1
,STRING <5,5
,STRING STRING count:14,1
,STRING count:14,1
,option STRING <Piece>,1
,STRING <Piece>,1
,piece STRING P4,3
,STRING STRING count:40,1
,STRING count:40,1
,by:Shared STRING ),1
,STRING STRING count:17,3
,STRING count:17,3
,Sites STRING ),7
,intersection STRING (,3
,apply STRING (,2
,Triggered STRING Next,7
,Cell STRING ),7
,Site STRING (,4
,piece STRING state:,6
,append STRING (,2
,STRING state:,6
,player:Mover STRING ),3
,player:Next STRING ),1
,append STRING ),1
,trigger STRING P2,8
,between STRING ),7
,between STRING STRING,7
,item STRING <surround,2
,item STRING <custodial,2
,STRING <surround,2
,STRING <custodial,2
,option STRING <Disc>,1
,STRING <Disc>,1
,STRING STRING count:16,3
,STRING count:16,3
,<Slide> STRING ),1
,define STRING <Repetition>,2
,option STRING <Repetition>,2
,STRING STRING count:20,5
,STRING STRING count:23,2
,STRING STRING count:27,2
,STRING STRING count:31,2
,STRING STRING count:35,2
,STRING STRING count:49,2
,STRING STRING count:87,2
,STRING STRING count:44,2
,STRING STRING count:65,2
,STRING <Repetition>,4
,STRING count:20,5
,STRING count:23,2
,STRING count:27,2
,STRING count:31,2
,STRING count:35,2
,STRING count:49,2
,STRING count:87,2
,STRING count:44,2
,STRING count:65,2
,STRING STRING count:144,2
,STRING STRING count:152,2
,STRING count:144,2
,STRING count:152,2
,STRING STRING count:<Board:numPieces>,1
,STRING count:<Board:numPieces>,1
,) STRING #2,1
,option STRING <Jarl>,1
,STRING <Jarl>,1
,#5 STRING ),5
,#4 STRING ),2
,( STRING <Board:size>,1
,item STRING <3,1
,STRING <3,1
,Slide STRING (,3
,steps:2 STRING ),2
,steps:3 STRING ),2
,( STRING before:,26
,STRING before:,26
,( STRING Diagonal,95
,STRING Diagonal,95
,option STRING <Tag>,1
,item STRING <10><4>,1
,<10><4> STRING ),1
,item STRING <10><1>,1
,<10><1> STRING ),1
,STRING <Tag>,1
,STRING <10><4>,1
,STRING <10><1>,1
,Move STRING ),4
,place STRING Cell,6
,STRING STRING count:66,1
,STRING Cell,6
,STRING count:66,1
,place STRING <Board:startP1>,2
,place STRING <Board:startP2>,2
,STRING <Board:startP1>,2
,STRING <Board:startP2>,2
,( STRING 9,4
,STRING STRING value:1,3
,STRING STRING value:2,11
,STRING value:1,3
,STRING value:2,11
,square STRING diagonals:Alternating,1
,* STRING STRING,1
,STRING diagonals:Alternating,1
,( STRING before:10,2
,STRING before:10,2
,define STRING <Board:armSize>,1
,define STRING <Board:numPiece>,1
,shift STRING 0,2
,0 STRING (,1
,rectangle STRING (,1
,/ STRING 2,1
,Even STRING ),2
,STRING <Board:armSize>,1
,STRING <Board:numPiece>,1
,define STRING <Variant:promotedCaptureMove>,1
,Piece STRING <Variant:promotedMove>,1
,STRING <Variant:promotedCaptureMove>,1
,STRING <Variant:promotedMove>,1
,STRING STRING Next,177
,piece STRING (,98
,where STRING Next,23
,option STRING <Elephant>,1
,STRING <Elephant>,1
,by:Mover STRING STRING,14
,STRING STRING value:3,9
,STRING STRING value:4,9
,STRING STRING value:5,9
,STRING STRING value:6,1
,STRING STRING value:7,1
,STRING STRING value:8,1
,STRING STRING value:9,1
,STRING STRING value:10,1
,STRING STRING value:11,1
,STRING STRING value:12,1
,STRING STRING value:13,1
,STRING STRING value:14,1
,STRING STRING value:15,1
,STRING STRING value:16,1
,STRING STRING value:17,1
,STRING STRING value:18,1
,STRING STRING value:19,1
,STRING STRING value:20,1
,STRING STRING value:21,1
,STRING STRING value:22,1
,STRING value:3,9
,STRING value:4,9
,STRING value:5,9
,STRING value:6,1
,STRING value:7,1
,STRING value:8,1
,STRING value:9,1
,STRING value:10,1
,STRING value:11,1
,STRING value:12,1
,STRING value:13,1
,STRING value:14,1
,STRING value:15,1
,STRING value:16,1
,STRING value:17,1
,STRING value:18,1
,STRING value:19,1
,STRING value:20,1
,STRING value:21,1
,STRING value:22,1
,place STRING 12,2
,place STRING 13,1
,by:P1 STRING ),4
,player:Next STRING to:Next,3
,STRING STRING E,59
,STRING STRING W,59
,( STRING <p1_directions>,6
,( STRING <player1_arg>,6
,( STRING <directions>,24
,( STRING <piece_name_key>,3
,( STRING <piece_key>,3
,( STRING <king_dir>,6
,#2 STRING (,3
,3 STRING STRING,3
,2 STRING W,1
,3 STRING E,1
,piece STRING .,13
,( STRING NNW,7
,( STRING SSW,4
,( STRING <fwd_dir>,5
,( STRING {,17
,( STRING <LF1>,2
,( STRING #5,5
,( STRING #7,2
,( STRING <piece_types>,7
,( STRING All,13
,All STRING ),3
,Orthogonal STRING ),16
,{ STRING Can,1
,or STRING Only,1
,) STRING Can,1
,STRING <p1_directions>,6
,STRING <player1_arg>,6
,STRING <directions>,24
,STRING <piece_name_key>,3
,STRING <piece_key>,3
,STRING <king_dir>,6
,STRING .,39
,STRING NNW,7
,STRING SSW,4
,STRING <fwd_dir>,5
,STRING <LF1>,2
,STRING #5,6
,STRING #7,2
,STRING <piece_types>,7
,STRING Can,2
,STRING Only,1
,count STRING 8,2
,count STRING 2,6
,count STRING 1,4
,( STRING ESE,4
,2 STRING WNW,3
,( STRING WNW,4
,3 STRING ESE,3
,place STRING coord:<BoardConfig:King2Start>,1
,place STRING coord:<BoardConfig:Queen2Start>,1
,place STRING <BoardConfig:Bishop2Start>,1
,place STRING <BoardConfig:Knight2Start>,1
,place STRING <BoardConfig:Pawn1Start>,1
,place STRING <BoardConfig:Pawn2Start>,1
,option STRING <BoardConfig>,1
,Pawn1Start STRING >,2
,King2Start STRING >,2
,Queen2Start STRING >,2
,RookLeft2Start STRING >,2
,STRING ESE,8
,STRING WNW,8
,STRING coord:<BoardConfig:King2Start>,1
,STRING coord:<BoardConfig:Queen2Start>,1
,STRING <BoardConfig:Bishop2Start>,1
,STRING <BoardConfig:Knight2Start>,1
,STRING <BoardConfig:Pawn1Start>,1
,STRING <BoardConfig:Pawn2Start>,1
,STRING <BoardConfig>,1
,STRING STRING S,6
,STRING STRING N,6
,where STRING Player,5
,option STRING <NumOfPlayers>,2
,7 STRING ),6
,8 STRING ),6
,regions STRING P7,2
,regions STRING P8,2
,{ STRING .,26
,. STRING },24
,( STRING P6,4
,( STRING P7,4
,( STRING P8,2
,STRING <NumOfPlayers>,2
,( STRING Forward,75
,place STRING <Placement:Pawn1>,1
,place STRING <Placement:Pawn2>,1
,option STRING <Placement>,2
,STRING Forward,75
,STRING <Placement:Pawn1>,1
,STRING <Placement:Pawn2>,1
,STRING <Placement>,2
,( STRING NW,6
,( STRING NE,8
,STRING NW,6
,STRING NE,8
,<Play:doubleStep> STRING STRING,1
,Piece STRING Mover,1
,note STRING ),1
,by:Next STRING components:,6
,by:Next STRING STRING,6
,by:Mover STRING components:,30
,STRING components:,87
,( STRING <direction>,2
,STRING <direction>,2
,( STRING <p1_arg>,2
,STRING <p1_arg>,2
,( STRING ENE,2
,3 STRING WSW,1
,2 STRING WSW,1
,2 STRING ESE,1
,( STRING WSW,2
,3 STRING ENE,1
,2 STRING ENE,1
,3 STRING WNW,1
,STRING ENE,4
,STRING WSW,4
,4 STRING (,2
,define STRING as:,1
,( STRING Adjacent,50
,{ STRING This,1
,STRING as:,1
,STRING Adjacent,50
,STRING This,1
,= STRING 0,1
,Mover STRING in:,5
,Next STRING in:,6
,by:#1 STRING STRING,24
,option STRING <PlacementConditions>,1
,STRING in:,13
,STRING <PlacementConditions>,1
,( STRING <p1_dirs>,1
,( STRING <piece_type>,1
,functions STRING =,1
,STRING STRING Wellisch,2
,Wellisch STRING STRING,1
,STRING STRING A,1
,. STRING Wellisch's,1
,Wellisch's STRING Wellisch,1
,. STRING For,1
,<a STRING STRING,1
,STRING STRING />Wikipedia</a>,1
,. STRING 1,1
,. STRING STRING,1
,STRING STRING Siegmund,1
,Siegmund STRING Jay,1
,Eric STRING STRING,1
,STRING <p1_dirs>,1
,STRING <piece_type>,1
,STRING =,1
,STRING Wellisch,3
,STRING A,1
,STRING Wellisch's,1
,STRING For,1
,STRING />Wikipedia</a>,1
,STRING Siegmund,1
,STRING Jay,1
,by:#1 STRING components:,5
,Forward STRING ),3
,Diagonal STRING ),10
,Leap STRING rotations:False,1
,STRING rotations:False,1
,( STRING Backward,42
,( STRING Forwards,18
,( STRING BL,2
,( STRING FL,3
,( STRING FR,3
,STRING Backward,42
,STRING Forwards,18
,STRING BL,2
,STRING FL,3
,STRING FR,3
,~ STRING ),14
,( STRING Backwards,4
,( STRING BR,2
,( STRING Rightwards,3
,( STRING Leftwards,3
,( STRING Leftward,1
,( STRING Rightward,1
,Forwards STRING ),1
,STRING Backwards,4
,STRING BR,2
,STRING Rightwards,3
,STRING Leftwards,3
,STRING Leftward,1
,STRING Rightward,1
,#1 STRING in:,2
,option STRING <PiecePlacement>,1
,STRING <PiecePlacement>,1
,id STRING P5,2
,id STRING P6,2
,id STRING P7,2
,( STRING at:,18
,STRING at:,18
,item STRING <29>,6
,<29> STRING ),5
,STRING <29>,6
,option STRING <High>,1
,STRING <High>,1
,STRING STRING {,5
,subgame STRING <Player:option>,5
,STRING <Player:option>,5
,define STRING 87,1
,. STRING End,2
,Piece STRING Shared,1
,item STRING <27>,5
,STRING <27>,5
,track STRING <Board:trackP2>,1
,<5> STRING >,1
,STRING <Board:trackP2>,1
,define STRING 36,1
,track STRING <Board:trackTeam2>,2
,<23> STRING >,1
,<25> STRING >,1
,STRING <Board:trackTeam2>,2
,define STRING 101,1
,place STRING <Option:start1>,1
,place STRING <Option:start2>,1
,Vote STRING (,1
,option STRING <Step>,1
,option STRING <Slide>,1
,option STRING <Option>,1
,STRING 101,2
,STRING <Option:start1>,1
,STRING <Option:start2>,1
,STRING <Step>,1
,STRING <Slide>,1
,STRING <Option>,1
,track STRING <Board:HomeTrack2>,1
,track STRING <Board:MiddleTrack>,1
,track STRING <Board:EnemyTrack1>,1
,track STRING <Board:EnemyTrack2>,1
,STRING <Board:HomeTrack2>,1
,STRING <Board:MiddleTrack>,1
,STRING <Board:EnemyTrack1>,1
,STRING <Board:EnemyTrack2>,1
,Stack STRING 41,1
,Stack STRING 42,1
,Stack STRING 28,1
,STRING 41,1
,STRING 42,3
,10> STRING ),1
,item STRING <10,1
,STRING <10,1
,player STRING ),1
,by:#1 STRING on:#2,1
,STRING on:#2,1
,option STRING <ThrowSix>,1
,item STRING <36>,1
,<36> STRING ),1
,<30> STRING ),7
,STRING <ThrowSix>,1
,STRING <36>,1
,by:Enemy STRING components:,15
,by:All STRING components:,18
,by:P1 STRING components:,2
,by:P2 STRING components:,2
,by:Neutral STRING components:,2
,define STRING Move,2
,( STRING from,1
,( STRING 6,3
,intersection STRING #1,2
,( STRING 8,2
,place STRING 1617,1
,place STRING 1623,1
,place STRING 1618,1
,place STRING 1624,1
,place STRING 1619,1
,place STRING 1625,1
,place STRING 1620,1
,place STRING 1626,1
,place STRING 1621,1
,place STRING 1627,1
,place STRING 1622,1
,place STRING 1628,1
,STRING Move,2
,STRING from,2
,STRING 1617,1
,STRING 1623,1
,STRING 1618,1
,STRING 1624,1
,STRING 1619,1
,STRING 1625,1
,STRING 1620,1
,STRING 1626,1
,STRING 1621,1
,STRING 1627,1
,STRING 1622,1
,STRING 1628,1
,Triggered STRING (,1
,player:Mover STRING to:Next,2
,place STRING 84,1
,place STRING 85,1
,place STRING 86,2
,place STRING 87,1
,place STRING 88,1
,place STRING 89,1
,place STRING 100,1
,place STRING 101,1
,place STRING 102,1
,place STRING 103,1
,place STRING 104,1
,place STRING 105,1
,place STRING 106,1
,place STRING 107,1
,STRING 89,1
,STRING 100,1
,STRING 102,1
,STRING 103,1
,STRING 104,1
,STRING 105,1
,STRING 106,1
,STRING 107,1
,by:Friend STRING ),4
,by:Neutral STRING ),8
,building STRING Attacking,1
,( STRING components:,4
,define STRING state,2
,by:Player STRING ),2
,by:Player STRING components:,3
,<Scenario:playerMaps> STRING },1
,option STRING <Scenario>,1
,Symbol STRING (,64
,option STRING <FogOfWar>,1
,> STRING STRING,5
,option STRING <Doctrine1>,1
,option STRING <Doctrine2>,1
,option STRING <Doctrine3>,1
,option STRING <Doctrine4>,1
,STRING Attacking,1
,STRING state,2
,STRING <Scenario>,1
,STRING <FogOfWar>,1
,STRING <Doctrine1>,1
,STRING <Doctrine2>,1
,STRING <Doctrine3>,1
,STRING <Doctrine4>,1
,define STRING <Version:removeRule>,1
,trigger STRING #1,2
,STRING STRING rotation:0,16
,STRING STRING rotation:7,7
,STRING STRING rotation:4,11
,STRING STRING rotation:3,7
,STRING STRING rotation:1,8
,STRING STRING rotation:2,1
,STRING STRING rotation:5,5
,STRING STRING rotation:6,1
,STRING <Version:removeRule>,1
,STRING rotation:0,16
,STRING rotation:7,7
,STRING rotation:4,11
,STRING rotation:3,7
,STRING rotation:1,8
,STRING rotation:2,1
,STRING rotation:5,5
,STRING rotation:6,1
,STRING STRING value:,16
,option STRING <CheckmateRule>,1
,STRING value:,16
,STRING <CheckmateRule>,1
,Pieces STRING ),2
,option STRING <Movement>,1
,STRING <Movement>,1
,option STRING <CapThreshold>,1
,<25> STRING ),6
,<35> STRING ),3
,STRING <CapThreshold>,1
,Group STRING Mover,8
,Group STRING Next,8
,Groups STRING if:,14
,) STRING includeSelf:True,1
,step STRING (,2
,define STRING <BoardShape:directionScored>,2
,define STRING <BoardShape:directionUsed>,2
,define STRING <BoardShape:gridType>,6
,option STRING <GType>,2
,option STRING <SType>,2
,option STRING <BoardShape>,7
,<Adjacent> STRING ),4
,<All> STRING ),10
,STRING includeSelf:True,1
,STRING <BoardShape:directionScored>,2
,STRING <BoardShape:directionUsed>,2
,STRING <BoardShape:gridType>,6
,STRING <GType>,2
,STRING <SType>,2
,STRING <BoardShape>,7
,option STRING <Line>,1
,Diamond> STRING ),8
,item STRING <tri,7
,item STRING <brick,5
,item STRING <tri>,2
,<tri> STRING ),2
,option STRING <Connection>,2
,item STRING <Diagonal>,2
,<Diagonal> STRING ),2
,item STRING <All>,2
,item STRING <Adjacent>,2
,item STRING <OffDiagonal>,2
,<OffDiagonal> STRING ),2
,STRING <Line>,1
,STRING <tri,7
,STRING <brick,5
,STRING <tri>,2
,STRING <Connection>,2
,STRING <Diagonal>,2
,STRING <All>,2
,STRING <Adjacent>,2
,STRING <OffDiagonal>,2
,define STRING <BoardShape:directionsUsed>,3
,STRING <BoardShape:directionsUsed>,3
,item STRING <tiling,10
,STRING <tiling,10
,( STRING True,1
,( STRING SSE,3
,( STRING NNE,5
,STRING SSE,3
,STRING NNE,5
,STRING STRING fillColour:,4
,P1 STRING fillColour:,2
,P2 STRING fillColour:,2
,STRING fillColour:,8
,option STRING <TurnType>,1
,STRING <TurnType>,1
,define STRING ),1
,define STRING arg:,2
,arg: STRING see,1
,define STRING No,1
,define STRING Friendly,1
,( STRING <CapOption:friendHops>,1
,<CapOption:friendHops> STRING ),1
,( STRING <CapOption:enemyHops>,1
,define STRING Options:,1
,. STRING or,1
,define STRING <ScoreOption:discVal>,1
,propose STRING ),1
,define STRING argument,3
,#2 STRING STRING,4
,( STRING <Multi:influence>,2
,option STRING <NumberPlayers>,1
,option STRING <CapOption>,1
,option STRING <ChosenHop>,1
,option STRING <Multi>,1
,option STRING <Equi>,1
,option STRING <PlaceDisc>,1
,option STRING <ScoreOption>,1
,item STRING <-10>,1
,<-10> STRING ),1
,STRING arg:,2
,STRING see,1
,STRING No,1
,STRING Friendly,1
,STRING <CapOption:friendHops>,1
,STRING <CapOption:enemyHops>,1
,STRING Options:,1
,STRING or,1
,STRING <ScoreOption:discVal>,1
,STRING argument,3
,STRING <Multi:influence>,2
,STRING <NumberPlayers>,1
,STRING <CapOption>,1
,STRING <ChosenHop>,1
,STRING <Multi>,1
,STRING <Equi>,1
,STRING <PlaceDisc>,1
,STRING <ScoreOption>,1
,STRING <-10>,1
,STRING STRING 5,1
,Limping> STRING ),4
,board STRING use:Cell,1
,STRING use:Cell,1
,tile STRING Neutral,1
,item STRING <Default,1
,item STRING <DefaultAndCount,1
,STRING <Default,1
,STRING <DefaultAndCount,1
,option STRING <Center>,1
,STRING <Center>,1
,define STRING from,1
,by:Mover STRING on:Edge,1
,define STRING One,1
,by:#1 STRING on:Cell,1
,define STRING continuity,1
,define STRING work,1
,define STRING note,1
,id STRING #3,1
,id STRING #4,1
,Value STRING #2,1
,by:#4 STRING ),1
,id STRING #5,1
,by:#5 STRING ),1
,define STRING bug,1
,by:Mover STRING on:Cell,1
,define STRING remembered,1
,STRING on:Edge,1
,STRING One,1
,STRING on:Cell,2
,STRING continuity,1
,STRING work,1
,STRING note,1
,STRING bug,1
,STRING remembered,1
,define STRING Cannot,1
,option STRING <CellBackground>,1
,STRING Cannot,1
,STRING <CellBackground>,1
,Around STRING ),1
,<112> STRING ),1
,<198> STRING ),1
,<288> STRING ),1
,option STRING <PlaceBy>,1
,option STRING <NeighborsOf>,1
,STRING <PlaceBy>,1
,STRING <NeighborsOf>,1
,by:Mover STRING top:False,1
,STRING top:False,1
,the STRING clauses,1
,define STRING Two,1
,define STRING Test,1
,define STRING Remaining,1
,( STRING the,1
,define STRING Opponent,1
,define STRING Selects,1
,define STRING shows,1
,define STRING phases:,2
,place STRING state:7,4
,03> STRING ),3
,07> STRING ),1
,option STRING <Variants>,1
,STRING clauses,1
,STRING Two,1
,STRING Test,1
,STRING Remaining,1
,STRING the,1
,STRING Opponent,1
,STRING Selects,1
,STRING shows,1
,STRING phases:,2
,STRING <Variants>,1
,- STRING (,3
,define STRING 3,1
,difference STRING (,1
,Square> STRING ),2
,Triangle> STRING ),1
,Star> STRING ),2
,Hexagon> STRING ),1
,item STRING <celtic>,1
,<celtic> STRING ),1
,item STRING <brick>,1
,<brick> STRING ),1
,Spiral> STRING ),1
,item STRING <quadhex>,1
,<quadhex> STRING ),1
,T31212> STRING ),1
,T333333_33434> STRING ),1
,T33336> STRING ),1
,T33344> STRING ),1
,T3464> STRING ),1
,T3636> STRING ),1
,T4612> STRING ),1
,T488> STRING ),1
,option STRING <Dual>,1
,STRING <celtic>,1
,STRING <brick>,1
,STRING <quadhex>,1
,STRING <Dual>,1
,define STRING <Players:sumFingers>,1
,STRING <Players:sumFingers>,1
,define STRING <Num:row>,1
,+ STRING 1,1
,repeat STRING 1,1
,>= STRING STRING,2
,STRING <Num:row>,1
,<= STRING STRING,1
,item STRING <Next>,2
,<Next> STRING ),2
,item STRING <Mover>,2
,<Mover> STRING ),2
,<55> STRING ),1
,<60> STRING ),1
,<65> STRING ),2
,<70> STRING ),1
,<75> STRING ),1
,<80> STRING ),1
,<85> STRING ),1
,<90> STRING ),1
,<95> STRING ),1
,<100> STRING ),1
,STRING <Next>,2
,STRING <Mover>,2
,option STRING <Challenge>,15
,STRING <Challenge>,15
,item STRING <4,1
,item STRING <14,1
,item STRING <12,1
,STRING <4,1
,STRING <14,1
,STRING <12,1
,regions STRING HintRegions,1
,Sum STRING (,1
,STRING HintRegions,1
,<26> STRING ),4
,<27> STRING ),4
,<28> STRING ),4
,item STRING <31>,1
,<31> STRING ),2
,item STRING <32>,1
,<32> STRING ),1
,item STRING <33>,1
,<33> STRING ),1
,item STRING <34>,1
,<34> STRING ),2
,STRING <31>,1
,STRING <32>,1
,STRING <33>,1
,STRING <34>,1
,<111> STRING ),1
,<175> STRING ),1
,<260> STRING ),1
,<369> STRING ),1
,item STRING <31,1
,STRING <31,1
,define STRING <Robots:num>,1
,define STRING <SafeTeleportation:num>,1
,option STRING <SafeTeleportation>,1
,option STRING <Robots>,1
,STRING <Robots:num>,1
,STRING <SafeTeleportation:num>,1
,STRING <SafeTeleportation>,1
,STRING <Robots>,1
,option STRING <challenge>,2
,place STRING 42,2
,place STRING 35,1
,place STRING 47,2
,place STRING 60,1
,place STRING 63,1
,place STRING 26,1
,place STRING 62,2
,place STRING 61,1
,place STRING 7,1
,STRING <challenge>,2
,STRING 35,1
,STRING 47,2
,STRING 60,1
,STRING 63,1
,W STRING ),1
,place STRING <Board:start1>,1
,place STRING <Board:start2>,1
,<170> STRING ),1
,STRING <Board:start1>,1
,STRING <Board:start2>,1
,place STRING 336,1
,item STRING <692,1
,STRING 336,1
,STRING <692,1
,2> STRING ),1
,3> STRING ),1
,4> STRING ),1
,item STRING <12><14><4>,1
,<12><14><4> STRING ),1
,item STRING <14><18><6>,1
,<14><18><6> STRING ),1
,item STRING <16><21><8>,1
,<16><21><8> STRING ),1
,option STRING <OuterRing>,1
,item STRING <0><,1
,item STRING <2><,1
,STRING <12><14><4>,1
,STRING <14><18><6>,1
,STRING <16><21><8>,1
,STRING <OuterRing>,1
,STRING <0><,1
,STRING <2><,1
,place STRING coord:<Board:startTheseus>,1
,place STRING coord:<Board:startMinotaur>,1
,28> STRING ),1
,88> STRING ),1
,option STRING <Minotaur>,2
,STRING coord:<Board:startTheseus>,1
,STRING coord:<Board:startMinotaur>,1
,STRING <Minotaur>,2
,<63> STRING ),1
,<127> STRING ),1
,<255> STRING ),1
,<511> STRING ),1
by:P2,Occupied by:P2 ),27
,by:P2 ),27
,Occupied by:P2 STRING,8
,by:P2 STRING,8
,Occupied by:P2 on:Cell,2
,by:P2 on:Cell,2
,Occupied by:P2 top:True,1
,by:P2 top:True,1
by:P3,Occupied by:P3 ),1
,by:P3 ),1
by:P4,Occupied by:P4 ),1
,by:P4 ),1
40,{ 40 43,1
,40 43,1
,42 40 38,6
,40 38,6
,. 40 },6
,40 },17
,36 40 },2
,{ 40 41,4
,40 41,9
,43 40 34,1
,40 34,5
,46 40 34,3
,3 40 46,3
,48 40 32,3
,32 40 48,3
,50 40 30,3
,30 40 50,3
,40 46,4
,40 32,4
,40 48,7
,40 30,3
,40 50,6
,41 40 39,1
,pair 40 81,1
,65 40 ),1
,81 40 ),1
,pair 40 65,1
,40 39,1
,40 81,1
,40 ),34
,40 65,1
,42 40 },1
,{ 40 .,3
,40 .,3
,30 40 },2
,{ 40 50,2
,48 40 },1
,{ 40 32,1
,32 40 },2
,{ 40 48,2
,pair 40 150,1
,190 40 ),1
,40 150,1
,{ 40 28,5
,40 28,5
,face 40 ),1
,38 40 42,2
,40 42,5
,185 40 41,1
,pair 40 8,1
,13 40 ),1
,14 40 ),1
,25 40 ),2
,26 40 ),2
,27 40 ),2
,28 40 ),2
,pair 40 100,1
,15 40 ),1
,16 40 ),1
,17 40 ),1
,18 40 ),1
,pair 40 0,1
,pair 40 5,1
,pair 40 80,1
,49 40 ),1
,50 40 ),1
,51 40 ),1
,52 40 ),1
,53 40 ),1
,54 40 ),1
,55 40 ),1
,56 40 ),1
,29 40 ),1
,30 40 ),1
,31 40 ),1
,32 40 ),1
,33 40 ),1
,34 40 ),1
,35 40 ),1
,36 40 ),1
,pair 40 50,1
,40 8,1
,40 100,1
,40 0,1
,40 5,1
,40 80,1
,39 40 42,2
,colour 40 48,2
,39 40 44,2
,39 40 41,4
,40 44,2
,{ 40 47,2
,40 47,2
,{ 40 7,1
,40 7,1
,hint 40 4,1
,40 4,2
,37 40 42,1
,38 40 37,1
,40 37,2
,28 40 },1
,31 40 49,2
,40 49,3
,{ 40 3,1
,40 3,1
,{ 40 },1
,{ 40 4,1
,35 40 },1
,42 40 37,1
,33 40 34,1
,34 40 46,1
,{ 40 49,1
,29 40 60,1
,40 60,2
,20 40 60,1
41,38 41 },1
,41 },16
,{ 41 .,4
,41 .,4
,27 41 57,1
,41 57,1
,40 41 },3
,36 41 },2
,{ 41 45,1
,41 45,1
,47 41 35,3
,35 41 47,3
,49 41 33,3
,33 41 49,3
,51 41 31,3
,31 41 51,3
,41 35,3
,41 47,3
,41 33,3
,41 49,3
,41 31,3
,41 51,3
,42 41 40,1
,pair 41 80,1
,64 41 ),1
,80 41 ),1
,pair 41 64,1
,pair 41 30,1
,41 40,1
,41 80,1
,41 ),4
,41 64,1
,41 30,1
,43 41 },2
,. 41 },1
,27 41 },1
,. 41 48,2
,41 48,2
,28 41 43,1
,41 43,2
,36 41 42,1
,41 42,8
,pair 41 427,1
,41 427,1
,) 41 ),1
,{ 41 28,6
,41 28,6
,face 41 ),1
,43 41 39,1
,STRING 41 count:7,1
,41 39,1
,41 count:7,1
,40 41 42,6
,pair 41 8,1
,pair 41 100,2
,pair 41 0,1
,pair 41 5,1
,pair 41 50,1
,41 8,1
,41 100,2
,41 0,1
,41 5,2
,41 50,4
,42 41 },1
,34 41 },2
,39 41 43,1
,39 41 },1
,{ 41 6,1
,41 6,1
,29 41 53,1
,41 53,1
,{ 41 50,1
,32 41 50,1
,hint 41 3,1
,41 3,1
,{ 41 5,1
,53 41 42,1
,43 41 38,1
,41 38,1
,{ 41 1,1
,41 1,1
,48 41 50,1
,{ 41 58,2
,{ 41 },2
,41 58,2
,21 41 61,1
,41 61,1
,33 41 63,1
,41 63,1
coord:<Board:startTheseus>,STRING coord:<Board:startTheseus> ),1
,coord:<Board:startTheseus> ),1
42,{ 42 45,1
,42 45,1
,51 42 },1
,42 },6
,44 42 40,6
,42 40,8
,45 42 48,1
,42 48,5
,48 42 36,3
,36 42 48,3
,50 42 34,3
,34 42 50,3
,52 42 32,3
,32 42 52,3
,42 36,3
,42 34,3
,42 50,4
,42 32,3
,42 52,4
,P2 42 ),1
,42 ),6
,45 42 41,1
,pair 42 79,1
,63 42 ),1
,79 42 ),1
,pair 42 63,1
,pair 42 31,1
,42 41,2
,42 79,1
,42 63,1
,42 31,1
,6 42 48,1
,{ 42 40,2
,. 42 28,1
,42 28,6
,= 42 (,2
,42 (,2
,35 42 .,2
,42 .,2
,41 42 },1
,36 42 },1
,31 42 52,1
,pair 42 428,1
,42 428,1
,{ 42 28,5
,face 42 ),1
,40 42 44,1
,STRING 42 count:7,1
,42 44,1
,42 count:7,1
,41 42 43,7
,42 43,15
,pair 42 8,1
,pair 42 100,2
,pair 42 0,1
,pair 42 5,1
,pair 42 50,1
,34 42 },1
,42 8,1
,42 100,2
,42 0,1
,42 5,1
,40 42 43,3
,{ 42 43,3
,{ 42 41,1
,hint 42 3,1
,42 3,2
,40 42 35,1
,35 42 43,1
,{ 42 9,2
,42 35,1
,42 9,2
,{ 42 54,1
,42 54,1
,33 42 51,1
,42 51,1
,{ 42 },1
,{ 42 7,1
,42 7,1
,{ 42 3,1
,37 42 43,1
,{ 42 6,1
,42 6,1
,STRING 42 ),2
,52 42 },1
,86 42 62,1
,42 62,2
,22 42 62,1
,29 42 26,1
,42 26,1
43,40 43 },1
,43 },7
,24 43 53,1
,43 53,6
,{ 43 21,7
,43 21,7
,46 43 40,1
,43 40,1
,49 43 37,3
,37 43 49,3
,51 43 35,3
,35 43 51,3
,53 43 33,3
,33 43 53,4
,43 37,3
,43 49,4
,43 35,3
,43 51,3
,43 33,3
,32 43 44,1
,pair 43 78,1
,60 43 ),1
,78 43 ),1
,pair 43 60,1
,43 44,15
,43 78,1
,43 ),3
,43 60,1
,{ 43 41,1
,43 41,4
,41 43 45,1
,36 43 },1
,43 45,1
,27 43 59,1
,43 59,1
,pair 43 429,1
,43 429,1
,{ 43 28,5
,43 28,6
,face 43 ),1
,45 43 41,1
,42 43 44,11
,pair 43 8,1
,pair 43 100,2
,pair 43 0,1
,pair 43 5,1
,pair 43 50,1
,101 43 28,1
,43 8,1
,43 100,2
,43 0,1
,43 5,1
,43 50,1
,42 43 },2
,{ 43 44,2
,41 43 44,1
,42 43 41,1
,31 43 55,1
,43 55,1
,42 43 52,1
,43 52,2
,34 43 52,1
,{ 43 6,1
,43 6,1
,{ 43 },2
,{ 43 3,1
,43 3,1
,39 43 },1
,44 43 41,1
,{ 43 4,1
,43 4,1
,36 43 49,1
,50 43 36,1
,50 43 53,1
,50 43 27,2
,43 36,1
,43 27,2
,36 43 56,1
,43 56,1
44,{ 44 47,2
,44 47,2
,. 44 },5
,44 },24
,. 44 (,1
,44 (,1
,58 44 42,6
,44 42,6
,. 44 89,1
,44 89,1
,{ 44 },8
,face 44 ),1
,44 ),4
,{ 44 107,1
,53 44 107,1
,44 107,2
,50 44 38,3
,38 44 50,3
,52 44 36,3
,36 44 52,3
,54 44 34,3
,34 44 54,3
,44 38,3
,44 50,4
,44 36,3
,44 52,3
,44 34,4
,44 54,5
,4 44 76,1
,STRING 44 count:2,1
,P4 44 ),1
,44 76,1
,44 count:2,1
,43 44 45,8
,pair 44 77,1
,61 44 ),1
,77 44 ),1
,pair 44 61,1
,44 45,11
,44 77,1
,44 61,1
,. 44 51,2
,44 51,2
,35 44 },2
,52 44 },1
,{ 44 34,1
,{ 44 45,1
,pair 44 430,1
,44 430,1
,39 44 .,1
,44 .,1
,{ 44 28,5
,44 28,5
,42 44 46,1
,44 46,3
,pair 44 5,1
,pair 44 50,1
,pair 44 100,1
,44 5,2
,44 100,1
,{ 44 46,2
,11 44 },1
,{ 44 54,2
,40 44 45,2
,43 44 },5
,43 44 33,2
,33 44 },1
,44 33,2
,32 44 },1
,35 44 53,1
,{ 44 5,1
,44 53,1
,{ 44 43,1
,44 43,1
,{ 44 2,1
,44 2,1
,45 44 24,1
,44 24,1
,45 44 58,1
,44 58,1
at:38,Edge at:38 ),3
,at:38 ),3
45,rotate 45 (,16
,45 (,20
,42 45 },1
,45 },20
,. 45 },9
,3 45 42,1
,45 42,2
,41 45 },1
,{ 45 46,3
,{ 45 37,1
,P3 45 ),1
,P4 45 ),1
,45 46,11
,45 37,4
,45 ),6
,. 45 (,4
,51 45 39,3
,39 45 51,3
,53 45 37,3
,37 45 53,3
,55 45 35,3
,35 45 55,3
,45 39,4
,45 51,3
,45 53,3
,45 35,4
,45 55,4
,44 45 42,1
,pair 45 76,1
,62 45 ),1
,76 45 ),1
,pair 45 62,1
,45 76,1
,45 62,1
,. 45 0,4
,. 45 -0,2
,45 0,4
,45 -0,2
,38 45 .,2
,45 .,3
,43 45 47,1
,45 47,3
,37 45 },1
,{ 45 39,1
,44 45 },2
,pair 45 177,1
,417 45 ),1
,45 177,1
,face 45 ),1
,47 45 43,1
,45 43,1
,44 45 46,8
,pair 45 4,1
,pair 45 50,2
,45 4,3
,45 50,2
,{ 45 47,2
,hint 45 8,1
,45 8,1
,48 45 11,1
,5 45 35,1
,5 45 48,1
,45 11,1
,45 48,1
,35 45 },1
,36 45 },1
,{ 45 .,1
,36 45 54,1
,45 54,1
,{ 45 },2
,hint 45 4,1
,{ 45 2,1
,45 2,1
,{ 45 4,1
,32 45 56,1
,45 56,1
,37 45 55,1
,32 45 },1
,26 45 },1
,46 45 44,1
,45 44,2
,32 45 44,1
at:39,Edge at:39 ),3
,at:39 ),3
46,{ 46 49,3
,46 49,4
,57 46 62,1
,46 62,2
,36 46 56,4
,46 56,5
,45 46 },1
,{ 46 38,1
,{ 46 50,1
,P1 46 ),1
,P2 46 ),1
,46 },9
,46 38,6
,46 50,3
,46 ),7
,2 46 ),1
,10 46 43,1
,46 43,1
,52 46 40,3
,40 46 52,3
,54 46 38,3
,38 46 54,3
,56 46 36,3
,46 40,3
,46 52,3
,46 54,3
,46 36,3
,53 46 47,1
,28 46 ),1
,pair 46 75,1
,pair 46 28,1
,75 46 ),1
,pair 46 89,1
,46 47,13
,46 75,1
,46 28,1
,46 89,1
,. 46 },2
,36 46 },1
,{ 46 56,1
,30 46 62,1
,pair 46 178,1
,418 46 ),1
,46 178,1
,face 46 ),1
,44 46 },3
,45 46 47,10
,pair 46 4,1
,pair 46 50,2
,46 4,1
,{ 46 8,1
,46 8,2
,hint 46 8,1
,49 46 38,1
,48 46 38,1
,48 46 49,1
,{ 46 47,2
,34 46 58,1
,46 58,1
,37 46 55,1
,46 55,1
,{ 46 },2
,{ 46 5,2
,46 5,2
,40 46 51,1
,{ 46 9,1
,46 51,1
,46 9,1
,{ 46 35,1
,46 35,1
,48 46 45,1
,46 45,1
,47 46 33,1
,21 46 63,1
,46 33,1
,46 63,1
47,44 47 },2
,47 },16
,. 47 7,1
,47 7,1
,60 47 49,6
,47 49,7
,15 47 94,1
,47 94,1
,32 47 15,1
,47 15,2
,53 47 41,3
,41 47 53,3
,55 47 39,3
,39 47 55,3
,57 47 37,3
,37 47 57,4
,47 41,3
,47 53,5
,47 39,3
,47 55,3
,47 37,5
,47 57,4
,15 47 84,1
,47 84,1
,46 47 59,1
,29 47 ),1
,pair 47 74,1
,pair 47 29,1
,74 47 ),1
,14 47 ),1
,pair 47 59,1
,50 47 ),1
,61 47 ),1
,pair 47 54,1
,47 59,3
,47 ),8
,47 74,1
,47 29,1
,47 54,2
,30 47 15,1
,33 47 },1
,{ 47 .,2
,31 47 },1
,47 .,2
,. 47 },2
,45 47 49,1
,pair 47 13,1
,47 13,1
,face 47 ),1
,48 47 45,1
,47 45,1
,46 47 96,1
,47 96,1
,pair 47 4,1
,pair 47 50,2
,47 4,1
,47 50,4
,46 47 },5
,45 47 },2
,{ 47 48,3
,47 48,4
,46 47 53,2
,46 47 50,2
,38 47 54,1
,40 47 },2
,. 47 (,1
,46 47 48,1
,{ 47 37,1
,49 47 37,1
,49 47 },1
,47 (,1
,35 47 59,1
,38 47 56,1
,{ 47 9,1
,47 56,1
,47 9,1
,46 47 51,1
,{ 47 5,1
,47 51,1
,47 5,1
,STRING 47 ),2
,53 47 46,1
,47 46,1
48,{ 48 51,1
,48 51,1
,34 48 ),1
,48 ),5
,28 48 68,12
,16 48 87,2
,48 68,12
,48 87,2
,42 48 24,1
,48 24,1
,P2 48 ),1
,16 48 },1
,48 },12
,64 48 94,1
,48 94,1
,STRING 48 count:2,1
,48 count:2,1
,54 48 42,3
,42 48 54,2
,42 48 },2
,56 48 40,3
,40 48 56,3
,58 48 38,3
,38 48 58,3
,48 42,3
,48 54,2
,48 40,4
,48 56,6
,48 38,3
,48 58,4
,67 48 49,1
,22 48 ),1
,pair 48 73,1
,pair 48 22,1
,73 48 ),1
,13 48 ),1
,pair 48 74,1
,pair 48 65,1
,48 49,10
,48 73,1
,48 22,1
,48 74,1
,48 65,1
,36 48 60,1
,48 60,1
,. 48 },1
,. 48 32,3
,48 32,3
,41 48 .,2
,48 .,2
,56 48 },1
,{ 48 40,1
,40 48 },2
,{ 48 56,2
,pair 48 14,1
,48 14,1
,{ 48 47,1
,48 47,1
,pair 48 4,1
,pair 48 50,2
,48 4,1
,48 50,2
,40 48 36,2
,48 36,2
,47 48 },2
,17 48 },1
,38 48 62,1
,48 62,1
,{ 48 3,2
,48 3,2
,47 48 49,2
,50 48 45,1
,50 48 46,1
,45 48 46,1
,48 45,1
,48 46,3
,{ 48 58,1
,39 48 57,1
,48 57,1
,{ 48 },2
,{ 48 49,7
,{ 48 2,1
,48 2,1
,{ 48 41,1
,48 41,1
,49 48 46,1
,76 48 28,1
,63 48 56,1
,48 28,1
at:34,Edge at:34 ),5
,at:34 ),5
49,46 49 },3
,49 },10
,32 49 50,1
,49 50,10
,. 49 },1
,47 49 51,6
,49 51,6
,24 49 .,1
,. 49 99,1
,49 .,1
,49 99,1
,55 49 43,3
,43 49 55,3
,43 49 },1
,57 49 41,3
,41 49 57,3
,59 49 39,3
,39 49 59,3
,49 43,3
,49 55,3
,49 41,3
,49 57,3
,49 39,3
,49 59,4
,48 49 50,6
,23 49 ),1
,pair 49 72,1
,pair 49 23,1
,72 49 ),1
,12 49 ),1
,pair 49 71,1
,pair 49 54,1
,49 ),9
,49 72,1
,49 23,1
,49 71,1
,49 54,1
,. 49 (,6
,49 (,6
,47 49 62,1
,49 62,1
,pair 49 431,1
,349 49 ),1
,353 49 ),1
,357 49 ),1
,361 49 ),1
,365 49 ),1
,49 431,1
,{ 49 },1
,33 49 ),1
,pair 49 4,1
,pair 49 40,1
,pair 49 100,1
,14 49 108,1
,49 4,2
,49 40,1
,49 100,1
,49 108,1
,39 49 67,1
,49 67,1
,hint 49 1,1
,49 1,1
,51 49 46,1
,51 49 47,1
,46 49 47,1
,49 46,1
,49 47,2
,{ 49 50,1
,37 49 61,1
,48 49 },3
,{ 49 59,1
,49 61,1
,40 49 },1
,40 49 58,1
,49 58,1
,62 49 50,1
,{ 49 4,1
,{ 49 38,1
,40 49 50,1
,48 49 30,1
,49 38,1
,49 30,1
,50 49 48,1
,49 48,1
,64 49 63,1
,49 63,1
at:35,Edge at:35 ),5
,at:35 ),5
at:36,Edge at:36 ),3
,at:36 ),3
at:37,Edge at:37 ),3
,at:37 ),3
at:30,Edge at:30 ),6
,at:30 ),6
numbers,these numbers also,1
,numbers also,1
at:31,Edge at:31 ),6
,at:31 ),6
at:32,what at:32 ),1
,at:32 ),6
,Edge at:32 ),5
390,389 390 },1
,390 },1
,176 390 ),1
,178 390 ),1
,182 390 ),1
,308 390 ),1
,386 390 ),1
,pair 390 396,1
,390 ),5
,390 396,1
,327 390 474,1
,390 474,1
<rook_spaces>,<rook_dir> <rook_spaces> ),6
,<rook_spaces> ),6
<High>,STRING <High> args:,1
,<High> args:,1
4>,<4 4> <,1
,4> <,1
,3 4> STRING,1
,4> STRING,1
at:33,what at:33 ),1
,at:33 ),6
,Edge at:33 ),5
391,37 391 382,1
,391 382,1
,225 391 ),1
,pair 391 397,1
,391 ),1
,391 397,1
,{ 391 },1
,391 },1
392,226 392 ),1
,pair 392 398,1
,392 ),1
,392 398,1
,351 392 372,1
,392 372,1
393,{ 393 394,1
,393 394,1
,pair 393 581,1
,393 581,1
,{ 393 },1
,393 },1
<doneSoFar>,{ <doneSoFar> <numCounters>,1
,<doneSoFar> <numCounters>,1
394,393 394 },1
,394 },1
,pair 394 582,1
,394 582,1
395,332 395 },1
,332 395 386,1
,395 },2
,395 386,1
,183 395 ),1
,389 395 ),1
,pair 395 583,1
,395 ),2
,395 583,1
,{ 395 444,1
,395 444,1
,{ 395 },1
396,344 396 397,1
,396 397,1
,184 396 ),1
,390 396 ),1
,pair 396 584,1
,396 ),2
,396 584,1
397,396 397 },1
,397 },2
,17 397 ),1
,19 397 ),1
,223 397 ),1
,391 397 ),1
,pair 397 585,1
,397 ),4
,397 585,1
,{ 397 },1
value:60,state:1 value:60 ),2
,value:60 ),2
398,18 398 ),1
,20 398 ),1
,224 398 ),1
,392 398 ),1
,pair 398 586,1
,398 ),4
,398 586,1
,379 398 183,1
,398 183,1
399,pair 399 587,1
,399 587,1
,256 399 448,1
,399 448,1
swapped,got swapped into,2
,swapped into,2
39>,. 39> STRING,1
,. 39> <40,1
,39> STRING,1
,39> <40,1
50,{ 50 53,1
,50 53,1
,49 50 },1
,50 },10
,. 50 },3
,39 50 },1
,{ 50 51,3
,46 50 },1
,50 51,10
,56 50 44,3
,44 50 56,2
,44 50 },1
,58 50 42,3
,42 50 58,3
,60 50 40,3
,40 50 60,3
,50 44,3
,50 56,2
,50 42,3
,50 58,3
,50 40,4
,50 60,5
,49 50 51,4
,24 50 ),4
,pair 50 71,1
,pair 50 24,1
,71 50 ),1
,11 50 ),3
,pair 50 47,1
,51 50 ),1
,50 ),61
,50 71,1
,50 24,1
,50 47,1
,) 50 ),3
,< 50 (,1
,50 (,3
,40 50 },2
,{ 50 60,2
,* 50 (,2
,60 50 39,1
,50 39,1
,pair 50 432,1
,350 50 ),1
,354 50 ),1
,358 50 ),1
,362 50 ),1
,366 50 ),1
,50 432,1
,21 50 ),2
,22 50 ),2
,23 50 ),3
,12 50 ),1
,13 50 ),1
,14 50 ),1
,19 50 ),1
,20 50 ),1
,33 50 ),1
,34 50 ),1
,37 50 ),2
,38 50 ),2
,pair 50 4,1
,41 50 ),1
,42 50 ),1
,43 50 ),1
,44 50 ),1
,45 50 ),2
,46 50 ),2
,47 50 ),2
,48 50 ),2
,pair 50 40,1
,25 50 ),1
,26 50 ),1
,27 50 ),1
,28 50 ),1
,39 50 ),1
,40 50 ),1
,pair 50 100,1
,65 50 ),1
,66 50 ),1
,67 50 ),1
,68 50 ),1
,73 50 ),1
,74 50 ),1
,75 50 ),1
,76 50 ),1
,0 50 0,1
,50 4,1
,50 100,1
,50 0,1
,47 50 51,2
,{ 50 2,1
,50 2,2
,hint 50 2,1
,52 50 48,1
,0 50 48,1
,0 50 52,1
,50 48,2
,50 52,1
,38 50 62,1
,50 62,1
,41 50 59,2
,50 59,2
,{ 50 },1
,{ 50 7,2
,50 7,2
,49 50 54,1
,60 50 38,1
,50 54,1
,50 38,1
,41 50 51,1
,49 50 43,4
,50 43,4
,53 50 49,1
,50 49,1
First,) First holes,1
,First holes,1
,= First Attack,1
,First Attack,1
,movement First some,1
,First some,1
<PlaceDisc:suicideOption>,forEach <PlaceDisc:suicideOption> if:<PlaceDisc:location>,1
,<PlaceDisc:suicideOption> if:<PlaceDisc:location>,1
51,48 51 },1
,51 },10
,71 51 31,12
,51 31,12
,35 51 52,1
,51 52,6
,{ 51 56,1
,51 56,2
,56 51 42,1
,51 42,1
,49 51 53,6
,51 53,6
,39 51 },1
,50 51 },4
,67 51 58,1
,51 58,1
,57 51 45,3
,45 51 57,2
,45 51 },1
,59 51 43,3
,43 51 59,3
,61 51 41,3
,41 51 61,3
,51 45,3
,51 57,2
,51 43,3
,51 59,3
,51 41,3
,51 61,4
,50 51 52,3
,25 51 ),1
,pair 51 70,1
,pair 51 25,1
,70 51 ),1
,10 51 ),1
,pair 51 50,1
,52 51 ),1
,51 ),4
,51 70,1
,51 25,1
,51 50,1
,44 51 .,2
,51 .,2
,35 51 },1
,pair 51 431,1
,51 431,1
,pair 51 4,1
,pair 51 40,1
,pair 51 100,1
,51 4,2
,51 40,1
,51 100,1
,{ 51 54,2
,51 54,5
,50 51 54,3
,{ 51 49,1
,52 51 49,1
,52 51 },1
,{ 51 2,2
,51 49,2
,51 2,3
,{ 51 63,1
,{ 51 52,1
,{ 51 61,1
,51 63,1
,{ 51 60,1
,51 60,2
,42 51 60,1
,{ 51 8,1
,51 8,1
,hint 51 2,1
,{ 51 4,1
,{ 51 1,1
,51 1,1
,47 51 52,1
,46 51 56,1
,{ 51 },1
Remaining,STRING Remaining piece,1
,Remaining piece,1
52,{ 52 55,1
,52 55,1
,51 52 },1
,52 },5
,STRING 52 count:4,1
,52 count:4,1
,3 52 ),1
,52 ),5
,58 52 46,3
,46 52 58,2
,46 52 },1
,60 52 44,3
,44 52 60,3
,62 52 42,3
,42 52 62,3
,52 46,3
,52 58,2
,52 44,4
,52 60,3
,52 42,4
,52 62,4
,51 52 53,4
,26 52 ),1
,pair 52 69,1
,pair 52 26,1
,69 52 ),1
,9 52 ),1
,pair 52 51,1
,52 53,8
,52 69,1
,52 26,1
,52 51,3
,P3 52 ),1
,60 52 },1
,{ 52 44,1
,{ 52 53,3
,42 52 63,1
,52 63,1
,pair 52 432,1
,52 432,1
,pair 52 4,1
,pair 52 40,1
,pair 52 100,1
,52 4,1
,52 40,1
,52 100,1
,{ 52 6,1
,52 6,1
,53 52 50,1
,53 52 51,1
,50 52 51,1
,52 50,1
,{ 52 62,1
,43 52 },1
,43 52 61,1
,52 61,1
,{ 52 },1
,{ 52 8,1
,52 8,1
,{ 52 1,1
,52 1,1
,{ 52 0,1
,52 0,1
,51 52 56,1
,52 56,1
,{ 52 42,1
,56 52 53,1
53,50 53 },1
,53 },12
,43 53 },1
,51 53 55,6
,53 55,7
,62 53 44,1
,53 44,1
,59 53 47,3
,47 53 59,2
,47 53 },1
,61 53 45,3
,45 53 61,3
,63 53 43,3
,43 53 63,4
,53 47,4
,53 59,2
,53 45,3
,53 61,4
,53 43,3
,53 63,4
,P3 53 ),1
,53 ),4
,52 53 46,1
,27 53 ),1
,pair 53 61,1
,pair 53 27,1
,61 53 ),1
,15 53 ),1
,53 46,1
,53 27,1
,. 53 },3
,36 53 .,1
,53 .,1
,52 53 },4
,pair 53 71,1
,53 71,1
,pair 53 5,1
,pair 53 40,1
,pair 53 70,1
,53 5,2
,53 40,1
,53 70,1
,47 53 54,2
,53 54,5
,{ 53 52,2
,{ 53 5,1
,53 52,2
,{ 53 54,1
,41 53 65,1
,52 53 54,1
,53 65,1
,{ 53 62,1
,53 62,2
,44 53 62,1
,52 53 41,1
,53 41,1
,58 53 },1
,{ 53 4,1
,53 4,1
,56 53 },1
,43 53 54,1
,27 53 55,1
,52 53 50,1
,53 50,1
,60 53 47,1
54,{ 54 57,2
,54 57,2
,. 54 },1
,54 },9
,. 54 109,1
,54 109,1
,70 54 61,1
,54 61,1
,STRING 54 ),1
,{ 54 48,1
,48 54 48,2
,62 54 46,3
,46 54 62,3
,64 54 44,3
,44 54 64,3
,54 ),6
,54 48,3
,54 46,3
,54 62,3
,54 44,3
,54 64,4
,55 54 60,1
,35 54 ),1
,pair 54 34,1
,pair 54 35,1
,34 54 ),1
,47 54 ),1
,49 54 ),1
,pair 54 28,1
,54 60,1
,54 34,1
,54 35,1
,54 28,1
,{ 54 .,4
,54 .,4
,= 54 (,1
,54 (,1
,{ 54 38,1
,54 38,1
,pair 54 72,1
,54 72,1
,Mover 54 ),1
,pair 54 5,1
,pair 54 40,1
,pair 54 70,1
,54 5,1
,54 40,1
,54 70,1
,51 54 },2
,8 54 },1
,44 54 },2
,53 54 55,4
,51 54 55,3
,54 55,9
,47 54 59,1
,54 59,1
,hint 54 3,1
,54 3,1
,42 54 },1
,53 54 },1
,{ 54 55,1
,45 54 64,1
,50 54 55,1
,{ 54 },1
55,52 55 },1
,55 },13
,. 55 },3
,53 55 57,6
,55 57,6
,{ 55 63,1
,55 63,5
,STRING 55 ),1
,{ 55 49,1
,49 55 49,2
,63 55 47,3
,47 55 63,3
,65 55 45,3
,45 55 65,3
,55 ),6
,55 49,3
,55 47,3
,55 45,3
,55 65,4
,. 55 (,1
,56 55 54,1
,34 55 ),1
,pair 55 24,1
,pair 55 34,1
,24 55 ),1
,15 55 ),1
,pair 55 28,1
,55 (,1
,55 54,1
,55 24,1
,55 34,1
,55 28,1
,{ 55 .,1
,55 .,1
,pair 55 177,1
,55 177,1
,pair 55 5,1
,pair 55 40,1
,pair 55 70,1
,55 5,1
,55 40,1
,55 70,1
,72 55 ),2
,37 55 },2
,54 55 59,3
,54 55 60,2
,55 59,3
,55 60,3
,54 55 },3
,43 55 67,1
,55 67,1
,54 55 63,1
,46 55 65,1
,{ 55 },1
,{ 55 7,1
,{ 55 4,1
,55 7,1
,55 4,1
,49 55 60,1
,45 55 },1
,27 55 },1
,53 55 },1
,36 55 56,1
,55 56,1
56,{ 56 59,1
,56 59,1
,59 56 },1
,56 },7
,51 56 },2
,46 56 51,1
,56 51,1
,P1 56 ),3
,P3 56 ),2
,P5 56 ),1
,56 ),12
,STRING 56 ),3
,{ 56 50,1
,50 56 50,2
,64 56 48,3
,48 56 64,4
,66 56 46,3
,46 56 66,3
,56 50,3
,56 48,4
,56 64,6
,56 46,3
,56 66,6
,57 56 55,1
,33 56 ),1
,pair 56 26,1
,pair 56 33,1
,26 56 ),1
,27 56 ),1
,pair 56 28,1
,56 55,1
,56 26,1
,56 33,1
,56 28,1
,. 56 63,1
,56 63,3
,64 56 },1
,{ 56 48,1
,48 56 },1
,{ 56 64,1
,46 56 },1
,{ 56 66,2
,pair 56 178,1
,56 178,1
,pair 56 5,1
,pair 56 40,1
,pair 56 70,1
,56 5,3
,56 40,1
,56 70,1
,{ 56 6,2
,56 6,2
,hint 56 5,1
,{ 56 57,1
,56 57,3
,48 56 57,1
,47 56 66,1
,. 56 64,1
,hint 56 3,1
,56 3,1
,{ 56 5,1
,52 56 57,1
,45 56 65,1
,61 56 },1
,{ 56 4,1
,56 65,1
,56 4,1
,{ 56 53,1
,{ 56 63,2
,{ 56 61,1
,56 53,1
,56 61,1
,55 56 52,1
,56 52,1
,43 56 62,1
,56 62,1
57,54 57 },2
,57 },11
,41 57 46,1
,57 46,1
,55 57 },6
,{ 57 61,1
,57 61,3
,face 57 ),1
,57 ),5
,STRING 57 ),1
,{ 57 51,1
,51 57 51,2
,65 57 49,3
,49 57 65,3
,67 57 47,3
,47 57 67,4
,57 51,3
,57 49,3
,57 65,3
,57 47,3
,57 67,5
,58 57 56,1
,32 57 ),1
,pair 57 28,2
,pair 57 32,1
,28 57 ),1
,57 56,1
,57 28,2
,57 32,1
,{ 57 .,2
,57 .,2
,pair 57 433,1
,159 57 ),1
,57 433,1
,pair 57 7,1
,pair 57 100,2
,57 7,1
,57 100,2
,33 57 69,1
,57 69,2
,{ 57 58,1
,{ 57 69,1
,56 57 58,1
,57 58,3
,56 57 },1
,48 57 67,1
,{ 57 1,1
,57 1,1
,{ 57 },2
,{ 57 3,1
,57 3,1
,71 57 58,1
,56 57 61,1
,62 57 61,1
,37 57 77,1
,57 77,1
58,{ 58 61,1
,58 61,1
,61 58 59,1
,58 59,4
,{ 58 44,6
,58 44,6
,. 58 -11,1
,. 58 11,1
,51 58 64,1
,58 -11,1
,58 11,1
,58 64,1
,STRING 58 ),4
,58 ),7
,{ 58 52,1
,52 58 52,2
,66 58 50,3
,50 58 66,3
,68 58 48,3
,48 58 68,3
,58 52,3
,58 50,3
,58 66,3
,58 48,3
,58 68,4
,59 58 57,1
,31 58 ),1
,pair 58 30,1
,pair 58 31,1
,30 58 ),1
,pair 58 28,1
,58 57,1
,58 30,1
,58 31,1
,58 28,1
,. 58 72,1
,58 72,1
,pair 58 434,1
,160 58 ),1
,58 434,1
,107 58 9,1
,58 9,2
,pair 58 7,1
,pair 58 100,2
,58 7,1
,58 100,2
,57 58 59,3
,46 58 70,1
,48 58 },1
,58 70,1
,58 },4
,{ 58 67,1
,58 67,1
,49 58 68,1
,{ 58 9,1
,63 58 53,1
,63 58 62,1
,58 53,1
,58 62,1
,34 58 },1
,41 58 },2
,38 58 78,1
,44 58 8,1
,58 78,1
,58 8,1
,73 58 109,1
,58 109,1
59,56 59 },1
,59 },8
,58 59 56,1
,59 56,1
,. 59 },1
,29 59 .,1
,. 59 119,1
,59 .,1
,59 119,1
,. 59 (,2
,59 (,2
,STRING 59 ),5
,{ 59 53,1
,53 59 53,2
,67 59 51,3
,51 59 67,3
,69 59 49,3
,49 59 69,3
,59 ),10
,59 53,3
,59 51,3
,59 67,4
,59 49,3
,59 69,4
,47 59 58,1
,30 59 ),1
,pair 59 32,1
,pair 59 30,1
,32 59 ),1
,47 59 ),1
,pair 59 71,1
,pair 59 28,1
,59 58,1
,59 32,1
,59 30,1
,59 71,2
,59 28,1
,. 59 66,1
,59 66,1
,43 59 },1
,29 59 ),1
,pair 59 201,1
,59 201,1
,10 59 255,1
,59 255,1
,pair 59 7,1
,pair 59 100,2
,77 59 ),1
,59 7,1
,59 100,2
,55 59 60,3
,59 60,5
,54 59 60,1
,58 59 },2
,47 59 71,1
,49 59 },1
,50 59 },1
,50 59 69,1
,. 59 67,1
,{ 59 5,2
,59 5,2
,{ 59 },1
,58 59 60,1
,{ 59 1,1
,59 1,1
,64 59 63,1
,59 63,1
,79 59 39,1
,59 39,1
,39 59 79,1
,59 79,1
maps,Player maps (,1
,maps (,1
seeds,with seeds at,2
,seeds at,2
at:41,Edge at:41 ),3
,at:41 ),3
5>,<hex 5> <0,1
,5> <0,1
,<6 5> STRING,1
,5> STRING,2
,<5 5> <,2
,5> <,2
,. 5> <12>,1
,5> <12>,1
,4 5> STRING,1
<Swap:playRules>,play <Swap:playRules> ),1
,<Swap:playRules> ),1
<BoardShape:directionsUsed>,STRING <BoardShape:directionsUsed> ),3
,) <BoardShape:directionsUsed> ),5
,<BoardShape:directionsUsed> ),8
,Group <BoardShape:directionsUsed> Mover,2
,Group <BoardShape:directionsUsed> Next,1
,<BoardShape:directionsUsed> Mover,2
,<BoardShape:directionsUsed> Next,1
at:42,Edge at:42 ),2
,at:42 ),2
at:43,Edge at:43 ),2
,at:43 ),2
pyramidal:True,4 pyramidal:True ),1
,pyramidal:True ),4
,<Board> pyramidal:True ),2
,5 pyramidal:True ),1
at:44,Edge at:44 ),2
,at:44 ),2
look,) look the,1
,look the,1
at:40,Edge at:40 ),3
,at:40 ),3
<Moves>,STRING <Moves> args:,2
,<Moves> args:,2
,Each <Moves> ),1
,<Moves> ),1
value:50,state:1 value:50 ),2
,state:4 value:50 ),1
,state:3 value:50 ),1
,value:50 ),4
THIS,STRING THIS IS,1
,THIS IS,1
60,{ 60 63,1
,60 63,1
,{ 60 62,3
,60 62,4
,{ 60 47,6
,60 47,6
,. 60 },1
,60 },7
,68 60 52,3
,52 60 68,3
,70 60 50,3
,50 60 70,3
,60 52,4
,60 68,3
,60 50,5
,60 70,7
,54 60 84,1
,36 60 ),2
,pair 60 43,1
,pair 60 36,1
,43 60 ),1
,pair 60 62,1
,66 60 ),1
,8 60 ),1
,60 84,1
,60 ),19
,60 43,1
,60 36,1
,48 60 72,1
,60 72,1
,<= 60 (,1
,60 (,1
,{ 60 .,2
,60 .,2
,50 60 },2
,{ 60 70,3
,68 60 },1
,{ 60 52,1
,61 60 },1
,69 60 50,1
,or 60 degrees,1
,60 degrees,1
,30 60 ),2
,pair 60 202,1
,60 202,1
,15 60 ),1
,16 60 ),1
,17 60 ),1
,18 60 ),1
,pair 60 7,1
,29 60 ),1
,31 60 ),1
,32 60 ),1
,33 60 ),1
,34 60 ),1
,35 60 ),1
,pair 60 100,2
,60 7,1
,60 100,2
,colour 60 60,1
,60 60 60,1
,60 60 ),1
,60 60,2
,about 60 moves,1
,60 moves,1
,59 60 64,3
,55 60 65,2
,60 64,4
,60 65,3
,59 60 65,1
,{ 60 },1
,{ 60 9,1
,60 9,1
,hint 60 0,1
,60 0,1
,51 60 61,1
,60 61,3
,51 60 70,1
,{ 60 61,1
,{ 60 2,1
,{ 60 8,1
,60 2,1
,60 8,1
,59 60 61,1
,68 60 50,1
,55 60 },1
,{ 60 64,1
,{ 60 3,1
,60 3,1
,STRING 60 ),1
,40 60 80,2
,60 80,2
,<65 60 53,1
,60 53,1
61,58 61 },1
,61 },5
,P1 61 ),1
,{ 61 58,1
,61 ),6
,61 58,1
,57 61 73,1
,61 73,1
,{ 61 64,1
,61 64,1
,{ 61 63,1
,61 63,1
,54 61 67,1
,61 67,1
,STRING 61 ),2
,69 61 53,3
,53 61 69,3
,71 61 51,3
,51 61 71,3
,61 53,4
,61 69,3
,61 51,3
,61 71,5
,. 61 -4,1
,69 61 34,1
,53 61 ),1
,pair 61 44,1
,pair 61 53,1
,44 61 ),1
,pair 61 47,1
,62 61 ),1
,61 -4,1
,61 34,1
,61 44,1
,61 47,1
,{ 61 60,1
,61 60,1
,pair 61 435,1
,61 435,1
,pair 61 6,1
,pair 61 100,1
,pair 61 80,1
,61 6,1
,61 100,1
,61 80,1
,{ 61 62,2
,49 61 },1
,51 61 },1
,61 62,4
,60 61 },1
,52 61 71,1
,60 61 62,2
,{ 61 71,1
,hint 61 2,1
,61 2,1
,57 61 65,1
,57 61 56,1
,{ 61 8,1
,61 65,1
,61 56,1
,61 8,1
,56 61 },1
,41 61 81,1
,75 61 33,1
,61 81,1
,61 33,1
62,= 62 (,1
,62 (,1
,60 62 16,2
,62 16,3
,46 62 63,1
,62 63,6
,60 62 2,1
,62 2,1
,71 62 53,1
,62 53,1
,STRING 62 count:2,1
,62 count:2,1
,70 62 54,3
,54 62 70,3
,72 62 52,3
,52 62 72,3
,62 54,3
,62 70,4
,62 52,3
,62 72,7
,68 62 63,1
,16 62 ),1
,pair 62 45,1
,pair 62 16,1
,45 62 ),1
,60 62 ),1
,pair 62 61,1
,62 ),5
,62 45,1
,62 61,1
,. 62 69,1
,62 69,1
,49 62 64,1
,62 64,1
,46 62 },1
,62 },4
,37 62 74,1
,62 74,1
,pair 62 436,1
,62 436,1
,pair 62 6,1
,pair 62 100,1
,pair 62 80,1
,62 6,1
,62 100,1
,62 80,1
,colour 62 72,2
,48 62 75,1
,62 75,1
,61 62 63,3
,50 62 },1
,52 62 },1
,53 62 71,1
,62 71,1
,. 62 },1
,53 62 72,1
,. 62 70,1
,{ 62 72,1
,61 62 49,1
,62 49,1
,67 62 63,1
,58 62 57,1
,{ 62 1,1
,62 57,1
,62 1,1
,STRING 62 ),2
,42 62 82,1
,62 82,1
,42 62 3,1
,62 3,1
,56 62 20>,1
,62 20>,1
63,60 63 },1
,63 },4
,62 63 34,1
,63 34,1
,55 63 65,1
,63 65,5
,61 63 65,1
,3 63 ),1
,63 ),4
,71 63 55,3
,55 63 71,3
,73 63 53,3
,53 63 73,4
,63 55,3
,63 71,4
,63 53,3
,63 73,6
,{ 63 65,1
,62 63 64,2
,17 63 ),1
,pair 63 42,1
,pair 63 17,1
,42 63 ),1
,pair 63 65,1
,63 64,3
,63 42,1
,63 17,1
,67 63 65,1
,{ 63 .,1
,63 .,2
,17 63 71,1
,56 63 .,1
,52 63 73,1
,pair 63 161,1
,63 161,1
,21 63 74,1
,63 74,1
,pair 63 6,1
,pair 63 100,1
,pair 63 80,1
,63 6,1
,63 100,1
,63 80,1
,hint 63 0,1
,63 0,1
,51 63 75,1
,62 63 },1
,63 75,1
,55 63 64,1
,62 63 352,1
,{ 63 73,1
,{ 63 352,1
,63 352,2
,62 63 58,1
,59 63 58,1
,{ 63 9,1
,63 58,2
,63 9,1
,STRING 63 ),1
,56 63 },2
,49 63 77,1
,63 77,1
,41 63 76,1
,46 63 48,1
,63 76,1
,63 48,1
64,. 64 },1
,64 },7
,. 64 129,1
,64 129,1
,61 64 },1
,58 64 48,1
,64 48,1
,72 64 56,3
,56 64 72,2
,56 64 },2
,74 64 54,3
,54 64 74,4
,64 56,4
,64 72,3
,64 54,3
,64 74,4
,63 64 65,2
,18 64 ),1
,pair 64 41,1
,pair 64 18,1
,41 64 ),1
,pair 64 69,1
,65 64 ),1
,64 65,4
,64 ),6
,64 41,1
,64 18,1
,64 69,1
,62 64 66,1
,64 66,1
,72 64 },1
,{ 64 56,1
,{ 64 72,1
,) 64 ),2
,2 64 ),1
,pair 64 162,1
,64 162,1
,pair 64 6,1
,pair 64 100,1
,pair 64 80,1
,64 6,1
,64 100,1
,64 80,1
,60 64 65,2
,{ 64 76,1
,64 76,1
,63 64 },1
,{ 64 .,1
,56 64 .,1
,64 .,2
,{ 64 },1
,{ 64 1,1
,64 1,1
,60 64 68,1
,60 64 59,1
,{ 64 5,1
,64 68,1
,64 59,1
,64 5,1
,36 64 49,1
,64 49,1
,56 64 73,1
,64 73,1
65,. 65 1,2
,65 1,3
,face 65 ),1
,65 ),6
,. 65 },1
,65 },5
,63 65 34,1
,65 34,1
,63 65 32,1
,65 32,1
,73 65 57,3
,57 65 73,2
,57 65 },1
,75 65 55,3
,55 65 75,4
,65 57,3
,65 73,2
,65 55,3
,65 75,5
,63 65 15,1
,65 15,1
,64 65 66,1
,19 65 ),1
,pair 65 40,1
,pair 65 19,1
,40 65 ),1
,63 65 ),1
,pair 65 64,1
,48 65 ),1
,65 66,6
,65 40,1
,65 19,1
,65 64,1
,63 65 23,1
,65 23,1
,. 65 72,1
,65 72,3
,. 65 5,1
,65 5,1
,4 65 ),1
,pair 65 437,1
,65 437,1
,pair 65 6,1
,pair 65 70,1
,pair 65 50,1
,65 6,1
,65 70,1
,65 50,1
,64 65 71,2
,60 65 66,2
,65 71,2
,60 65 72,1
,64 65 },1
,53 65 },1
,{ 65 66,2
,{ 65 75,1
,{ 65 3,3
,65 3,3
,80 65 66,1
,{ 65 1,1
,61 65 },1
,56 65 72,1
<NumOfPlayers:CheckMate>,then <NumOfPlayers:CheckMate> ),2
,<NumOfPlayers:CheckMate> ),2
66,. 66 3,1
,. 66 4,1
,. 66 5,1
,. 66 8,1
,. 66 9,1
,. 66 10,1
,. 66 },6
,66 3,1
,66 4,1
,66 5,1
,66 8,1
,66 9,2
,66 10,1
,66 },11
,74 66 58,3
,58 66 74,2
,58 66 },1
,76 66 56,3
,56 66 76,4
,66 58,3
,66 74,3
,66 56,3
,66 76,5
,65 66 67,5
,20 66 ),1
,pair 66 39,1
,pair 66 20,1
,39 66 ),1
,36 66 ),1
,pair 66 60,1
,66 67,6
,66 ),4
,66 39,1
,66 20,1
,66 60,1
,59 66 .,1
,66 .,4
,64 66 68,1
,66 68,1
,56 66 },2
,{ 66 76,1
,6 66 ),1
,pair 66 438,1
,66 438,1
,{ 66 .,3
,{ 66 70,1
,66 70,2
,pair 66 6,1
,pair 66 70,1
,pair 66 50,1
,66 6,3
,66 50,1
,{ 66 6,2
,65 66 },1
,. 66 74,1
,{ 66 },1
,{ 66 9,1
,71 66 67,1
,24 66 86,1
,66 86,1
allow,to allow (,1
,allow (,1
67,rotate 67 .,1
,61 67 51,1
,67 .,2
,67 51,1
,75 67 59,3
,59 67 75,2
,59 67 },1
,77 67 57,3
,57 67 77,5
,67 59,3
,67 75,3
,67 },3
,67 57,3
,67 77,7
,66 67 48,1
,21 67 ),1
,pair 67 38,1
,pair 67 21,1
,38 67 ),1
,35 67 ),1
,pair 67 70,2
,67 48,1
,67 ),5
,67 38,1
,67 21,1
,67 70,2
,{ 67 63,1
,P1 67 ),1
,67 63,1
,8 67 ),1
,pair 67 439,1
,67 439,1
,{ 67 75,1
,pair 67 6,1
,pair 67 50,1
,67 6,1
,67 50,1
,66 67 77,2
,49 67 84,1
,67 84,1
,{ 67 68,1
,55 67 },1
,66 67 },1
,67 68,3
,58 67 68,1
,59 67 .,1
,66 67 68,1
,{ 67 1,1
,67 1,1
,66 67 62,1
,67 62,1
,27 67 82,1
,67 82,1
Options,for Options (,7
,) Options (,6
,Options (,13
,) Options Defines,1
,Options Defines,1
,--------------------------------------------- Options for,1
,Options for,1
68,48 68 69,12
,68 69,14
,1 68 ),1
,68 ),5
,76 68 60,3
,60 68 76,2
,60 68 },1
,78 68 58,3
,58 68 78,4
,68 60,5
,68 76,2
,68 },4
,68 58,3
,68 78,4
,85 68 62,1
,15 68 ),1
,pair 68 37,1
,pair 68 15,1
,37 68 ),1
,pair 68 86,1
,70 68 ),1
,pair 68 29,1
,68 62,1
,68 37,1
,68 15,1
,68 86,1
,68 29,1
,. 68 75,4
,68 75,4
,66 68 79,1
,68 79,1
,76 68 },1
,{ 68 60,1
,10 68 ),1
,pair 68 440,1
,68 440,1
,pair 68 6,1
,pair 68 70,1
,pair 68 50,1
,68 6,3
,68 70,1
,68 50,1
,{ 68 9,1
,68 9,1
,hint 68 2,1
,68 2,1
,67 68 69,2
,{ 68 80,1
,68 80,1
,67 68 77,1
,68 77,1
,{ 68 8,1
,68 8,1
,{ 68 },1
,{ 68 6,2
,64 68 },1
,74 68 60,1
69,68 69 70,14
,69 70,16
,. 69 },1
,69 },3
,34 69 .,1
,. 69 139,1
,69 .,2
,69 139,1
,77 69 61,3
,61 69 77,2
,61 69 },1
,79 69 59,3
,59 69 79,4
,69 61,4
,69 77,3
,69 59,3
,69 79,4
,70 69 61,1
,52 69 ),1
,pair 69 36,1
,pair 69 52,1
,36 69 ),1
,64 69 ),1
,pair 69 84,1
,pair 69 88,1
,69 ),4
,69 36,1
,69 52,1
,69 84,2
,69 88,1
,62 69 .,1
,12 69 ),1
,77 69 60,1
,69 60,1
,pair 69 441,1
,69 441,1
,pair 69 6,1
,pair 69 100,1
,pair 69 80,1
,69 6,1
,69 100,1
,69 80,1
,57 69 70,1
,hint 69 1,1
,69 1,1
,57 69 81,1
,69 81,1
,{ 69 78,1
,69 78,1
,. 69 77,1
,{ 69 },1
,{ 69 70,1
,{ 69 5,1
,69 5,1
,70 69 84,1
needed,is needed before,1
,needed before,1
,is needed to,2
,needed to,2
6>,<7 6> STRING,1
,6> STRING,3
,. 6> STRING,2
,<6 6> <,1
,6> <,1
bitter,the bitter end,1
,bitter end,1
Control,take Control of:All,3
,Control of:All,3
,take Control of:P1,1
,take Control of:P2,1
,take Control of:P3,1
,take Control of:P4,1
,Control of:P1,1
,Control of:P2,1
,Control of:P3,1
,Control of:P4,1
value:40,state:1 value:40 ),3
,state:3 value:40 ),1
,value:40 ),4
70,69 70 71,16
,70 71,18
,. 70 },1
,70 },5
,30 70 54,1
,70 54,1
,78 70 62,3
,62 70 78,2
,62 70 },1
,80 70 60,3
,60 70 80,5
,70 62,3
,70 78,2
,70 60,3
,70 80,8
,71 70 69,2
,51 70 ),1
,pair 70 35,1
,pair 70 51,1
,35 70 ),1
,67 70 ),2
,pair 70 68,1
,70 69,2
,70 ),16
,70 35,1
,70 51,1
,70 68,1
,60 70 },2
,{ 70 80,2
,1 70 ),1
,pair 70 442,1
,70 442,1
,66 70 71,1
,33 70 ),1
,34 70 ),1
,27 70 ),1
,28 70 ),1
,pair 70 6,1
,65 70 ),1
,66 70 ),1
,68 70 ),1
,pair 70 100,1
,53 70 ),1
,54 70 ),1
,55 70 ),1
,56 70 ),1
,pair 70 80,1
,70 6,1
,70 100,1
,58 70 },1
,{ 70 79,1
,70 79,1
,62 70 .,1
,{ 70 71,1
,70 .,1
,hint 70 3,1
,70 3,2
,{ 70 3,1
71,70 71 51,12
,71 51,12
,face 71 ),1
,71 ),7
,. 71 (,4
,8 71 },1
,8 71 62,1
,71 (,4
,71 },5
,71 62,1
,79 71 63,3
,63 71 79,2
,63 71 },1
,81 71 61,3
,61 71 81,5
,71 63,3
,71 79,2
,71 61,3
,71 81,5
,72 71 70,1
,50 71 ),1
,pair 71 25,1
,pair 71 50,1
,25 71 ),1
,49 71 ),1
,59 71 ),1
,pair 71 74,1
,71 70,2
,71 25,1
,71 50,1
,71 74,2
,{ 71 .,1
,71 .,1
,63 71 72,1
,71 72,4
,. 71 78,1
,71 78,1
,3 71 ),1
,53 71 ),1
,pair 71 33,1
,71 33,1
,70 71 74,1
,pair 71 6,1
,pair 71 100,1
,pair 71 80,1
,71 6,1
,71 100,1
,71 80,3
,65 71 72,2
,70 71 80,1
,70 71 },1
,59 71 },1
,62 71 80,1
,70 71 72,1
,{ 71 },1
,70 71 57,1
,71 57,1
,{ 71 1,1
,71 1,1
,70 71 66,1
,{ 71 2,1
,71 66,1
,71 2,1
,85 71 70,1
72,face 72 ),1
,72 ),7
,99 72 80,1
,72 80,3
,88 72 96,1
,72 96,1
,STRING 72 ),1
,{ 72 64,2
,64 72 64,2
,82 72 62,3
,62 72 82,5
,72 64,4
,72 62,3
,72 82,5
,73 72 71,1
,49 72 ),1
,pair 72 27,1
,pair 72 49,1
,27 72 ),1
,8 72 ),1
,pair 72 90,1
,72 71,1
,72 27,1
,72 49,1
,72 90,1
,60 72 84,1
,74 72 73,1
,72 84,1
,72 73,4
,71 72 73,2
,65 72 .,1
,72 .,2
,58 72 74,1
,72 74,1
,64 72 },1
,72 },2
,5 72 ),1
,54 72 ),1
,pair 72 34,1
,72 34,1
,pair 72 6,1
,pair 72 100,1
,pair 72 80,1
,72 6,1
,72 100,1
,62 72 55,2
,72 55,2
,71 72 76,2
,72 76,2
,65 72 75,1
,72 75,1
,{ 72 3,1
,72 3,1
,{ 72 73,1
,. 72 },1
,. 72 80,1
,hint 72 1,1
,72 1,1
,{ 72 8,2
,72 8,2
,{ 72 .,1
,65 72 77,1
,72 77,1
73,face 73 ),1
,73 ),8
,61 73 74,1
,73 74,3
,STRING 73 ),2
,{ 73 65,1
,65 73 65,2
,83 73 63,3
,63 73 83,4
,73 65,3
,73 63,3
,73 83,4
,74 73 72,1
,48 73 ),1
,pair 73 29,1
,pair 73 48,1
,29 73 ),1
,7 73 ),2
,pair 73 92,1
,73 72,1
,73 29,1
,73 48,1
,73 92,1
,72 73 },2
,4 73 ),1
,73 },3
,72 73 79,1
,73 79,1
,{ 73 77,1
,73 77,1
,63 73 84,1
,73 84,1
,pair 73 443,1
,73 443,1
,83 73 31,1
,73 31,1
,pair 73 5,1
,pair 73 120,1
,pair 73 50,1
,73 5,1
,73 120,1
,73 50,1
,5 73 81,1
,73 81,1
,. 73 (,1
,73 (,1
,{ 73 74,2
,63 73 },1
,72 73 353,1
,143 73 353,1
,73 353,2
,hint 73 1,1
,73 1,1
,{ 73 3,1
,73 3,1
,{ 73 7,1
,73 7,1
,64 73 58,1
,73 58,1
74,face 74 ),1
,74 ),7
,. 74 },2
,74 },4
,. 74 149,1
,74 149,1
,73 74 78,1
,74 78,1
,STRING 74 ),1
,{ 74 66,1
,66 74 66,2
,84 74 64,3
,64 74 84,3
,74 66,3
,74 64,3
,74 84,4
,75 74 73,1
,47 74 ),1
,pair 74 31,1
,pair 74 47,1
,31 74 ),1
,48 74 ),1
,71 74 ),1
,74 73,1
,74 31,1
,74 47,1
,. 74 72,1
,74 72,1
,72 74 .,1
,74 .,3
,62 74 86,1
,74 86,1
,9 74 ),1
,pair 74 444,1
,74 444,1
,63 74 85,1
,71 74 76,1
,74 85,1
,74 76,1
,pair 74 5,1
,pair 74 120,1
,pair 74 50,1
,74 5,1
,74 120,1
,74 50,1
,73 74 75,2
,{ 74 84,1
,74 75,3
,{ 74 75,1
,{ 74 .,1
,64 74 },1
,66 74 .,1
,{ 74 7,1
,74 7,1
,{ 74 },1
,{ 74 6,1
,74 6,1
,78 74 68,1
,74 68,1
,89 74 88,1
,74 88,1
75,. 75 6,1
,75 6,1
,. 75 0,3
,75 0,4
,. 75 },2
,75 },4
,91 75 115,1
,75 115,1
,STRING 75 ),1
,{ 75 67,1
,67 75 67,2
,85 75 65,3
,65 75 85,4
,75 ),5
,75 67,3
,75 65,3
,75 85,4
,76 75 74,1
,46 75 ),1
,pair 75 33,1
,pair 75 46,1
,33 75 ),1
,pair 75 93,1
,75 74,1
,75 33,1
,75 46,1
,75 93,1
,68 75 .,4
,75 .,4
,25 75 88,1
,75 88,1
,11 75 ),1
,pair 75 445,1
,75 445,1
,67 75 77,1
,75 77,1
,pair 75 5,1
,pair 75 120,1
,pair 75 50,1
,colour 75 75,1
,75 75 75,1
,75 75 ),1
,75 5,1
,75 120,1
,75 50,1
,75 75,2
,62 75 92,1
,75 92,1
,72 75 76,1
,75 76,4
,. 75 (,1
,75 (,1
,hint 75 0,1
,{ 75 76,1
,63 75 87,1
,74 75 },1
,75 87,1
,74 75 76,2
,65 75 },1
,hint 75 1,1
,75 1,1
,{ 75 8,2
,75 8,2
,{ 75 9,1
,75 9,1
,88 75 61,1
,75 61,1
twin,The twin piece,1
,a twin (,2
,twin piece,1
,twin (,2
76,4 76 },1
,35 76 },1
,19 76 },1
,20 76 },1
,76 },9
,STRING 76 ),1
,{ 76 68,2
,68 76 68,2
,86 76 66,3
,66 76 86,3
,76 ),9
,76 68,4
,76 66,3
,76 86,3
,44 76 36,1
,STRING 76 count:2,3
,P2 76 ),1
,P3 76 ),2
,76 36,1
,76 count:2,3
,77 76 75,1
,45 76 ),1
,pair 76 18,1
,pair 76 45,1
,18 76 ),1
,1 76 ),1
,2 76 ),1
,3 76 ),1
,76 75,1
,76 18,1
,76 45,1
,. 76 78,1
,76 78,1
,66 76 },2
,pair 76 446,1
,76 446,1
,74 76 77,1
,76 77,3
,pair 76 5,1
,pair 76 120,1
,pair 76 50,1
,76 5,1
,76 120,1
,76 50,1
,72 76 79,2
,76 79,2
,75 76 77,2
,75 76 },2
,64 76 88,1
,76 88,1
,. 76 },1
,{ 76 4,2
,76 4,2
,63 76 48,1
,76 48,1
77,STRING 77 ),1
,{ 77 69,1
,69 77 69,2
,87 77 67,3
,67 77 87,3
,77 ),3
,77 69,4
,77 67,3
,77 87,3
,78 77 76,1
,44 77 ),1
,pair 77 19,1
,pair 77 44,1
,19 77 ),1
,77 76,1
,77 19,1
,77 44,1
,. 77 },1
,77 },6
,73 77 },1
,84 77 69,1
,pair 77 447,1
,77 447,1
,. 77 84,3
,75 77 85,1
,77 84,3
,77 85,1
,76 77 78,3
,77 78,6
,pair 77 8,1
,pair 77 100,1
,pair 77 0,1
,97 77 59,1
,77 8,1
,77 100,1
,77 0,1
,77 59,1
,67 77 78,2
,hint 77 2,1
,77 2,1
,{ 77 78,1
,67 77 },2
,68 77 },1
,69 77 .,1
,77 .,1
,{ 77 },1
,72 77 80,1
,{ 77 6,1
,77 80,1
,77 6,1
,57 77 16,1
,63 77 91,1
,77 16,1
,77 91,1
78,74 78 79,1
,78 79,3
,94 78 118,1
,78 118,1
,STRING 78 ),1
,{ 78 70,1
,70 78 70,2
,88 78 68,3
,68 78 88,3
,78 ),3
,78 70,3
,78 68,3
,78 88,4
,79 78 77,1
,43 78 ),1
,pair 78 20,1
,pair 78 43,1
,20 78 ),1
,78 77,1
,78 20,1
,78 43,1
,71 78 .,1
,78 .,1
,76 78 },1
,78 },5
,pair 78 448,1
,78 448,1
,77 78 },1
,pair 78 8,1
,pair 78 100,1
,pair 78 0,1
,78 8,1
,78 100,1
,78 0,1
,77 78 83,2
,78 83,2
,77 78 85,1
,78 85,1
,77 78 79,2
,{ 78 88,1
,69 78 },1
,68 78 },1
,{ 78 4,1
,78 4,1
,{ 78 },1
,80 78 74,1
,{ 78 7,1
,78 74,1
,78 7,1
,58 78 98,1
,78 98,1
79,. 79 },2
,79 },5
,. 79 10,1
,79 10,1
,39 79 .,1
,. 79 159,1
,79 .,1
,79 159,1
,78 79 88,1
,79 88,1
,STRING 79 ),1
,{ 79 71,1
,71 79 71,2
,89 79 69,3
,69 79 89,3
,79 ),3
,79 71,3
,79 69,3
,79 89,4
,80 79 78,1
,42 79 ),1
,pair 79 21,1
,pair 79 42,1
,21 79 ),1
,79 78,1
,79 21,1
,79 42,1
,73 79 80,1
,79 80,2
,68 79 81,1
,79 81,1
,pair 79 447,1
,79 447,1
,pair 79 8,1
,pair 79 100,1
,pair 79 0,1
,79 8,1
,79 100,1
,79 0,1
,76 79 85,2
,79 85,2
,78 79 },1
,{ 79 89,1
,70 79 },1
,69 79 },1
,78 79 80,1
,{ 79 3,1
,79 3,1
,99 79 59,1
,79 59,1
,59 79 99,1
,79 99,1
winning,the winning of,2
,winning of,2
apply,( apply (,635
,apply (,635
,( apply if:,133
,apply if:,133
,( apply if:True,5
,apply if:True,5
,( apply STRING,8
,apply STRING,8
,( apply We,1
,apply We,1
,( apply #2,1
,apply #2,1
,( apply if:False,2
,apply if:False,2
7>,. 7> <48,1
,. 7> <56,1
,7> <48,1
,7> <56,1
,<7 7> <,2
,7> <,2
,<8 7> STRING,1
,7> STRING,1
Forest/Shallow,) Forest/Shallow water,1
,Forest/Shallow water,1
NextCanNotMove,- NextCanNotMove (,8
,NextCanNotMove (,8
at:60,what at:60 ),1
,at:60 ),1
Captures,Non Captures moves,1
,Captures moves,1
,max Captures (,1
,Captures (,1
use:Edge,} use:Edge ),9
,use:Edge ),32
,<Player:track> use:Edge ),1
,<Player:tracks> use:Edge ),6
,<Board:type> use:Edge ),10
,<Version:type> use:Edge ),1
,) use:Edge ),5
cells,nearest cells if,1
,destination cells are,1
,three cells regardless,2
,cells if,1
,cells are,1
,cells regardless,2
,and cells to,1
,cells to,1
,unwanted cells .,1
,cells .,1
value:30,state:1 value:30 ),1
,value:30 ),1
yields,it yields after,1
,yields after,1
80,. 80 },6
,80 },14
,72 80 },1
,4 80 ),1
,80 ),22
,15 80 84,1
,80 84,2
,{ 80 143,1
,89 80 143,1
,80 143,2
,90 80 70,3
,70 80 90,2
,70 80 },4
,80 70,3
,80 90,2
,81 80 79,1
,41 80 ),1
,pair 80 22,1
,pair 80 41,1
,22 80 ),1
,80 79,1
,80 22,1
,80 41,1
,79 80 },1
,pair 80 448,1
,80 448,1
,face 80 ),1
,19 80 ),1
,20 80 ),1
,31 80 ),1
,32 80 ),1
,35 80 ),1
,36 80 ),1
,pair 80 8,1
,37 80 ),1
,38 80 ),1
,39 80 ),1
,40 80 ),1
,pair 80 100,1
,61 80 ),1
,62 80 ),1
,63 80 ),1
,64 80 ),1
,69 80 ),1
,70 80 ),1
,71 80 ),1
,72 80 ),1
,pair 80 0,1
,80 8,1
,80 100,3
,80 0,1
,71 80 81,1
,80 81,3
,{ 80 4,1
,80 4,1
,{ 80 81,2
,68 80 92,1
,80 92,1
,71 80 },1
,72 80 .,1
,70 80 84,1
,80 .,1
,79 80 65,1
,80 65,1
,77 80 },1
,{ 80 78,1
,80 78,1
,60 80 100,2
,158 80 94,1
,80 94,1
81,3 81 ),1
,81 ),6
,91 81 71,3
,71 81 91,2
,71 81 },2
,81 71,3
,81 91,3
,81 },3
,82 81 80,1
,40 81 ),1
,pair 81 23,1
,pair 81 40,1
,23 81 ),1
,pair 81 31,1
,81 80,1
,81 23,1
,81 40,1
,81 31,1
,. 81 2,6
,81 2,7
,{ 81 .,1
,{ 81 81,1
,81 81 81,3
,81 81 82,3
,83 81 81,2
,81 .,1
,81 81,6
,81 82,6
,79 81 83,1
,81 83,1
,pair 81 447,1
,81 447,1
,face 81 ),1
,130 81 32,1
,81 32,1
,pair 81 8,1
,pair 81 100,1
,pair 81 0,1
,81 8,1
,81 100,1
,81 0,2
,73 81 97,1
,81 97,1
,80 81 82,2
,hint 81 0,1
,80 81 },1
,69 81 93,1
,{ 81 82,1
,{ 81 91,1
,81 93,1
,71 81 85,1
,81 85,1
,61 81 2,1
,4 81 ),1
,18 81 ),1
step,( step (,13
,step (,16
,( step Orthogonal,7
,step Orthogonal,7
,Single step (,1
,on step (,2
,to step 3,2
,to step 1,4
,step 3,2
,step 1,4
,( step STRING,2
,step STRING,2
,( step Forwards,1
,( step Backwards,1
,step Forwards,1
,step Backwards,1
,remaining step would,1
,step would,1
82,123 82 106,1
,82 106,1
,92 82 72,3
,72 82 92,2
,72 82 },2
,82 72,3
,82 92,3
,82 },5
,83 82 81,1
,39 82 ),1
,pair 82 17,1
,pair 82 39,1
,17 82 ),1
,pair 82 91,1
,83 82 ),1
,82 81,1
,82 ),7
,82 17,1
,82 39,1
,82 91,1
,3 82 84,1
,P3 82 ),1
,82 84,1
,81 82 82,3
,82 82 82,3
,82 82 83,3
,82 82,6
,82 83,6
,pair 82 448,1
,82 448,1
,face 82 ),1
,81 82 83,2
,81 82 },1
,{ 82 92,1
,. 82 },2
,72 82 86,1
,82 86,1
,62 82 83,1
,67 82 114,1
,82 114,1
,6 82 ),1
,20 82 ),1
83,93 83 73,4
,73 83 93,2
,73 83 },1
,83 73,4
,83 93,2
,83 },2
,84 83 82,1
,38 83 ),1
,pair 83 16,1
,pair 83 38,1
,16 83 ),1
,pair 83 82,1
,84 83 ),1
,83 82,2
,83 ),6
,83 16,1
,83 38,1
,82 83 83,3
,83 83 83,3
,83 83 81,2
,83 83 84,1
,83 83,6
,83 81,2
,83 84,4
,81 83 },1
,pair 83 447,1
,83 447,1
,face 83 ),1
,78 83 84,2
,82 83 91,1
,83 91,1
,82 83 354,1
,73 83 87,1
,153 83 354,1
,{ 83 4,1
,83 354,2
,83 87,1
,83 4,1
,82 83 84,1
,8 83 ),1
,22 83 ),1
84,. 84 },1
,84 },4
,. 84 169,1
,84 169,1
,94 84 86,1
,84 86,4
,80 84 86,1
,94 84 74,3
,74 84 94,3
,74 84 },1
,84 74,3
,84 94,5
,47 84 86,1
,60 84 83,1
,37 84 ),1
,pair 84 15,1
,pair 84 37,1
,15 84 ),1
,69 84 ),1
,pair 84 83,1
,85 84 ),1
,84 83,2
,84 ),8
,84 15,1
,84 37,1
,STRING 84 ),1
,82 84 86,1
,72 84 },1
,83 84 84,1
,84 84 84,3
,84 84 85,3
,86 84 84,2
,84 84,6
,84 85,6
,90 84 77,1
,84 77,1
,73 84 94,1
,pair 84 448,1
,84 448,1
,77 84 .,3
,84 .,3
,85 84 94,1
,1 84 ),1
,STRING 84 value:10,1
,84 value:10,1
,83 84 90,2
,67 84 97,1
,84 90,2
,84 97,1
,hint 84 0,1
,84 0,1
,{ 84 85,3
,80 84 356,1
,84 356,1
,{ 84 },1
,83 84 95,1
,84 95,1
,69 84 99,1
,84 99,1
,10 84 ),1
,24 84 ),1
value:38,state:2 value:38 ),3
,value:38 ),3
85,. 85 },2
,85 },6
,{ 85 88,1
,85 88,1
,126 85 109,1
,85 109,1
,95 85 75,3
,75 85 95,2
,75 85 },2
,85 75,3
,85 95,2
,86 85 68,1
,14 85 ),2
,pair 85 14,2
,pair 85 84,1
,86 85 ),1
,85 68,1
,85 ),9
,85 14,2
,85 84,2
,{ 85 .,2
,items:<Player:init> 85 ),2
,85 .,3
,STRING 85 ),1
,84 85 85,3
,85 85 85,3
,85 85 86,3
,85 85,6
,85 86,7
,. 85 (,2
,85 (,2
,5 85 .,1
,pair 85 377,1
,85 377,1
,77 85 },1
,74 85 84,1
,3 85 ),1
,STRING 85 value:9,1
,85 value:9,1
,79 85 90,2
,85 90,2
,78 85 92,1
,{ 85 },1
,85 92,1
,{ 85 86,1
,{ 85 97,1
,84 85 86,3
,85 97,1
,81 85 357,1
,85 357,1
,101 85 71,1
,85 71,1
,12 85 ),1
,26 85 ),1
value:39,state:2 value:39 ),1
,value:39 ),1
ExtendName,piece ExtendName P2,16
,piece ExtendName P3,2
,piece ExtendName P4,2
,ExtendName P2,16
,ExtendName P3,2
,ExtendName P4,2
86,{ 86 .,2
,86 .,2
,84 86 19,1
,86 19,1
,84 86 21,1
,86 21,1
,96 86 76,3
,76 86 96,2
,76 86 },1
,86 76,3
,86 96,3
,86 },5
,84 86 38,1
,86 38,1
,87 86 85,1
,13 86 ),2
,pair 86 13,2
,68 86 ),1
,pair 86 85,1
,87 86 ),1
,86 85,2
,86 ),9
,86 13,2
,STRING 86 ),2
,84 86 30,1
,86 30,1
,85 86 86,3
,86 86 86,3
,86 86 84,2
,86 86 87,1
,86 86,6
,86 84,2
,86 87,4
,74 86 87,1
,pair 86 378,1
,86 378,1
,. 86 },3
,5 86 ),1
,STRING 86 count:2,1
,86 count:2,1
,85 86 87,2
,{ 86 98,1
,85 86 },1
,{ 86 96,1
,86 98,1
,82 86 358,1
,85 86 356,1
,{ 86 5,1
,86 358,1
,86 356,1
,86 5,1
,{ 86 0,1
,86 0,1
,66 86 42,1
,86 42,1
,14 86 ),1
,28 86 ),1
value:36,state:1 value:36 ),3
,value:36 ),3
87,48 87 89,2
,87 89,3
,{ 87 93,1
,87 93,1
,37 87 89,1
,4 87 ),1
,87 ),7
,STRING 87 count:2,2
,87 count:2,2
,97 87 77,3
,77 87 97,2
,77 87 },1
,87 77,3
,87 97,2
,87 },3
,88 87 86,1
,12 87 ),2
,pair 87 12,2
,pair 87 86,1
,88 87 ),1
,87 86,2
,87 12,2
,86 87 87,1
,87 87 87,3
,87 87 88,3
,89 87 87,2
,87 87,6
,87 88,4
,86 87 98,1
,87 98,1
,pair 87 345,1
,87 345,1
,. 87 (,5
,. 87 },2
,87 (,5
,STRING 87 ),1
,39 87 38,1
,87 38,1
,7 87 ),1
,colour 87 108,1
,102 87 130,1
,87 108,1
,87 130,1
,86 87 88,1
,75 87 99,1
,87 99,1
,86 87 355,1
,83 87 359,1
,{ 87 355,1
,87 355,2
,87 359,1
,{ 87 0,1
,87 0,1
,16 87 ),1
value:37,state:1 value:37 ),2
,value:37 ),2
88,P3 88 ),1
,91 88 93,1
,88 ),8
,88 93,1
,79 88 89,1
,88 89,8
,85 88 },1
,88 },4
,. 88 -4,1
,. 88 4,1
,112 88 72,1
,88 -4,1
,88 4,1
,88 72,1
,STRING 88 ),1
,98 88 78,3
,78 88 98,3
,78 88 },1
,88 78,3
,88 98,3
,89 88 87,1
,11 88 ),2
,pair 88 11,2
,pair 88 87,1
,69 88 ),1
,88 87,2
,88 11,3
,87 88 88,3
,88 88 88,3
,88 88 89,3
,88 88,6
,75 88 11,1
,325 88 89,1
,pair 88 346,1
,88 346,1
,137 88 39,1
,88 39,1
,9 88 ),1
,STRING 88 count:4,1
,88 count:4,1
,87 88 89,1
,76 88 },1
,{ 88 89,1
,{ 88 .,2
,{ 88 97,1
,{ 88 5,1
,88 .,2
,88 97,1
,88 5,1
,{ 88 },1
,284 88 89,1
,74 88 75,1
,88 75,1
,3 88 ),1
,17 88 ),1
89,87 89 37,2
,89 37,2
,. 89 },2
,89 },7
,44 89 .,1
,. 89 179,1
,89 .,1
,89 179,1
,88 89 90,2
,89 90,2
,87 89 16,1
,89 16,1
,98 89 80,1
,89 80,1
,99 89 79,3
,79 89 99,3
,79 89 },1
,89 79,3
,89 99,3
,90 89 88,1
,10 89 ),1
,pair 89 9,1
,pair 89 10,1
,9 89 ),1
,46 89 ),1
,pair 89 91,1
,89 88,1
,89 ),7
,89 9,1
,89 10,1
,89 91,1
,88 89 89,3
,89 89 89,3
,89 89 87,2
,89 89 },1
,89 89,6
,89 87,2
,88 89 36,1
,89 36,1
,pair 89 3,1
,415 89 ),1
,89 3,1
,138 89 },1
,11 89 ),1
,STRING 89 count:4,1
,89 count:4,1
,hint 89 4,1
,89 4,1
,88 89 },2
,{ 89 101,1
,89 101,1
,{ 89 98,1
,89 98,1
,121 89 74,1
,89 74,1
,5 89 ),1
,19 89 ),1
after:35,) after:35 ),6
,~ after:35 ),4
,after:35 ),10
state:,} state: (,4
,state: (,11
,Mover state: (,1
,STRING state: (,6
<BoardSize:gridType>,board <BoardSize:gridType> use:Cell,1
,<BoardSize:gridType> use:Cell,1
<ctr>,<bgrd> <ctr> },1
,<ctr> },1
8>,7 8> <0,1
,<square 8> <0,2
,8> <0,3
,. 8> STRING,1
,8> STRING,1
,<6 8> <,1
,8> <,2
,<8 8> <,1
LargePiece,sites LargePiece at:,1
,LargePiece at:,1
origin:191,expand origin:191 steps:3,1
,origin:191 steps:3,1
whats:,) whats: {,2
,whats: {,15
,} whats: {,2
,All whats: {,6
,5 whats: {,5
coord:<BoardConfig:Queen2Start>,STRING coord:<BoardConfig:Queen2Start> ),1
,coord:<BoardConfig:Queen2Start> ),1
value:20,STRING value:20 ),1
,value:20 ),1
lost,have lost .,1
,lost .,1
90,rotate 90 (,41
,90 (,41
,93 90 },1
,90 },3
,. 90 },1
,89 90 91,1
,90 91,3
,STRING 90 ),1
,{ 90 80,1
,80 90 80,2
,90 ),8
,90 80,3
,97 90 89,1
,9 90 ),1
,pair 90 7,1
,pair 90 9,1
,7 90 ),2
,72 90 ),1
,pair 90 92,1
,90 89,1
,90 7,1
,90 9,1
,90 92,1
,. 90 84,1
,90 84,1
,pair 90 4,1
,416 90 ),1
,90 4,1
,13 90 ),1
,STRING 90 count:4,1
,90 count:4,1
,85 90 93,2
,84 90 91,2
,90 93,2
,{ 90 99,1
,. 90 97,1
,90 99,1
,90 97,1
,{ 90 },1
,89 90 20,1
,90 20,1
,21 90 ),1
91,{ 91 88,1
,91 88,1
,90 91 92,3
,91 92,6
,133 91 75,1
,91 75,1
,STRING 91 ),2
,91 ),9
,{ 91 81,1
,81 91 81,2
,91 81,3
,. 91 1,1
,92 91 97,1
,7 91 ),1
,pair 91 10,1
,pair 91 7,1
,10 91 ),1
,82 91 ),1
,89 91 ),1
,pair 91 93,1
,91 1,1
,91 97,1
,91 10,1
,91 7,1
,91 93,1
,has 91 spaces,1
,91 spaces,1
,pair 91 449,1
,91 449,1
,15 91 ),1
,STRING 91 count:4,1
,91 count:4,1
,83 91 92,1
,{ 91 92,2
,{ 91 103,1
,81 91 },1
,91 103,1
,91 },1
,{ 91 100,1
,{ 91 .,1
,91 100,1
,91 .,1
,77 91 106,1
,91 106,1
,9 91 ),1
,23 91 ),1
92,91 92 94,1
,92 94,2
,95 92 },1
,92 },2
,STRING 92 ),1
,{ 92 82,1
,82 92 82,2
,92 ),8
,92 82,3
,93 92 91,1
,6 92 ),1
,pair 92 8,1
,pair 92 6,1
,8 92 ),1
,73 92 ),1
,90 92 ),1
,pair 92 94,1
,92 91,1
,92 8,1
,92 6,1
,pair 92 450,1
,92 450,1
,145 92 141,1
,92 141,1
,17 92 ),1
,STRING 92 count:8,1
,92 count:8,1
,91 92 93,5
,75 92 110,1
,92 93,7
,92 110,1
,85 92 93,1
,80 92 },1
,82 92 102,1
,92 102,1
,{ 92 101,1
,{ 92 7,1
,92 101,1
,92 7,1
,{ 92 0,1
,92 0,1
,97 92 93,1
,11 92 ),1
,25 92 ),1
93,88 93 90,1
,93 90,1
,87 93 99,1
,93 99,1
,STRING 93 ),1
,{ 93 83,1
,83 93 83,2
,93 ),9
,93 83,4
,94 93 92,1
,5 93 ),1
,pair 93 6,1
,pair 93 5,1
,6 93 ),1
,75 93 ),1
,91 93 ),1
,93 92,1
,93 6,1
,93 5,1
,pair 93 451,1
,317 93 ),1
,93 451,1
,94 93 83,1
,142 93 187,1
,93 187,1
,19 93 ),1
,STRING 93 value:1,1
,93 value:1,1
,90 93 94,2
,92 93 103,2
,93 94,6
,93 103,3
,92 93 94,4
,81 93 105,1
,{ 93 103,1
,93 105,1
,{ 93 102,1
,. 93 100,1
,93 102,1
,93 100,1
,{ 93 },1
,93 },1
,92 93 132,1
,93 132,1
,13 93 ),1
,27 93 ),1
value:21,STRING value:21 ),1
,value:21 ),1
94,. 94 0,1
,94 0,1
,. 94 },1
,94 },4
,. 94 189,1
,94 189,1
,92 94 95,1
,94 95,4
,47 94 84,1
,94 84,4
,48 94 78,1
,94 78,1
,STRING 94 ),2
,{ 94 84,1
,84 94 84,2
,94 ),8
,95 94 93,1
,4 94 ),1
,pair 94 5,1
,pair 94 4,1
,5 94 ),1
,92 94 ),1
,pair 94 97,1
,94 93,2
,94 5,1
,94 4,1
,94 97,2
,84 94 },1
,pair 94 452,1
,318 94 ),1
,94 452,1
,84 94 93,1
,21 94 ),1
,93 94 95,3
,93 94 101,1
,93 94 97,1
,94 101,1
,{ 94 106,1
,93 94 },1
,84 94 104,1
,94 106,1
,94 104,1
,{ 94 103,1
,{ 94 .,1
,94 103,1
,94 .,1
,{ 94 },1
,80 94 109,1
,94 109,1
,15 94 ),1
<Capture:numCounters>,) <Capture:numCounters> ),1
,<Capture:numCounters> ),1
value:22,STRING value:22 ),1
,value:22 ),1
T3636>,<tiling T3636> STRING,1
,T3636> STRING,1
<Size:pile>,- <Size:pile> 1,1
,Count <Size:pile> at:0,1
,<Size:pile> 1,1
,<Size:pile> at:0,1
95,. 95 7,1
,95 7,1
,. 95 },1
,95 },2
,94 95 96,3
,95 96,3
,{ 95 92,1
,95 92,1
,STRING 95 ),1
,{ 95 85,1
,85 95 85,2
,95 ),5
,95 85,3
,96 95 94,1
,3 95 ),1
,pair 95 4,1
,pair 95 3,1
,4 95 ),1
,pair 95 98,1
,96 95 ),1
,95 94,1
,95 4,1
,95 3,1
,95 98,1
,. 95 (,6
,95 (,6
,pair 95 453,1
,95 453,1
,23 95 ),1
,STRING 95 count:4,1
,95 count:4,1
,94 95 },1
,{ 95 107,1
,95 107,1
,{ 95 104,1
,95 104,1
,84 95 135,1
,95 135,1
96,95 96 97,3
,96 97,4
,STRING 96 ),3
,96 ),7
,72 96 136,1
,96 136,1
,{ 96 86,1
,86 96 86,2
,96 86,3
,98 96 95,1
,2 96 ),2
,pair 96 3,1
,pair 96 2,1
,3 96 ),1
,pair 96 95,1
,96 95,2
,96 3,2
,96 2,1
,pair 96 454,1
,96 454,1
,47 96 145,1
,96 145,1
,STRING 96 value:10,1
,96 value:10,1
,120 96 ),1
,hint 96 1,2
,96 1,2
,{ 96 97,1
,86 96 106,1
,96 106,1
,. 96 },1
,{ 96 105,1
,. 96 103,1
,{ 96 3,1
,96 },2
,96 105,1
,96 103,1
,{ 96 },1
,{ 96 0,1
,96 0,1
97,. 97 5,1
,97 5,1
,face 97 ),2
,97 ),8
,96 97 98,4
,97 98,5
,STRING 97 ),1
,{ 97 87,1
,87 97 87,2
,97 87,3
,91 97 90,1
,8 97 ),1
,pair 97 2,1
,pair 97 8,1
,2 97 ),1
,94 97 ),1
,pair 97 0,1
,97 90,1
,97 2,1
,97 8,1
,97 0,1
,pair 97 455,1
,253 97 ),1
,97 455,1
,4 97 ),1
,STRING 97 value:9,1
,97 value:9,1
,colour 97 77,1
,97 77,1
,84 97 111,1
,97 111,1
,81 97 142,1
,97 142,1
,94 97 104,1
,97 104,1
,{ 97 98,1
,85 97 109,1
,{ 97 107,1
,97 109,1
,97 107,1
,{ 97 .,1
,88 97 106,1
,90 97 .,1
,97 .,2
,97 106,1
,{ 97 },1
,97 },1
,117 97 92,1
,97 92,1
,124 97 88>,1
,97 88>,1
98,face 98 ),2
,98 ),8
,97 98 },1
,98 },2
,107 98 89,1
,98 89,1
,STRING 98 ),1
,{ 98 88,1
,88 98 88,2
,98 88,3
,{ 98 96,1
,1 98 ),2
,pair 98 1,2
,95 98 ),1
,pair 98 0,1
,98 96,1
,98 1,2
,98 0,1
,117 98 100,1
,98 100,1
,87 98 99,1
,98 99,5
,pair 98 456,1
,254 98 ),1
,98 456,1
,6 98 ),1
,STRING 98 count:2,1
,98 count:2,1
,97 98 99,4
,hint 98 4,1
,98 4,1
,86 98 110,1
,88 98 108,1
,98 110,1
,98 108,1
,89 98 107,1
,{ 98 7,1
,98 107,1
,98 7,1
,{ 98 },1
,78 98 17,1
,98 17,1
99,face 99 ),2
,99 ),7
,. 99 },1
,99 },8
,49 99 .,1
,. 99 199,1
,99 .,1
,99 199,1
,93 99 72,1
,99 72,1
,115 99 139,1
,99 139,1
,STRING 99 ),1
,{ 99 89,1
,89 99 89,2
,99 89,3
,) 99 ),3
,{ 99 102,1
,99 102,1
,98 99 },5
,pair 99 457,1
,99 457,1
,8 99 ),1
,STRING 99 count:2,1
,99 count:2,1
,hint 99 4,1
,99 4,1
,87 99 },1
,89 99 },1
,90 99 108,1
,. 99 106,1
,99 108,1
,99 106,1
,119 99 79,1
,99 79,1
,79 99 119,1
,84 99 116,1
,99 119,1
,99 116,1
Vote,move Vote STRING,18
,Vote STRING,18
value:18,STRING value:18 ),1
,value:18 ),1
still,is still very,1
,still very,1
value:19,STRING value:19 ),1
,value:19 ),1
9>,<5 9> <,1
,9> <,1
var,( var STRING,274
,var STRING,274
,( var ),93
,var ),93
work,not work in,1
,work in,1
,STRING work for,1
,work for,1
Proposed,is Proposed STRING,16
,Proposed STRING,16
origin:181,expand origin:181 steps:3,1
,origin:181 steps:3,1
min:1,Value min:1 max:,9
,min:1 max:,9
,Value min:1 max:12,1
,min:1 max:12,1
value:12,STRING value:12 ),1
,value:12 ),1
value:13,STRING value:13 ),1
,value:13 ),1
min:0,Value min:0 max:,5
,min:0 max:,5
min:3,#1 min:3 ),2
,min:3 ),2
value:10,) value:10 ),2
,value:10 ),5
,STRING value:10 ),1
,84 value:10 ),1
,96 value:10 ),1
min:2,Value min:2 max:,1
,min:2 max:,1
,Value min:2 max:4,1
,min:2 max:4,1
,Value min:2 max:3,1
,min:2 max:3,1
value:11,STRING value:11 ),1
,value:11 ),1
min:5,#1 min:5 ),1
,min:5 ),1
Amazon,to Amazon .,2
,Amazon .,2
value:16,STRING value:16 ),1
,value:16 ),1
value:17,STRING value:17 ),1
,value:17 ),1
value:14,STRING value:14 ),1
,value:14 ),1
stated,be stated as,1
,stated as,1
value:15,STRING value:15 ),1
,value:15 ),1
at:16,who at:16 ),1
,at:16 ),12
,what at:16 ),1
,Edge at:16 ),7
,Vertex at:16 ),3
at:17,who at:17 ),2
,at:17 ),14
,Stack at:17 ),1
,what at:17 ),1
,Edge at:17 ),7
,Vertex at:17 ),3
at:EndOfTurn,~ at:EndOfTurn ),2
,at:EndOfTurn ),39
,) at:EndOfTurn ),35
,after:10 at:EndOfTurn ),2
at:18,who at:18 ),2
,at:18 ),14
,Stack at:18 ),1
,what at:18 ),1
,Edge at:18 ),7
,Vertex at:18 ),3
at:19,what at:19 ),1
,at:19 ),11
,Edge at:19 ),7
,Vertex at:19 ),3
at:12,Stack at:12 ),5
,at:12 ),21
,what at:12 level:0,1
,what at:12 level:1,1
,at:12 level:0,1
,at:12 level:1,1
,who at:12 ),4
,count at:12 ),1
,what at:12 ),1
,Edge at:12 ),7
,Vertex at:12 ),3
StepsOnTrack,count StepsOnTrack (,2
,StepsOnTrack (,2
at:13,Stack at:13 ),5
,at:13 ),20
,who at:13 ),4
,what at:13 ),1
,Edge at:13 ),7
,Vertex at:13 ),3
at:14,Stack at:14 ),4
,at:14 ),18
,who at:14 ),3
,what at:14 ),1
,Edge at:14 ),7
,Vertex at:14 ),3
at:15,Stack at:15 ),4
,at:15 ),18
,who at:15 ),3
,what at:15 ),1
,Edge at:15 ),7
,Vertex at:15 ),3
<0>,STRING <0> STRING,4
,<0> STRING,5
,STRING <0> <1>,1
,<0> <1>,2
,Pawn2Start <0> <1>,1
,<1> <0> STRING,1
at:10,who at:10 ),3
,Stack at:10 ),3
,at:10 ),19
,count at:10 ),1
,what at:10 ),1
,Edge at:10 ),8
,Vertex at:10 ),3
at:11,who at:11 ),3
,Stack at:11 ),3
,at:11 ),20
,count at:11 ),2
,what at:11 ),1
,Edge at:11 ),8
,Vertex at:11 ),3
specified,is specified for,3
,specified for,3
,but specified explicitly,1
,specified explicitly,1
,rotation specified in,1
,specified in,1
<Model:board>,{ <Model:board> (,1
,<Model:board> (,1
<Board:start1>,{ <Board:start1> },1
,STRING <Board:start1> ),1
,<Board:start1> },1
,<Board:start1> ),1
orthogonal,the orthogonal directions,1
,orthogonal directions,1
<Column>,STRING <Column> args:,1
,<Column> args:,1
<Variants>,STRING <Variants> args:,1
,<Variants> args:,1
<Mover>,STRING <Mover> STRING,2
,<Mover> STRING,2
<10,26> <10 25>,1
,> <10 .,2
,28> <10 29>,1
,<10 25>,1
,<10 .,2
,<10 29>,1
,STRING <10 20>,1
,<10 20>,1
<Variant:promotedCaptureMove>,STRING <Variant:promotedCaptureMove> ),1
,<Variant:promotedCaptureMove> ),1
<Player:track916>,<Player:track58> <Player:track916> },1
,<Player:track916> },1
<11,29> <11 28>,1
,<11 28>,1
<Each:AIstyle>,( <Each:AIstyle> {,1
,<Each:AIstyle> {,1
<12,STRING <12 10>,1
,<12 10>,1
<13,> <13 14,1
,<13 14,1
<14,STRING <14 12>,1
,<14 12>,1
at:27,Edge at:27 ),6
,at:27 ),6
DoubleStep,- DoubleStep Usage:,5
,DoubleStep Usage:,5
at:28,Edge at:28 ),6
,at:28 ),6
<17,10> <17 .,1
,<17 .,1
,<16> <17 26,1
,<17 26,1
at:29,Edge at:29 ),6
,at:29 ),6
<18,> <18 .,1
,21> <18 21>,1
,<18 .,1
,<18 21>,1
at:23,Edge at:23 ),6
,at:23 ),8
,Vertex at:23 ),2
max:,min:1 max: (,9
,max: (,15
,min:2 max: (,1
,min:0 max: (,5
at:24,Edge at:24 ),6
,at:24 ),7
,Vertex at:24 ),1
at:25,what at:25 level:0,1
,what at:25 level:1,1
,at:25 level:0,1
,at:25 level:1,1
,Edge at:25 ),6
,at:25 ),6
at:26,Edge at:26 ),6
,at:26 ),6
<1>,> <1> <7>,1
,<1> <7>,1
,STRING <1> STRING,18
,<1> STRING,22
,> <1> STRING,3
,<0> <1> <2>,2
,<1> <2>,4
,<6> <1> STRING,1
,<6> <1> <2>,1
,STRING <1> <1>,1
,<1> <1> <>,1
,<1> <1>,1
,<1> <>,1
,STRING <1> <2>,1
,<2> <1> <0>,1
,<1> <0>,1
,> <1> <31,1
,<1> <31,1
at:20,what at:20 ),1
,at:20 ),10
,Edge at:20 ),7
,Vertex at:20 ),2
Trap,#2 Trap rule,1
,Trap rule,1
<target_zone>,{ <target_zone> },1
,<target_zone> },1
at:21,what at:21 ),1
,at:21 ),9
,Edge at:21 ),6
,Vertex at:21 ),2
at:22,what at:22 ),1
,at:22 ),9
,Edge at:22 ),6
,Vertex at:22 ),2
<Board:start2>,{ <Board:start2> },1
,STRING <Board:start2> ),1
,<Board:start2> },1
,<Board:start2> ),1
250%,does 250% damage,1
,250% damage,1
<0,8> <0 .,3
,5> <0 .,1
,<0 .,10
,STRING <0 .,2
,> <0 .,4
<calculation>,{ <calculation> },1
,<calculation> },1
<2,> <2 1>,1
,<2 1>,1
<3,STRING <3 3>,1
,<3 3>,1
,> <3 0,1
,<3 0,1
,> <3 2,1
,<3 2,1
<4,STRING <4 4>,1
,<4 4>,1
,> <4 3,1
,<4 3,1
<5,STRING <5 STRING,1
,<5 STRING,1
,STRING <5 5>,2
,STRING <5 9>,1
,<5 5>,2
,<5 9>,1
,STRING <5 10>,1
,<5 10>,1
,> <5 .,1
,<5 .,1
,> <5 4,1
,<5 4,1
<20,11> <20 .,1
,<20 .,1
<6,STRING <6 8>,1
,<6 8>,1
,STRING <6 5>,1
,<6 5>,1
,STRING <6 STRING,1
,<6 STRING,1
,STRING <6 6>,1
,<6 6>,1
,> <6 5,1
,<6 5,1
<to>,{ <to> },2
,<to> },2
<7,> <7 .,1
,19> <7 20>,1
,<7 .,1
,<7 20>,1
,STRING <7 7>,2
,<7 7>,2
,STRING <7 6>,1
,<7 6>,1
,> <7 8,1
,<7 8,1
,> <7 6,1
,<7 6,1
<21,> <21 22,1
,<21 22,1
<8,20> <8 19>,1
,> <8 .,1
,22> <8 23>,1
,<8 19>,1
,<8 .,1
,<8 23>,1
,STRING <8 7>,1
,<8 7>,1
,STRING <8 8>,1
,<8 8>,1
,> <8 7,1
,<8 7,1
<22,> <22 .,1
,25> <22 25>,1
,<22 .,1
,<22 25>,1
after:34,) after:34 ),4
,~ after:34 ),2
,after:34 ),6
<9,23> <9 22>,1
,> <9 .,1
,25> <9 26>,1
,<9 22>,1
,<9 .,1
,<9 26>,1
,> <9 8,1
,<9 8,1
<23,12> <23 .,1
,<23 .,1
<24,> <24 .,1
,<24 .,1
<26,13> <26 .,1
,<26 .,2
,> <26 .,1
,29> <26 29>,1
,<26 29>,1
<=,( <= (,108
,<= (,108
,( <= 0,5
,<= 0,5
,( <= 10,1
,<= 10,1
,( <= 2,6
,( <= 1,11
,( <= 4,20
,( <= 12,4
,<= 2,6
,<= 1,11
,<= 4,20
,<= 12,4
,( <= 3,14
,<= 3,14
,( <= 6,12
,<= 6,12
,( <= 13,1
,<= 13,1
,( <= <Board:init>,2
,<= <Board:init>,2
,( <= 5,6
,<= 5,6
,( <= <Start:usingHogon>,1
,<= <Start:usingHogon>,1
,( <= 60,1
,<= 60,1
,( <= 7,15
,<= 7,15
,( <= 8,1
,<= 8,1
,( <= STRING,3
,<= STRING,3
,( <= <Board:MainWin0>,2
,( <= <Board:MainWin1>,2
,( <= <Board:MainWinC>,10
,<= <Board:MainWin0>,2
,<= <Board:MainWin1>,2
,<= <Board:MainWinC>,10
,( <= 27,1
,<= 27,1
,( <= <BoardShape:ForcedFillLevel>,1
,<= <BoardShape:ForcedFillLevel>,1
<27,> <27 .,1
,<27 .,1
<>,STRING <> STRING,32
,<> STRING,76
,<2> <> <>,5
,<> <> <>,12
,<> <> STRING,11
,> <> <,3
,> <> STRING,30
,<> <>,24
,<> <,26
,<> <> <,1
,STRING <> <,21
,> <> <>,4
,<1> <> STRING,1
,<4> <> <>,1
,Orthogonal> <> STRING,2
,STRING <> <>,2
,<2> <> <,1
<2>,> <2> <8>,1
,<2> <8>,1
,STRING <2> STRING,50
,<2> STRING,54
,> <2> STRING,1
,STRING <2> <,53
,<2> <,54
,STRING <2> <>,6
,<2> <>,6
,<1> <2> <3>,1
,<2> <3>,3
,<8> <2> STRING,1
,<1> <2> <,1
,<10> <2> <3>,1
,STRING <2> <3>,1
,STRING <2> <4>,2
,<2> <4>,2
,<1> <2> STRING,2
,Pawn2Start <2> <1>,1
,<2> <1>,1
<Board:armSize>,STRING <Board:armSize> ),1
,<Board:armSize> ),1
<piece2>,<piece1> <piece2> },2
,<piece2> },2
<30,> <30 .,2
,<30 .,2
,33> <30 33>,1
,<30 33>,1
Tree,is Tree Neutral,2
,Tree Neutral,2
<31,STRING <31 46>,1
,<31 46>,1
,<1> <31 38,1
,<31 38,1
<32,31> <32 .,1
,<32 .,1
<33,> <33 .,1
,<33 .,1
<34,> <34 .,1
,37> <34 37>,1
,<34 .,1
,<34 37>,1
<Play:move>,play <Play:move> ),1
,<Play:move> ),1
<36,35> <36 .,1
,<36 .,1
<38,> <38 .,1
,41> <38 41>,1
,<38 .,1
,<38 41>,1
<AIstyle>,{ <AIstyle> },1
,<AIstyle> },1
<a,see <a STRING,1
,<a STRING,1
<PiecePlacement>,STRING <PiecePlacement> args:,1
,{ <PiecePlacement> },1
,<PiecePlacement> args:,1
,<PiecePlacement> },1
<3>,<7> <3> STRING,1
,<3> STRING,83
,STRING <3> STRING,71
,STRING <3> <,33
,<3> <,38
,<2> <3> <4>,1
,<3> <4>,1
,<10> <3> STRING,1
,<2> <3> <,2
,STRING <3> <6>,2
,<3> <6>,2
,> <3> <,2
,<4> <3> <,1
,<Hidden> <3> STRING,3
,STRING <3> <9>,1
,<3> <9>,1
,> <3> STRING,6
,1> <3> STRING,1
replayDouble:,Die replayDouble: (,4
,replayDouble: (,4
capture,when capture a,1
,capture a,1
,without capture (,1
,- capture region,1
,from capture #5,1
,capture (,7
,capture region,1
,capture #5,1
,can capture an,1
,capture an,1
,can capture again,1
,capture again,1
,second capture .,1
,capture .,3
,No capture done,1
,one capture done,1
,of capture done,1
,capture done,3
,a capture was,1
,capture was,1
,can capture 2,1
,capture 2,1
,always capture diagonally,1
,capture diagonally,1
,passant capture .,2
,previous capture --COMMA--,1
,a capture or,1
,to capture another's,1
,not capture Player,1
,capture --COMMA--,1
,capture or,1
,capture another's,1
,capture Player,1
,any capture (,2
,with capture (,3
,Site capture (,1
<Repetition>,STRING <Repetition> ),2
,STRING <Repetition> args:,2
,<Repetition> ),2
,<Repetition> args:,2
Can,) Can play,1
,Can play,1
,) Can always,4
,Can always,5
,) Can Block,1
,Can Block,1
,STRING Can always,1
,STRING Can never,1
,Can never,1
,) Can attack,2
,Can attack,2
<piece1>,<numSides> <piece1> <piece2>,2
,<piece1> <piece2>,2
<40,39> <40 .,1
,<40 .,1
<Connection:type>,<Line:size> <Connection:type> ),1
,<Connection:type> ),1
,Connected <Connection:type> Mover,1
,<Connection:type> Mover,1
<44,43> <44 .,1
,<44 .,1
Prism,hex Prism <Size>,1
,Prism <Size>,1
seems,it seems an,1
,seems an,1
after:10,before:10 after:10 at:EndOfTurn,2
,after:10 at:EndOfTurn,2
>=,( >= 2,2
,>= 2,2
,( >= 1,16
,>= 1,16
,( >= (,130
,>= (,130
,( >= 0,25
,>= 0,25
,( >= 10,3
,>= 10,3
,( >= STRING,5
,>= STRING,5
,( >= 8,1
,>= 8,1
Steps,count Steps (,40
,Steps (,40
,count Steps Vertex,3
,Steps Vertex,3
,count Steps Orthogonal,10
,Steps Orthogonal,10
<48,7> <48 .,1
,15> <48 .,1
,<48 .,2
<dog>,{ <dog> },1
,<dog> },1
count:<Pieces:num>,12 count:<Pieces:num> ),1
,25 count:<Pieces:num> ),1
,count:<Pieces:num> ),2
<Diamond>,STRING <Diamond> STRING,1
,<Diamond> STRING,1
mul,( mul (,3
,mul (,3
<4>,STRING <4> STRING,80
,<4> STRING,84
,STRING <4> <,45
,<4> <,46
,<3> <4> <5>,1
,<4> <5>,1
,<2> <4> STRING,2
,STRING <4> <8>,2
,<4> <8>,2
,STRING <4> <14>,1
,<4> <14>,1
,> <4> <,1
,> <4> <4>,1
,<4> <4> <4>,1
,<4> <4> <>,1
,<5> <4> <3>,1
,<4> <4>,2
,<4> <>,1
,<4> <3>,1
,<ThinDashed> <4> STRING,2
,STRING <4> <16>,1
,<4> <16>,1
Bear,#1 Bear off,3
,#3 Bear off,1
,Bear off,4
swaps,Mover swaps with,1
,swaps with,1
owner:,#2 owner: (,1
,owner: (,132
,STRING owner: (,131
<initTiger>,<type> <initTiger> },1
,<initTiger> },1
,<type> <initTiger> <initLeopard>,1
,<initTiger> <initLeopard>,1
Column,sites Column 1,4
,sites Column 3,2
,sites Column 5,1
,Column 1,5
,Column 3,3
,Column 5,2
,sites Column (,17
,Column (,17
,sites Column 2,5
,Column 2,6
,sites Column STRING,2
,Column STRING,2
,STRING Column 0,1
,STRING Column 1,1
,STRING Column 2,1
,STRING Column 3,1
,STRING Column 4,1
,STRING Column 5,1
,STRING Column 6,1
,STRING Column 7,4
,STRING Column 8,4
,STRING Column 9,2
,STRING Column 10,2
,STRING Column 11,1
,STRING Column 12,1
,Column 0,2
,Column 4,1
,Column 6,1
,Column 7,4
,Column 8,4
,Column 9,2
,Column 10,2
,Column 11,1
,Column 12,3
,sites Column 0,1
,sites Column 12,2
,row Column column,1
,Column column,1
addScore,( addScore P2,4
,( addScore P1,4
,addScore P2,4
,addScore P1,4
,( addScore Mover,63
,addScore Mover,63
,( addScore (,3
,addScore (,3
,( addScore {,3
,addScore {,3
,( addScore #1,1
,addScore #1,1
,( addScore Next,1
,addScore Next,1
<50,10> <50 .,1
,<50 .,1
column:0,) column:0 ),9
,column:0 ),11
,row:0 column:0 ),2
<56,7> <56 .,1
,<56 .,1
origin:174,expand origin:174 steps:3,1
,origin:174 steps:3,1
Spartans,and Spartans are,1
,the Spartans happen,1
,Spartans are,1
,Spartans happen,1
RookRight2Start,> RookRight2Start <,2
,RookRight2Start <,2
Slúnax,) Slúnax (,1
,Slúnax (,1
<5>,<8> <5> STRING,1
,<5> STRING,83
,STRING <5> STRING,79
,<4> <5> <,1
,<5> <,20
,STRING <5> <,18
,STRING <5> <6>,1
,<5> <6>,1
,STRING <5> <15>,1
,<5> <15>,1
,> <5> <5>,1
,<5> <5> <5>,1
,<5> <5> <,1
,> <5> <4>,1
,<5> <5>,2
,<5> <4>,1
,STRING <5> <12>,1
,<5> <12>,1
,STRING <5> <10>,1
,<5> <10>,1
,STRING <5> <25>,1
,<5> <25>,1
,> <5> STRING,3
<Scenario:startingMoney>,Each <Scenario:startingMoney> ),1
,<Scenario:startingMoney> ),1
<Board:trackDirection>,STRING <Board:trackDirection> loop:True,1
,<Board:trackDirection> loop:True,1
attacking,the attacking piece,2
,attacking piece,2
1206,{ 1206 },1
,1206 },1
1205,{ 1205 },1
,1205 },1
<tri,STRING <tri Diamond>,3
,<tri Diamond>,3
,STRING <tri Hexagon>,1
,STRING <tri Square>,1
,STRING <tri Star>,1
,STRING <tri Limping>,1
,<tri Hexagon>,1
,<tri Square>,1
,<tri Star>,1
,<tri Limping>,1
1204,{ 1204 },1
,1204 },1
1202,1251 1202 1153,1
,1202 1153,1
<CCW2>,<rowSize> <CCW2> <CW1>,2
,<CCW2> <CW1>,2
,<rowSize> <CCW2> <HalfRightInnerP1>,1
,<CCW2> <HalfRightInnerP1>,1
,<size> <CCW2> },1
,<CCW2> },2
,<size> <CCW2> <leftMostP2>,1
,<CCW2> <leftMostP2>,1
,<size> <CCW2> <thirdHoleInnerP1>,1
,<CCW2> <thirdHoleInnerP1>,1
,<rowSize> <CCW2> },1
1201,1433 1201 1200,1
,1201 1200,1
,{ 1201 },1
,1201 },1
1200,1201 1200 1395,1
,1200 1395,1
,{ 1200 },1
,1200 },1
<65,<34> <65 60,1
,<65 60,1
1208,1257 1208 1159,1
,1208 1159,1
,{ 1208 },1
,1208 },1
<6>,STRING <6> STRING,96
,<6> STRING,98
,STRING <6> <7>,1
,<6> <7>,1
,STRING <6> <,22
,<6> <,23
,STRING <6> <1>,1
,<6> <1>,2
,<5> <6> <1>,1
,STRING <6> <10>,1
,<6> <10>,1
,<3> <6> STRING,2
,STRING <6> <12>,2
,<6> <12>,2
,STRING <6> <16>,1
,<6> <16>,1
,> <6> <6>,1
,<6> <6> <6>,1
,<6> <6> <,1
,<6> <6>,2
,STRING <6> <20>,5
,<6> <20>,5
,STRING <6> <36>,1
,<6> <36>,1
allowed,Hops allowed (,1
,allowed (,1
<Board:innerInitP2>,P2 <Board:innerInitP2> ),1
,<Board:innerInitP2> ),1
1220,{ 1220 },1
,1220 },1
1217,1273 1217 1168,1
,1217 1168,1
,{ 1217 },1
,1217 },1
1216,1265 1216 1167,1
,1216 1167,1
,{ 1216 },1
,1216 },1
1215,{ 1215 },1
,1215 },1
1214,{ 1214 },1
,1214 },1
1212,{ 1212 },1
,1212 },1
1211,{ 1211 },1
,1211 },1
awaiting,are awaiting .,1
,awaiting .,1
<20>,STRING <20> STRING,28
,<20> STRING,30
,<19> <20> <21>,1
,<20> <21>,1
,STRING <20> <,5
,<20> <,15
,<27> <20> STRING,1
,<10> <20> STRING,1
,<6> <20> <,5
,<8> <20> <,5
because,--COMMA-- because nothing,3
,because nothing,3
,die because count,1
,because count,1
,macro because it,1
,because it,1
,--COMMA-- because they,1
,because they,1
,. because the,1
,because the,1
moving,ones moving in,1
,moving in,1
,by moving one,1
,moving one,1
,Piece moving from,2
,moving from,2
<Pieces>,STRING <Pieces> args:,1
,<Pieces> args:,1
1219,{ 1219 },1
,1219 },1
1218,{ 1218 },1
,1218 },1
<7>,<1> <7> <3>,1
,<7> <3>,1
,STRING <7> STRING,81
,<7> STRING,83
,<6> <7> <8>,1
,<7> <8>,1
,STRING <7> <,12
,<7> <,13
,> <7> <7>,1
,<7> <7> <7>,1
,<7> <7> <,1
,<7> <7>,2
,STRING <7> <24>,1
,<7> <24>,1
,STRING <7> <14>,1
,<7> <14>,1
,<Hidden> <7> STRING,1
,STRING <7> <49>,1
,<7> <49>,1
,1> <7> STRING,1
AI,the AI .,1
,AI .,1
1230,1181 1230 1087,1
,1230 1087,1
<player1_arg>,STRING <player1_arg> <player2_arg>,6
,<player1_arg> <player2_arg>,6
version,simultaneous version (,1
,version (,1
,Wellisch's version of,1
,version of,1
1228,1277 1228 1229,1
,1228 1229,1
,{ 1228 },1
,1228 },1
LightTan,colour LightTan ),1
,LightTan ),1
stop,should stop when,1
,stop when,1
selection,destination selection on,1
,destination selection in,1
,movement selection --COMMA--,1
,selection on,1
,selection in,1
,selection --COMMA--,1
1224,{ 1224 },1
,1224 },1
1223,{ 1223 },1
,1223 },1
<directionsUsed>,<gridType> <directionsUsed> <DiagShow>,3
,<directionsUsed> <DiagShow>,3
1222,{ 1222 },1
,1222 },1
<Play:kingHop>,STRING <Play:kingHop> ),1
,<Play:kingHop> ),1
<21>,STRING <21> STRING,16
,<21> STRING,16
,<20> <21> <22>,1
,<21> <22>,1
,STRING <21> <,1
,<21> <,1
1229,1228 1229 1279,1
,1229 1279,1
<8>,<2> <8> <5>,1
,<8> <5>,1
,STRING <8> STRING,91
,<8> STRING,93
,<7> <8> <9>,1
,<8> <9>,1
,STRING <8> <2>,1
,<8> <2>,1
,STRING <8> <,19
,<8> <,19
,<4> <8> STRING,2
,STRING <8> <16>,1
,<8> <16>,1
,STRING <8> <20>,5
,<8> <20>,5
,STRING <8> <64>,1
,<8> <64>,1
<PlacementConditions:PlacementConditions>,) <PlacementConditions:PlacementConditions> ),2
,<PlacementConditions:PlacementConditions> ),2
<Board:leftMostP2>,) <Board:leftMostP2> },1
,<Board:leftMostP2> },1
<Version:removeRule>,STRING <Version:removeRule> ),1
,<Version:removeRule> ),1
least,at least 2,1
,least 2,1
,at least human,1
,least human,1
,at least one,1
,least one,1
BL,{ BL BR,6
,BL BR,26
,BR BL },46
,BL },55
,Forward BL BR,10
,BR BL Rightward,12
,BL Rightward,12
,BR BL FR,6
,BR BL Forward,8
,STRING BL ),1
,FL BL },2
,BL FR,6
,BL Forward,9
,BL ),1
,Backward BL BLL,1
,STRING BL (,1
,Backward BL },2
,FR BL },3
,FR BL BR,3
,BR BL FL,3
,BR BL Backward,3
,FL BL BR,7
,FL BL Forward,1
,Forward BL },1
,Leftward BL },1
,BL BLL,1
,BL (,1
,BL FL,3
,BL Backward,3
1240,1239 1240 1289,1
,1240 1289,1
,{ 1240 },1
,1240 },1
An,) An enemy,1
,An enemy,1
The,The capturing,3
,) The normal,2
,The normal,2
,) The starting,4
,The starting,4
,Each The twin,1
,The twin,1
,) The ones,1
,The ones,1
,. The enemy,1
,The enemy,1
,) The goal,2
,P2 The original,1
,The goal,2
,The original,1
,) The Rightmost,2
,The Rightmost,2
,) The rightMost,1
,The rightMost,1
,. The victory,1
,The victory,1
,. The board,2
,) The game,1
,( The Pawns,1
,see The Classified,1
,The board,2
,The game,1
,The Pawns,1
,The Classified,1
,. The latter,1
,The latter,1
BR,BL BR },11
,BR },21
,{ BR BL,50
,BR BL,78
,BL BR FL,11
,BR FL,11
,FL BR BL,11
,Forward BR BL,9
,Leftward BR BL,3
,Backward BR BL,1
,BL BR FR,1
,FR BR },4
,FL BR },3
,Forwards BR BL,2
,BR FR,1
,Backward BR },1
,STRING BR (,1
,BL BR Forward,3
,STRING BR ),1
,Backward BR BRR,1
,FR BR Forward,1
,Forward BR },1
,Leftward BR },1
,BR (,1
,BR Forward,4
,BR ),1
,BR BRR,1
,FR BR BL,2
1239,1190 1239 1240,1
,1239 1240,1
As,. As mentioned,1
,As mentioned,1
1237,{ 1237 },1
,1237 },1
At,) At Start,2
,At Start,2
<Board:startP2>,{ <Board:startP2> },1
,<Board:startP2> },1
,STRING <Board:startP2> ),2
,<Board:startP2> ),2
1234,1186 1234 1233,1
,1234 1233,1
,{ 1234 },1
,1234 },1
1233,1234 1233 1232,1
,1233 1232,1
1232,1233 1232 1281,1
,1232 1281,1
<quadhex>,STRING <quadhex> STRING,1
,<quadhex> STRING,1
<22>,STRING <22> STRING,13
,<22> STRING,13
,<21> <22> <23>,1
,<22> <23>,1
,STRING <22> <,1
,<22> <,1
<127>,1> <127> STRING,1
,<127> STRING,1
<9>,STRING <9> STRING,81
,<9> STRING,81
,<8> <9> <10>,1
,<9> <10>,1
,STRING <9> <,5
,<9> <,5
,STRING <9> <40>,1
,<9> <40>,1
,STRING <9> <18>,1
,<9> <18>,1
,<3> <9> <15>,1
,STRING <9> <81>,1
,<9> <15>,1
,<9> <81>,1
125%,) 125% damage,1
,125% damage,1
<Board:innerInitP1>,P1 <Board:innerInitP1> ),1
,<Board:innerInitP1> ),1
1252,{ 1252 },1
,1252 },1
1251,1300 1251 1202,1
,1251 1202,1
,{ 1251 },1
,1251 },1
Taken,Damage Taken Multiplier,1
,Taken Multiplier,1
1250,1299 1250 1296,1
,1250 1296,1
,{ 1250 },1
,1250 },1
hopping,the hopping process,1
,hopping process,1
<Board:seed>,{ <Board:seed> (,1
,<Board:seed> (,1
Jump,) Jump Diagonal,1
,Jump Diagonal,1
pushing,piece pushing .,1
,pushing .,1
1247,1296 1247 1394,1
,1247 1394,1
<Board:startP1>,{ <Board:startP1> },1
,<Board:startP1> },1
,STRING <Board:startP1> ),2
,<Board:startP1> ),2
CW,) CW CCW,2
,) CW ),2
,CW CCW,2
,CW ),2
1246,{ 1246 },1
,1246 },1
<Multi:capture>,<CapOption:enemyHops> <Multi:capture> ),1
,or <Multi:capture> (,1
,<Multi:capture> ),1
,<Multi:capture> (,1
flips,( flips 1,2
,flips 1,2
,( flips 0,4
,flips 0,4
<NumOfPlayers:NumPlayers>,players <NumOfPlayers:NumPlayers> ),2
,<NumOfPlayers:NumPlayers> ),2
1243,{ 1243 },1
,1243 },1
Foreground,piece Foreground P1,2
,piece Foreground P2,2
,Foreground P1,2
,Foreground P2,2
<23>,STRING <23> STRING,6
,<23> STRING,6
,<22> <23> <,1
,<23> <,2
,<14> <23> <33>,1
,<23> <33>,1
,STRING <23> <,1
,> <23> <288>,1
,<23> <288>,1
<Rightmost:sitesP1>,sites <Rightmost:sitesP1> ),1
,<Rightmost:sitesP1> ),1
<hogon>,<size> <hogon> },1
,<hogon> },1
<25>,STRING <25> <,3
,<25> <,18
,<10> <25> <,5
,<12> <25> <,5
,<14> <25> <,5
,STRING <25> STRING,7
,<25> STRING,7
,<5> <25> <65>,1
,<25> <65>,1
<throw>,{ <throw> },1
,<throw> },1
1264,1103 1264 1265,1
,1264 1265,1
1262,{ 1262 },1
,1262 },1
count:80,) count:80 state:1,3
,count:80 state:1,3
<murray>,{ <murray> },1
,<murray> },1
1258,{ 1258 },1
,1258 },1
1257,1306 1257 1208,1
,1257 1208,1
,{ 1257 },1
,1257 },1
1256,{ 1256 },1
,1256 },1
1254,{ 1254 },1
,1254 },1
count:87,STRING count:87 ),2
,count:87 ),2
<PieceSetup>,<BoardRegions> <PieceSetup> <CheckMate>,2
,<PieceSetup> <CheckMate>,2
<24>,STRING <24> STRING,12
,<24> STRING,14
,<33> <24> STRING,1
,<7> <24> STRING,1
,STRING <24> <,1
,<24> <,1
<Boundary:cornerSetup>,rules <Boundary:cornerSetup> phases:,1
,<Boundary:cornerSetup> phases:,2
,) <Boundary:cornerSetup> phases:,1
<Play:movePiece>,Each <Play:movePiece> ),1
,<Play:movePiece> ),1
De,De Vasa,1
<26>,STRING <26> STRING,7
,<26> STRING,7
,STRING <26> <,1
,<26> <,1
need,markers need to,1
,need to,1
1274,{ 1274 },1
,1274 },1
1273,1272 1273 1217,1
,1273 1217,1
,{ 1273 },1
,1273 },1
1272,1271 1272 1273,1
,1272 1273,1
1271,1270 1271 1272,1
,1271 1272,1
,{ 1271 },1
,1271 },1
1270,1269 1270 1271,1
,1270 1271,1
,{ 1270 },1
,1270 },1
<Rightmost:sitesP2>,sites <Rightmost:sitesP2> ),1
,<Rightmost:sitesP2> ),1
byLevel:True,3 byLevel:True ),1
,byLevel:True ),3
,4 byLevel:True ),2
1269,1268 1269 1270,1
,1269 1270,1
,{ 1269 },1
,1269 },1
1268,1267 1268 1269,1
,1268 1269,1
,{ 1268 },1
,1268 },1
<Queen2Start>,<King2Start> <Queen2Start> <RookLeft2Start>,1
,<Queen2Start> <RookLeft2Start>,1
1267,1266 1267 1268,1
,1267 1268,1
1266,1315 1266 1267,1
,1266 1267,1
1265,1264 1265 1216,1
,1265 1216,1
<27>,<19> <27> <20>,1
,<27> <20>,1
,STRING <27> <,1
,<27> <,1
,STRING <27> STRING,4
,<27> STRING,4
index:,) index: (,3
,index: (,3
Hole,first Hole (,2
,Hole (,2
omnicheck,in omnicheck if,1
,into omnicheck .,1
,in omnicheck --COMMA--,1
,of omnicheck on,1
,in omnicheck and,1
,of omnicheck --COMMA--,1
,omnicheck if,1
,omnicheck .,1
,omnicheck --COMMA--,2
,omnicheck on,1
,omnicheck and,1
FL,FR FL },242
,FL },245
,{ FL FR,7
,FL FR,38
,Forward FL FR,4
,BR FL FR,11
,Leftward FL FR,12
,FR FL BR,12
,FR FL Backward,19
,FR FL Forward,16
,STRING FL ),1
,Forward FL Backward,1
,Forward FL BL,1
,FR FL Rightward,11
,FR FL BL,8
,FL BR,14
,FL Backward,20
,FL Forward,16
,FL ),1
,FL BL,10
,FL Rightward,11
,Forward FL FLL,1
,Leftward FL },2
,{ FL BR,2
,Rightward FL FR,1
,BL FL FR,3
,Forward FL Backwards,1
,{ FL BL,1
,Rightward FL },1
,FL FLL,1
,FL Backwards,1
,STRING FL NW,1
,STRING FL SE,1
,FL NW,1
,FL SE,1
1286,{ 1286 },1
,1286 },1
En,movement: En passant,5
,En passant,6
,Movement: En passant,1
<AttackCheck>,{ <AttackCheck> <EachMove>,1
,<AttackCheck> <EachMove>,1
1284,{ 1284 },1
,1284 },1
1283,1282 1283 1332,1
,1283 1332,1
FR,{ FR FL,275
,FR FL,308
,FL FR },27
,FR },30
,Forward FR FL,8
,FL FR Forward,4
,FR Forward,5
,Leftward FR FL,8
,BL FR FL,5
,BR FR FL,1
,{ FR BR,4
,Rightward FR Leftward,1
,STRING FR ),1
,Forward FR BR,1
,Backward FR FL,9
,Backwards FR FL,1
,Rightward FR FL,1
,FR BR,7
,FR Leftward,1
,FR ),1
,{ FR BL,3
,FL FR BL,3
,FL FR Rightward,2
,Forward FR },2
,{ FR Forward,1
,Forward FR FRR,1
,BL FR },1
,Backward FR Rightward,1
,FR BL,6
,FR Rightward,3
,FR FRR,1
,STRING FR SW,1
,STRING FR NE,1
,FL FR BR,2
,FR SW,1
,FR NE,1
1282,1281 1282 1283,1
,1282 1283,1
UNE,STRING UNE ),3
,UNE ),5
,#1 UNE ),2
1281,1232 1281 1282,1
,1281 1282,1
,{ 1281 },1
,1281 },1
stack:False,) stack:False (,1
,) stack:False ),2
,stack:False (,1
,stack:False ),2
1279,1229 1279 1328,1
,1279 1328,1
1277,1326 1277 1228,1
,1277 1228,1
,{ 1277 },1
,1277 },1
count:60,) count:60 state:1,3
,count:60 state:1,3
count:65,STRING count:65 ),2
,count:65 ),2
count:66,STRING count:66 ),1
,count:66 ),1
end,( end {,306
,end {,306
,( end (,697
,end (,697
,) end or,1
,) end piece,1
,end or,1
,end piece,1
,( end <End>,2
,end <End>,2
,the end of,1
,end of,1
,( end <Version:result>,2
,end <Version:result>,2
,and end considerations:,1
,bitter end -,1
,end considerations:,1
,end -,1
Set-up/Pie,and Set-up/Pie Hex,1
,Set-up/Pie Hex,1
lines,script lines Move,1
,lines Move,1
Home,P1 Home (,66
,P2 Home (,8
,Home (,194
,P2 Home },2
,Home },5
,inner Home (,89
,outer Home (,23
,inner Home },2
,outer Home },1
,Inner Home (,6
,Outer Home (,2
,inner Home <Board:stores>,1
,Home <Board:stores>,1
selecting,prevent selecting null,1
,selecting null,1
UNW,STRING UNW ),1
,UNW ),1
<28>,STRING <28> STRING,7
,<28> STRING,7
,STRING <28> <,1
,<28> <,1
from:0,d:2 from:0 num:4,35
,from:0 num:4,35
,d:2 from:0 num:6,16
,from:0 num:6,16
,d:2 from:0 num:2,3
,from:0 num:2,3
,d:2 from:0 num:5,2
,from:0 num:5,2
,STRING from:0 (,2
,from:0 (,2
,d:2 from:0 num:7,4
,from:0 num:7,4
,d:2 from:0 num:<Num:dice>,1
,from:0 num:<Num:dice>,1
,d:2 from:0 num:3,8
,from:0 num:3,9
,Direction from:0 E,1
,from:0 E,1
,d:7 from:0 num:1,1
,from:0 num:1,2
,path from:0 to:2,1
,path from:0 to:1,1
,from:0 to:2,1
,from:0 to:1,1
,d:9 from:0 num:1,1
,d:4 from:0 num:3,1
,d:2 from:0 num:8,2
,from:0 num:8,2
,d:2 from:0 num:<Dice:num>,1
,from:0 num:<Dice:num>,1
from:1,path from:1 to:3,1
,from:1 to:3,1
,d:6 from:1 num:1,3
,from:1 num:1,3
,d:6 from:1 num:2,1
,from:1 num:2,1
attacker,the attacker .,3
,attacker .,3
1296,1250 1296 1247,1
,1296 1247,1
from:2,path from:2 to:3,1
,from:2 to:3,1
,d:4 from:2 num:1,1
,from:2 num:1,1
1295,{ 1295 },1
,1295 },1
1293,{ 1293 },1
,1293 },1
1292,{ 1292 },1
,1292 },1
1291,{ 1291 },1
,1291 },1
noted,as noted General,8
,noted General,8
special,up special case,1
,) special case:,1
,special case,1
,special case:,1
ifAfterwards:,) ifAfterwards: (,288
,ifAfterwards: (,289
,< ifAfterwards: (,1
count:72,) count:72 ),1
,count:72 ),1
1289,1240 1289 1338,1
,1289 1338,1
,{ 1289 },1
,1289 },1
<ExtraRows>,<MainWin0> <ExtraRows> <ExtraCols>,1
,<ExtraRows> <ExtraCols>,1
1287,{ 1287 },1
,1287 },1
count:76,1617 count:76 state:3,1
,1623 count:76 state:3,1
,count:76 state:3,2
attacked,being attacked by,1
,attacked by,1
,being attacked (,1
,being attacked #4,1
,being attacked #3,1
,attacked (,1
,attacked #4,1
,attacked #3,1
<Board:size>,rectangle <Board:size> 1,1
,<Board:size> 1,3
,2 <Board:size> ),1
,<Board:size> ),56
,square <Board:size> ),12
,STRING <Board:size> ),22
,board <Board:size> ),1
,<Tiling:type> <Board:size> ),2
,2 <Board:size> store:None,3
,<Board:size> store:None,3
,rectangle <Board:size> ),3
,<Boundary:shape> <Board:size> ),1
,hex <Board:size> ),4
,- <Board:size> 1,2
,^ <Board:size> 2,1
,) <Board:size> ),1
,<Board:size> 2,1
,square <Board:size> diagonals:Alternating,1
,Line <Board:size> ),1
,<Board:size> diagonals:Alternating,1
,4 <Board:size> ),6
,Limping <Board:size> ),1
,tri <Board:size> ),1
regionSite,( regionSite (,52
,regionSite (,52
slightly,space slightly left,1
,slightly left,1
count:49,STRING count:49 ),2
,count:49 ),2
<players>,{ <players> },1
,<players> },1
,{ <players> <board>,1
,<players> <board>,1
<29>,STRING <29> STRING,5
,<29> STRING,5
,STRING <29> <,1
,<29> <,1
<255>,1> <255> STRING,1
,<255> STRING,1
turns,to turns elapsed,1
,turns elapsed,1
,Double turns and,1
,turns and,1
<SType:selScoring>,then <SType:selScoring> ),2
,( <SType:selScoring> ),1
,<SType:selScoring> ),3
loops:3,) loops:3 from:1>,1
,loops:3 from:1>,1
count:40,STRING count:40 ),1
,count:40 ),1
1299,866 1299 1250,1
,1299 1250,1
<surround,STRING <surround (,2
,<surround (,2
<starting>,{ <starting> <pieOrNot>,1
,<starting> <pieOrNot>,1
Hidden,set Hidden Cell,2
,Hidden Cell,2
,set Hidden (,19
,set Hidden What,47
,Hidden (,19
,Hidden What,58
,is Hidden at:,1
,set Hidden at:,8
,Hidden at:,9
,sites Hidden to:Mover,3
,Hidden to:Mover,3
,is Hidden What,1
,sites Hidden What,10
,set Hidden Who,2
,set Hidden {,4
,Hidden Who,2
,Hidden {,4
,sites Hidden to:All,1
,Hidden to:All,1
,set Hidden Value,29
,Hidden Value,29
count:44,STRING count:44 ),2
,count:44 ),2
<sitesP2>,<sitesP1> <sitesP2> },1
,<sitesP2> },1
<16><21><8>,STRING <16><21><8> STRING,1
,<16><21><8> STRING,1
al-Bayadiq,Baidaq al-Bayadiq in,4
,al-Bayadiq in,4
Leftwards,Rightwards Leftwards },18
,Leftwards },19
,STRING Leftwards ),3
,Backward Leftwards },1
,Leftwards ),3
Shafran,Shafran Chess,1
size:21,Each size:21 ),1
,size:21 ),1
IS,THIS IS JUST,1
,IS JUST,1
Gallicus,Murus Gallicus and,1
,Murus Gallicus by,1
,Gallicus and,1
,Gallicus by,1
<Line>,STRING <Line> args:,1
,<Line> args:,1
Top,sites Top ),598
,Top ),601
,STRING Top STRING,2
,Top STRING,2
,STRING Top ),3
,) Top left,1
,) Top Right,1
,Top left,1
,Top Right,1
400,pair 400 588,1
,400 588,1
,face 400 ),1
,400 ),1
,452 400 351,1
,400 351,1
,{ 400 },1
,400 },1
,401 400 379,1
,400 379,1
count:50,) count:50 state:1,1
,count:50 state:1,1
<Place:geese>,{ <Place:geese> (,1
,<Place:geese> (,1
401,{ 401 402,1
,401 402,1
,pair 401 589,1
,401 589,1
,face 401 ),1
,401 ),1
,{ 401 },1
,401 },1
,416 401 400,1
,401 400,1
<Tag>,STRING <Tag> args:,1
,<Tag> args:,1
402,401 402 },1
,402 },1
,pair 402 590,1
,402 590,1
,face 402 ),1
,402 ),1
,443 402 361,1
,402 361,1
IntFunction,with IntFunction .,1
,IntFunction .,1
403,pair 403 591,1
,403 591,1
,face 403 ),1
,403 ),1
,{ 403 },1
,403 },1
404,{ 404 467,1
,413 404 467,1
,404 467,2
,pair 404 592,1
,404 592,1
405,pair 405 593,1
,405 593,1
,385 405 425,1
,405 425,1
count:55,0 count:55 ),1
,count:55 ),1
406,pair 406 594,1
,406 594,1
<Players:end>,<Players:Play> <Players:end> ),1
,<Players:end> ),2
,) <Players:end> ),1
407,275 407 ),1
,pair 407 595,1
,409 407 ),1
,407 ),2
,407 595,1
408,276 408 ),1
,pair 408 596,1
,410 408 ),1
,408 ),2
,408 596,1
,457 408 359,1
,408 359,1
,{ 408 },1
,408 },1
,387 408 409,1
,408 409,1
If,) If that's,2
,If that's,2
,{ If one,1
,) If a,2
,If one,1
,If a,5
,) If has,1
,If has,1
,rule: If an,1
,If an,1
,. If a,3
,* If there,1
,If there,1
,#4 If this,1
,#3 If this,1
,If this,2
409,pair 409 407,1
,409 407,1
,408 409 410,1
,409 410,1
<Num:tigers>,) <Num:tigers> ),1
,<Num:tigers> ),1
count:29,} count:29 ),1
,count:29 ),1
<tracks>>,<team> <tracks>> },1
,<tracks>> },1
size:16,Shared size:16 ),1
,size:16 ),1
count:27,STRING count:27 ),2
,count:27 ),2
size:14,Shared size:14 ),1
,size:14 ),1
In,is In (,953
,In (,953
,is In STRING,26
,In STRING,26
,is In #1,59
,In #1,59
,is In 1,7
,In 1,7
,is In <End:rule>,1
,In <End:rule>,1
,is In #2,138
,In #2,138
,is In 2,1
,In 2,1
,Variations: In Wellisch's,1
,) In another,1
,In Wellisch's,1
,In another,1
,is In 1323,1
,is In 293,1
,In 1323,1
,In 293,1
,is In #3,1
,In #3,1
size:12,Each size:12 ),1
,size:12 ),1
against,2 against Player,1
,against Player,1
,protect against attacks,1
,attacks against site,1
,entrenchment against attacks,1
,( against just,1
,( against cavalry,1
,against attacks,2
,against site,1
,against just,1
,against cavalry,1
,damage against humans,4
,( against ),1
,against humans,4
,against ),1
Hops,Friendly Hops allowed,1
,Hops allowed,1
<centering>,<startP2> <centering> },1
,<centering> },1
<size>,{ <size> <track>,6
,<size> <track>,6
,{ <size> <sizeHome>,1
,<size> <sizeHome>,1
,{ <size> },80
,<size> },80
,{ <size> <home>,1
,<size> <home>,1
,{ <size> <numPieces>,2
,<size> <numPieces>,2
,{ <size> <track2>,17
,<size> <track2>,17
,{ <size> <track1>,1
,<size> <track1>,1
,{ <size> <tracks>,4
,<size> <tracks>,4
,{ <size> <CCW2>,3
,<size> <CCW2>,3
,{ <size> <trackCCW2>,1
,<size> <trackCCW2>,1
,{ <size> <trackDirection>,1
,<size> <trackDirection>,1
,{ <size> <init>,1
,<size> <init>,1
,{ <size> <hogon>,1
,<size> <hogon>,1
,{ <size> <start>,4
,<size> <start>,4
,{ <size> <placement>,1
,<size> <placement>,1
,{ <size> <regions>,1
,<size> <regions>,1
,{ <size> <dot0>,1
,<size> <dot0>,1
,{ <size> <startP1>,1
,<size> <startP1>,1
,<num> <size> <team>,5
,<size> <team>,5
,{ <size> <dice>,1
,<size> <dice>,1
,{ <size> <trackP2>,1
,<size> <trackP2>,1
,{ <size> <trackTeam2>,1
,<size> <trackTeam2>,1
,{ <size> <HomeTrack2>,1
,<size> <HomeTrack2>,1
,{ <size> <bgrd>,1
,<size> <bgrd>,1
,{ <size> <hints>,5
,<size> <hints>,5
,{ <size> <maxVal>,1
,<size> <maxVal>,1
It,. It should,1
,It should,1
,. It is,1
,It is,1
,. It determines,1
,It determines,1
cell,'to' cell .,2
,EMPTY cell .,1
,ENEMY-OCCUPIED cell .,1
,cell .,4
,empty cell in,1
,empty cell whose,1
,cell in,1
,cell whose,1
,a cell is,1
,empty cell isolated,1
,cell is,1
,cell isolated,1
<Remove>,STRING <Remove> args:,2
,<Remove> args:,2
Baidaq,) Baidaq al-Bayadiq,2
,a Baidaq al-Bayadiq,2
,Shah's Baidaq .,1
,Baidaq al-Bayadiq,4
,Baidaq .,1
<Players:track3>,) <Players:track3> <Players:track4>,1
,<Players:track3> <Players:track4>,1
Target,- Target region,1
,Target region,1
,is Target {,4
,Target {,4
410,pair 410 408,1
,410 408,1
,{ 410 },1
,410 },1
,409 410 411,1
,410 411,1
411,213 411 ),1
,411 ),1
,{ 411 },1
,411 },1
,410 411 429,1
,411 429,1
Slide,move Slide (,97
,Slide (,97
,move Slide Diagonal,70
,Slide Diagonal,70
,move Slide ),10
,Slide ),10
,move Slide Orthogonal,142
,Slide Orthogonal,142
,move Slide All,4
,Slide All,4
,move Slide STRING,3
,Slide STRING,3
,move Slide Forward,30
,Slide Forward,30
,move Slide Rotational,1
,Slide Rotational,1
,move Slide #1,23
,Slide #1,23
,move Slide Backward,1
,Slide Backward,1
,steps Slide Adjacent,2
,Slide Adjacent,2
412,214 412 ),1
,412 ),1
413,422 413 404,1
,413 404,1
,{ 413 },1
,413 },1
,516 413 351,1
,413 351,1
414,463 414 365,1
,414 365,1
,435 414 434,1
,414 434,1
count:21,12 count:21 ),1
,count:21 ),3
,) count:21 ),2
MovesThisTurn,count MovesThisTurn ),49
,MovesThisTurn ),49
<diceHand>,<start> <diceHand> <track58>,1
,<diceHand> <track58>,1
415,pair 415 89,1
,415 89,1
,1396 415 416,1
,415 416,1
416,pair 416 90,1
,416 90,1
,415 416 220,1
,416 220,1
,{ 416 },1
,416 },1
,417 416 401,1
,416 401,1
417,pair 417 45,1
,417 45,1
,418 417 416,1
,417 416,1
count:20,) count:20 ),4
,count:20 ),9
,STRING count:20 ),5
,1618 count:20 state:3,1
,1624 count:20 state:3,1
,1622 count:20 state:3,1
,1628 count:20 state:3,1
,count:20 state:3,4
418,pair 418 46,1
,418 46,1
,{ 418 },1
,418 },1
,419 418 417,1
,418 417,1
count:25,) count:25 ),5
,count:25 ),5
T33434,tiling T33434 2,1
,T33434 2,1
,tiling T33434 (,4
,T33434 (,4
,<tiling T33434 Diamond>,1
,T33434 Diamond>,1
,tiling T33434 5,2
,tiling T33434 9,2
,T33434 5,2
,T33434 9,2
419,7 419 ),1
,419 ),1
,{ 419 },1
,419 },1
,420 419 418,1
,419 418,1
count:23,STRING count:23 ),2
,count:23 ),2
<DefaultAndCount,STRING <DefaultAndCount 0,1
,<DefaultAndCount 0,1
count:24,STRING count:24 ),4
,count:24 ),5
,) count:24 ),1
41>,. 41> <38,1
,<38 41> STRING,1
,41> <38,1
,41> STRING,1
USE,STRING USE ),2
,USE ),3
,#1 USE ),1
2nd,( 2nd edition,1
,2nd edition,1
<Players:track4>,<Players:track3> <Players:track4> },1
,<Players:track4> },1
<ThinDashed>,<All> <ThinDashed> <All>,2
,<All> <ThinDashed> <Orthogonal>,2
,<ThinDashed> <All>,2
,<ThinDashed> <Orthogonal>,2
,<All> <ThinDashed> <4>,2
,<ThinDashed> <4>,2
420,8 420 ),1
,420 ),1
,421 420 419,1
,420 419,1
421,9 421 ),1
,421 ),1
,422 421 420,1
,421 420,1
422,431 422 413,1
,422 413,1
,10 422 ),1
,422 ),1
,{ 422 },1
,422 },1
,279 422 421,1
,422 421,1
423,13 423 ),1
,423 ),1
,{ 423 },1
,423 },1
424,14 424 ),1
,424 ),1
<Ruleset:rules>,) <Ruleset:rules> ),1
,<Ruleset:rules> ),1
425,15 425 ),1
,425 ),1
,{ 425 },1
,425 },1
,405 425 466,1
,425 466,1
USW,STRING USW ),2
,USW ),3
,#1 USW ),1
10000,* 10000 (,1
,10000 (,1
426,16 426 ),1
,426 ),1
,512 426 377,1
,426 377,1
427,41 427 ),1
,427 ),1
,476 427 574,1
,427 574,1
,{ 427 },1
,427 },1
,447 427 386,1
,427 386,1
count:30,} count:30 ),1
,count:30 ),1
,) count:30 state:1,1
,count:30 state:1,1
428,42 428 ),1
,428 ),1
by:Enemy,Occupied by:Enemy ),12
,by:Enemy ),12
,Occupied by:Enemy STRING,28
,by:Enemy STRING,28
,Occupied by:Enemy top:False,6
,by:Enemy top:False,6
,) by:Enemy (,3
,by:Enemy (,3
<sitesP1>,{ <sitesP1> <sitesP2>,1
,<sitesP1> <sitesP2>,1
count:31,STRING count:31 ),2
,count:31 ),2
429,43 429 ),1
,429 ),1
,{ 429 },1
,429 },1
,411 429 449,1
,429 449,1
count:35,STRING count:35 ),2
,count:35 ),2
LL,in LL (,4
,LL (,4
<Players:numPlayers>,players <Players:numPlayers> ),2
,<Players:numPlayers> ),2
4375,. 4375 },2
,4375 },2
True,) True ),23
,True ),72
,) True (,53
,True (,54
,STRING True ),2
,stack: True ),2
,stack: True (,1
,) True False,2
,True False,2
,2 True ),19
,3 True ),21
,#5 True ),3
,4 True ),1
,5 True ),1
,) True to:#1,1
,True to:#1,1
<Player:scores>,{ <Player:scores> },1
,<Player:scores> },1
<Players:board>,{ <Players:board> (,1
,<Players:board> (,1
count:2,) count:2 ),84
,count:2 ),127
,STRING count:2 ),6
,12 count:2 ),4
,25 count:2 ),5
,) count:2 state:1,4
,count:2 state:1,4
,11 count:2 ),4
,23 count:2 ),4
,6 count:2 ),1
,14 count:2 ),1
,0 count:2 ),1
,) count:2 stack:True,2
,count:2 stack:True,2
,STRING count:2 value:2,1
,STRING count:2 value:3,1
,STRING count:2 value:4,1
,count:2 value:2,3
,count:2 value:3,3
,count:2 value:4,3
,62 count:2 ),1
,2 count:2 ),1
,87 count:2 ),1
,48 count:2 ),1
,4 count:2 ),3
,76 count:2 ),3
,36 count:2 ),3
,44 count:2 ),1
,38 count:2 ),1
,) count:2 STRING,2
,count:2 STRING,2
,) count:2 (,1
,count:2 (,1
,sow count:2 ),1
,sow count:2 apply:,1
,count:2 apply:,1
,} count:2 value:4,2
,} count:2 value:6,2
,} count:2 value:5,2
,} count:2 value:2,2
,} count:2 value:3,2
,count:2 value:6,2
,count:2 value:5,2
,86 count:2 value:8,1
,87 count:2 value:7,1
,98 count:2 value:8,1
,99 count:2 value:7,1
,count:2 value:8,2
,count:2 value:7,2
,} count:2 ),1
count:1,) count:1 ),31
,count:1 ),44
,17 count:1 ),1
,16 count:1 ),1
,7 count:1 ),1
,19 count:1 ),1
,STRING count:1 value:5,1
,STRING count:1 value:6,1
,count:1 value:5,1
,count:1 value:6,1
,) count:1 (,4
,count:1 (,4
,} count:1 ),4
,STRING count:1 ),5
,} count:1 value:7,2
,count:1 value:7,2
430,44 430 ),1
,430 ),1
,387 430 528,1
,430 528,1
,492 430 432,1
,430 432,1
431,368 431 },1
,368 431 422,1
,431 },1
,431 422,1
,49 431 ),1
,51 431 ),1
,431 ),2
,480 431 382,1
,431 382,1
,470 431 472,1
,431 472,1
432,50 432 ),1
,52 432 ),1
,432 ),2
,481 432 534,1
,432 534,1
,430 432 473,1
,432 473,1
433,57 433 ),1
,433 ),1
<OffDiagonal>,STRING <OffDiagonal> STRING,2
,<OffDiagonal> STRING,2
<boardWidth>,<boardHeight> <boardWidth> <numTiles>,1
,<boardWidth> <numTiles>,1
434,58 434 ),1
,434 ),1
,{ 434 },1
,434 },1
,414 434 475,1
,434 475,1
435,61 435 ),1
,435 ),1
,386 435 484,1
,435 484,1
,{ 435 },1
,435 },1
,476 435 414,1
,435 414,1
436,62 436 ),1
,436 ),1
,485 436 191,1
,436 191,1
,{ 436 },1
,436 },1
437,65 437 ),1
,437 ),1
count:9,STRING count:9 ),9
,count:9 ),14
,) count:9 ),5
438,66 438 ),1
,438 ),1
doctrines,Player doctrines 1,1
,doctrines 1,1
count:8,6 count:8 ),1
,8 count:8 ),1
,16 count:8 ),1
,18 count:8 ),1
,count:8 ),12
,7 count:8 ),1
,20 count:8 ),1
,11 count:8 ),1
,) count:8 ),4
,STRING count:8 value:1,1
,count:8 value:1,1
,) count:8 (,1
,count:8 (,1
,STRING count:8 ),1
,92 count:8 value:2,1
,104 count:8 value:2,1
,count:8 value:2,2
439,67 439 ),1
,439 ),1
,{ 439 },1
,439 },1
count:7,) count:7 ),8
,count:7 ),17
,5 count:7 ),1
,18 count:7 ),1
,) count:7 (,1
,count:7 (,1
,14 count:7 ),1
,0 count:7 ),1
,13 count:7 ),1
,27 count:7 ),1
,41 count:7 ),1
,42 count:7 ),1
,28 count:7 ),1
Reset,) Reset the,1
,Reset the,1
count:6,) count:6 ),8
,count:6 ),13
,) count:6 (,1
,count:6 (,1
,STRING count:6 ),5
count:5,) count:5 ),420
,count:5 ),458
,0 count:5 ),7
,20 count:5 ),4
,7 count:5 ),4
,13 count:5 ),4
,10 count:5 ),1
,11 count:5 ),1
,12 count:5 ),5
,23 count:5 ),1
,24 count:5 ),1
,25 count:5 ),1
,STRING count:5 ),3
,6 count:5 ),3
,18 count:5 ),3
,) count:5 (,2
,count:5 (,2
,} count:5 value:1,2
,count:5 value:1,2
,1620 count:5 state:3,1
,1626 count:5 state:3,1
,count:5 state:3,2
empties,suicide empties on,1
,empties on,1
count:4,) count:4 ),84
,count:4 ),114
,STRING count:4 ),3
,20 count:4 ),4
,21 count:4 ),1
,7 count:4 ),1
,) count:4 value:1,4
,count:4 value:1,4
,36 count:4 ),1
,37 count:4 ),1
,38 count:4 ),1
,39 count:4 ),1
,2 count:4 ),4
,22 count:4 ),1
,14 count:4 ),3
,10 count:4 ),1
,9 count:4 ),1
,26 count:4 ),1
,52 count:4 ),1
,27 count:4 ),1
,6 count:4 ),2
,sow count:4 STRING,1
,count:4 STRING,1
,) count:4 (,12
,count:4 (,12
,88 count:4 value:6,1
,89 count:4 value:5,1
,90 count:4 value:4,1
,91 count:4 value:3,1
,95 count:4 ),1
,100 count:4 value:6,1
,101 count:4 value:5,1
,102 count:4 value:4,1
,103 count:4 value:3,1
,107 count:4 ),1
,count:4 value:6,2
,count:4 value:5,2
,count:4 value:4,2
,count:4 value:3,2
before:35,) before:35 (,1
,before:35 (,1
bridging,opponent's bridging markers,1
,bridging markers,1
count:3,) count:3 ),43
,count:3 ),93
,17 count:3 ),4
,4 count:3 ),7
,STRING count:3 ),27
,25 count:3 ),1
,24 count:3 ),1
,23 count:3 ),1
,22 count:3 ),1
,21 count:3 ),1
,6 count:3 ),2
,16 count:3 ),3
,19 count:3 ),1
,) count:3 (,2
,count:3 (,2
,) count:3 skipIf:,1
,count:3 skipIf:,1
,} count:3 ),1
43>,. 43> <44,1
,43> <44,1
before:34,) before:34 (,1
,before:34 (,1
count:18,sow count:18 STRING,1
,count:18 STRING,1
,STRING count:18 ),1
,count:18 ),1
new,a new piece,1
,new piece,1
,two new markers,1
,new markers,1
count:16,) count:16 ),7
,count:16 ),13
,STRING count:16 ),3
,} count:16 ),3
Player,value Player Mover,156
,value Player Prev,5
,Player Mover,156
,Player Prev,5
,forEach Player if:,14
,result Player Loss,42
,Player if:,14
,Player Loss,42
,value Player (,3
,Pieces Player ),10
,result Player Win,6
,Player (,8
,Player ),34
,Player Win,6
,STRING Player ),10
,value Player P3,1
,value Player P1,2
,value Player P4,1
,value Player P2,2
,Player P3,1
,Player P1,2
,Player P4,1
,Player P2,2
,Moves Player ),4
,sites Player STRING,15
,Player STRING,15
,sites Player ),5
,value Player Next,7
,forEach Player (,4
,handSite Player ),3
,Player Next,7
,score Player ),1
,value Player #1,1
,Player #1,1
,Blocked Player ),1
,result Player <Result:nonMover>,1
,Select Player index,2
,Player <Result:nonMover>,1
,Player index,2
,Score Player (,1
,if Player 1's,1
,by Player 2,1
,against Player 3's,1
,then Player 2,1
,capture Player 3's,1
,until Player 3,1
,Player 1's,1
,Player 2,2
,Player 3's,2
,Player 3,1
,) Player removal,1
,) Player doctrines,1
,) Player maps,1
,Player removal,1
,Player doctrines,1
,Player maps,1
count:17,) count:17 ),2
,count:17 ),5
,STRING count:17 ),3
on:#2,STRING on:#2 ),1
,on:#2 ),1
T33336>,<tiling T33336> STRING,1
,T33336> STRING,1
<2><,STRING <2>< (,1
,<2>< (,1
positions,starting positions of,4
,positions of,4
440,{ 440 503,1
,449 440 503,1
,440 503,2
,68 440 ),1
,440 ),1
matchScore,( matchScore P1,71
,( matchScore P2,5
,matchScore P1,71
,matchScore P2,5
,( matchScore P4,6
,( matchScore P5,8
,( matchScore P6,10
,( matchScore P7,12
,( matchScore P8,14
,( matchScore P9,16
,matchScore P4,6
,matchScore P5,8
,matchScore P6,10
,matchScore P7,12
,matchScore P8,14
,matchScore P9,16
441,69 441 ),1
,441 ),1
,{ 441 },1
,441 },1
count:<Board:initLeopard>,) count:<Board:initLeopard> ),1
,count:<Board:initLeopard> ),1
442,70 442 ),1
,442 ),1
,{ 442 },1
,442 },1
443,73 443 ),1
,185 443 ),1
,443 ),2
,456 443 402,1
,443 402,1
444,74 444 ),1
,186 444 ),1
,444 ),2
,395 444 493,1
,444 493,1
Entrenchment,) Entrenchment sites,1
,Entrenchment sites,1
445,75 445 ),1
,135 445 ),1
,445 ),2
,{ 445 },1
,445 },1
446,76 446 ),1
,136 446 ),1
,446 ),2
NE,{ NE SE,6
,NE SE,8
,Side NE ),27
,NE ),41
,--COMMA-- NE --COMMA--,1
,SW NE ),4
,NE --COMMA--,1
,{ NE SW,5
,NE SW,7
,) NE ),2
,STRING NE (,2
,{ NE NW,1
,SE NE },1
,NE (,2
,NE NW,2
,NE },1
,Adjacent NE ),4
,FR NE ),1
,STRING NE SW,2
,STRING NE NE,1
,NE NE ),1
,STRING NE NW,1
,STRING NE SE,2
,SE NE ),1
,NW NE ),1
,NE NE,1
,) NE included:True,1
,NE included:True,1
447,77 447 ),1
,79 447 ),1
,81 447 ),1
,83 447 ),1
,447 ),4
,{ 447 },1
,447 },1
,467 447 427,1
,447 427,1
cells:,) cells: {,31
,cells: {,32
,} cells: {,1
count:10,) count:10 ),4
,count:10 ),4
,1619 count:10 state:3,1
,1625 count:10 state:3,1
,1621 count:10 state:3,1
,1627 count:10 state:3,1
,count:10 state:3,4
448,78 448 ),1
,80 448 ),1
,82 448 ),1
,84 448 ),1
,448 ),4
,399 448 497,1
,448 497,1
,{ 448 },1
,448 },1
449,458 449 440,1
,449 440,1
,91 449 ),1
,449 ),1
,{ 449 450,1
,449 450,1
,{ 449 },1
,449 },1
,429 449 470,1
,449 470,1
count:14,11 count:14 ),2
,count:14 ),5
,5 count:14 ),1
,4 count:14 ),1
,STRING count:14 ),1
count:15,) count:15 ),19
,count:15 ),60
,12 count:15 ),13
,5 count:15 ),1
,4 count:15 ),1
,0 count:15 ),8
,25 count:15 ),11
,13 count:15 ),4
,11 count:15 ),1
,STRING count:15 ),2
count:12,) count:12 ),15
,count:12 ),38
,STRING count:12 ),23
44>,. 44> STRING,1
,44> STRING,1
count:13,7 count:13 ),1
,19 count:13 ),1
,count:13 ),5
,) count:13 ),3
items:,Stack items: {,24
,items: {,24
NW,SE NW SW,6
,NW SW,8
,player NW ),1
,NW ),42
,Side NW ),25
,--COMMA-- NW --COMMA--,1
,SE NW ),5
,S NW (,1
,NW --COMMA--,1
,NW (,3
,{ NW SE,5
,NW SE,6
,) NW ),2
,STRING NW (,2
,NE NW },1
,{ NW SW,1
,NW },1
,Adjacent NW ),4
,FL NW ),1
,STRING NW SE,1
,NE NW ),1
,SW NW ),2
,STRING NW NW,1
,NW NW ),1
,STRING NW NE,1
,STRING NW SW,1
,NW NW,1
,NW NE,1
,) NW included:True,1
,NW included:True,1
reaching,upon reaching the,1
,reaching the,1
trick,implementation trick to,1
,trick to,1
around,somewhere around in,1
,site around but,1
,around in,1
,around but,1
,pieces around the,1
,around the,1
450,92 450 ),1
,450 ),1
,449 450 451,1
,450 451,1
,{ 450 },1
,450 },1
451,93 451 ),1
,451 ),1
,450 451 452,1
,451 452,1
<Player:end>,{ <Player:end> },1
,<Player:end> },1
,) <Player:end> ),1
,<Player:end> ),1
452,94 452 ),1
,452 ),1
,451 452 400,1
,452 400,1
453,95 453 ),1
,161 453 ),1
,453 ),2
,514 453 389,1
,453 389,1
<track>,<size> <track> },5
,<track> },8
,{ <track> },1
,<start> <track> },1
,<size> <track> <regions>,1
,<track> <regions>,2
,<num> <track> <regions>,1
,<homes> <track> <init>,1
,<track> <init>,1
,<num> <track> },1
454,96 454 ),1
,162 454 ),1
,454 ),2
,{ 454 },1
,454 },1
455,97 455 ),1
,179 455 ),1
,455 ),2
456,98 456 ),1
,180 456 ),1
,456 ),2
,457 456 443,1
,456 443,1
457,99 457 ),1
,457 ),1
,506 457 408,1
,457 408,1
,458 457 456,1
,457 456,1
458,467 458 449,1
,458 449,1
,100 458 ),1
,458 ),1
,{ 458 },1
,458 },1
,459 458 457,1
,458 457,1
<seed>,<type> <seed> },1
,<seed> },1
define,( define STRING,4267
,define STRING,4268
,We define STRING,1
,function define (,1
,define (,1
,the define .,1
,define .,1
<End:cond>,if <End:cond> (,1
,<End:cond> (,1
459,101 459 ),1
,459 ),1
,460 459 458,1
,459 458,1
<DiagShow>,<directionsUsed> <DiagShow> <directionsWin>,2
,<DiagShow> <directionsWin>,2
,<directionsUsed> <DiagShow> <ForcedFillLevel>,1
,<DiagShow> <ForcedFillLevel>,1
supergame,whose supergame is,2
,the supergame (,1
,supergame is,2
,supergame (,1
OK,1 OK --COMMA--,1
,OK --COMMA--,1
Adjacent,Step Adjacent (,4
,Adjacent (,27
,Related Adjacent (,1
,STRING Adjacent (,3
,STRING Adjacent N,4
,STRING Adjacent S,4
,STRING Adjacent E,4
,STRING Adjacent W,4
,STRING Adjacent NE,4
,STRING Adjacent NW,4
,STRING Adjacent SW,4
,STRING Adjacent SE,4
,STRING Adjacent ),14
,difference Adjacent (,8
,Slide Adjacent (,2
,Hop Adjacent (,8
,difference Adjacent Forward,3
,difference Adjacent Backward,3
,difference Adjacent Forwards,1
,difference Adjacent Rightward,1
,difference Adjacent Leftward,1
,Adjacent N,4
,Adjacent S,4
,Adjacent E,4
,Adjacent W,4
,Adjacent NE,4
,Adjacent NW,4
,Adjacent SW,4
,Adjacent SE,4
,Adjacent ),14
,Adjacent Forward,3
,Adjacent Backward,3
,Adjacent Forwards,1
,Adjacent Rightward,1
,Adjacent Leftward,1
,STRING Adjacent ~,1
,Adjacent ~,1
,) Adjacent (,1
P1,STRING P1 (,482
,result P1 Win,216
,P1 (,762
,P1 Win,218
,Mover P1 ),262
,Pieces P1 ),58
,Moves P1 ),60
,P1 ),2056
,hand P1 ),23
,handSite P1 ),300
,STRING P1 STRING,78
,P1 STRING,154
,STRING P1 ),910
,nextPhase P1 (,2
,addScore P1 (,2
,score P1 ),15
,STRING P1 N,29
,P1 N,29
,of P1 ?,2
,P1 ?,2
,STRING P1 <Variant:p1Moves>,1
,P1 <Variant:p1Moves>,1
,regions P1 (,161
,sites P1 ),90
,) P1 ),27
,STRING P1 S,1
,result P1 Loss,13
,P1 S,1
,P1 Loss,13
,STRING P1 directed:True,107
,P1 directed:True,230
,pair P1 6,10
,{ P1 P3,31
,P1 6,16
,P1 P3,31
,} P1 directed:True,122
,regions P1 {,16
,) P1 Home,66
,P1 {,37
,P1 Home,66
,pair P1 0,30
,P1 0,39
,pair P1 61,1
,P1 61,1
,STRING P1 E,2
,P1 E,2
,STRING P1 {,21
,STRING P1 P2,11
,P2 P1 ),13
,P1 P2,57
,sites P1 STRING,63
,matchScore P1 ),71
,of P1 (,3
,pair P1 12,1
,P1 12,1
,pair P1 7,8
,P1 7,10
,pair P1 11,2
,P1 11,2
,pair P1 (,3
,{ P1 },23
,P1 },23
,pair P1 23,1
,P1 23,1
,pair P1 56,3
,Piece P1 ),7
,P1 56,3
,pair P1 25,2
,P1 25,2
,score P1 0,1
,score P1 2,1
,P1 2,35
,Players P1 P2,8
,pair P1 13,2
,P1 13,2
,#1 P1 ),7
,pair P1 2,9
,pair P1 22,1
,P1 22,1
,pair P1 P2,3
,pair P1 P4,2
,P4 P1 ),2
,P1 P4,3
,( P1 --COMMA--,1
,id P1 ),13
,Pieces P1 in:,1
,P1 --COMMA--,1
,P1 in:,1
,score P1 (,104
,Prev P1 ),2
,Active P1 ),7
,of P1 .,1
,STRING P1 Win,1
,P2 P1 Win,1
,P1 .,1
,pair P1 STRING,6
,pair P1 26,2
,P1 26,2
,handSite P1 1,28
,handSite P1 2,25
,handSite P1 3,21
,handSite P1 4,16
,handSite P1 5,12
,handSite P1 6,6
,handSite P1 7,2
,handSite P1 8,1
,handSite P1 9,1
,P1 1,40
,P1 3,25
,P1 4,21
,P1 5,20
,P1 8,3
,P1 9,4
,Hand P1 ),6
,pair P1 46,1
,{ P1 P2,35
,P1 46,1
,Player P1 ),2
,Value P1 #1,1
,P1 #1,1
,pair P1 8,2
,loop:True P1 ),140
,pair P1 5,8
,pair P1 4,5
,hand P1 size:1,1
,P1 size:1,1
,pair P1 67,1
,P1 67,1
,pair P1 9,3
,pair P1 29,1
,P1 29,1
,Next P1 ),3
,) P1 inner,47
,P1 inner,47
,) P1 four,1
,P1 four,1
,) P1 outer,14
,P1 outer,14
,) P1 half,1
,P1 half,1
,pair P1 15,2
,pair P1 14,2
,P1 15,2
,P1 14,2
,) P1 home,91
,) P1 sides,1
,P1 home,92
,P1 sides,1
,) P1 LeftMost,1
,) P1 End,1
,P1 LeftMost,1
,P1 End,1
,) P1 Inner,4
,) P1 Left,2
,P1 Inner,4
,P1 Left,2
,) P1 Outer,1
,P1 Outer,1
,STRING P1 <Board:innerInitP1>,1
,P1 <Board:innerInitP1>,1
,pair P1 24,1
,pair P1 34,1
,pair P1 32,1
,P1 24,1
,P1 34,1
,P1 32,1
,) P1 first,1
,P1 first,1
,pair P1 FirstSite,33
,mapEntry P1 ),26
,P1 FirstSite,33
,score P1 STRING,2
,pair P1 LastSite,7
,P1 LastSite,7
,the P1 home,1
,pair P1 1,3
,pair P1 3,4
,Value P1 0,2
,Value P1 1,1
,) P1 right,1
,P1 right,1
,) P1 Three,2
,P1 Three,2
,addScore P1 1,2
,result P1 Draw,1
,P1 Draw,1
,handSite P1 0,3
,Score P1 0,3
,Group P1 ),3
,All P1 ),1
,Score P1 (,4
,Territory P1 All,1
,P1 All,1
,Territory P1 ),7
,{ P1 P4,1
,Pieces P1 STRING,1
,STRING P1 W,2
,P1 W,2
,STRING P1 1,6
,- P1 or,2
,P1 or,2
,<Board:EnemyTrack1> P1 directed:True,1
,pair P1 144,1
,P1 144,1
,Foreground P1 STRING,2
,Colour P1 STRING,2
,set P1 Edge,8
,P1 Edge,8
,STRING P1 maxState:3,1
,STRING P1 maxState:6,1
,P1 maxState:3,1
,P1 maxState:6,1
,set P1 Vertex,1
,P1 Vertex,1
,Bet P1 (,1
,amount P1 ),1
No,No simultaneous,2
,) No capture,1
,No capture,1
,No Simultaneous,1
,) No swapping,10
,No swapping,10
,STRING No friendly,1
,No friendly,1
P2,STRING P2 STRING,31
,Pieces P2 ),70
,P2 STRING,122
,P2 ),1643
,result P2 Win,180
,P2 Win,182
,STRING P2 (,436
,Moves P2 ),43
,P2 (,721
,STRING P2 <Tiger:move>,1
,P2 <Tiger:move>,1
,hand P2 ),3
,handSite P2 ),258
,STRING P2 ),866
,nextPhase P2 (,2
,STRING P2 N,12
,P2 N,12
,addScore P2 (,2
,score P2 ),11
,STRING P2 E,1
,P2 E,1
,Mover P2 ),39
,) P2 ),23
,STRING P2 directed:True,105
,P2 directed:True,231
,pair P2 7,2
,{ P2 P4,30
,P2 7,4
,P2 P4,30
,} P2 directed:True,122
,regions P2 {,16
,) P2 Home,10
,P2 {,37
,P2 Home,10
,pair P2 12,8
,P2 12,8
,pair P2 21,1
,P2 21,1
,STRING P2 {,21
,pair P2 6,12
,P2 6,18
,P1 P2 ),17
,STRING P2 P1,11
,P2 P1,14
,sites P2 STRING,62
,matchScore P2 ),5
,of P2 },2
,P2 },30
,pair P2 25,3
,result P2 Loss,6
,P2 25,3
,P2 Loss,6
,pair P2 18,3
,P2 18,3
,pair P2 (,4
,pair P2 19,6
,P2 19,6
,{ P2 },23
,pair P2 31,1
,P2 31,1
,pair P2 10,5
,P2 10,5
,pair P2 35,4
,Piece P2 ),5
,P2 35,4
,pair P2 0,4
,P2 0,13
,score P2 2,1
,score P2 0,1
,P2 2,32
,#1 P2 ),2
,pair P2 14,1
,P2 14,1
,pair P2 13,4
,P2 13,4
,regions P2 (,160
,sites P2 ),85
,pair P2 P1,3
,pair P2 P3,2
,P3 P2 ),2
,P2 P3,34
,--COMMA-- P2 ),1
,Pieces P2 in:,1
,P2 in:,1
,score P2 (,104
,Prev P2 ),2
,Active P2 ),7
,of P2 .,1
,STRING P2 Win,1
,P1 P2 Win,1
,P2 .,1
,pair P2 STRING,6
,pair P2 27,4
,pair P2 48,1
,P2 27,4
,P2 48,1
,handSite P2 1,28
,handSite P2 2,25
,handSite P2 3,21
,handSite P2 4,16
,handSite P2 5,12
,handSite P2 6,6
,handSite P2 7,2
,handSite P2 8,1
,handSite P2 9,1
,P2 1,36
,P2 3,22
,P2 4,20
,P2 5,17
,P2 8,4
,P2 9,1
,Hand P2 ),6
,of P2 The,1
,P2 The,1
,pair P2 46,1
,P1 P2 },5
,P2 46,1
,Player P2 ),2
,Value P2 #1,1
,P2 #1,1
,pair P2 1,5
,pair P2 42,1
,P2 42,1
,loop:True P2 ),149
,pair P2 4,4
,pair P2 76,1
,pair P2 36,2
,P2 76,1
,P2 36,2
,pair P2 22,1
,P2 22,1
,STRING P2 S,29
,P2 S,29
,pair P2 23,3
,P2 23,3
,pair P2 20,1
,P2 20,1
,pair P2 26,1
,P2 26,1
,pair P2 29,1
,pair P2 5,5
,P2 29,1
,) P2 home,147
,) P2 inner,47
,P2 home,148
,P2 inner,47
,) P2 four,1
,P2 four,1
,) P2 outer,10
,) P2 half,1
,P2 outer,10
,P2 half,1
,pair P2 24,2
,pair P2 16,2
,pair P2 17,5
,P2 24,2
,P2 16,2
,P2 17,5
,) P2 sides,1
,P2 sides,1
,) P2 LeftMost,1
,) P2 End,1
,P2 LeftMost,1
,P2 End,1
,) P2 Inner,4
,) P2 Left,2
,P2 Inner,4
,P2 Left,2
,) P2 Outer,1
,P2 Outer,1
,STRING P2 <Board:innerInitP2>,1
,P2 <Board:innerInitP2>,1
,pair P2 33,1
,P2 33,1
,) P2 first,1
,P2 first,1
,pair P2 LastSite,33
,mapEntry P2 ),26
,P2 LastSite,33
,score P2 STRING,2
,pair P2 39,1
,P2 39,1
,pair P2 FirstSite,7
,P2 FirstSite,7
,the P2 home,1
,pair P2 11,6
,P2 11,6
,pair P2 15,1
,pair P2 8,3
,P2 15,1
,Value P2 0,2
,Value P2 1,1
,) P2 right,1
,P2 right,1
,pair P2 3,1
,) P2 Three,2
,P2 Three,2
,addScore P2 1,2
,P1 P2 (,4
,id P2 ),8
,handSite P2 0,3
,Score P2 0,3
,Group P2 ),3
,All P2 ),1
,Score P2 (,6
,Territory P2 All,1
,P2 All,1
,Territory P2 ),7
,{ P2 P3,2
,Pieces P2 STRING,1
,STRING P2 W,1
,P2 W,1
,STRING P2 2,6
,or P2 (,2
,Next P2 ),1
,P1 P2 P3,30
,<Board:trackP2> P2 directed:True,1
,<Board:trackTeam2> P2 directed:True,1
,<Board:HomeTrack2> P2 directed:True,1
,<Board:EnemyTrack2> P2 directed:True,1
,pair P2 148,1
,P2 148,1
,ExtendName P2 STRING,16
,Foreground P2 STRING,2
,Colour P2 STRING,2
,Rotate P2 degrees:180,2
,P2 degrees:180,2
,set P2 Edge,6
,P2 Edge,6
,STRING P2 maxState:3,1
,STRING P2 maxState:6,1
,P2 maxState:3,1
,P2 maxState:6,1
,set P2 Vertex,1
,P2 Vertex,1
,Bet P2 (,1
,amount P2 ),1
P3,STRING P3 directed:True,34
,pair P3 17,1
,P1 P3 },19
,P3 directed:True,98
,P3 17,1
,P3 },28
,) P3 ),2
,Mover P3 ),19
,pair P3 88,1
,P3 ),280
,P3 88,1
,} P3 directed:True,64
,STRING P3 {,1
,pair P3 12,1
,STRING P3 (,27
,handSite P3 ),77
,P3 {,2
,P3 12,1
,P3 (,49
,{ P3 },3
,pair P3 56,2
,Piece P3 ),4
,P1 P3 P5,12
,P3 56,2
,P3 P5,12
,#1 P3 ),2
,STRING P3 ),110
,pair P3 22,1
,pair P3 2,5
,P3 22,1
,P3 2,8
,P2 P3 ),2
,pair P3 P2,2
,sites P3 ),9
,P3 P2,2
,Prev P3 ),2
,Active P3 ),7
,result P3 Win,10
,P3 Win,10
,pair P3 STRING,2
,P3 STRING,5
,hand P3 ),2
,pair P3 5,1
,pair P3 45,1
,{ P3 P4,2
,P3 5,3
,P3 45,1
,P3 P4,28
,sites P3 STRING,1
,Player P3 ),1
,Value P3 #1,1
,P3 #1,1
,pair P3 53,1
,P3 53,1
,regions P3 (,13
,pair P3 76,2
,P3 76,2
,loop:True P3 ),29
,pair P3 82,1
,P3 82,1
,pair P3 20,2
,P3 20,2
,pair P3 52,1
,P3 52,1
,pair P3 28,1
,pair P3 4,1
,P3 28,1
,P3 4,3
,score P3 (,8
,Moves P3 ),5
,regions P3 {,1
,Group P3 ),2
,score P3 ),2
,P2 P3 },6
,STRING P3 E,1
,STRING P3 S,1
,P3 E,1
,P3 S,1
,STRING P3 3,6
,P3 3,8
,handSite P3 1,3
,handSite P3 2,3
,P3 1,3
,handSite P3 3,2
,handSite P3 4,2
,handSite P3 5,2
,handSite P3 6,1
,P3 6,1
,P2 P3 P4,26
,Pieces P3 ),4
,result P3 Loss,2
,P3 Loss,2
,ExtendName P3 STRING,2
,Bet P3 (,1
,amount P3 ),1
<priority>,STRING <priority> STRING,1
,<priority> STRING,1
P4,STRING P4 directed:True,27
,pair P4 21,1
,P2 P4 },18
,P4 directed:True,91
,P4 21,1
,P4 },29
,Mover P4 ),5
,) P4 ),2
,pair P4 32,1
,P4 ),221
,P4 32,1
,} P4 directed:True,63
,STRING P4 {,1
,pair P4 18,1
,STRING P4 (,24
,handSite P4 ),71
,P4 {,1
,P4 18,1
,P4 (,39
,pair P4 35,2
,Piece P4 ),2
,P2 P4 P6,12
,P4 35,2
,P4 P6,12
,STRING P4 ),103
,pair P4 10,1
,pair P4 14,2
,P4 10,1
,P4 14,2
,P1 P4 ),2
,pair P4 P1,2
,sites P4 ),8
,P4 P1,2
,Active P4 ),7
,result P4 Win,9
,P4 Win,9
,pair P4 STRING,2
,P4 STRING,5
,pair P4 5,1
,pair P4 45,1
,P3 P4 },8
,P4 5,3
,P4 45,1
,sites P4 STRING,1
,Player P4 ),1
,Value P4 #1,1
,P4 #1,1
,pair P4 3,4
,P4 3,6
,pair P4 11,1
,P4 11,1
,regions P4 (,11
,pair P4 44,1
,P4 44,1
,loop:True P4 ),8
,pair P4 30,1
,P4 30,1
,pair P4 27,1
,P4 27,1
,pair P4 28,1
,pair P4 4,1
,P4 28,1
,P4 4,9
,score P4 (,4
,Moves P4 ),2
,Group P4 ),1
,score P4 ),1
,P1 P4 },1
,STRING P4 E,1
,STRING P4 N,1
,P4 E,1
,P4 N,1
,STRING P4 4,6
,handSite P4 1,3
,handSite P4 2,3
,P4 1,3
,P4 2,3
,handSite P4 3,2
,handSite P4 4,2
,handSite P4 5,2
,handSite P4 6,1
,P4 6,1
,{ P4 P5,5
,P3 P4 P5,20
,P4 P5,25
,matchScore P4 ),6
,<Board:trackTeam2> P4 directed:True,1
,{ P4 },2
,ExtendName P4 STRING,2
,Pieces P4 ),2
,result P4 Loss,1
,P4 Loss,1
P5,STRING P5 directed:True,3
,pair P5 56,1
,STRING P5 (,6
,P3 P5 },4
,handSite P5 ),52
,Mover P5 ),4
,Piece P5 ),1
,P5 directed:True,60
,P5 56,1
,P5 (,8
,P5 },9
,P5 ),78
,sites P5 ),2
,pair P5 4,3
,} P5 directed:True,57
,P5 4,3
,regions P5 (,1
,score P5 (,1
,STRING P5 ),5
,STRING P5 5,2
,P5 5,2
,P4 P5 P6,20
,{ P5 P6,5
,P4 P5 },5
,P5 P6,25
,loop:True P5 ),6
,P3 P5 P7,8
,P5 P7,8
,result P5 Win,6
,matchScore P5 ),8
,P5 Win,6
P6,STRING P6 directed:True,3
,pair P6 35,1
,STRING P6 (,6
,P4 P6 },4
,handSite P6 ),51
,Piece P6 ),1
,P6 directed:True,60
,P6 35,1
,P6 (,6
,P6 },14
,P6 ),76
,sites P6 ),1
,Mover P6 ),3
,pair P6 5,3
,} P6 directed:True,57
,P6 5,3
,STRING P6 6,2
,P6 6,2
,STRING P6 ),4
,P5 P6 },10
,P5 P6 P7,15
,{ P6 P7,5
,P6 P7,20
,loop:True P6 ),6
,P4 P6 P8,8
,P6 P8,8
,result P6 Win,6
,matchScore P6 ),10
,P6 Win,6
P7,Mover P7 ),4
,P7 ),68
,handSite P7 ),43
,STRING P7 directed:True,2
,P7 directed:True,49
,pair P7 6,2
,} P7 directed:True,47
,P7 6,2
,STRING P7 (,2
,STRING P7 7,2
,P7 (,2
,P7 7,2
,STRING P7 ),4
,P6 P7 P8,15
,{ P7 P8,5
,P6 P7 },5
,P7 P8,20
,P7 },7
,P5 P7 },2
,loop:True P7 ),5
,P5 P7 P9,6
,P7 P9,6
,result P7 Win,5
,matchScore P7 ),12
,P7 Win,5
P8,handSite P8 ),42
,STRING P8 directed:True,2
,P8 ),61
,P8 directed:True,49
,pair P8 7,2
,} P8 directed:True,47
,P8 7,2
,STRING P8 (,2
,STRING P8 8,2
,P8 (,2
,P8 8,2
,P7 P8 },10
,P7 P8 P9,10
,{ P8 P9,5
,P8 },12
,P8 P9,15
,P6 P8 },2
,loop:True P8 ),5
,P6 P8 P10,6
,P8 P10,6
,result P8 Win,5
,matchScore P8 ),14
,P8 Win,5
P9,handSite P9 ),34
,STRING P9 directed:True,1
,P9 ),54
,P9 directed:True,38
,pair P9 8,1
,} P9 directed:True,37
,P9 8,1
,P8 P9 P10,15
,{ P9 P10,5
,P9 P10,20
,P7 P9 },2
,loop:True P9 ),4
,P7 P9 P11,4
,P9 },2
,P9 P11,4
,result P9 Win,4
,matchScore P9 ),16
,P9 Win,4
adjacent,an adjacent enemy,1
,adjacent enemy,1
,not adjacent to,1
,adjacent to,1
,6 adjacent direction,1
,six adjacent directions,1
,an adjacent space,1
,adjacent direction,1
,adjacent directions,1
,adjacent space,1
Specific,) Specific attacks,1
,Specific attacks,1
<leftMostP2>,<CCW2> <leftMostP2> },1
,<leftMostP2> },1
460,102 460 ),1
,460 ),1
,461 460 459,1
,460 459,1
461,111 461 ),1
,461 ),1
,{ 461 },1
,461 },1
,462 461 460,1
,461 460,1
462,112 462 ),1
,462 ),1
,463 462 461,1
,462 461,1
463,113 463 ),1
,463 ),1
,257 463 414,1
,463 414,1
,{ 463 },1
,463 },1
,504 463 462,1
,463 462,1
464,114 464 ),1
,464 ),1
,{ 464 },1
,464 },1
465,115 465 ),1
,465 ),1
,{ 465 },1
,465 },1
466,116 466 ),1
,466 ),1
,425 466 387,1
,466 387,1
467,404 467 },1
,404 467 458,1
,467 },2
,467 458,1
,133 467 ),1
,467 ),1
,{ 467 },1
,508 467 447,1
,467 447,1
468,134 468 ),1
,468 ),1
,{ 468 },1
,468 },1
469,139 469 ),1
,469 ),1
,{ 469 },1
,469 },1
Of,Fog Of War,1
,Of War,1
Find,) Find lists,1
,Find lists,1
<Doctrine4:doctrine>,mapEntry <Doctrine4:doctrine> #2,1
,<Doctrine4:doctrine> #2,1
nextPhase,( nextPhase Mover,217
,nextPhase Mover,217
,( nextPhase STRING,47
,nextPhase STRING,47
,( nextPhase (,204
,nextPhase (,204
,( nextPhase P1,2
,( nextPhase P2,2
,nextPhase P1,2
,nextPhase P2,2
,( nextPhase ),2
,nextPhase ),2
Attacks,) Attacks (,1
,Attacks (,1
strategy,for strategy game,1
,standard strategy about,1
,strategy game,1
,strategy about,1
46>,<31 46> <,1
,46> <,1
shift,( shift 0,155
,shift 0,155
,( shift 2,48
,shift 2,48
,( shift 1,35
,shift 1,35
,( shift 5,16
,( shift -1,31
,shift 5,16
,shift -1,31
,( shift 3,21
,shift 3,21
,( shift 7,52
,shift 7,52
,( shift 8,12
,shift 8,12
,( shift 11,12
,( shift 12,9
,shift 11,12
,shift 12,9
,( shift -5,3
,shift -5,3
,( shift 9,8
,( shift 4,18
,shift 9,8
,shift 4,18
,( shift 6,2
,shift 6,2
,( shift -4,4
,( shift -2,10
,shift -4,4
,shift -2,10
,( shift -7,2
,( shift -6,1
,shift -7,2
,shift -6,1
,( shift 16,2
,( shift 19,2
,( shift 22,2
,( shift 23,1
,shift 16,2
,shift 19,2
,shift 22,2
,shift 23,1
,( shift -3,5
,shift -3,5
,( shift 10,9
,shift 10,9
,( shift .,1
,shift .,1
,( shift -0,3
,shift -0,3
,( shift (,2
,shift (,2
,( shift STRING,2
,shift STRING,2
,( shift -,1
,shift -,1
470,140 470 ),1
,470 ),1
,{ 470 },1
,470 },1
,449 470 431,1
,470 431,1
471,141 471 ),1
,471 ),1
,{ 471 },1
,471 },1
472,142 472 ),1
,472 ),1
,{ 472 },1
,472 },1
,431 472 492,1
,472 492,1
473,145 473 ),1
,473 ),1
,432 473 514,1
,473 514,1
474,146 474 ),1
,474 ),1
,390 474 515,1
,474 515,1
475,147 475 ),1
,475 ),1
,434 475 516,1
,475 516,1
476,{ 476 539,1
,485 476 539,1
,476 539,2
,148 476 ),1
,476 ),1
,525 476 427,1
,476 427,1
,{ 476 },1
,476 },1
,517 476 435,1
,476 435,1
477,151 477 ),1
,215 477 ),1
,263 477 ),1
,477 ),3
478,152 478 ),1
,216 478 ),1
,264 478 ),1
,478 ),3
,{ 478 },1
,478 },1
,479 478 519,1
,478 519,1
479,157 479 ),1
,479 ),1
,{ 479 },1
,479 },1
,563 479 478,1
,479 478,1
builds,that builds an,1
,builds an,1
Move:,individual Move: ie,1
,Move: ie,1
SidesMatch,is SidesMatch ),1
,SidesMatch ),1
fully,cases: fully surrounded,1
,fully surrounded,1
<ThinDotted>,<All> <ThinDotted> <All>,4
,<ThinDotted> <All>,4
,<All> <ThinDotted> <Orthogonal>,1
,<ThinDotted> <Orthogonal>,1
by:All,Occupied by:All STRING,27
,by:All STRING,27
,Occupied by:All ),26
,by:All ),26
,Occupied by:All top:False,1
,by:All top:False,1
,Occupied by:All components:,1
,by:All components:,1
,Occupied by:All component:#3,1
,by:All component:#3,1
,Occupied by:All on:Edge,1
,by:All on:Edge,1
480,158 480 ),1
,480 ),1
,529 480 431,1
,480 431,1
Two,) Two flat,2
,or Two round,1
,Two flat,2
,Two round,1
,) Two or,1
,Two or,1
,STRING Two cases:,1
,Two cases:,1
481,165 481 ),1
,481 ),1
,530 481 432,1
,481 432,1
,{ 481 },1
,481 },1
482,166 482 ),1
,482 ),1
483,171 483 ),1
,483 ),1
484,172 484 ),1
,484 ),1
,435 484 533,1
,484 533,1
,{ 484 },1
,484 },1
485,494 485 476,1
,485 476,1
,173 485 ),1
,485 ),1
,534 485 436,1
,485 436,1
,{ 485 },1
,485 },1
486,174 486 ),1
,486 ),1
487,187 487 ),1
,301 487 ),1
,487 ),2
,{ 487 },1
,487 },1
488,188 488 ),1
,302 488 ),1
,488 ),2
,537 488 529,1
,488 529,1
489,193 489 ),1
,489 ),1
,{ 489 },1
,489 },1
,509 489 528,1
,489 528,1
diretion,forward diretion .,1
,diretion .,1
<Variant:movement>,play <Variant:movement> ),1
,<Variant:movement> ),1
maybe,. maybe this,1
,maybe this,1
<influence>,<suicide> <influence> },1
,<influence> },1
another,to another .,1
,another .,1
,In another variant,1
,another variant,1
simultaneous,No simultaneous version,1
,simultaneous version,1
,No simultaneous move,1
,simultaneous move,2
,without simultaneous move,1
,the simultaneous play,1
,simultaneous play,1
,the simultaneous phase,1
,simultaneous phase,1
enemy,the enemy we,1
,an enemy it,1
,enemy we,1
,enemy it,1
,an enemy is,1
,An enemy piece,1
,enemy is,1
,enemy piece,9
,hopped enemy pieces,1
,an enemy to,1
,The enemy piece,1
,enemy pieces,1
,enemy to,1
,adjacent enemy wall/singleton,1
,only enemy piece,1
,two enemy stones,1
,one enemy piece,1
,enemy wall/singleton,1
,enemy stones,1
,blocked enemy piece,3
,contain enemy units,1
,the enemy ),1
,enemy units,1
,enemy ),1
,an enemy piece,2
<PlacementConditions>,STRING <PlacementConditions> args:,1
,{ <PlacementConditions> },1
,<PlacementConditions> args:,1
,<PlacementConditions> },1
490,194 490 ),1
,490 ),1
491,195 491 ),1
,491 ),1
,{ 491 },1
,491 },1
492,196 492 ),1
,492 ),1
,472 492 430,1
,492 430,1
skipped-over,Save skipped-over spaces,6
,skipped-over spaces,6
493,197 493 ),1
,493 ),1
,444 493 542,1
,493 542,1
494,503 494 485,1
,494 485,1
,198 494 ),1
,494 ),1
495,201 495 ),1
,495 ),1
496,202 496 ),1
,496 ),1
,{ 496 },1
,496 },1
SE,NE SE NW,6
,SE NW,11
,player SE ),1
,SE ),38
,Side SE ),26
,--COMMA-- SE --COMMA--,1
,STRING SE NW,5
,SE --COMMA--,1
,NW SE },5
,SE },6
,) SE ),2
,STRING SE (,2
,SW SE },1
,{ SE NE,1
,SE (,2
,SE NE,2
,Adjacent SE ),4
,FL SE ),1
,NW SE ),1
,NE SE ),1
,STRING SE SE,1
,SE SE ),1
,STRING SE NE,1
,STRING SE SW,1
,SW SE ),1
,SE SE,1
,SE SW,2
,NE SE SW,1
497,203 497 ),1
,497 ),1
,448 497 498,1
,497 498,1
Canon,) Canon (,6
,Canon (,6
default,**** default 2,1
,**** default Equi,1
,) default Hops-a-Daisy,1
,**** default Equiversi,2
,- default for,1
,) default Equiversi,2
,**** default Originals,1
,default 2,1
,default Equi,1
,default Hops-a-Daisy,1
,default Equiversi,4
,default for,1
,default Originals,1
gray,either gray or,1
,gray or,1
498,204 498 ),1
,498 ),1
,497 498 547,1
,498 547,1
,519 498 539,1
,498 539,1
499,205 499 ),1
,499 ),1
,{ 499 500,1
,499 500,1
,{ 499 },1
,499 },1
49>,. 49> STRING,1
,49> STRING,1
Courier,) Courier (,1
,Courier (,1
<Player:size>,1 <Player:size> ),5
,<Player:size> ),5
<Play:choice>,) <Play:choice> ),1
,<Play:choice> ),1
SW,NW SW },7
,SW },12
,Side SW ),26
,SW ),39
,--COMMA-- SW ),1
,STRING SW NE,4
,N SW (,1
,SW NE,4
,SW (,3
,NE SW },5
,) SW ),2
,STRING SW (,2
,{ SW SE,1
,SW SE,2
,Adjacent SW ),4
,FR SW ),1
,NE SW ),2
,SE SW ),1
,STRING SW SW,1
,SW SW ),1
,STRING SW NW,1
,STRING SW SE,1
,NW SW ),1
,SW SW,1
,SW NW,2
,SE SW NW,1
black,or black .,1
,black .,1
<Players:removeP3>,) <Players:removeP3> },1
,<Players:removeP3> },1
<End>,STRING <End> args:,11
,<End> args:,11
,end <End> ),2
,<End> ),2
Queens,* Queens can,1
,Queens can,1
Fire,) Fire (,1
,Fire (,1
<Default,STRING <Default 0,1
,<Default 0,1
variants:,7-8 variants: <,1
,variants: <,1
Healing,) Healing (,1
,Healing (,1
TO,Each TO ADD,1
,TO ADD,1
of:All,} of:All ),13
,of:All ),15
,Control of:All by:Mover,2
,Control of:All by:Neutral,1
,of:All by:Mover,2
,of:All by:Neutral,1
,Forward of:All ),1
,Forwards of:All ),1
remains,Pawn remains where,1
,it remains in,1
,remains where,1
,remains in,1
<Result>,Next <Result> ),1
,STRING <Result> args:,15
,<Result> ),11
,<Result> args:,15
,Mover <Result> ),10
,result <Result> Win,2
,<Result> Win,2
use:Cell,) use:Cell ),18
,use:Cell ),20
,<BoardSize:gridType> use:Cell ),1
,STRING use:Cell ),1
<p1_directions>,STRING <p1_directions> <p2_directions>,6
,<p1_directions> <p2_directions>,6
Guard,) Guard (,5
,Guard (,5
To,last To ),1794
,To ),1794
,sites To (,14
,To (,14
,Ruleset To Reconstruct,9
,To Reconstruct,9
,= To site,1
,To site,1
,last To afterConsequence:True,92
,To afterConsequence:True,92
,) To know,1
,To know,1
,) To promote,20
,move To move,2
,To promote,20
,To move,2
<Players:homes>,) <Players:homes> <Players:store>,1
,<Players:homes> <Players:store>,1
<numCounters>,<doneSoFar> <numCounters> <ruleSecondCapture>,1
,<numCounters> <ruleSecondCapture>,1
applyAfterAllMoves:True,) applyAfterAllMoves:True ),1
,applyAfterAllMoves:True ),1
whatever,can whatever the,1
,whatever the,1
SameDirection,) SameDirection ),8
,) SameDirection (,9
,SameDirection ),8
,SameDirection (,9
Score,set Score #1,3
,Score #1,3
,set Score Mover,27
,Score Mover,27
,set Score P1,7
,set Score P2,9
,Score P1,7
,Score P2,9
,set Score Each,14
,Score Each,14
,set Score Player,1
,Score Player,1
,set Score Next,13
,Score Next,13
pawns,normal pawns .,2
,pawns .,2
,the pawns (,1
,pawns (,1
leads,grid leads to,1
,leads to,1
Defines,) Defines a,1
,Defines a,2
,) Defines for,5
,Defines for,10
,/----------------------------------------- Defines for,1
,Options Defines for,1
of:#2,#4 of:#2 ),1
,#3 of:#2 ),3
,of:#2 ),4
of:#1,Pieces of:#1 in:,1
,of:#1 in:,1
,#4 of:#1 ),1
,#3 of:#1 ),3
,of:#1 ),4
next,( next ),91
,next ),91
,the next move,1
,next move,1
,the next hole,2
,next hole,2
,the next state,1
,next state,1
,their next turn,1
,next turn,4
,player's next turn,2
,eg next to,1
,next to,5
,or next to,1
,not next to,2
,nor next to,1
,the next turn,1
listiong,the listiong for,1
,listiong for,1
<Play:play>,rules <Play:play> (,1
,<Play:play> (,1
Forwards,Rightward Forwards Leftward,3
,Forwards Leftward,3
,{ Forwards Rightward,14
,Forwards Rightward,14
,Step Forwards (,5
,Forwards (,8
,difference Forwards Diagonal,1
,Forwards Diagonal,1
,Hop Forwards (,1
,{ Forwards Backward,9
,STRING Forwards ),14
,Adjacent Forwards ),1
,Backwards Forwards },17
,{ Forwards BR,2
,Forwards Backward,9
,Forwards ),16
,Forwards },20
,Forwards BR,2
,{ Forwards Rightwards,7
,STRING Forwards ~,2
,STRING Forwards STRING,1
,Backward Forwards },1
,Leftward Forwards },2
,STRING Forwards (,1
,Forwards Rightwards,7
,Forwards ~,2
,Forwards STRING,1
,directions Forwards of:All,1
,Forwards of:All,1
,directions Forwards ),1
,step Forwards (,1
<MainWin1>,<MainWinC> <MainWin1> <MainWin0>,1
,<MainWin1> <MainWin0>,1
hexagons,of hexagons invented,1
,hexagons invented,1
Mover,is Mover P1,262
,Mover P1,262
,STRING Mover ),690
,nextPhase Mover (,164
,Mover ),2335
,Mover (,314
,handSite Mover ),623
,result Mover Draw,67
,Mover Draw,67
,nextPhase Mover STRING,52
,Mover STRING,518
,is Mover P2,39
,Mover P2,39
,Player Mover ),156
,Value Mover 1,29
,Value Mover (,44
,Mover 1,79
,Pieces Mover ),120
,result Mover Win,573
,Mover Win,573
,sites Mover ),239
,is Mover #1,10
,STRING Mover (,21
,Mover #1,15
,sites Mover STRING,446
,Value Mover Undefined,8
,Mover Undefined,8
,is Mover P3,19
,is Mover P4,5
,Mover P3,19
,Mover P4,5
,Pieces Mover in:,48
,Hand Mover ),14
,Mover in:,49
,Moves Mover ),87
,result Mover Loss,46
,Mover Loss,46
,Value Mover 0,24
,Mover 0,27
,score Mover ),53
,addScore Mover 1,35
,Score Mover 2,2
,Mover 2,22
,Value Mover -1,1
,Value Mover -2,1
,Mover -1,2
,Mover -2,1
,id Mover ),13
,addScore Mover 2,6
,is Mover P5,4
,Mover P5,4
,score Mover (,1
,) Mover ),188
,handSite Mover 1,15
,is Mover (,33
,Next Mover ),29
,mapEntry Mover ),85
,STRING Mover state:,1
,Mover state:,1
,Pieces Mover STRING,10
,Value Mover 2,12
,is Mover P6,3
,is Mover P7,4
,STRING Mover at:,24
,Mover P6,3
,Mover P7,4
,Mover at:,24
,Prev Mover ),6
,Track Mover STRING,4
,Track Mover #1,2
,Track Mover from:,3
,Mover from:,3
,addScore Mover (,11
,is Mover Prev,193
,Mover Prev,194
,FirstSite Mover STRING,1
,sites Mover #1,3
,Value Mover Off,1
,Mover Off,1
,Connected Mover ),7
,result Mover <Result:mover>,2
,Mover <Result:mover>,2
,All Mover ),1
,handSite Mover 0,3
,result Mover <Result>,10
,Mover <Result>,10
,Orthogonal Mover ),3
,Players Mover Prev,1
,) Mover swaps,1
,than Mover index,2
,Players Mover (,1
,shiftPlayers Mover (,2
,) Mover ''shift-swaps'',1
,Mover swaps,1
,Mover index,2
,Mover ''shift-swaps'',1
,result Mover <End:result>,1
,Mover <End:result>,1
,Score Mover (,25
,Winning Mover (,4
,3 Mover ),1
,handSite Mover 2,2
,) Mover (,5
,handSite Mover 5,1
,Mover 5,1
,Bet Mover (,1
,nextPhase Mover ),1
,#1 Mover ),8
,STRING Mover in:,1
,STRING Mover Next,14
,Mover Next,23
,is Mover Next,5
,#3 Mover ),1
,Value Mover STRING,1
,addScore Mover 54,1
,Mover 54,1
,EndSite Mover STRING,2
,Track Mover #2,2
,Mover #2,2
,addScore Mover -1,1
,<Connection:type> Mover ),1
,) Mover top:True,1
,Mover top:True,1
,<BoardShape:directionsUsed> Mover ),2
,RegularGraph Mover ),2
,RegularGraph Mover k:3,1
,Mover k:3,1
,RegularGraph Mover k:4,1
,Mover k:4,1
,SpanningTree Mover ),2
,CaterpillarTree Mover ),2
,#4 Mover ),1
,addScore Mover #6,1
,addScore Mover STRING,2
,Mover #6,1
,) Mover Next,4
,Next Mover (,2
,Edge Mover length:,7
,Vertex Mover length:,1
,Mover length:,8
,addScore Mover 4,4
,addScore Mover 6,2
,Mover 4,4
,Mover 6,2
nor,King nor the,1
,nor the,1
,) nor next,1
,nor next,1
not,( not (,1522
,not (,1522
,( not STRING,83
,not STRING,83
,hop not in,1
,not in,2
,but not the,1
,not the,1
,is not in,1
,) not adjacent,1
,not adjacent,1
,was not a,1
,not a,1
,does not work,1
,not work,1
,that's not possible,1
,not possible,1
,does not block,1
,not block,1
,player not being,1
,does not result,1
,may not capture,1
,not being,1
,not result,1
,not capture,1
,is not slowed,1
,incase not entered,1
,not slowed,1
,not entered,1
,( not #2,1
,not #2,1
,but not next,2
,not next,2
,then not be,2
,and not as,1
,not be,2
,not as,1
Moves,no Moves P1,60
,Moves P1,60
,no Moves P2,43
,Moves P2,43
,count Moves ),55
,Moves ),55
,max Moves (,45
,Moves (,47
,no Moves Mover,87
,Moves Mover,87
,no Moves Next,126
,Moves Next,126
,no Moves Player,4
,Moves Player,4
,no Moves P3,5
,no Moves P4,2
,Moves P3,5
,Moves P4,2
,no Moves <Players:player1>,1
,Moves <Players:player1>,1
,max Moves withValue:True,3
,Moves withValue:True,3
,Infantry Moves that,1
,Moves that,1
,Attack Moves (,1
central,the central site,2
,central site,2
King2Start,> King2Start STRING,2
,King2Start STRING,2
numPerHole:,sow numPerHole: (,1
,numPerHole: (,1
<sites>,<site6> <sites> },1
,<sites> },1
was,( was Pass,12
,was Pass,12
,capture was made,1
,was made,1
,move was not,1
,was not,1
continuity,STRING continuity testing,1
,continuity testing,1
<MainWin0>,<MainWin1> <MainWin0> <ExtraRows>,1
,<MainWin0> <ExtraRows>,1
We,apply We store,1
,We store,3
,) We store,2
,) We indicate,1
,We indicate,1
,) We update,1
,We update,1
,) We check,1
,We check,1
,. We define,1
,We define,1
,) We remove,1
,We remove,1
<NumberPlayers>,STRING <NumberPlayers> args:,1
,<NumberPlayers> args:,1
what,( what at:,485
,what at:,485
,( what STRING,5
,what STRING,5
,( what at:12,3
,( what at:25,2
,what at:12,3
,what at:25,2
,( what at:32,1
,( what at:33,1
,what at:32,1
,what at:33,1
,of what is,2
,what is,2
,( what Cell,1
,what Cell,1
,( what ),1
,what ),1
,( what at:#1,7
,what at:#1,7
,( what at:1,10
,( what at:2,1
,( what at:3,1
,( what at:4,2
,( what at:5,1
,( what at:6,1
,( what at:7,1
,( what at:8,1
,( what at:9,1
,( what at:10,1
,( what at:11,1
,( what at:22,1
,( what at:21,1
,( what at:20,1
,( what at:19,1
,( what at:18,1
,( what at:17,1
,( what at:16,1
,( what at:15,1
,( what at:14,1
,( what at:13,1
,what at:1,10
,what at:2,1
,what at:3,1
,what at:4,2
,what at:5,1
,what at:6,1
,what at:7,1
,what at:8,1
,what at:9,1
,what at:10,1
,what at:11,1
,what at:22,1
,what at:21,1
,what at:20,1
,what at:19,1
,what at:18,1
,what at:17,1
,what at:16,1
,what at:15,1
,what at:14,1
,what at:13,1
,( what at:#3,1
,what at:#3,1
,( what at:0,9
,what at:0,9
,( what at:60,1
,what at:60,1
Within,is Within (,14
,Within (,14
<Capture>,STRING <Capture> args:,4
,<Capture> args:,4
<InitOneSeed>,<LeftInnerHolesP2> <InitOneSeed> <InitTwoSeeds>,1
,<InitOneSeed> <InitTwoSeeds>,1
<Variant:noPieceSite>,sites <Variant:noPieceSite> ),1
,<Variant:noPieceSite> ),1
play,( play (,1410
,play (,1410
,( play <Tiger:playMove>,1
,play <Tiger:playMove>,1
,( play <Move:leopard>,1
,play <Move:leopard>,1
,( play <Fox:rememberHopCapture>,1
,play <Fox:rememberHopCapture>,1
,Can play again,1
,play again,1
,to play in,2
,play in,2
,simultaneous play .,1
,play .,1
,( play <Swap:playRules>,1
,play <Swap:playRules>,1
,( play STRING,2
,play STRING,2
,to play for,1
,play for,3
,( play <Play>,1
,play <Play>,1
,( play <Variant:movement>,1
,play <Variant:movement>,1
,people play with,1
,play with,1
,( play <CheckmateRule:Move>,1
,play <CheckmateRule:Move>,1
,( play <GType:selGame>,2
,play <GType:selGame>,2
,( play <Version:play>,2
,play <Version:play>,2
,( play <Play:move>,1
,play <Play:move>,1
,( play <ChosenHop:prioritySetting>,1
,play <ChosenHop:prioritySetting>,1
,human play is,1
,play is,1
,in play option,1
,play option,1
,of play for,2
,symmetrical play on,1
,play on,1
leftHole,) leftHole of,1
,leftHole of,1
count:<Goat:num>,) count:<Goat:num> ),1
,count:<Goat:num> ),1
Shared,STRING Shared ),226
,hand Shared ),5
,Shared ),264
,STRING Shared (,9
,Shared (,9
,Hand Shared ),8
,handSite Shared ),17
,hand Shared size:2,5
,handSite Shared 1,9
,Shared size:2,5
,Shared 1,9
,hand Shared size:16,1
,handSite Shared 0,2
,handSite Shared 2,3
,handSite Shared 3,3
,handSite Shared 4,3
,handSite Shared 5,3
,handSite Shared 6,3
,handSite Shared 7,3
,handSite Shared 8,2
,handSite Shared 9,2
,handSite Shared 10,2
,handSite Shared 11,2
,handSite Shared 12,2
,handSite Shared 13,2
,handSite Shared 14,1
,handSite Shared 15,1
,Shared size:16,1
,Shared 0,2
,Shared 2,3
,Shared 3,3
,Shared 4,3
,Shared 5,3
,Shared 6,3
,Shared 7,3
,Shared 8,2
,Shared 9,2
,Shared 10,2
,Shared 11,2
,Shared 12,2
,Shared 13,2
,Shared 14,1
,Shared 15,1
,) Shared ),5
,Piece Shared ),1
,hand Shared size:14,1
,Shared size:14,1
,set Shared Edge,14
,Shared Edge,14
,TreeCentre Shared ),2
,hand Shared size:8,1
,Shared size:8,1
when,pieces when capture,1
,pieces when goes,1
,when capture,1
,when goes,1
,stop when its,1
,when its,1
,colour when a,1
,place when neither,1
,ends when a,1
,when a,2
,when neither,1
,moves when all,1
,fail when the,1
,when all,1
,when the,1
<random>,<pieces> <random> <order>,1
,<random> <order>,1
Queen2Start,> Queen2Start STRING,2
,Queen2Start STRING,2
<Dice:move>,Each <Dice:move> ),1
,<Dice:move> ),1
far,so far (,1
,so far .,2
,so far for,1
,far (,1
,far .,2
,far for,1
,the far side,1
,far side,1
<version>,{ <version> },2
,<version> },2
<map>,<start> <map> },1
,<map> },1
<limit>,{ <limit> },2
,<limit> },5
,<start> <limit> },2
,<order> <limit> },1
double,to double .,4
,double .,5
,and double .,1
,does double damage,1
,double damage,1
,the double moves,1
,own double pass,1
,double moves,1
,double pass,1
level:,) level: (,359
,level: (,359
Rukh,) Rukh (,1
,Rukh (,1
suicide,to suicide list,1
,to suicide empties,1
,remembered suicide locations,1
,suicide list,1
,suicide empties,1
,suicide locations,1
<numSeeds>,{ <numSeeds> },1
,<numSeeds> },1
,{ <numSeeds> <usingHogon>,1
,<numSeeds> <usingHogon>,1
Local,) Local state,2
,Local state,2
Cycle,is Cycle ),7
,Cycle ),7
state:11,) state:11 ),2
,state:11 ),2
state:10,) state:10 ),2
,state:10 ),2
state:12,) state:12 ),2
,state:12 ),2
Kotwal,) Kotwal (,1
,Kotwal (,1
skipIf:,) skipIf: (,16
,skipIf: (,19
,count:3 skipIf: (,1
,sow skipIf: (,1
,< skipIf: (,1
explicitly,specified explicitly #2,1
,explicitly #2,1
NoEnd,passEnd NoEnd ),4
,NoEnd ),4
<BoardShape:directionScored>,STRING <BoardShape:directionScored> ),2
,<BoardShape:directionScored> ),2
what:,) what: (,5
,what: (,9
,4 what: (,4
<pieceFlip>,<teams> <pieceFlip> <terrainScale>,1
,<pieceFlip> <terrainScale>,1
fromTo,( fromTo (,613
,fromTo (,613
index/value,( index/value ),1
,index/value ),1
<Version>,STRING <Version> args:,23
,<Version> args:,23
,) <Version> ),2
,<Version> ),2
<noPieceSite>,<board> <noPieceSite> <end>,1
,<noPieceSite> <end>,1
Friend,is Friend (,535
,Friend (,536
,STRING Friend (,1
,players Friend of:,5
,Friend of:,5
<Players:entries>,) <Players:entries> (,1
,<Players:entries> (,1
,) <Players:entries> },2
,<Players:entries> },2
<moveCondition>,<capture> <moveCondition> <goal>,1
,<moveCondition> <goal>,1
Férsix,) Férsix (,1
,Férsix (,1
container:,Piece container: (,41
,container: (,53
,by:Mover container: (,10
,by:Neutral container: (,2
<Jarl>,STRING <Jarl> args:,1
,<Jarl> args:,1
grid,tri grid bugs,1
,grid bugs,1
,diagonal grid leads,1
,grid leads,1
sides,flat sides up,1
,round sides up,1
,sides up,2
,P1 sides holes,1
,P2 sides holes,1
,sides holes,2
,- sides (,1
,sides (,1
,all sides ),1
,sides ),1
board,( board (,765
,board (,765
,( board <Board:type>,22
,board <Board:type>,22
,( board <Board:size>,1
,board <Board:size>,1
,( board <Board:board>,1
,board <Board:board>,1
,( board <Board>,16
,board <Board>,16
,the board .,1
,board .,2
,( board <Board:BoardDef>,1
,board <Board:BoardDef>,1
,( board <BoardConfig:BoardLayout>,1
,board <BoardConfig:BoardLayout>,1
,( board <NumOfPlayers:BoardShape>,2
,board <NumOfPlayers:BoardShape>,2
,the board at,1
,board at,1
,from board to,1
,a board made,1
,hexagonal board with,1
,The board has,1
,The board spaces,1
,the board opposite,1
,the board farthest,1
,board to,1
,board made,1
,board with,1
,board has,1
,board spaces,1
,board opposite,1
,board farthest,1
,spiral board .,1
,( board <Scenario:boardShape>,1
,board <Scenario:boardShape>,1
,times board order,1
,board order,1
,( board <BoardSize:gridType>,1
,board <BoardSize:gridType>,1
,( board <Version:type>,1
,board <Version:type>,1
,( board STRING,1
,board STRING,1
,( board <Dual:begin>,1
,board <Dual:begin>,1
levels,four levels of,1
,levels of,1
T3464,tiling T3464 1,2
,tiling T3464 2,3
,T3464 1,2
,T3464 2,3
,<tiling T3464 Diamond>,1
,T3464 Diamond>,1
Hops-a-Daisy,) Hops-a-Daisy (,1
,default Hops-a-Daisy ?,1
,and Hops-a-Daisy },1
,New Hops-a-Daisy (,1
,Eqiversi Hops-a-Daisy (,1
,Hops-a-Daisy (,3
,Hops-a-Daisy ?,1
,Hops-a-Daisy },1
steps:<Board:sizeHome>,) steps:<Board:sizeHome> Orthogonal,2
,steps:<Board:sizeHome> Orthogonal,2
<thirdHoleInnerP1>,<CCW2> <thirdHoleInnerP1> <rightMostInnerHoleP1>,1
,<thirdHoleInnerP1> <rightMostInnerHoleP1>,1
<piece_type>,STRING <piece_type> ),1
,<piece_type> ),1
dice,( dice d:2,78
,dice d:2,78
,( dice num:2,13
,dice num:2,13
,( dice d:6,40
,dice d:6,40
,( dice d:4,11
,dice d:4,11
,( dice d:7,4
,dice d:7,4
,( dice num:3,6
,dice num:3,6
,( dice num:<Board:numDice>,1
,dice num:<Board:numDice>,1
,( dice num:1,2
,dice num:1,2
,( dice d:8,2
,dice d:8,2
,( dice d:9,1
,dice d:9,1
,the dice ),1
,dice ),1
,the dice pieces,1
,dice pieces,1
used,is used to,1
,used to,1
,is used idintify,1
,used idintify,1
<initHorse>,<num> <initHorse> },1
,<initHorse> },1
<Variant:p1Moves>,P1 <Variant:p1Moves> ),1
,<Variant:p1Moves> ),1
<Scenario:teams>,<Scenario:pieceSetup> <Scenario:teams> (,1
,<Scenario:teams> (,1
few,a few seconds,1
,few seconds,1
LevelTo,last LevelTo ),18
,LevelTo ),18
<thirdHoleInnerP2>,<rightMostInnerHoleP1> <thirdHoleInnerP2> <rightMostInnerHoleP2>,1
,<thirdHoleInnerP2> <rightMostInnerHoleP2>,1
<piece_name_key>,STRING <piece_name_key> ),3
,<piece_name_key> ),3
inner,P1 inner Home,46
,P2 inner Home,46
,inner Home,92
,left inner holes,2
,inner holes,2
,right inner row,2
,inner row,2
,P1 inner home,1
,P2 inner home,1
,inner home,2
produced,regions produced are,1
,produced are,1
1303,{ 1303 },1
,1303 },1
1300,1351 1300 1251,1
,1300 1251,1
,{ 1300 },1
,1300 },1
marker,edge marker and,1
,mover marker (,1
,each marker (,1
,marker and,1
,marker (,2
keep,( keep (,3
,keep (,3
,Pawns keep their,1
,keep their,1
effect,Capture/Release effect (,3
,effect (,3
maxState:85,) maxState:85 ),1
,maxState:85 ),1
1309,{ 1309 },1
,1309 },1
1307,{ 1307 },1
,1307 },1
option,( option STRING,514
,option STRING,514
,STRING option .,1
,option .,1
,play option to,1
,option to,1
,the option for,1
,option for,1
who,( who at:,1615
,who at:,1615
,( who STRING,36
,who STRING,36
,( who at:#1,12
,who at:#1,12
,( who at:3,1
,( who at:4,1
,( who at:5,1
,( who at:16,1
,( who at:17,2
,( who at:18,2
,who at:3,1
,who at:4,1
,who at:5,1
,who at:16,1
,who at:17,2
,who at:18,2
,( who at:10,3
,( who at:11,3
,( who at:12,4
,( who at:13,4
,( who at:14,3
,( who at:15,3
,( who at:8,1
,( who at:9,1
,who at:10,3
,who at:11,3
,who at:12,4
,who at:13,4
,who at:14,3
,who at:15,3
,who at:8,1
,who at:9,1
,( who ),1
,who ),1
,( who Edge,2
,( who Vertex,2
,( who Cell,1
,who Edge,2
,who Vertex,2
,who Cell,1
1306,1355 1306 1257,1
,1306 1257,1
,{ 1306 },1
,1306 },1
game,( game STRING,943
,game STRING,943
,That game is,1
,the game should,1
,game is,1
,game should,1
,the game without,1
,game without,1
,The game ends,1
,the game ends,2
,the game --COMMA--,2
,game ends,3
,game --COMMA--,2
,strategy game (,1
,game (,1
,the game ),1
,game ),1
,the game may,1
,game may,1
determines,It determines where,1
,determines where,1
why,That's why we,1
,why we,1
<Players:arc4>,<Players:arc3> <Players:arc4> (,1
,<Players:arc4> (,1
<startRules>,<endTracks> <startRules> <playingTeamPieces>,1
,<startRules> <playingTeamPieces>,1
,<num> <startRules> },1
,<startRules> },1
1316,{ 1316 },1
,1316 },1
1315,1314 1315 1266,1
,1315 1266,1
,{ 1315 },1
,1315 },1
1314,1313 1314 1315,1
,1314 1315,1
1313,1607 1313 1314,1
,1313 1314,1
,{ 1313 },1
,1313 },1
along,--COMMA-- along an,1
,along an,1
1311,{ 1311 },1
,1311 },1
<30>,STRING <30> <,4
,<30> <,9
,<16> <30> <,5
,STRING <30> STRING,7
,<30> STRING,7
win,for win (,1
,win (,1
,player win by,1
,win by,1
Brusky,. Brusky blocking,1
,Brusky Chess,1
,Brusky blocking,1
num:<Board:numDice>,dice num:<Board:numDice> ),1
,num:<Board:numDice> ),1
1330,1331 1330 1379,1
,1330 1379,1
,{ 1330 },1
,1330 },1
From,sites From (,7
,last From ),452
,From (,7
,From ),452
,STRING From Section,1
,) From Section,11
,From Section,12
,last From afterConsequence:True,1
,From afterConsequence:True,1
terminal,a terminal state,1
,terminal state,1
<Players:arc3>,) <Players:arc3> <Players:arc4>,1
,<Players:arc3> <Players:arc4>,1
<boardSize>,{ <boardSize> <pieceNumber>,1
,<boardSize> <pieceNumber>,1
,{ <boardSize> <pieces>,1
,<boardSize> <pieces>,1
1326,1375 1326 1277,1
,1326 1277,1
,{ 1326 },1
,1326 },1
1324,{ 1324 },1
,1324 },1
1323,In 1323 (,1
,1323 (,1
1322,{ 1322 },1
,1322 },1
1321,{ 1321 },1
,1321 },1
1320,{ 1320 },1
,1320 },1
<31>,STRING <31> STRING,1
,<31> STRING,2
,1> <31> STRING,1
1329,{ 1329 },1
,1329 },1
1328,1279 1328 1089,1
,1328 1089,1
<Start:rules>,rules <Start:rules> (,3
,<Start:rules> (,3
,rules <Start:rules> phases:,3
,<Start:rules> phases:,3
,{ <Start:rules> },1
,<Start:rules> },1
1341,1340 1341 1342,1
,1341 1342,1
,{ 1341 },1
,1341 },1
1340,1008 1340 1341,1
,1340 1341,1
,{ 1340 },1
,1340 },1
promoted,the promoted move,1
,promoted move,1
,is promoted to,1
,is promoted .,1
,be promoted upon,1
,be promoted to,1
,promoted to,2
,promoted .,1
,promoted upon,1
1338,1289 1338 1339,1
,1338 1339,1
<Board:shape>,( <Board:shape> ),1
,<Board:shape> ),1
1337,{ 1337 },1
,1337 },1
1335,{ 1335 },1
,1335 },1
1332,1283 1332 1331,1
,1332 1331,1
,{ 1332 },1
,1332 },1
1331,1332 1331 1330,1
,1331 1330,1
<Pawn1>,{ <Pawn1> <Pawn2>,1
,<Pawn1> <Pawn2>,1
<track3>,<arc4> <track3> <track4>,1
,<track3> <track4>,1
1339,1338 1339 1388,1
,1339 1388,1
<32>,STRING <32> STRING,1
,<32> STRING,1
sure,make sure that,1
,sure that,1
<Board:exit>,{ <Board:exit> },2
,<Board:exit> },2
<bean>,{ <bean> },1
,<bean> },1
<Board:HomeTrack2>,STRING <Board:HomeTrack2> P2,1
,<Board:HomeTrack2> P2,1
1352,1104 1352 1401,1
,1352 1401,1
<back_dir>,<fwd_dir> <back_dir> ),5
,<back_dir> ),5
,Note: <back_dir> is,1
,<back_dir> is,1
1351,1350 1351 1300,1
,1351 1300,1
Regions,) Regions (,1
,Regions (,1
1350,1349 1350 1351,1
,1350 1351,1
an,jump an enemy,1
,an enemy,5
,--COMMA-- an enemy,1
,over an enemy,1
,to an empty,1
,an empty,1
,capture an elephant,1
,an elephant,1
,remove an adjacent,1
,an adjacent,2
,If an Enemy,1
,But an Enemy,1
,an Enemy,2
,seems an obvious,1
,an obvious,1
,along an edge,1
,to an adjacent,1
,For an overview,1
,an edge,2
,an overview,1
,by an entrenchment,1
,builds an entrenchment,1
,behind an entrenchment,1
,an entrenchment,3
,at an opponent's,1
,an opponent's,1
,on an edge,1
,to an enemy,2
,difference an array,1
,an array,1
1349,1348 1349 1350,1
,1349 1350,1
1348,1347 1348 1349,1
,1348 1349,1
,{ 1348 },1
,1348 },1
as,--COMMA-- as noted,8
,as noted,8
,stated as follows:,1
,as follows:,1
,--COMMA-- as the,3
,move as in,1
,colour as the,1
,as the,4
,as in,1
,calculated as (,1
,as (,1
,listing as a,1
,--COMMA-- as it,1
,shows as a,1
,not as good,1
,as a,2
,as it,1
,as good,1
1347,1346 1347 1348,1
,1347 1348,1
at,seeds at the,2
,at the,6
,Move at any,2
,at any,2
,move at distance,1
,at distance,1
,board at the,1
,unit at site,1
,checked at the,1
,entrenchment at the,1
,at site,1
,limit at least,1
,at least,3
,But at least,1
,Liberties at an,1
,at an,1
,Influence at the,1
,turn at least,1
1346,1345 1346 1347,1
,1346 1347,1
1345,1344 1345 1346,1
,1345 1346,1
,{ 1345 },1
,1345 },1
1344,1343 1344 1345,1
,1344 1345,1
1343,1342 1343 1344,1
,1343 1344,1
,{ 1343 },1
,1343 },1
1342,1341 1342 1343,1
,1342 1343,1
<Num:dogs>,) <Num:dogs> ),1
,<Num:dogs> ),1
<Pawn2>,<Pawn1> <Pawn2> },1
,<Pawn2> },1
<order>,<random> <order> },1
,<order> },1
,<start> <order> <limit>,1
,<order> <limit>,1
<track2>,<size> <track2> },15
,<track2> },16
,<size> <track2> <specialHoles>,1
,<track2> <specialHoles>,1
,<track1> <track2> },1
,<size> <track2> <innerInitP1>,1
,<track2> <innerInitP1>,1
<33>,<23> <33> <24>,1
,<33> <24>,1
,STRING <33> STRING,1
,<33> STRING,1
optimizations,complicated optimizations (,1
,optimizations (,1
be,should be impossible,1
,be impossible,1
,should be the,1
,be the,1
,can be stated,1
,be stated,1
,would be available,1
,can be promoted,1
,only be promoted,1
,be available,1
,be promoted,2
,to be calculated,1
,cannot be added,1
,to be counted,1
,be calculated,1
,be added,1
,be counted,1
,not be executed,2
,may be played,1
,be executed,2
,be played,1
1362,1361 1362 1411,1
,1362 1411,1
1361,1360 1361 1362,1
,1361 1362,1
1360,1359 1360 1361,1
,1360 1361,1
trackSite,( trackSite Move,326
,trackSite Move,326
,( trackSite EndSite,4
,trackSite EndSite,4
,( trackSite FirstSite,25
,trackSite FirstSite,25
<Board:CCW2>,STRING <Board:CCW2> loop:True,7
,<Board:CCW2> loop:True,7
1359,1358 1359 1360,1
,1359 1360,1
1358,1357 1358 1359,1
,1358 1359,1
1357,1356 1357 1358,1
,1357 1358,1
1356,963 1356 1357,1
,1356 1357,1
1355,1354 1355 1306,1
,1355 1306,1
1354,1353 1354 1355,1
,1354 1355,1
by,Gallicus by Phil,1
,by Phil,1
,enclosed by your,1
,by your,1
,invented by Siegmund,1
,castle by swapping,1
,capturing by moving,1
,threat by Player,1
,--COMMA-- by D,1
,edited by John,1
,--COMMA-- by Eric,1
,by Siegmund,1
,by swapping,1
,by moving,1
,by Player,1
,by D,1
,by John,1
,by Eric,1
,attacked by #1,1
,protected by an,1
,by #1,1
,by an,1
,affected by terrain,1
,by terrain,1
,determinations by site,1
,by site,1
,start by defining,1
,followed by a,1
,by defining,1
,by a,1
,win by diagonals,1
,by diagonals,1
1353,1501 1353 1354,1
,1353 1354,1
<Jump>,STRING <Jump> args:,3
,<Jump> args:,3
<34>,STRING <34> STRING,1
,<34> STRING,2
,<16> <34> STRING,1
,> <34> <65,1
,<34> <65,1
Die,forEach Die if:,57
,Die if:,57
,forEach Die replayDouble:True,25
,Die replayDouble:True,25
,forEach Die combined:True,6
,Die combined:True,6
,forEach Die replayDouble:,4
,Die replayDouble:,4
,forEach Die (,6
,Die (,6
scoring,Opponent scoring on,1
,scoring on,1
<Challenge:hints>,{ <Challenge:hints> },4
,<Challenge:hints> },4
,) <Challenge:hints> (,1
,<Challenge:hints> (,1
<36>,STRING <36> STRING,1
,<36> STRING,1
,<6> <36> <111>,1
,<36> <111>,1
Definitions,) Definitions of,1
,Definitions of,1
<play>,<start> <play> },8
,<play> },10
,{ <play> },2
<Player:track58>,) <Player:track58> <Player:track916>,1
,<Player:track58> <Player:track916>,1
from:93,Direction from:93 S,1
,from:93 S,1
from:94,Direction from:94 S,1
,from:94 S,1
<35>,STRING <35> <,2
,<35> <,2
,STRING <35> STRING,3
,<35> STRING,3
<track4>,<track3> <track4> },1
,<track4> },1
essential,but essential for,1
,essential for,1
Boards,different Boards the,1
,Boards the,1
<Player:regions>,) <Player:regions> },1
,<Player:regions> },1
count:<Tiger:num>,) count:<Tiger:num> ),1
,count:<Tiger:num> ),1
PieceHasMoved,- PieceHasMoved (,3
,PieceHasMoved (,3
sites,( sites Top,598
,( sites {,1374
,sites Top,598
,sites {,1374
,( sites From,7
,( sites Right,138
,( sites Left,138
,( sites Bottom,627
,( sites (,89
,( sites Occupied,684
,sites From,7
,sites Right,138
,sites Left,138
,sites Bottom,627
,sites (,89
,sites Occupied,684
,( sites Empty,561
,sites Empty,561
,( sites Corners,47
,sites Corners,47
,( sites Centre,77
,sites Centre,77
,( sites Row,302
,sites Row,302
,( sites Phase,126
,sites Phase,126
,( sites Outer,46
,sites Outer,46
,( sites P1,153
,sites P1,153
,( sites Board,389
,sites Board,389
,( sites Direction,63
,sites Direction,63
,( sites To,14
,( sites Pending,11
,( sites ToClear,29
,sites To,14
,sites Pending,11
,sites ToClear,29
,( sites STRING,1062
,sites STRING,1062
,( sites Column,34
,sites Column,34
,Connected sites .,1
,sites .,1
,( sites Mover,688
,sites Mover,688
,( sites Hand,38
,sites Hand,38
,( sites #1,146
,sites #1,146
,( sites P2,147
,sites P2,147
,( sites <End:sites>,1
,sites <End:sites>,1
,( sites Track,377
,sites Track,377
,( sites Next,141
,sites Next,141
,( sites P3,10
,( sites P4,9
,sites P3,10
,sites P4,9
,( sites #2,2
,sites #2,2
,( sites P5,2
,( sites P6,1
,sites P5,2
,sites P6,1
,( sites Around,227
,( sites Random,104
,( sites #3,8
,sites Around,227
,sites Random,104
,sites #3,8
,( sites Side,146
,sites Side,146
,( sites LineOfSight,23
,sites LineOfSight,23
,( sites Incident,65
,sites Incident,65
,( sites Player,20
,sites Player,20
,( sites <Rightmost:sitesP1>,1
,( sites <Rightmost:sitesP2>,1
,sites <Rightmost:sitesP1>,1
,sites <Rightmost:sitesP2>,1
,( sites Playable,3
,sites Playable,3
,( sites Group,15
,sites Group,15
,( sites Inner,1
,sites Inner,1
,( sites ),8
,sites ),8
,( sites Distance,16
,sites Distance,16
,( sites LastTo,4
,sites LastTo,4
,( sites Winning,8
,sites Winning,8
,( sites Cell,7
,sites Cell,7
,place sites enclosed,1
,sites enclosed,1
,( sites State,10
,sites State,10
,( sites Hidden,14
,sites Hidden,14
,( sites Between,8
,sites Between,8
,( sites Start,43
,sites Start,43
,( sites LargePiece,1
,sites LargePiece,1
,Entrenchment sites that,1
,sites that,1
,( sites LineOfPlay,1
,sites LineOfPlay,1
,( sites Crossing,5
,sites Crossing,5
,who's sites --COMMA--,1
,sites --COMMA--,1
,suicidal sites cannot,1
,of sites to,1
,sites cannot,1
,sites to,1
,( sites <Variant:noPieceSite>,1
,sites <Variant:noPieceSite>,1
do,( do (,586
,do (,586
,) do the,1
,do the,1
,to do this,1
,do this,1
1381,1380 1381 1430,1
,1381 1430,1
Pritchard,. Pritchard (,1
,Pritchard (,1
1380,1379 1380 1381,1
,1380 1381,1
<Size:boardWidth>,+ <Size:boardWidth> <OuterRing:extraBoardSize>,1
,<Size:boardWidth> <OuterRing:extraBoardSize>,1
1379,1330 1379 1380,1
,1379 1380,1
Version,Version of,1
<Variant:dice>,) <Variant:dice> (,1
,<Variant:dice> (,1
attacks,against attacks against,1
,against attacks from,1
,attacks against,1
,attacks from,1
,Counter attacks (,1
,Specific attacks (,1
,attacks (,2
1377,1426 1377 1376,1
,1377 1376,1
1376,1377 1376 1375,1
,1376 1375,1
1375,1376 1375 1326,1
,1375 1326,1
Simultaneous,No Simultaneous move,1
,Simultaneous move,1
,mode Simultaneous ),2
,Simultaneous ),2
<CapOption:friendHops>,STRING <CapOption:friendHops> STRING,1
,<CapOption:friendHops> STRING,1
maxState:10,Neutral maxState:10 ),1
,maxState:10 ),1
needs,Maybe needs a,2
,needs a,2
which,pieces which have,3
,which have,3
,record which Cells,1
,which Cells,1
,( which helped,1
,which helped,1
<square>,STRING <square> STRING,5
,<square> STRING,5
,STRING <square> <,1
,<square> <,1
eg,Options: eg .,1
,eg .,1
,- eg next,1
,eg next,1
,) eg the,1
,eg the,1
from:34,Direction from:34 W,1
,from:34 W,1
unpredictable,are unpredictable don't,1
,unpredictable don't,1
1396,1395 1396 415,1
,1396 415,1
en,with en passant,2
,2 en passant,2
,en passant,6
,trigger en passant,1
,no en passant,1
checkmating,the checkmating player,1
,checkmating player,1
1395,1200 1395 1396,1
,1395 1396,1
1394,1247 1394 1443,1
,1394 1443,1
never,Can never move,1
,never move,1
,can never advance,1
,never advance,1
,are never affected,1
,never affected,1
Silver,) Silver General,8
,Promoted Silver (,7
,Silver General,8
,Silver (,7
<Challenge:size>,square <Challenge:size> ),5
,<Challenge:size> ),8
,1 <Challenge:size> ),1
,rectangle <Challenge:size> ),2
piece,( piece STRING,2651
,piece STRING,2651
,capturing piece goes,3
,piece goes,3
,( piece (,193
,piece (,212
,a piece (,7
,captured piece (,1
,new piece (,1
,twin piece (,1
,our piece is,1
,a piece can,2
,piece is,2
,piece can,2
,of piece #2,1
,( piece #1,4
,end piece ),1
,of piece (,1
,( piece Rename,2
,piece #2,3
,piece #1,4
,piece ),2
,piece Rename,2
,the piece pushed,1
,the piece pushing,1
,enemy piece .,1
,piece pushed,1
,piece pushing,1
,piece .,3
,enemy piece is,1
,each piece (,1
,tower piece in,1
,wall/singleton piece .,1
,enemy piece in,2
,tower piece or,1
,piece in,11
,piece or,1
,each piece to,1
,piece to,2
,other piece except,1
,piece except,1
,a piece in,7
,any piece (,3
,enemy piece (,4
,( piece {,36
,piece {,36
,Enemy piece blocks,1
,Enemy piece two,1
,piece blocks,1
,piece two,1
,one piece move,1
,piece move,1
,a piece from,1
,a piece of,1
,a piece becomes,1
,piece from,1
,piece of,1
,piece becomes,1
,( piece #3,1
,piece #3,1
,attacking piece #2,2
,the piece being,2
,( piece ExtendName,20
,piece being,2
,piece ExtendName,20
,( piece Foreground,4
,( piece Colour,4
,( piece Rotate,2
,piece Foreground,4
,piece Colour,4
,piece Rotate,2
,--COMMA-- piece type,1
,--COMMA-- piece typ,1
,piece type,1
,piece typ,1
,a piece on,1
,where piece lies,1
,piece on,1
,piece lies,1
,p2 piece in,1
,friendly piece ),1
,enemy piece },1
,piece },1
,Remaining piece placement,1
,Opponent piece captures,1
,the piece to,1
,a piece .,1
,piece placement,1
,piece captures,1
1388,1339 1388 1437,1
,1388 1437,1
Square>,<hex Square> STRING,1
,<tri Square> STRING,1
,Square> STRING,2
allCombinations,( allCombinations (,3
,allCombinations (,3
Corners,sites Corners ),47
,Corners ),48
,2 Corners ),1
elephant,an elephant if,1
,elephant if,1
ENE,WNW ENE },6
,ENE },7
,S ENE WSW,1
,WSW ENE ),1
,N ENE },1
,ENE WSW,2
,ENE ),2
,STRING ENE 3,2
,STRING ENE 2,2
,ENE 3,2
,ENE 2,2
,WNW ENE WSW,1
,#2 ENE ),1
Squares,) Squares 28-29,1
,rule Squares 1,1
,) Squares 1,1
,Squares 28-29,1
,Squares 1,2
for,condition for the,2
,for the,9
,specified for capturing,3
,for capturing,3
,value for triple,1
,for triple,1
,specifically for Kendall------------------------------------------,1
,for Kendall------------------------------------------,1
,far for that,1
,for that,1
,Defines for Options,7
,for Options,7
,swapping for first,4
,for first,4
,play for the,3
,update for the,1
,( for castling,3
,for castling,3
,conditions for the,1
,aside for later,1
,eligible for promotion,2
,available for its,1
,for later,1
,for promotion,2
,for its,1
,Defines for Calculation,1
,for Calculation,1
,) for Booleans:,1
,) for Integers,1
,2 for strategy,1
,default for 2,1
,for Booleans:,1
,for Integers,2
,for strategy,1
,for 2,1
,essential for the,1
,work for broken,1
,checking for win,1
,for broken,1
,for win,1
,Defines for Integers,1
,NonMover for this,1
,Defines for Booleans,1
,for this,1
,for Booleans,1
,is for efficiency,1
,listiong for consistancy,1
,testing for move,1
,control for the,1
,option for a,1
,Options for Board,1
,for efficiency,1
,for consistancy,1
,for move,1
,for a,1
,for Board,1
JUST,IS JUST FOR,1
,JUST FOR,1
<Start:misoroPhase>,{ <Start:misoroPhase> (,2
,<Start:misoroPhase> (,2
1397,1492 1397 1446,1
,1397 1446,1
ge,( ge (,1
,ge (,1
,( ge with,1
,ge with,1
from:55,Direction from:55 N,1
,from:55 N,1
from:56,Direction from:56 N,1
,from:56 N,1
top:True,Piece top:True ),43
,top:True ),76
,) top:True ),26
,Piece top:True (,6
,top:True (,12
,) top:True (,6
,Neutral top:True ),1
,Mover top:True ),1
,Next top:True ),2
,by:Mover top:True ),1
,by:P1 top:True ),1
,by:P2 top:True ),1
go,to go back,3
,go back,3
<singleHoles>,<specialHoles> <singleHoles> },1
,<singleHoles> },1
counter,a counter (,1
,counter (,1
,( counter ),35
,counter ),35
,a counter Attack,2
,counter Attack,2
gt,( gt (,8
,gt (,8
,( gt 1,2
,gt 1,2
Middle,) Middle Row,1
,Middle Row,1
,) Middle square,1
,Middle square,1
<challenge:start>,{ <challenge:start> },2
,<challenge:start> },2
<Board:ExtraCols>,) <Board:ExtraCols> },1
,<Board:ExtraCols> },1
500,206 500 ),1
,500 ),1
,499 500 501,1
,500 501,1
501,. 501 1,1
,501 1,1
,207 501 ),1
,501 ),1
,500 501 790,1
,501 790,1
,{ 501 },1
,501 },1
502,208 502 ),1
,502 ),1
,522 502 521,1
,502 521,1
503,440 503 },1
,440 503 494,1
,503 },2
,503 494,1
,209 503 ),1
,503 ),1
,{ 503 },1
from:50,Direction from:50 W,1
,from:50 W,1
504,210 504 ),1
,504 ),1
,{ 504 },1
,504 },1
,505 504 463,1
,504 463,1
counted,be counted explicity,1
,counted explicity,1
505,211 505 ),1
,505 ),1
,542 505 504,1
,505 504,1
<square,STRING <square 8>,2
,<square 8>,2
,STRING <square Diamond>,3
,<square Diamond>,3
506,212 506 ),1
,506 ),1
,555 506 457,1
,506 457,1
,{ 506 },1
,506 },1
507,219 507 ),1
,507 ),1
,{ 507 },1
,507 },1
508,220 508 ),1
,508 ),1
,528 508 467,1
,508 467,1
<pieceNumber>,<boardSize> <pieceNumber> },1
,<pieceNumber> },1
509,231 509 ),1
,509 ),1
,550 509 489,1
,509 489,1
promotion,the promotion line,1
,second promotion to,1
,promotion line,1
,promotion to,1
,Pawn promotion Usage:,6
,promotion Usage:,6
,Pawn promotion .,1
,for promotion .,1
,for promotion --COMMA--,1
,delayed promotion --COMMA--,1
,delayed promotion takes,1
,the promotion visually,1
,promotion .,2
,promotion --COMMA--,2
,promotion takes,1
,promotion visually,1
,no promotion here,1
,promotion here,1
<leopard>,{ <leopard> },1
,<leopard> },1
very,still very heavy,1
,very heavy,1
<begin>,{ <begin> <end>,1
,<begin> <end>,1
placed,one placed .,1
,placed .,1
<Dice:throwValues>,) <Dice:throwValues> (,1
,<Dice:throwValues> (,1
delayed,its delayed promotion,1
,the delayed promotion,1
,delayed promotion,2
False,) False to:P1,26
,) False to:P2,25
,False to:P1,26
,False to:P2,25
,) False to:Next,12
,) False to:Mover,10
,False to:Next,12
,False to:Mover,10
,) False ),8
,False ),10
,True False ),2
,) False to:All,1
,False to:All,1
,) False to:#1,1
,False to:#1,1
510,232 510 ),1
,510 ),1
,{ 510 },1
,510 },1
511,247 511 ),1
,511 ),1
512,{ 512 575,1
,521 512 575,1
,512 575,2
,248 512 ),1
,512 ),1
,607 512 426,1
,512 426,1
four,P1 four left,1
,P2 four left,1
,four left,2
,the four levels,1
,four levels,1
513,249 513 ),1
,513 ),1
,562 513 563,1
,513 563,1
514,250 514 ),1
,514 ),1
,{ 514 },1
,514 },1
,473 514 453,1
,514 453,1
515,251 515 ),1
,515 ),1
,564 515 1052,1
,515 1052,1
,474 515 556,1
,515 556,1
516,252 516 ),1
,516 ),1
,565 516 913,1
,516 913,1
,475 516 413,1
,516 413,1
Calculation,for Calculation (,1
,Calculation (,1
<12><14><4>,STRING <12><14><4> STRING,1
,<12><14><4> STRING,1
id,( id STRING,1988
,id STRING,1988
,( id Mover,13
,id Mover,13
,( id P1,13
,id P1,13
,( id #1,15
,id #1,15
,( id P2,8
,id P2,8
,( id #3,1
,id #3,1
,( id #2,1
,id #2,1
,( id #4,1
,id #4,1
517,261 517 ),1
,517 ),1
,558 517 476,1
,517 476,1
518,262 518 ),1
,518 ),1
ie,Move: ie movement,1
,ie movement,1
if,( if (,5797
,if (,5797
,( if STRING,348
,if STRING,348
,point if opponent,3
,if opponent,3
,Not if the,1
,) if on,1
,Only if the,1
,if the,3
,if on,1
,( if #1,2
,if #1,2
,elephant if it,1
,if it,1
,cells if the,1
,( if <Variant:goal>,1
,if <Variant:goal>,1
,( if <End:cond>,1
,if <End:cond>,1
,only if a,1
,if a,1
,swapping if we,2
,if we,2
,omnicheck if all,1
,if all,1
,that if Player,1
,if Player,1
,check if no,1
,if no,1
,Checks if site,1
,pieces if behind,1
,if site,1
,if behind,1
,( if #3,1
,if #3,1
,( if want,1
,that if p1,1
,if want,1
,if p1,1
,( if <Variant:end>,1
,if <Variant:end>,1
519,265 519 ),1
,519 ),1
,478 519 498,1
,519 498,1
<cornerSetup>,<shape> <cornerSetup> },2
,<cornerSetup> },2
<trackP3P4>,<startP3P4> <trackP3P4> <end>,1
,<trackP3P4> <end>,1
in,Not in the,2
,in the,23
,it in 2,2
,in 2,2
,not in the,2
,around in the,1
,pieces in the,2
,moving in pair,1
,in pair,1
,move in the,1
,move in all,1
,in all,1
,) in any,1
,piece in order,1
,piece in the,3
,two in order,1
,in any,3
,in order,2
,play in the,2
,again in pending,1
,in pending,1
,like in Oware,1
,in Oware,1
,player in first,4
,in first,4
,work in the,1
,cell in the,1
,built in following,1
,describing in the,1
,in following,1
,method in LL,4
,piece in capturing,3
,piece in going,3
,in LL,4
,in capturing,3
,in going,3
,al-Bayadiq in the,4
,reset in (,13
,movement in one,1
,move in either,1
,movement in the,1
,advancement in two,2
,spaces in Pending,6
,Pawn in Var,6
,in (,13
,in one,1
,in either,1
,in two,2
,in Pending,6
,in Var,6
,is in omnicheck,3
,are in check,1
,in omnicheck,3
,in check,1
,as in Glinski,1
,slide in any,1
,Bishops in Wellisch,1
,space in any,1
,remains in that,1
,ends in checkmate,1
,ends in stalemate,1
,result in a,1
,in Glinski,1
,in Wellisch,1
,in that,1
,in checkmate,1
,in stalemate,1
,in a,1
,specified in #1,1
,in #1,1
,humans in forests,1
,humans in water,1
,units in forests,1
,units in water,1
,in forests,2
,in water,2
,test in NotBlockedBy,1
,testing in stepwise,1
,in NotBlockedBy,1
,in stepwise,1
,piece in play,1
,in play,1
,consumed in placement,1
,efficiency in handling,1
,shows in the,1
,selection in the,1
,in placement,1
,in handling,1
lower,a lower value,2
,lower value,2
,index lower than,2
,1 lower than,1
,lower than,3
index,Player index lower,2
,Mover index (,2
,selected index ),2
,with index 1,1
,index lower,2
,index (,4
,index ),2
,index 1,1
,- index (,2
is,( is Mover,577
,( is In,1188
,is Mover,577
,is In,1188
,( is Enemy,976
,( is Empty,987
,is Enemy,976
,is Empty,987
,( is Pending,66
,is Pending,66
,( is Even,38
,is Even,38
,( is Friend,535
,is Friend,535
,( is Line,188
,is Line,188
,nothing is specified,3
,is specified,3
,( is AnyDie,7
,is AnyDie,7
,( is Triggered,31
,is Triggered,31
,( is Occupied,301
,is Occupied,301
,( is Visited,14
,piece is on,1
,is Visited,14
,is on,1
,( is Odd,24
,( is Decided,8
,( is Proposed,16
,is Odd,24
,is Decided,8
,is Proposed,16
,( is Prev,13
,( is Active,46
,is Prev,13
,is Active,46
,location is orthogonally,1
,enemy is there,1
,value is higher,1
,( is Next,38
,is orthogonally,1
,is there,1
,is higher,1
,is Next,38
,piece is removed,1
,is removed,1
,it is not,1
,is not,2
,what is between,2
,is between,2
,( is Flat,13
,( is Pattern,3
,is Flat,13
,is Pattern,3
,( is LastTo,1
,is LastTo,1
,( is Hidden,2
,is Hidden,2
,10 is the,1
,is the,1
,( is Cycle,7
,is Cycle,7
,( is Related,5
,is Related,5
,( is #1,2
,is #1,2
,( is Connected,32
,is Connected,32
,( is Within,14
,( is Full,8
,( is Loop,5
,is Within,14
,is Full,8
,is Loop,5
,( is Blocked,1
,is Blocked,1
,( is SidesMatch,1
,is SidesMatch,1
,supergame is undecided,2
,is undecided,2
,game is built,1
,is built,1
,Counter is reset,13
,is reset,13
,<back_dir> is used,1
,is used,2
,player is in,3
,It is illegal,1
,( is Threatened,7
,is in,3
,is illegal,1
,is Threatened,7
,Chess is played,1
,it is eligible,1
,Pawn is eligible,1
,Pawn is promoted,2
,it is (,1
,colour is captured,1
,There is no,1
,Pawn is displayed,1
,King is captured,1
,there is a,1
,is played,1
,is eligible,2
,is promoted,2
,is (,1
,is captured,2
,is no,1
,is displayed,2
,is a,4
,#1 is protected,1
,is protected,1
,that is being,1
,this is a,2
,is being,1
,( is PipsMatch,1
,is PipsMatch,1
,( is RegularGraph,7
,is RegularGraph,7
,( is TreeCentre,2
,is TreeCentre,2
,( is Tree,2
,is Tree,2
,( is SpanningTree,2
,( is CaterpillarTree,2
,is SpanningTree,2
,is CaterpillarTree,2
,script is still,1
,play is not,1
,cell is done,1
,this is also,1
,move is displayed,1
,1 is used,1
,and is needed,1
,is still,1
,is done,1
,is also,1
,is needed,3
,Move is a,1
,Care is needed,2
,something is always,1
,PowerLeft is Influence,1
,latter is for,1
,it is followed,1
,is always,1
,is Influence,1
,is for,1
,is followed,1
,) is difference,1
,is difference,1
,( is Path,8
,is Path,8
,( is Solved,19
,is Solved,19
,( is Count,7
,is Count,7
,( is Sum,6
,is Sum,6
,( is Unique,1
,is Unique,1
,( is Target,4
,is Target,4
it,Split it in,2
,it in,2
,move it .,1
,enemy it has,1
,it .,1
,it has,1
,place it somewhere,1
,it somewhere,1
,if it is,1
,it is,4
,because it does,1
,it does,1
,thinking it should,1
,it should,1
,where it can,1
,it can,2
,--COMMA-- it can,1
,and it seems,1
,it seems,1
,--COMMA-- it is,1
,where it is,1
,space it moved,1
,then it remains,1
,it moved,1
,it remains,1
,destinations it yields,1
,as it is,1
,it yields,1
resulting,the resulting destinations,1
,resulting destinations,1
odd,on odd square,1
,odd square,1
boardless,( boardless Square,4
,boardless Square,4
,( boardless <Tiling:type>,2
,boardless <Tiling:type>,2
520,266 520 ),1
,520 ),1
,{ 520 },1
,520 },1
<Option:players>,players <Option:players> ),1
,<Option:players> ),1
521,530 521 512,1
,521 512,1
,267 521 ),1
,521 ),1
,502 521 582,1
,521 582,1
522,268 522 ),1
,522 ),1
,{ 522 },1
,522 },1
,252 522 502,1
,522 502,1
523,269 523 ),1
,523 ),1
524,270 524 ),1
,524 ),1
,{ 524 },1
,524 },1
<BoardConfig:RookRight2Start>,2 <BoardConfig:RookRight2Start> ),1
,<BoardConfig:RookLeft2Start> <BoardConfig:RookRight2Start> },1
,<BoardConfig:RookRight2Start> ),1
,<BoardConfig:RookRight2Start> },1
525,271 525 ),1
,525 ),1
,526 525 476,1
,525 476,1
,{ 525 },1
,525 },1
<Board:dice>,) <Board:dice> (,1
,<Board:dice> (,1
<RegionLightPhase>,<RegionDarkPhase> <RegionLightPhase> <RegionMediumPhase>,1
,<RegionLightPhase> <RegionMediumPhase>,1
526,272 526 ),1
,526 ),1
,527 526 525,1
,526 525,1
527,273 527 ),1
,527 ),1
,528 527 526,1
,527 526,1
<east>,<south> <east> <west>,1
,<east> <west>,1
528,274 528 ),1
,528 ),1
,430 528 527,1
,528 527,1
,{ 528 },1
,528 },1
,489 528 508,1
,528 508,1
529,283 529 ),1
,529 ),1
,488 529 480,1
,529 480,1
Map,) Map between,1
,Map between,1
of:,row of: (,30
,of: (,151
,Pieces of: (,1
,column of: (,85
,layer of: (,6
,phase of: (,20
,Friend of: (,5
,#3 of: (,4
<Jarl:captureType>,) <Jarl:captureType> },1
,<Jarl:captureType> },1
<Start>,STRING <Start> args:,15
,<Start> args:,15
,{ <Start> },3
,<Start> },3
530,539 530 521,1
,530 521,1
,284 530 ),1
,530 ),1
,628 530 481,1
,530 481,1
,551 530 550,1
,530 550,1
531,285 531 ),1
,531 ),1
<Board:rightMostInnerHoleP1>,<Board:thirdHoleInnerP1> <Board:rightMostInnerHoleP1> },1
,<Board:rightMostInnerHoleP1> },1
532,286 532 ),1
,532 ),1
,533 532 552,1
,532 552,1
533,287 533 ),1
,533 ),1
,484 533 236,1
,533 236,1
,{ 533 },1
,533 },1
,553 533 532,1
,533 532,1
ESE,) ESE ),2
,ESE ),2
,WSW ESE },7
,ESE },7
,STRING ESE 2,4
,STRING ESE 3,4
,ESE 2,4
,ESE 3,4
534,288 534 ),1
,534 ),1
,432 534 485,1
,534 485,1
535,. 535 },2
,535 },4
,293 535 ),1
,535 ),1
,684 535 },1
,{ 535 },1
536,294 536 ),1
,536 ),1
,{ 536 },1
,536 },1
537,295 537 ),1
,537 ),1
,587 537 488,1
,537 488,1
<Variant:goal>,if <Variant:goal> (,1
,<Variant:goal> (,1
538,296 538 ),1
,538 ),1
,{ 538 },1
,538 },1
539,476 539 },1
,476 539 530,1
,539 },2
,539 530,1
,297 539 ),1
,539 ),1
,{ 539 },1
,498 539 579,1
,539 579,1
Structure,) Structure of,2
,Structure of,2
oer,move oer any,1
,oer any,1
<Group>,STRING <Group> args:,1
,<Group> args:,1
Surround,) Surround on,2
,Surround on,2
<Shape>,hex <Shape> <Size>,1
,STRING <Shape> args:,1
,<Shape> <Size>,1
,<Shape> args:,1
edgeColour:,) edgeColour: (,1
,edgeColour: (,1
draw,= draw (,1
,draw (,1
,players draw .,1
,draw .,1
off,Bear off rule,4
,off rule,4
,degrees off either,1
,off either,1
clearing,utilities: clearing the,1
,clearing the,1
<Stars>,STRING <Stars> ),1
,STRING <Stars> args:,1
,<Stars> ),1
,<Stars> args:,1
540,298 540 ),1
,540 ),1
,{ 540 },1
,540 },1
541,309 541 ),1
,541 ),1
,{ 541 },1
,541 },1
542,310 542 ),1
,542 ),1
,493 542 591,1
,542 591,1
,543 542 505,1
,542 505,1
543,311 543 ),1
,313 543 ),1
,319 543 ),1
,543 ),3
,544 543 542,1
,543 542,1
<Row:specialHoles>,{ <Row:specialHoles> },1
,<Row:specialHoles> },1
<NumPlayers>,{ <NumPlayers> <BoardShape>,2
,<NumPlayers> <BoardShape>,2
544,312 544 ),1
,314 544 ),1
,320 544 ),1
,544 ),3
,{ 544 },1
,544 },1
,565 544 543,1
,544 543,1
545,315 545 ),1
,545 ),1
546,316 546 ),1
,546 ),1
547,321 547 ),1
,547 ),1
,498 547 596,1
,547 596,1
548,{ 548 35,1
,557 548 },1
,548 35,1
,548 },2
,322 548 ),1
,548 ),1
,{ 548 },1
le,( le (,3
,le (,3
,( le #2,1
,le #2,1
,( le <NeighborsOf:nbrMax>,1
,le <NeighborsOf:nbrMax>,1
,( le 2,2
,le 2,2
549,323 549 ),1
,549 ),1
,{ 549 },1
,549 },1
complete,( complete (,8
,complete (,8
54>,. 54> STRING,1
,54> STRING,1
Boat,) Boat (,1
,= Boat Damage,1
,Boat (,1
,Boat Damage,1
origin:,expand origin: (,94
,origin: (,98
,) origin: (,4
<Fox:hopCapture>,or <Fox:hopCapture> <Fox:stepMove>,1
,<Fox:hopCapture> <Fox:stepMove>,1
lt,( lt (,8
,lt (,8
,( lt 0,3
,lt 0,3
<FogOfWar>,STRING <FogOfWar> args:,1
,<FogOfWar> args:,1
while,( while (,1
,while (,1
secone,the secone edge,1
,secone edge,1
<Board:leopardGoal>,) <Board:leopardGoal> ),1
,<Board:leopardGoal> ),1
second,) second capture,1
,second capture,1
,the second promotion,1
,second promotion,1
,**** second choice,1
,second choice,1
550,324 550 ),1
,550 ),1
,530 550 509,1
,550 509,1
that,for that player,1
,that player,1
,then that Pawn,1
,that Pawn,1
,of that colour,1
,Note that a,1
,move that would,1
,colour that has,1
,in that position,1
,rule that if,1
,that colour,1
,that a,2
,that would,1
,that has,1
,that position,1
,that if,2
,Sites that contain,1
,units that are,1
,Sites that a,1
,Sites that are,1
,sites that protect,1
,Move that builds,1
,Moves that infantry,1
,that contain,1
,that are,2
,that protect,1
,that builds,1
,that infantry,1
,site that is,1
,that is,1
,show that everything,1
,that everything,1
,add that if,1
,sure that something,1
,restrictions that prevent,1
,that something,1
,that prevent,1
551,325 551 ),1
,551 ),1
,572 551 530,1
,551 530,1
edge,an edge --COMMA--,1
,edge --COMMA--,1
,secone edge marker,1
,edge marker,1
,an edge (,1
,edge (,1
552,326 552 ),1
,552 ),1
,532 552 572,1
,552 572,1
553,333 553 ),1
,553 ),1
,{ 553 },1
,553 },1
,637 553 533,1
,553 533,1
554,334 554 ),1
,554 ),1
,{ 554 },1
,554 },1
555,339 555 ),1
,555 ),1
,653 555 506,1
,555 506,1
,{ 555 },1
,555 },1
556,340 556 ),1
,556 ),1
,{ 556 },1
,556 },1
,515 556 597,1
,556 597,1
557,566 557 548,1
,557 548,1
,341 557 ),1
,557 ),1
than,lower than Mover,2
,lower than his,1
,than Mover,2
,than his,1
,other than Kings,1
,more than one,1
,than Kings,1
,than one,1
,other than placement,1
,than placement,1
558,342 558 ),1
,558 ),1
,579 558 517,1
,558 517,1
limit,upper limit at,1
,limit at,1
,a limit on,1
,limit on,1
559,343 559 ),1
,559 ),1
claim,( claim (,6
,claim (,6
55>,. 55> STRING,1
,55> STRING,1
Rightwards,{ Rightwards Leftwards,8
,Rightwards Leftwards,18
,Forwards Rightwards Leftwards,7
,STRING Rightwards ),3
,Backwards Rightwards Leftwards,3
,Backward Rightwards },1
,Rightwards ),3
,Rightwards },1
value:7,STRING value:7 ),1
,value:7 ),5
,count:1 value:7 ),2
,count:2 value:7 ),2
value:8,STRING value:8 ),1
,value:8 ),3
,count:2 value:8 ),2
value:5,count:1 value:5 ),1
,value:5 ),14
,STRING value:5 ),9
,count:2 value:5 ),2
,count:4 value:5 ),2
value:6,count:1 value:6 ),1
,value:6 ),6
,STRING value:6 ),1
,count:2 value:6 ),2
,count:4 value:6 ),2
value:3,count:2 value:3 ),3
,value:3 ),31
,STRING value:3 ),9
,state:2 value:3 ),17
,count:4 value:3 ),2
value:4,count:2 value:4 ),3
,value:4 ),14
,STRING value:4 ),9
,count:4 value:4 ),2
3rd,optional 3rd region,1
,3rd region,1
value:1,count:4 value:1 ),4
,value:1 ),38
,count:8 value:1 ),1
,state:3 value:1 ),4
,state:1 value:1 ),8
,state:2 value:1 ),2
,) value:1 ),4
,STRING value:1 ),3
,count:5 value:1 ),2
,} value:1 ),8
,93 value:1 ),1
,105 value:1 ),1
value:2,count:2 value:2 ),3
,value:2 ),16
,STRING value:2 ),11
,count:8 value:2 ),2
value:0,rotation:2 value:0 ),1
,rotation:4 value:0 ),1
,rotation:6 value:0 ),1
,rotation:0 value:0 ),1
,value:0 ),4
Dominoes,deal Dominoes 7,1
,Dominoes 7,1
<End:sites>,sites <End:sites> ),1
,<End:sites> ),1
plus,--COMMA-- plus handling,1
,plus handling,1
560,344 560 ),1
,560 ),1
,{ 560 },1
,560 },1
561,351 561 ),1
,561 ),1
,610 561 609,1
,561 609,1
,581 561 627,1
,561 627,1
562,352 562 ),1
,562 ),1
,352 562 513,1
,562 513,1
entry,the entry of,1
,entry of,1
expand,( expand (,577
,expand (,577
,( expand origin:,94
,expand origin:,94
,( expand origin:1,1
,( expand origin:0,2
,( expand origin:2,1
,( expand origin:3,1
,( expand origin:4,1
,( expand origin:5,1
,( expand origin:6,1
,( expand origin:7,1
,( expand origin:8,1
,( expand origin:9,1
,( expand origin:10,1
,( expand origin:11,1
,expand origin:1,1
,expand origin:0,2
,expand origin:2,1
,expand origin:3,1
,expand origin:4,1
,expand origin:5,1
,expand origin:6,1
,expand origin:7,1
,expand origin:8,1
,expand origin:9,1
,expand origin:10,1
,expand origin:11,1
,( expand origin:181,1
,( expand origin:191,1
,( expand origin:174,1
,expand origin:181,1
,expand origin:191,1
,expand origin:174,1
563,355 563 ),1
,563 ),1
,513 563 564,1
,563 564,1
,{ 563 },1
,563 },1
,583 563 479,1
,563 479,1
564,356 564 ),1
,564 ),1
,563 564 515,1
,564 515,1
,{ 564 },1
,564 },1
565,359 565 ),1
,565 ),1
,750 565 516,1
,565 516,1
,{ 565 },1
,565 },1
,585 565 544,1
,565 544,1
566,575 566 557,1
,566 557,1
,360 566 ),1
,566 ),1
,607 566 668,1
,566 668,1
<geese>,{ <geese> },1
,<geese> },1
567,363 567 ),1
,567 ),1
<Board:rightMostInnerHoleP2>,<Board:thirdHoleInnerP2> <Board:rightMostInnerHoleP2> },1
,<Board:rightMostInnerHoleP2> },1
568,364 568 ),1
,568 ),1
,589 568 673,1
,568 673,1
<Challenge>,start <Challenge> ),7
,STRING <Challenge> args:,15
,<Challenge> ),7
,<Challenge> args:,15
,) <Challenge> (,1
,<Challenge> (,1
569,371 569 ),1
,569 ),1
diagonals,by diagonals only,1
,diagonals only,1
value:9,STRING value:9 ),1
,value:9 ),3
,85 value:9 ),1
,97 value:9 ),1
no,( no Pieces,376
,( no Moves,328
,no Pieces,376
,no Moves,328
,with no notches,2
,no notches,2
,) no moves,1
,no moves,1
,are no pieces,1
,are no Bishops,1
,is no en,1
,no pieces,1
,no Bishops,1
,no en,1
,if no promotion,1
,no promotion,1
,) no mover,1
,no mover,1
p1,if p1 mover,1
,p1 mover,1
<Board:MainWinC>,<= <Board:MainWinC> (,10
,<Board:MainWinC> (,10
p2,one p2 piece,1
,p2 piece,1
<Diagonal>,STRING <Diagonal> STRING,2
,<Diagonal> STRING,2
EndSite,trackSite EndSite ),2
,EndSite ),2
,trackSite EndSite Mover,2
,EndSite Mover,2
<Board:stores>,Home <Board:stores> },1
,<Board:stores> },1
storage,( storage pits,41
,storage pits,41
570,372 570 ),1
,570 ),1
,571 570 619,1
,570 619,1
571,373 571 ),1
,571 ),1
,572 571 570,1
,571 570,1
,{ 571 },1
,571 },1
elapsed,turns elapsed without,1
,elapsed without,1
572,374 572 ),1
,572 ),1
,573 572 571,1
,572 571,1
,552 572 551,1
,572 551,1
573,379 573 ),1
,573 ),1
,574 573 572,1
,573 572,1
,{ 573 },1
,573 },1
574,380 574 ),1
,574 ),1
,427 574 573,1
,574 573,1
,595 574 575,1
,574 575,1
575,512 575 },1
,512 575 566,1
,575 },2
,575 566,1
,381 575 ),1
,575 ),1
,{ 575 },1
,574 575 596,1
,575 596,1
576,382 576 ),1
,576 ),1
577,383 577 ),1
,577 ),1
,{ 577 },1
,577 },1
578,384 578 ),1
,578 ),1
,627 578 579,1
,578 579,1
of,winning of P1,2
,of P1,6
,positions of each,4
,of each,10
,Quadrant of P1,2
,Quadrant of P2,2
,of P2,4
,Charge of the,1
,one of our,1
,goal of the,1
,of the,35
,of our,1
,Name of piece,2
,of piece,2
,position of the,1
,value of mine,2
,hand of P1,1
,hand of P2,1
,of mine,2
,goal of P1,1
,goal of P2,1
,value of each,1
,regardless of what,2
,of what,2
,leftHole of each,1
,number of capture,1
,of capture,1
,holes of the,2
,levels of the,1
,State of pieces,3
,Movement of the,3
,of pieces,3
,Version of the,1
,location of last-moved,6
,of last-moved,6
,opposite of <fwd_dir>,1
,of <fwd_dir>,1
,3 of the,1
,out of omnicheck,2
,move of a,1
,number of spaces,1
,of omnicheck,2
,of a,4
,of spaces,1
,made of hexagons,1
,side of the,2
,pieces of that,1
,one of the,2
,pieces of the,1
,piece of the,1
,any of the,3
,either of those,1
,spaces of the,1
,space of the,1
,right of forward,1
,) of the,1
,movement of the,1
,version of the,1
,possession of the,1
,direction of movement,1
,Encyclopedia of Chess,1
,of hexagons,1
,of that,1
,of those,1
,of forward,1
,of movement,1
,of Chess,1
,entry of the,1
,sense of the,1
,owner of each,1
,end of each,1
,location of the,4
,Site of player,1
,of player,1
,placement of a,1
,size of the,1
,lists of sites,1
,2 of each,1
,of sites,1
,series of hops,1
,hops of a,1
,Influence of the,1
,position of a,1
,influence of 1,1
,Continuation of the,1
,structure of each,1
,Structure of play,2
,Definitions of different,1
,of hops,1
,of 1,1
,of play,2
,of different,1
,number of try,1
,of try,1
579,387 579 ),1
,579 ),1
,578 579 580,1
,579 580,1
,{ 579 },1
,579 },1
,539 579 558,1
,579 558,1
og,locations og the,1
,og the,1
<track1>,<size> <track1> <track2>,1
,<track1> <track2>,1
on,rule on water,1
,on water,1
,is on the,1
,on the,11
,if on the,1
,Surround on corners,2
,on corners,2
,diagonally on its,1
,on its,1
,depend on how,1
,have on the,1
,omnicheck on their,1
,on how,1
,on their,1
,played on a,2
,--COMMA-- on the,2
,Knight on the,1
,--COMMA-- on a,1
,on a,4
,) on step,2
,on step,2
,only on the,1
,Diagonal on the,1
,pieces on the,1
,stand on (,1
,entrenchment on ),1
,on (,2
,on ),1
,humans on land,1
,units on land,1
,on land,2
,heavy on the,1
,piece on a,1
,empties on all,1
,on all,1
,place on an,1
,place on empty,1
,limit on friendly,1
,on an,1
,on empty,1
,on friendly,1
,selection on the,1
,based on remaining,1
,played on (,1
,on remaining,1
,play on even,1
,scoring on odd,1
,on even,1
,on odd,1
or,( or STRING,69
,or STRING,69
,( or (,1435
,or (,1435
,( or <Jump:hare>,1
,or <Jump:hare>,1
,( or <Jump:coyote>,1
,or <Jump:coyote>,1
,( or {,455
,or {,455
,( or <Jump:bean>,1
,or <Jump:bean>,1
,( or <Fox:hopCapture>,1
,or <Fox:hopCapture>,1
,) or blank,2
,end or ),1
,or blank,2
,or ),1
,empty or contain,1
,piece or two,1
,one or two,1
,--COMMA-- or right,2
,two or three,2
,or contain,1
,or two,2
,or right,3
,or three,2
,flat or Two,1
,or Two,1
,Two or more,1
,or more,1
,2 or 3,1
,or 3,1
,P1 or P2,2
,E or W,1
,or P2,2
,or W,1
,gray or black,1
,--COMMA-- or 60,1
,Rook or a,1
,with or without,1
,left or right,1
,--COMMA-- or Knight,1
,--COMMA-- or there,1
,capture or Pawn,1
,or black,1
,or 60,1
,or a,2
,or without,1
,or Knight,1
,or there,1
,or Pawn,1
,( or Add,1
,or Add,1
,( or <CheckmateRule:Ending>,1
,or <CheckmateRule:Ending>,1
,( or <Movement:type>,1
,or <Movement:type>,1
,STRING or <Multi:capture>,1
,or <Multi:capture>,1
,) or next,1
,or next,1
,different or a,1
,( or <Play:type>,1
,or <Play:type>,1
Leduc,Phil Leduc Move,1
,Leduc Move,1
considerably,processing considerably .,1
,considerably .,1
moveagain,( moveagain ),1
,moveagain ),1
580,388 580 ),1
,580 ),1
,579 580 581,1
,580 581,1
581,393 581 ),1
,581 ),1
,580 581 582,1
,581 582,1
,601 581 561,1
,581 561,1
582,394 582 ),1
,582 ),1
,581 582 583,1
,582 583,2
,521 582 583,1
583,395 583 ),1
,583 ),1
,582 583 584,1
,583 584,1
,{ 583 },1
,583 },1
,582 583 563,1
,583 563,1
584,396 584 ),1
,584 ),1
,583 584 585,1
,584 585,1
585,397 585 ),1
,585 ),1
,584 585 586,1
,585 586,1
,586 585 565,1
,585 565,1
count:<Board:init>,) count:<Board:init> (,1
,count:<Board:init> (,1
586,398 586 ),1
,586 ),1
,585 586 587,1
,586 587,1
,{ 586 },1
,586 },1
,646 586 585,1
,586 585,1
587,399 587 ),1
,587 ),1
,586 587 537,1
,587 537,1
588,400 588 ),1
,588 ),1
589,401 589 ),1
,589 ),1
,{ 589 },1
,589 },1
,630 589 568,1
,589 568,1
diagonal,square diagonal grid,1
,diagonal grid,1
<Tiger>,STRING <Tiger> args:,2
,<Tiger> args:,2
Currently,Note: Currently --COMMA--,1
,Currently --COMMA--,1
<BoardConfig>,STRING <BoardConfig> args:,1
,<BoardConfig> args:,1
determination,site determination suicidal,1
,determination suicidal,1
590,402 590 ),1
,590 ),1
,{ 590 },1
,590 },1
,323 590 >,1
,590 >,1
<sum>,<maxVal> <sum> },1
,<sum> },1
591,403 591 ),1
,591 ),1
,542 591 784,1
,591 784,1
,{ 591 },1
,591 },1
592,404 592 ),1
,592 ),1
,{ 592 },1
,592 },1
593,405 593 ),1
,593 ),1
594,406 594 ),1
,594 ),1
,{ 594 },1
,594 },1
595,407 595 ),1
,595 ),1
,{ 595 },1
,595 },1
,634 595 574,1
,595 574,1
596,408 596 ),1
,596 ),1
,547 596 645,1
,596 645,1
,575 596 637,1
,596 637,1
597,556 597 618,1
,597 618,1
598,618 598 639,1
,598 639,1
599,{ 599 },1
,599 },1
<CapThreshold>,) <CapThreshold> ),1
,STRING <CapThreshold> args:,1
,<CapThreshold> ),1
,<CapThreshold> args:,1
Damage,Attacker Damage #1,1
,Human Damage 2,1
,Vehicle Damage 3,1
,Vehicle Damage 4,1
,Aircraft Damage 5,1
,Boat Damage 6,1
,Building Damage (,1
,= Damage Taken,1
,Random Damage Minimum,1
,Random Damage Maximum,1
,Damage #1,1
,Damage 2,1
,Damage 3,1
,Damage 4,1
,Damage 5,1
,Damage 6,1
,Damage (,1
,Damage Taken,1
,Damage Minimum,1
,Damage Maximum,1
they,Kings they happen,1
,--COMMA-- they must,1
,--COMMA-- they have,1
,because they have,1
,they happen,1
,they must,1
,they have,2
,--COMMA-- they are,1
,they are,1
<walls>,{ <walls> <start1>,1
,<walls> <start1>,1
,{ <walls> <exit>,1
,<walls> <exit>,1
,<exit> <walls> },1
,<walls> },1
them,simplify them into,1
,them into,1
,remembering them speeds,1
,them speeds,1
then,( then (,1817
,then (,1817
,( then STRING,27
,then STRING,27
,--COMMA-- then that,1
,then that,1
,( then <NumOfPlayers:CheckMate>,2
,then <NumOfPlayers:CheckMate>,2
,- then clause,2
,then clause,2
,--COMMA-- then the,2
,--COMMA-- then it,1
,--COMMA-- then Player,1
,then the,2
,then it,1
,then Player,1
,( then #2,1
,then #2,1
,( then <SType:selScoring>,2
,then <SType:selScoring>,2
,( then <Scoring:updateOption>,1
,then <Scoring:updateOption>,1
,would then not,2
,included then conditions,1
,and then remove,1
,then not,2
,then conditions,1
,then remove,1
,( then <Minotaur:threat>,1
,then <Minotaur:threat>,1
<init>,<number> <init> },3
,<init> },6
,<num> <init> },1
,<startPos> <init> },1
,<size> <init> },1
,<track> <init> <Play>,1
,<init> <Play>,1
Transit,- Transit zone,1
,Transit zone,1
Rooks,* Rooks move,1
,the Rooks belonging,1
,Rooks move,1
,Rooks belonging,1
NextPlayer,set NextPlayer (,42
,NextPlayer (,45
,Set NextPlayer (,3
Wellisch,STRING Wellisch STRING,1
,Siegmund Wellisch .,1
,STRING Wellisch Chess,1
,in Wellisch Chess,1
,STRING Wellisch Chess_ai"     ) ),1
,Wellisch Chess,3
,Wellisch STRING,1
,Wellisch .,1
,Wellisch Chess_ai"     ) ),1
<suicideOption>,<location> <suicideOption> },1
,<suicideOption> },1
bridge,Add bridge to,2
,to bridge wagon,1
,bridge to,2
,bridge wagon,1
starting,the starting point,3
,starting point,3
,The starting positions,4
,starting positions,4
,the starting Shah's,1
,starting Shah's,1
,its starting side,1
,their starting side,1
,starting side,2
,the starting location,1
,the starting position,1
,starting location,1
,starting position,1
Split,add Split it,2
,Split it,2
checking,before checking for,1
,checking for,1
<dot0>,<size> <dot0> <3dSites>,1
,<dot0> <3dSites>,1
<Board:LeftInnerHolesP1>,{ <Board:LeftInnerHolesP1> },1
,<Board:LeftInnerHolesP1> },1
seed,one seed .,1
,seed .,1
executed,be executed .,2
,executed .,2
Options:,STRING Options: eg,1
,Options: eg,1
before:10,STRING before:10 after:10,2
,before:10 after:10,2
<ScoreOption:discVal>,STRING <ScoreOption:discVal> ),1
,<ScoreOption:discVal> ),1
<hare>,{ <hare> },1
,<hare> },1
so,done so far,4
,so far,4
,--COMMA-- so remembering,1
,so remembering,1
counts:,) counts: {,27
,counts: {,27
<showHandP3>,<betP3> <showHandP3> <removeP3>,1
,<showHandP3> <removeP3>,1
<Board:LeftInnerHolesP2>,{ <Board:LeftInnerHolesP2> },1
,<Board:LeftInnerHolesP2> },1
one,If one of,1
,one of,3
,remove one or,1
,removes one enemy,1
,one or,1
,one enemy,1
,and one round,1
,one round,1
,only one seed,1
,one seed,1
,Only one capture,1
,one capture,1
,last one placed,1
,one placed,1
,in one forward,1
,one forward,1
,defines one piece,1
,one piece,1
,to one of,1
,move one space,2
,with one of,1
,moving one space,1
,than one space,1
,one space,4
,mover one p2,1
,one p2,1
,least one player,1
,one player,1
Section,From Section 0,1
,From Section 1,1
,From Section 2,1
,From Section 3,1
,From Section 4,1
,From Section 5,1
,From Section 6,1
,From Section 7,1
,From Section 8,1
,From Section 9,1
,From Section 10,1
,From Section 11,1
,Section 0,1
,Section 1,1
,Section 2,1
,Section 3,1
,Section 4,1
,Section 5,1
,Section 6,1
,Section 7,1
,Section 8,1
,Section 9,1
,Section 10,1
,Section 11,1
<Remove:rule>,STRING <Remove:rule> (,4
,<Remove:rule> (,4
makeFaces,( makeFaces (,1
,makeFaces (,1
to,( to if:,1175
,( to ),4489
,( to (,1657
,to if:,1175
,to ),4489
,to (,1658
,site to another,1
,( to 1,2
,( to 2,2
,to another,1
,to 1,2
,to 2,2
,( to STRING,107
,to STRING,107
,goes to the,4
,have to enter,3
,have to go,3
,back to the,3
,( to #1,11
,to the,13
,to enter,3
,to go,3
,to #1,11
,thanks to double,4
,to double,4
,( to 0,4
,to 0,4
,1 to 25,2
,to 25,2
,have to move,1
,has to .,1
,to move,5
,to .,1
,- to region,2
,to region,2
,( to 32,1
,( to 33,1
,( to 34,1
,( to Cell,16
,to 32,1
,to 33,1
,to 34,1
,to Cell,16
,the to location,2
,higher to the,1
,the to value,1
,pushed to place,1
,to location,2
,to value,1
,to place,3
,enemy to an,1
,to an,4
,order to remove,2
,to remove,2
,( to Edge,19
,to Edge,19
,piece to build,1
,to build,1
,( to #2,4
,to #2,4
,hole to play,2
,to play,3
,( to 18,1
,to 18,1
,( to 11,1
,to 11,1
,( to 9,1
,( to 8,1
,( to 3,1
,to 9,1
,to 8,1
,to 3,1
,hole to a,1
,to a,6
,adjacent to any,1
,to any,2
,( to <Edge:target_zone>,1
,to <Edge:target_zone>,1
,dots to separate,1
,to separate,1
,( to <To>,1
,to <To>,1
,possible to reach,1
,impossible to place,1
,impossible to play,1
,to reach,1
,( to Vertex,5
,to Vertex,5
,) to update,1
,to update,2
,promote to Wazir,2
,promote to Knight_rotated,2
,promote to Elephant,2
,promote to Queen,2
,promote to King_noCross,2
,promote to Amazon,2
,promote to Giraffe,2
,promote to Bishop_noCross,2
,promote to Knight,2
,promote to Rook,2
,line to a,1
,promotion to the,1
,to Wazir,2
,to Knight_rotated,2
,to Elephant,2
,to Queen,2
,to King_noCross,2
,to Amazon,2
,to Giraffe,2
,to Bishop_noCross,2
,to Knight,2
,to Rook,2
,( to if:True,22
,to if:True,22
,pawn to begin,1
,to begin,1
,used to record,1
,to record,1
,happen to have,2
,trick to do,1
,illegal to move,1
,spaces to move,1
,condition to check,1
,to have,2
,to do,1
,to check,2
,board to Hand,1
,promoted to one,1
,belonging to the,1
,--COMMA-- to any,1
,moves to a,1
,available to a,1
,forward to an,1
,promoted to a,1
,due to turns,1
,able to escape,1
,player to capture,1
,chance to move,1
,to Hand,1
,to one,1
,to turns,1
,to escape,1
,to capture,1
,jump to three,2
,jump to two,9
,move to step,6
,to three,2
,to two,9
,to step,6
,Eric to check,1
,Todo: to improve,1
,to improve,1
,hand to the,1
,site to the,1
,( to if:False,3
,bridge to river,1
,bridge to bridge,1
,to if:False,3
,to river,1
,to bridge,1
,damage to units,3
,to units,3
,) to place,1
,player to consider,1
,to consider,1
,Direction to integer,1
,--COMMA-- to (,1
,players to understand,1
,state to be,1
,cells to filter,1
,added to --COMMA--,1
,need to be,1
,sites to update,1
,) to allow,1
,) to restrict,1
,All to pick,1
,entered to suicide,1
,next to suicide,1
,to integer,1
,to understand,1
,to be,2
,to filter,1
,to --COMMA--,1
,to allow,1
,to restrict,1
,to pick,1
,to suicide,2
,want to add,1
,option to swap,1
,next to a,1
,next to an,2
,next to pieces,1
,to add,1
,to swap,1
,to pieces,1
,Expands to about,1
,equal to the,1
,needed to avoid,2
,are to make,1
,where to start,1
,Test to prevent,1
,characters to restore,1
,piece to move,1
,to about,1
,to avoid,2
,to make,1
,to start,1
,to prevent,1
,to restore,1
,leads to 1st,1
,to 1st,1
<Multi>,STRING <Multi> args:,1
,<Multi> args:,1
separate,to separate the,1
,separate the,1
,two separate directions,2
,separate directions,2
NNE,NNW NNE ),1
,SSE NNE SSW,1
,SSW NNE SSE,1
,NNW NNE },6
,NNE ),6
,NNE SSW,3
,NNE SSE,1
,NNE },6
,player NNE ),1
,STRING NNE ),3
,STRING NNE SSW,2
,#2 NNE ),1
rules,( rules (,927
,rules (,928
,( rules <Start:start>,1
,rules <Start:start>,1
,( rules <Start:rules>,6
,rules <Start:rules>,6
,( rules <Players:startRules>,1
,rules <Players:startRules>,1
,( rules #1,1
,Starting rules phases:,1
,rules #1,1
,rules phases:,16
,( rules <Players:start>,6
,rules <Players:start>,6
,( rules <Version:start>,2
,rules <Version:start>,2
,( rules <Player:start>,5
,rules <Player:start>,5
,( rules <Player:startRules>,1
,rules <Player:startRules>,1
,( rules <Board:start>,4
,rules <Board:start>,4
,( rules phases:,15
,( rules <Boundary:cornerSetup>,1
,rules <Boundary:cornerSetup>,1
,( rules <Meta:rule>,5
,rules <Meta:rule>,5
,( rules <Model:rules>,1
,rules <Model:rules>,1
,( rules <Play>,1
,rules <Play>,1
,( rules <Version:playRules>,1
,rules <Version:playRules>,1
,the rules describing,1
,rules describing,1
,( rules <Rules:start>,2
,rules <Rules:start>,2
,last rules (,1
,the rules .,2
,rules .,2
,the rules can,1
,rules can,1
,( rules <Play:play>,1
,rules <Play:play>,1
,( rules <Version:play>,1
,rules <Version:play>,1
with:,) with: (,2
,with: (,2
<sizeHome>,<size> <sizeHome> },1
,<sizeHome> },1
,<numDice> <sizeHome> <start>,1
,<sizeHome> <start>,1
Name,- Name of,2
,Name of,2
,Piece Name #2,1
,Piece Name (,1
,Name #2,1
,Name (,1
enclosed,sites enclosed by,1
,enclosed by,1
NNW,STRING NNW NNE,1
,STRING NNW SSE,3
,SSE NNW ),1
,{ NNW NNE,6
,NNW NNE,7
,NNW SSE,3
,NNW ),5
,{ NNW E,2
,NNW E,2
,STRING NNW ),3
,#2 NNW ),1
capturing,The capturing piece,3
,for capturing pieces,3
,capturing piece,3
,capturing pieces,3
,in capturing the,3
,capturing the,4
,without capturing by,1
,capturing by,1
,Lion capturing the,1
details,For details --COMMA--,1
,details --COMMA--,1
up,sides up (,2
,notches up },1
,up (,2
,up },1
,speeds up move,1
,pick up special,1
,up move,1
,up special,1
this,know this move,1
,this move,1
,do this .,1
,this .,1
,If this is,2
,this is,3
,maybe this is,1
,for this (,1
,this (,1
case:,special case: empty,1
,case: empty,1
cavalry,against cavalry and,1
,cavalry and,1
Bishop2Start,> Bishop2Start <,2
,Bishop2Start <,2
NOW,FOR NOW (,1
,NOW (,1
know,To know this,1
,know this,1
region,- region (,4
,- region #2,2
,extra region (,1
,from region #2,2
,to region (,1
,to region #3,1
,capture region #4,1
,Target region #4,1
,Capture region (,1
,region (,8
,region #2,4
,region #3,1
,region #4,2
,3rd region (,1
,( region Colour,6
,region Colour,6
,) region defines,1
,region defines,1
,enough region and,1
,region and,1
withValue:True,Moves withValue:True (,3
,withValue:True (,3
Integers,for Integers (,2
,Integers (,2
<Start:rule>,{ <Start:rule> },1
,<Start:rule> },1
rule:,blocking rule: If,1
,rule: If,1
<tiling,STRING <tiling T33434,1
,STRING <tiling T3464,1
,<tiling T33434,1
,<tiling T3464,1
,STRING <tiling T31212>,1
,STRING <tiling T333333_33434>,1
,STRING <tiling T33336>,1
,STRING <tiling T33344>,1
,STRING <tiling T3464>,1
,STRING <tiling T3636>,1
,STRING <tiling T4612>,1
,STRING <tiling T488>,1
,<tiling T31212>,1
,<tiling T333333_33434>,1
,<tiling T33336>,1
,<tiling T33344>,1
,<tiling T3464>,1
,<tiling T3636>,1
,<tiling T4612>,1
,<tiling T488>,1
<Forward>,STRING <Forward> STRING,1
,<Forward> STRING,1
destination,the destination cells,1
,destination cells,1
,a destination selection,2
,destination selection,2
changes,markers changes a,1
,changes a,1
,state changes --COMMA--,2
,changes --COMMA--,2
that's,If that's a,2
,that's a,2
,however that's not,1
,that's not,1
we,enemy we have,1
,we have,1
,indicate we can,1
,we can,2
,captured we sow,1
,we sow,1
,if we just,2
,we just,2
,why we are,1
,we are,1
,definition we can,1
,) we remove,1
,we remove,1
<Players>,STRING <Players> args:,17
,<Players> args:,17
,players <Players> ),1
,) <Players> ),1
,<Players> ),2
opponent's,an opponent's bridging,1
,opponent's bridging,1
of:Vertex,Cell of:Vertex at:,3
,of:Vertex at:,19
,Edge of:Vertex at:#1,1
,of:Vertex at:#1,1
,Edge of:Vertex at:,16
<startP3P4>,<num> <startP3P4> <trackP3P4>,1
,<startP3P4> <trackP3P4>,1
lies,piece lies between,1
,lies between,1
EMPTY,target EMPTY cell,1
,EMPTY cell,1
last-moved,of last-moved Pawn,6
,last-moved Pawn,6
FromTop,) FromTop (,61
,FromTop (,61
<Variant:endRules>,) <Variant:endRules> ),1
,<Variant:endRules> ),1
Attacker,) Attacker Damage,1
,Attacker Damage,1
cases,placement cases (,1
,cases (,1
previous,the previous position,1
,previous position,1
,the previous pits,1
,previous pits,1
,with previous player,1
,previous player,1
,from previous capture,1
,previous capture,1
,any previous hop,1
,previous hop,1
<260>,<64> <260> STRING,1
,<260> STRING,1
<updateOption>,{ <updateOption> },1
,<updateOption> },1
location,to location is,1
,to location --COMMA--,1
,location is,1
,location --COMMA--,1
,Save location of,6
,location of,10
,#1 location of,2
,#3 location of,1
,#2 location of,1
,empty location (,1
,location (,1
,starting location .,1
,location .,1
<Challenge:sum>,Sum <Challenge:sum> ),1
,<Challenge:sum> ),1
num:8,from:0 num:8 ),2
,num:8 ),4
,) num:8 ),2
num:4,from:0 num:4 ),35
,num:4 ),43
,} num:4 ),4
,) num:4 ),4
num:5,from:0 num:5 ),2
,num:5 ),6
,) num:5 ),4
num:6,from:0 num:6 ),16
,num:6 ),17
,d:6 num:6 ),1
Var,set Var STRING,256
,Var STRING,256
,set Var (,44
,Var (,44
,set Var 1,12
,set Var 0,15
,set Var 2,9
,Var 1,12
,Var 0,15
,Var 2,9
,set Var #1,2
,Var #1,2
,set Var 3,2
,Var 3,2
,set Var 6,1
,Var 6,1
,set Var <ExtraCapture:num>,1
,Var <ExtraCapture:num>,1
,in Var .,6
,Var .,6
num:7,from:0 num:7 ),4
,num:7 ),4
-10,15 -10 .,1
,02 -10 .,1
,-10 .,2
,0 -10 ),1
,-10 ),1
type,piece type hopped,1
,type hopped,1
-11,58 -11 .,1
,-11 .,1
Wazir,) Wazir (,1
,Wazir (,1
,to Wazir .,2
,Wazir .,2
<LB2>,<LF2> <LB2> <RF2>,2
,<LB2> <RF2>,2
count:<Play:numKings>,) count:<Play:numKings> ),1
,count:<Play:numKings> ),1
Double-step,) Double-step non-capturing,1
,Double-step non-capturing,1
Layakúcan,) Layakúcan (,1
,Layakúcan (,1
<MainWinC>,<BoardDef> <MainWinC> <MainWin1>,1
,<MainWinC> <MainWin1>,1
<pathRule>,<start> <pathRule> },1
,<pathRule> },1
phase,( phase STRING,748
,phase STRING,748
,the phase here,4
,phase here,4
,( phase of:,20
,phase of:,20
,simultaneous phase .,1
,phase .,3
,playing phase .,1
,turn phase .,1
,pie phase (,1
,phase (,1
<Player:track>,) <Player:track> use:Edge,1
,<Player:track> use:Edge,1
,STRING <Player:track> loop:True,1
,<Player:track> loop:True,1
method,Capture method in,4
,method in,4
<BoardConfig:Pawn2Start>,STRING <BoardConfig:Pawn2Start> ),1
,<BoardConfig:Pawn2Start> ),1
turns:5,spiral turns:5 sites:86,3
,turns:5 sites:86,3
,spiral turns:5 sites:88,1
,turns:5 sites:88,1
<Sow>,STRING <Sow> args:,2
,<Sow> args:,2
push,( push (,2
,push (,2
<LB1>,<LF1> <LB1> <RF1>,2
,<LB1> <RF1>,2
Care,. Care is,2
,Care is,2
exist,site exist (,5
,exist (,5
idintify,used idintify suicidal,1
,idintify suicidal,1
exact,( exact #1,2
,exact #1,2
,( exact (,12
,exact (,12
,( exact STRING,2
,exact STRING,2
,( exact 2,62
,exact 2,62
,( exact 3,15
,exact 3,15
,( exact 1,18
,exact 1,18
,( exact #3,27
,exact #3,27
,( exact 4,4
,exact 4,4
,( exact 0,7
,( exact 5,2
,( exact 6,1
,exact 0,7
,exact 5,2
,exact 6,1
Level,forEach Level (,82
,Level (,94
,where Level STRING,17
,Level STRING,17
,where Level (,12
column:,row:0 column: (,11
,) column: (,24
,column: (,35
surrounded,orthogonally surrounded (,1
,surrounded (,1
,fully surrounded and,1
,surrounded and,1
<move>,{ <move> <playMove>,1
,<move> <playMove>,1
,<num> <move> },1
,<move> },6
,{ <move> },4
,<start> <move> },1
Large,- Large Piece,1
,Large Piece,1
-30,rotate -30 (,1
,-30 (,1
<directionUsed>,<gridType> <directionUsed> <diagShow>,3
,<directionUsed> <diagShow>,3
our,of our piece,1
,our piece,1
,into our current,2
,our current,2
out,move out of,2
,filter out Spartan,1
,out of,2
,out Spartan,1
-36,3 -36 ),1
,-36 ),1
<Variant:opening>,{ <Variant:opening> (,1
,<Variant:opening> (,1
<To>,to <To> ),1
,STRING <To> args:,1
,<To> ),1
,<To> args:,1
<doubleStep>,{ <doubleStep> },1
,<doubleStep> },1
<Adjacent>,> <Adjacent> <Hidden>,2
,<Hidden> <Adjacent> STRING,2
,<Adjacent> <Hidden>,2
,<Adjacent> STRING,4
,STRING <Adjacent> STRING,2
-45,rotate -45 (,1
,-45 (,1
args:,<Num> args: {,10
,args: {,514
,<Start> args: {,15
,<Board> args: {,153
,<Tiger> args: {,2
,<Jump> args: {,3
,<Move> args: {,2
,<Place> args: {,1
,<Variant> args: {,25
,<Moves> args: {,2
,<Goat> args: {,2
,<Fox> args: {,1
,<Play> args: {,15
,<Dice> args: {,5
,<Players> args: {,17
,<Player> args: {,31
,<End> args: {,11
,<Track> args: {,3
,<Throw> args: {,1
,<Ruleset> args: {,1
,<Pieces> args: {,1
,<Version> args: {,23
,<Tiling> args: {,4
,<Each> args: {,1
,<Stack> args: {,2
,<Scoring> args: {,4
,<Phase> args: {,1
,<Capture> args: {,4
,<Sow> args: {,2
,<Row> args: {,17
,<ExtraCapture> args: {,2
,<Counters> args: {,1
,<Rightmost> args: {,1
,<Column> args: {,1
,<Skip> args: {,1
,<Scale> args: {,1
,<Result> args: {,15
,<Rows> args: {,5
,<Columns> args: {,5
,<Tower> args: {,1
,<Army> args: {,1
,<Rules> args: {,4
,<Boundary> args: {,2
,<Meta> args: {,5
,<BoardSize> args: {,11
,<Swap> args: {,1
,<Edge> args: {,2
,<Size> args: {,9
,<Group> args: {,1
,<Shape> args: {,1
,<Stars> args: {,1
,<Balance> args: {,1
,<Model> args: {,1
,<Remove> args: {,2
,<Exact> args: {,1
,<To> args: {,1
,<Piece> args: {,1
,<Disc> args: {,1
,<Repetition> args: {,2
,<Jarl> args: {,1
,<Tag> args: {,1
,<Elephant> args: {,1
,<BoardConfig> args: {,1
,<NumOfPlayers> args: {,2
,<Placement> args: {,2
,<PlacementConditions> args: {,1
,<PiecePlacement> args: {,1
,<High> args: {,1
,<Step> args: {,1
,<Slide> args: {,1
,<Option> args: {,1
,<ThrowSix> args: {,1
,<Scenario> args: {,1
,<FogOfWar> args: {,1
,<Doctrine1> args: {,1
,<Doctrine2> args: {,1
,<Doctrine3> args: {,1
,<Doctrine4> args: {,1
,<CheckmateRule> args: {,1
,<Movement> args: {,1
,<CapThreshold> args: {,1
,<GType> args: {,2
,<SType> args: {,2
,<BoardShape> args: {,7
,<Line> args: {,1
,<Connection> args: {,2
,<TurnType> args: {,1
,<NumberPlayers> args: {,1
,<CapOption> args: {,1
,<ChosenHop> args: {,1
,<Multi> args: {,1
,<Equi> args: {,1
,<PlaceDisc> args: {,1
,<ScoreOption> args: {,1
,<Center> args: {,1
,<CellBackground> args: {,1
,<PlaceBy> args: {,1
,<NeighborsOf> args: {,1
,<Variants> args: {,1
,<Dual> args: {,1
,<Challenge> args: {,15
,<SafeTeleportation> args: {,1
,<Robots> args: {,1
,<challenge> args: {,2
,<OuterRing> args: {,1
,<Minotaur> args: {,2
<BoardConfig:BoardLayout>,board <BoardConfig:BoardLayout> ),1
,<BoardConfig:BoardLayout> ),1
1401,1352 1401 1450,1
,1401 1450,1
depth,1 depth ),2
,depth ),2
<innerInitP1>,<track2> <innerInitP1> <innerInitP2>,1
,<innerInitP1> <innerInitP2>,1
num:1,d:4 num:1 ),1
,num:1 ),89
,dice num:1 ),2
,d:6 num:1 ),1
,d:7 num:1 ),1
,from:0 num:1 ),2
,from:1 num:1 ),3
,d:8 num:1 ),1
,from:2 num:1 ),1
,) num:1 ),77
num:2,dice num:2 ),13
,num:2 ),57
,d:6 num:2 ),25
,d:4 num:2 ),3
,from:0 num:2 ),3
,} num:2 ),4
,from:1 num:2 ),1
,) num:2 ),8
<BoardShape>,<NumPlayers> <BoardShape> <BoardRegions>,2
,<BoardShape> <BoardRegions>,2
,STRING <BoardShape> args:,7
,<BoardShape> args:,7
num:3,d:6 num:3 ),6
,num:3 ),29
,} num:3 ),4
,d:7 num:3 ),2
,dice num:3 ),6
,from:0 num:3 ),9
,) num:3 ),2
<HomeTrack2>,<size> <HomeTrack2> <MiddleTrack>,1
,<HomeTrack2> <MiddleTrack>,1
<Player:init>,{ <Player:init> },1
,<Player:init> },1
2-step,Non-capturing 2-step advancement,2
,2-step advancement,2
own,his own ),1
,own ),1
,Update own states,1
,own states,1
,it's own double,1
,own double,1
<Pawn1Start>,<BoardLayout> <Pawn1Start> <King2Start>,1
,<Pawn1Start> <King2Start>,1
<Board:MainWin0>,<= <Board:MainWin0> (,2
,<Board:MainWin0> (,2
<removeRule>,<rulesCommander> <removeRule> <start>,1
,<removeRule> <start>,1
King,) King movement,7
,) King movement:,3
,King movement,7
,King movement:,3
,the King nor,1
,a King is,1
,another's King takes,1
,3's King --COMMA--,1
,3's King until,1
,King nor,1
,King is,1
,King takes,1
,King --COMMA--,1
,King until,1
,) King (,8
,King (,8
1411,1362 1411 1460,1
,1411 1460,1
<innerInitP2>,<innerInitP1> <innerInitP2> },1
,<innerInitP2> },1
Horse,) Horse (,6
,Horse (,6
<40>,STRING <40> <,3
,<40> <,3
,STRING <40> STRING,3
,<40> STRING,4
,<9> <40> STRING,1
Script,- Script implements,1
,Script implements,1
<Rightmost>,STRING <Rightmost> args:,1
,<Rightmost> args:,1
<Board:rowSize>,STRING <Board:rowSize> ),4
,<Board:rowSize> ),4
curious,a curious thing,1
,curious thing,1
like,made like in,1
,like in,1
SidesNoCorners,3 SidesNoCorners ),1
,SidesNoCorners ),1
ruleset,( ruleset STRING,367
,ruleset STRING,367
<Row:size>,STRING <Row:size> ),15
,<Row:size> ),19
,{ <Row:size> (,1
,1 <Row:size> ),1
,* <Row:size> 3,3
,+ <Row:size> 1,1
,<Row:size> (,1
,<Row:size> 3,3
,<Row:size> 1,1
,4 <Row:size> ),3
,2 <Row:size> store:None,1
,<Row:size> store:None,1
Bishop_noCross,to Bishop_noCross .,2
,Bishop_noCross .,2
<Board:HalfRightInnerP1>,{ <Board:HalfRightInnerP1> },1
,<Board:HalfRightInnerP1> },1
entrenchment,build entrenchment on,1
,each entrenchment --COMMA--,1
,an entrenchment against,1
,an entrenchment at,1
,from entrenchment ),1
,an entrenchment (,1
,entrenchment on,1
,entrenchment --COMMA--,1
,entrenchment against,1
,entrenchment at,1
,entrenchment ),1
,entrenchment (,1
1426,1475 1426 1377,1
,1426 1377,1
1425,1082 1425 1474,1
,1425 1474,1
<Robots>,STRING <Robots> args:,1
,<Robots> args:,1
<Board:HalfRightInnerP2>,{ <Board:HalfRightInnerP2> },1
,<Board:HalfRightInnerP2> },1
<pieces>,{ <pieces> },2
,<pieces> },2
,<boardSize> <pieces> <random>,1
,<pieces> <random>,1
,{ <pieces> <start>,1
,<pieces> <start>,1
<Stack:limit>,) <Stack:limit> ),2
,<Stack:limit> ),2
purposes,terrain purposes ),1
,purposes ),1
<41>,STRING <41> STRING,1
,<41> STRING,1
rectangle,( rectangle 3,76
,( rectangle 7,20
,rectangle 3,76
,rectangle 7,20
,( rectangle 1,177
,rectangle 1,177
,( rectangle 5,32
,rectangle 5,32
,( rectangle 9,9
,rectangle 9,9
,( rectangle 32,1
,rectangle 32,1
,( rectangle 2,49
,rectangle 2,49
,( rectangle 19,11
,rectangle 19,11
,( rectangle 6,26
,rectangle 6,26
,( rectangle 10,13
,rectangle 10,13
,( rectangle <Board:size>,4
,rectangle <Board:size>,4
,( rectangle 8,21
,rectangle 8,21
,( rectangle 12,6
,rectangle 12,6
,( rectangle 4,22
,rectangle 4,22
,( rectangle 11,7
,rectangle 11,7
,( rectangle <Rows:num>,4
,rectangle <Rows:num>,4
,( rectangle (,4
,rectangle (,4
,( rectangle 15,2
,rectangle 15,2
,( rectangle 17,2
,rectangle 17,2
,( rectangle STRING,1
,rectangle STRING,1
,( rectangle 16,2
,rectangle 16,2
,( rectangle 14,3
,( rectangle 23,4
,rectangle 14,3
,rectangle 23,4
,( rectangle 13,2
,rectangle 13,2
,( rectangle <Row:num>,1
,rectangle <Row:num>,1
,( rectangle 20,1
,rectangle 20,1
,( rectangle 33,1
,rectangle 33,1
,( rectangle <Rows>,1
,rectangle <Rows>,1
,( rectangle <Challenge:size>,2
,rectangle <Challenge:size>,2
rotational,prevent rotational symmetrical,1
,rotational symmetrical,1
1429,1478 1429 },1
,1429 },1
here,phase here ),4
,here ),5
,move here ),1
,promotion here .,1
,here .,1
top:False,by:Mover top:False ),5
,top:False ),21
,by:#1 top:False ),8
,by:All top:False ),1
,by:Enemy top:False ),6
,STRING top:False ),1
note,( note STRING,10
,note STRING,10
,( note player:Mover,5
,( note player:Next,4
,note player:Mover,5
,note player:Next,4
,STRING note prameter-shift,1
,note prameter-shift,1
line,Shape line (,1
,Colour line (,1
,State line (,1
,Value line (,1
,line (,4
,promotion line to,1
,line to,1
-72,6 -72 ),1
,-72 ),1
scale,( scale 0,21
,( scale 1,36
,scale 0,21
,scale 1,36
,( scale 8,3
,scale 8,3
,( scale 2,19
,scale 2,19
,( scale 15,1
,scale 15,1
,( scale 3,4
,scale 3,4
,( scale 10,1
,scale 10,1
,( scale 4,1
,scale 4,1
includeSelf:False,) includeSelf:False backtracking:True,7
,includeSelf:False backtracking:True,7
,) includeSelf:False ),4
,includeSelf:False ),4
,) includeSelf:False backtracking:,2
,includeSelf:False backtracking:,2
,) includeSelf:False <Skip>,1
,includeSelf:False <Skip>,1
1437,1388 1437 1486,1
,1437 1486,1
1433,1432 1433 1201,1
,1433 1201,1
subdivide,( subdivide (,4
,subdivide (,4
Move,can Move (,337
,Move (,337
,trackSite Move steps:,44
,Move steps:,44
,trackSite Move steps:#1,10
,Move steps:#1,10
,trackSite Move from:#1,117
,trackSite Move from:,58
,Move from:#1,117
,Move from:,58
,trackSite Move steps:1,3
,trackSite Move steps:2,1
,trackSite Move steps:3,1
,trackSite Move steps:4,1
,trackSite Move steps:5,1
,trackSite Move steps:6,1
,Move steps:1,3
,Move steps:2,1
,Move steps:3,1
,Move steps:4,1
,Move steps:5,1
,Move steps:6,1
,trackSite Move #1,57
,Move #1,57
,) Move thanks,4
,Move thanks,4
,trackSite Move STRING,30
,Move STRING,34
,) Move a,1
,Move a,3
,Leduc Move a,1
,trackSite Move #2,2
,Move #2,2
,{ Move at,1
,) Move at,1
,Move at,2
,can Move STRING,4
,) Move Forward,1
,Move Forward,1
,= Move a,1
,) Move that,1
,STRING Move without,2
,) Move with,3
,Move that,1
,Move without,2
,Move with,3
,) Move spots,1
,Move spots,1
,lines Move is,1
,Move is,1
1432,791 1432 1433,1
,1432 1433,1
1431,1430 1431 1479,1
,1431 1479,1
1430,1381 1430 1431,1
,1430 1431,1
<42>,STRING <42> STRING,1
,<42> STRING,1
surround:Next,Loop surround:Next ),1
,surround:Next ),1
<Version:hand>,) <Version:hand> (,1
,<Version:hand> (,1
Encyclopedia,Classified Encyclopedia of,1
,Encyclopedia of,1
cost,( cost Edge,6
,cost Edge,6
,( cost Vertex,1
,cost Vertex,1
will,This will filter,1
,will filter,1
,also will fail,1
,will fail,1
implementation,current implementation .,1
,implementation .,1
,obvious implementation trick,1
,implementation trick,1
1450,1401 1450 1499,1
,1450 1499,1
groups,suicidal groups and,1
,groups and,1
Attack,) Attack Moves,1
,counter Attack (,2
,First Attack Multiplier,1
,Counter Attack Multiplier,1
,Attack Moves,1
,Attack (,2
,Attack Multiplier,2
<Board:MainWin1>,<= <Board:MainWin1> (,2
,<Board:MainWin1> (,2
Capture/Release,) Capture/Release effect,3
,Capture/Release effect,3
concept:,Key concept: PowerLeft,1
,concept: PowerLeft,1
1446,1397 1446 1495,1
,1446 1495,1
boolean,( boolean ),2
,boolean ),2
1443,1394 1443 1492,1
,1443 1492,1
locations,swapping locations with,1
,locations with,1
,the locations og,1
,suicide locations (,1
,locations og,1
,locations (,1
<43>,STRING <43> STRING,1
,<43> STRING,1
slowed,not slowed down,1
,slowed down,1
-90,rotate -90 (,5
,-90 (,5
functions,except functions drawn,8
,General functions Source:,7
,functions drawn,9
,functions Source:,7
,General functions Usage:,1
,Hand functions STRING,1
,small functions drawn,1
,functions Usage:,1
,functions STRING,1
tiling,( tiling T33434,9
,( tiling T3464,5
,tiling T33434,9
,tiling T3464,5
,( tiling T33336,1
,tiling T33336,1
,( tiling T3636,1
,tiling T3636,1
forward:True,STRING forward:True (,1
,forward:True (,1
,origin:True forward:True ),2
,forward:True ),6
,) forward:True ),4
1460,1411 1460 1509,1
,1460 1509,1
your,by your pieces,1
,your pieces,1
<Moves:dog>,N <Moves:dog> ),1
,<Moves:dog> ),1
<Players:removeLastPiece>,) <Players:removeLastPiece> ),1
,<Players:removeLastPiece> ),1
without,move without capture,1
,without capture,1
,Done without simultaneous,1
,without simultaneous,1
,modelled without the,1
,without the,2
,game without the,1
,or without capturing,1
,side without any,1
,elapsed without a,1
,without capturing,1
,without any,3
,without a,1
,Move without any,2
,steps without state,2
,those without subsequent,1
,without state,2
,without subsequent,1
these,with these numbers,1
,these numbers,1
protected,is protected by,1
,protected by,1
<44>,STRING <44> STRING,1
,<44> STRING,1
wins,player wins --COMMA--,1
,wins --COMMA--,1
,place wins a,1
,wins a,1
destinations,resulting destinations it,1
,all destinations are,1
,destinations it,1
,destinations are,1
neutral,Places neutral dots,1
,neutral dots,1
num:<Dice:num>,d:6 num:<Dice:num> ),3
,num:<Dice:num> ),4
,from:0 num:<Dice:num> ),1
optional,#3 optional 3rd,1
,optional 3rd,1
,- optional remember,2
,optional remember,2
1471,1520 1471 1524,1
,1471 1524,1
distance:<Placement:distance>,) distance:<Placement:distance> ),1
,distance:<Placement:distance> ),1
Related,is Related Adjacent,1
,Related Adjacent,1
,is Related Diagonal,1
,Related Diagonal,1
,is Related Orthogonal,3
,Related Orthogonal,3
Classified,The Classified Encyclopedia,1
,Classified Encyclopedia,1
<challenge>,STRING <challenge> args:,2
,<challenge> args:,2
contiguous:False,Orthogonal contiguous:False ),1
,contiguous:False ),1
<45>,STRING <45> <,2
,<45> <,2
,STRING <45> STRING,3
,<45> STRING,3
much,too much .,1
,much .,1
Problems:,Problems: even,1
<Disc>,Each <Disc> ),1
,STRING <Disc> args:,1
,<Disc> ),1
,<Disc> args:,1
<47>,STRING <47> STRING,1
,<47> STRING,1
ahead,( ahead (,277
,ahead (,277
,straight ahead --COMMA--,2
,ahead --COMMA--,2
,( ahead #2,2
,( ahead #1,4
,ahead #2,2
,ahead #1,4
,( ahead Cell,10
,ahead Cell,10
FLL,FL FLL Backward,1
,FLL Backward,1
yellow,--COMMA-- yellow --COMMA--,1
,yellow --COMMA--,1
<Version:result>,end <Version:result> ),2
,<Version:result> ),2
,{ <Version:result> },1
,<Version:result> },1
<piece_types>,STRING <piece_types> ),7
,<piece_types> ),7
bugs,grid bugs are,1
,bugs are,1
1479,1431 1479 1528,1
,1479 1528,1
1478,1527 1478 1429,1
,1478 1429,1
1475,1524 1475 1426,1
,1475 1426,1
1474,1425 1474 1523,1
,1474 1523,1
index:4,) index:4 ),6
,index:4 ),6
index:5,) index:5 ),6
,index:5 ),6
index:6,) index:6 ),4
,index:6 ),4
index:0,) index:0 ),14
,index:0 ),14
<46>,STRING <46> STRING,1
,<46> STRING,1
listing,the listing as,1
,listing as,1
index:1,) index:1 ),7
,index:1 ),7
index:2,) index:2 ),6
,index:2 ),6
index:3,) index:3 ),6
,index:3 ),6
WNW,{ WNW ENE,7
,WNW ENE,7
,STRING WNW 2,4
,STRING WNW 3,4
,WNW 2,4
,WNW 3,4
<48>,STRING <48> STRING,1
,<48> STRING,1
follows:,as follows: 1,1
,follows: 1,1
1495,1446 1495 1502,1
,1495 1502,1
<Players:init>,Count <Players:init> to:,1
,<Players:init> to:,1
<ChosenHop:prioritySetting>,play <ChosenHop:prioritySetting> ),1
,<ChosenHop:prioritySetting> ),1
union,( union (,380
,union (,380
,( union {,191
,union {,191
1492,1443 1492 1397,1
,1492 1397,1
Artillery,) Artillery (,1
,Artillery (,1
forests,in forests ),1
,in forests (,1
,forests ),1
,forests (,1
<Triangular>,STRING <Triangular> STRING,2
,<Triangular> STRING,2
<Start:tigerSites>,STRING <Start:tigerSites> ),1
,<Start:tigerSites> ),1
<Tiling>,STRING <Tiling> args:,4
,<Tiling> args:,4
<diagShow>,<directionUsed> <diagShow> <directionScored>,3
,<diagShow> <directionScored>,3
of:Cell,Edge of:Cell at:#1,4
,Edge of:Cell at:#2,4
,of:Cell at:#1,6
,of:Cell at:#2,6
,Cell of:Cell at:,5
,of:Cell at:,28
,Vertex of:Cell at:,9
,Vertex of:Cell at:#1,2
,Vertex of:Cell at:#2,2
,Edge of:Cell at:,14
1486,1437 1486 1535,1
,1486 1535,1
<Board:kingMove>,move <Board:kingMove> (,1
,<Board:kingMove> (,1
Forward,{ Forward Leftward,2
,Forward Leftward,2
,{ Forward Rightward,31
,Forward Rightward,33
,= Forward |,2
,) Forward (,7
,) Forward ),1
,directions Forward ),1
,Forward |,2
,Forward (,87
,Forward ),43
,Step Forward (,9
,) Forward Backward,1
,Forward Backward,71
,{ Forward FL,6
,Forward FL,8
,{ Forward FR,11
,Forward FR,12
,Slide Forward (,30
,{ Forward BL,11
,Forward BL,11
,Backward Forward ),2
,FR Forward },2
,Forward },16
,Hop Forward (,4
,Move Forward a,1
,Forward a,1
,steps:2 Forward ),1
,#1 Forward (,1
,STRING Forward Backward,3
,STRING Forward (,28
,STRING Forward ),35
,{ Forward Backward,43
,STRING Forward STRING,3
,Forward STRING,3
,Direction Forward (,8
,{ Forward BR,10
,Backward Forward },2
,BL Forward },5
,Adjacent Forward ),3
,FL Forward Backward,16
,Leftward Forward Backwards,1
,{ Forward Backwards,4
,Backwards Forward Rightward,2
,Forward BR,10
,Forward Backwards,5
,STRING Forward ~,4
,BR Forward },4
,FR Forward Backward,3
,Leftward Forward },1
,Leftward Forward FR,1
,BL Forward Backward,4
,Leftward Forward Backward,1
,Forward ~,4
,STRING Forward N,1
,STRING Forward S,1
,{ Forward },2
,Backward Forward FL,2
,Forward N,1
,Forward S,1
,) Forward distance:1,3
,) Forward distance:2,1
,Forward distance:1,3
,Forward distance:2,1
,directions Forward of:All,1
,Forward of:All,1
max:12,min:1 max:12 (,1
,max:12 (,1
<Start:board>,{ <Start:board> (,1
,<Start:board> (,1
standard,move standard move,1
,standard move,1
,**** standard strategy,1
,standard strategy,1
<49>,STRING <49> STRING,1
,<49> STRING,1
,<7> <49> <175>,1
,<49> <175>,1
<Board:homeTracks>,) <Board:homeTracks> },1
,<Board:homeTracks> },1
Start,sites Start (,43
,Start (,44
,At Start Cell,2
,from Start (,1
,from Start ),1
,Start Cell,3
,Start ),1
,@ Start Cell,1
,game: Start options,1
,Start options,1
origin:True,) origin:True ),11
,origin:True ),12
,) origin:True backtracking:,1
,origin:True backtracking:,1
,sow origin:True ),1
,) origin:True forward:True,2
,origin:True forward:True,2
,sow origin:True (,2
,origin:True (,2
arg:,STRING arg: STRING,1
,STRING arg: Site,1
,arg: STRING,1
,arg: Site,1
<Result:nonMover>,Player <Result:nonMover> ),1
,<Result:nonMover> ),1
got,just got swapped,2
,got swapped,2
steps:#2,from:#1 steps:#2 ),20
,steps:#2 ),66
,#1 steps:#2 ),32
,STRING steps:#2 ),14
Vehicle,) Vehicle (,1
,Direct Vehicle Damage,1
,Indirect Vehicle Damage,1
,Vehicle (,1
,Vehicle Damage,2
steps:#3,#2 steps:#3 ),19
,steps:#3 ),19
belonging,Rooks belonging to,1
,belonging to,1
steps:#1,Move steps:#1 ),10
,steps:#1 ),13
,STRING steps:#1 ),2
,) steps:#1 (,1
,steps:#1 (,1
,#2 steps:#1 ),1
<Connection>,STRING <Connection> args:,2
,<Connection> args:,2
1499,1450 1499 1500,1
,1499 1500,1
PieceHasNeverMoved,- PieceHasNeverMoved Usage:,3
,PieceHasNeverMoved Usage:,3
<Row:hogon>,{ <Row:hogon> },1
,<Row:hogon> },1
<Capture:distance>,between <Capture:distance> if:,2
,<Capture:distance> if:,2
utilities:,some utilities: clearing,1
,utilities: clearing,1
Dead,0 Dead State,1
,Dead State,1
FOR,JUST FOR ONE,1
,ROUND FOR NOW,1
,FOR ONE,1
,FOR NOW,1
list,suicide list yet,1
,list yet,1
<threat>,{ <threat> },1
,<threat> },1
<Track:stores>,home <Track:stores> kalahs,1
,<Track:stores> kalahs,1
<Board:home>,) <Board:home> (,1
,<Board:home> (,1
Alyx,) Alyx (,1
,Alyx (,1
State,set State at:,179
,State at:,179
,set State at:#1,33
,State at:#1,33
,remember State ),4
,State ),4
,) State line,1
,State line,1
,sites State 1,6
,sites State 2,3
,State 1,8
,State 2,3
,sites State (,1
,State (,1
,) State of,3
,State of,3
,set State #1,18
,State #1,18
,What State Value,2
,State Value,2
,set State Edge,1
,) State 0:,1
,--COMMA-- State 1,1
,--COMMA-- State 2:,1
,Dead State 1,1
,set State Cell,1
,State Edge,1
,State 0:,1
,State 2:,1
,State Cell,1
Checks,) Checks if,1
,Checks if,1
600,{ 600 },1
,600 },1
ENEMY-OCCUPIED,target ENEMY-OCCUPIED cell,1
,ENEMY-OCCUPIED cell,1
601,621 601 581,1
,601 581,1
<initLeopard>,<initTiger> <initLeopard> <leopardGoal>,1
,<initLeopard> <leopardGoal>,1
numException:1,) numException:1 ),1
,numException:1 ),1
602,{ 602 },1
,602 },1
Bottom,sites Bottom ),627
,Bottom ),630
,STRING Bottom STRING,2
,Bottom STRING,2
,STRING Bottom ),3
,) Bottom left,1
,) Bottom right,1
,Bottom left,1
,Bottom right,1
603,{ 603 },1
,603 },1
End,STRING End ),8
,End ),43
,) End ),34
,25 End },9
,12 End },16
,End },42
,0 End },4
,= End (,24
,End (,24
,13 End },4
,#1 End ),1
,23 End },3
,18 End },2
,11 End },2
,P1 End holes,1
,P2 End holes,1
,End holes,2
,STRING End },2
604,316 604 653,1
,604 653,1
,{ 604 },1
,604 },1
<Version:random>,{ <Version:random> },1
,<Version:random> },1
by:Team1,Occupied by:Team1 ),3
,by:Team1 ),3
607,608 607 512,1
,607 512,1
,{ 607 },1
,607 },1
,648 607 566,1
,607 566,1
608,609 608 607,1
,608 607,1
,{ 608 },1
,608 },1
by:Team2,Occupied by:Team2 ),3
,by:Team2 ),3
609,561 609 608,1
,609 608,1
60>,. 60> STRING,1
,60> STRING,1
previous:False,} previous:False next:False,3
,#1 previous:False next:False,1
,previous:False next:False,4
<name>,{ <name> },2
,<name> },2
Star>,<hex Star> STRING,1
,<tri Star> STRING,1
,Star> STRING,2
<Player:team>,{ <Player:team> },5
,<Player:team> },5
remove,( remove (,824
,remove (,824
,( remove 32,1
,( remove 33,1
,( remove 34,1
,( remove Cell,6
,remove 32,1
,remove 33,1
,remove 34,1
,remove Cell,6
,to remove an,1
,to remove one,1
,remove an,1
,remove one,1
,( remove STRING,12
,remove STRING,12
,We remove the,1
,remove the,2
,we remove the,1
,( remove Edge,15
,( remove Vertex,2
,( remove #2,1
,remove Edge,15
,remove Vertex,2
,remove #2,1
,then remove unwanted,1
,remove unwanted,1
,( remove 0,1
,( remove 1,1
,( remove 2,1
,remove 0,1
,remove 1,1
,remove 2,1
<Result:next>,Next <Result:next> ),1
,<Result:next> ),1
rotations:False,} rotations:False (,2
,STRING rotations:False (,1
,rotations:False (,3
610,611 610 561,1
,610 561,1
611,906 611 610,1
,611 610,1
,668 611 612,1
,611 612,1
612,613 612 661,1
,612 661,1
,611 612 613,1
,612 613,1
613,614 613 612,1
,613 612,1
,{ 613 },1
,613 },1
,612 613 614,1
,613 614,1
614,663 614 613,1
,614 613,1
,613 614 615,1
,614 615,1
615,614 615 677,1
,615 677,1
616,{ 616 },1
,616 },1
618,{ 618 },1
,618 },1
,597 618 598,1
,618 598,1
619,570 619 668,1
,619 668,1
victory,The victory conditions,1
,Persian victory conditions,1
,victory conditions,2
Cells,two Cells away,1
,Cells away,1
,which Cells trigger,1
,Cells trigger,1
,count Cells ),1
,Cells ),1
Allow,) Allow state,1
,Allow state,1
args,8 args Usage:,2
,args Usage:,2
with,round with no,2
,round with notches,1
,with no,2
,with notches,1
,holes with seeds,2
,with seeds,2
,swaps with previous,1
,mover with selected,2
,''shift-swaps'' with index,1
,with previous,1
,with selected,2
,with index,1
,state with its,1
,with its,1
,advancement with en,2
,with en,2
,However with a,1
,with a,3
,board with each,1
,locations with one,1
,advance with or,1
,play with a,1
,--COMMA-- with some,1
,with each,1
,with one,1
,with or,1
,with some,1
,improve with IntFunction,1
,with IntFunction,1
,Move with capture,3
,with capture,3
,pieces with too,1
,ge with a,1
,with too,1
,mess with these,1
,with these,1
<brick>,STRING <brick> STRING,1
,<brick> STRING,1
620,641 620 621,1
,620 621,1
<Board:InitOneSeed>,STRING <Board:InitOneSeed> ),1
,<Board:InitOneSeed> ),1
621,{ 621 },1
,621 },1
,620 621 601,1
,621 601,1
there,already there .,3
,there .,3
,is there (,1
,there (,1
,and there are,1
,If there are,1
,or there is,1
,there are,2
,there is,1
623,{ 623 },1
,623 },1
,624 623 646,1
,623 646,1
624,625 624 623,1
,624 623,1
625,. 625 },1
,625 },2
,{ 625 },1
,626 625 624,1
,625 624,1
WSW,) WSW ),2
,WSW ),3
,{ WSW ESE,6
,WSW ESE,7
,ENE WSW S,1
,N WSW ENE,1
,S WSW },1
,WSW S,1
,WSW ENE,1
,WSW },1
,STRING WSW 2,2
,STRING WSW 3,2
,WSW 2,2
,WSW 3,2
,ENE WSW ESE,1
,#2 WSW ),1
626,{ 626 },1
,626 },1
,627 626 625,1
,626 625,1
627,676 627 578,1
,627 578,1
,561 627 626,1
,627 626,1
<Variants:starting>,) <Variants:starting> <Variants:pieOrNot>,1
,<Variants:starting> <Variants:pieOrNot>,1
628,677 628 530,1
,628 530,1
629,{ 629 },1
,629 },1
FRR,FR FRR Backward,1
,FRR Backward,1
John,by John Beasley,1
,John Beasley,1
<Counters>,Count <Counters> to:,1
,STRING <Counters> args:,1
,<Counters> to:,1
,<Counters> args:,1
<captureType>,{ <captureType> },1
,<captureType> },1
<Phase:opening>,{ <Phase:opening> (,1
,<Phase:opening> (,1
630,651 630 589,1
,630 589,1
632,{ 632 },1
,632 },1
634,677 634 595,1
,634 595,1
637,596 637 553,1
,637 553,1
639,{ 639 },1
,639 },1
,598 639 660,1
,639 660,1
Phil,by Phil Leduc,1
,Phil Leduc,1
count:<Size:numTiles>,} count:<Size:numTiles> ),1
,count:<Size:numTiles> ),1
Pieces,count Pieces P2,32
,Pieces P2,72
,no Pieces P2,40
,no Pieces P1,26
,Pieces P1,60
,count Pieces P1,34
,no Pieces Mover,109
,Pieces Mover,178
,no Pieces TeamMover,9
,Pieces TeamMover,9
,count Pieces of:#1,1
,Pieces of:#1,1
,count Pieces in:,3
,Pieces in:,5
,no Pieces of:,1
,Pieces of:,1
,no Pieces Enemy,10
,Pieces Enemy,10
,count Pieces Mover,69
,Swap Pieces (,7
,Pieces (,7
,count Pieces Next,87
,Pieces Next,190
,no Pieces Next,103
,no Pieces Player,8
,Pieces Player,10
,count Pieces All,14
,Pieces All,75
,no Pieces All,61
,no Pieces in:,2
,count Pieces Player,2
,count Pieces #1,6
,Pieces #1,11
,no Pieces #1,5
,Non-Pawn Pieces -------------------------------------------------------,1
,Pieces -------------------------------------------------------,1
,no Pieces P3,1
,count Pieces P3,3
,Pieces P3,4
,count Pieces Vertex,1
,count Pieces Edge,1
,count Pieces Cell,1
,Pieces Vertex,1
,Pieces Edge,1
,Pieces Cell,1
,count Pieces P4,2
,Pieces P4,2
,count Pieces STRING,1
,Pieces STRING,2
,no Pieces STRING,1
,count Pieces ),1
,Pieces ),1
<openingRegions>,<homeTracks> <openingRegions> },1
,<openingRegions> },1
63>,. 63> STRING,2
,63> STRING,2
<Multi:suicide>,intersection <Multi:suicide> (,1
,<Multi:suicide> (,1
<ExtraCapture:num>,STRING <ExtraCapture:num> ),1
,<ExtraCapture:num> ),2
,Var <ExtraCapture:num> ),1
understand,to understand the,1
,understand the,1
Square,{ Square 26,2
,) Square 30,1
,Square 26,2
,Square 30,1
,boardless Square ),4
,Square ),4
,concentric Square rings:2,3
,Square rings:2,3
,concentric Square rings:3,19
,Square rings:3,19
,concentric Square rings:4,1
,Square rings:4,1
<betP3>,<initP3> <betP3> <showHandP3>,1
,<betP3> <showHandP3>,1
641,662 641 620,1
,641 620,1
642,{ 642 },1
,642 },1
even,Problems: even after,1
,even after,1
,on even boards,1
,even boards,1
644,{ 644 },1
,644 },1
645,596 645 694,1
,645 694,1
646,623 646 586,1
,646 586,1
648,{ 648 },1
,648 },1
,689 648 607,1
,648 607,1
649,{ 649 },1
,649 },1
assumes,) assumes both,1
,assumes both,1
restrict,to restrict (,1
,restrict (,1
Colour,) Colour line,1
,Colour line,1
,region Colour (,6
,Colour (,6
,piece Colour P1,2
,piece Colour P2,2
,Colour P1,2
,Colour P2,2
Side,- Side (,1
,Side (,1
,sites Side E,9
,sites Side W,9
,Side E,9
,Side W,9
,sites Side NE,27
,sites Side SW,26
,sites Side NW,25
,sites Side SE,26
,Side NE,27
,Side SW,26
,Side NW,25
,Side SE,26
,sites Side S,11
,sites Side N,11
,Side S,11
,Side N,11
,sites Side #1,1
,sites Side #2,1
,Side #1,1
,Side #2,1
650,{ 650 },1
,650 },1
651,672 651 630,1
,651 630,1
throughAny:,All throughAny: (,4
,throughAny: (,9
,5 throughAny: (,4
,3 throughAny: (,1
SameLayer,) SameLayer ),3
,SameLayer ),3
653,604 653 555,1
,653 555,1
,673 653 676,1
,653 676,1
654,{ 654 },1
,654 },1
directional,( directional (,4
,directional (,4
656,{ 656 },1
,656 },1
,676 656 657,1
,656 657,1
modelled,Game modelled without,1
,modelled without,1
657,656 657 658,1
,657 658,1
<boardHeight>,{ <boardHeight> <boardWidth>,1
,<boardHeight> <boardWidth>,1
658,{ 658 },1
,658 },1
,657 658 678,1
,658 678,1
659,{ 659 },1
,659 },1
Threatened,is Threatened at:,1
,Threatened at:,1
,is Threatened (,5
,Threatened (,5
,is Threatened ),1
,Threatened ),1
<friendHops>,<enemyHops> <friendHops> },1
,<friendHops> },1
maxState:3,) maxState:3 ),1
,maxState:3 ),3
,P1 maxState:3 ),1
,P2 maxState:3 ),1
<Minotaur:move>,( <Minotaur:move> #1,1
,<Minotaur:move> #1,1
Doctrines,) Doctrines (,1
,Doctrines (,1
maxState:6,P1 maxState:6 ),1
,P2 maxState:6 ),1
,maxState:6 ),2
maxState:7,) maxState:7 ),1
,maxState:7 ),1
maxState:8,) maxState:8 ),1
,maxState:8 ),1
660,{ 660 },1
,660 },1
,639 660 661,1
,660 661,1
661,612 661 710,1
,661 710,1
,{ 661 },1
,661 },1
,660 661 662,1
,661 662,1
<p2_arg>,<p1_arg> <p2_arg> ),1
,<p2_arg> ),1
,<p1_arg> <p2_arg> <p3_arg>,1
,<p2_arg> <p3_arg>,1
662,{ 662 },1
,662 },1
,661 662 641,1
,662 641,1
663,664 663 614,1
,663 614,1
Leftward,Forwards Leftward },3
,Leftward },98
,Rightward Leftward },94
,Forward Leftward Rightward,2
,Leftward Rightward,3
,Rightward Leftward FL,14
,Leftward FL,14
,Rightward Leftward FR,7
,Rightward Leftward BR,4
,Rightward Leftward Forward,4
,FR Leftward },1
,{ Leftward FR,1
,Adjacent Leftward ),1
,Rightward Leftward Backward,18
,Leftward FR,8
,Leftward BR,4
,Leftward Forward,4
,Leftward ),1
,Leftward Backward,18
,STRING Leftward (,1
,Backward Leftward Rightward,1
,Rightward Leftward Forwards,2
,Rightward Leftward BL,1
,Leftward (,1
,Leftward Forwards,2
,Leftward BL,1
664,665 664 663,1
,664 663,1
665,666 665 664,1
,665 664,1
,{ 665 },1
,665 },1
<ScoreOption>,STRING <ScoreOption> args:,1
,<ScoreOption> args:,1
<type>,{ <type> },44
,<type> },44
,{ <type> <initTiger>,2
,<type> <initTiger>,2
,{ <type> <start>,13
,<type> <start>,13
,{ <type> <seed>,1
,<type> <seed>,1
,{ <type> <tile>,2
,<type> <tile>,2
,{ <type> <distance>,2
,<type> <distance>,2
,{ <type> <startP1>,2
,<type> <startP1>,2
,{ <type> <regionsP1>,1
,<type> <regionsP1>,1
,{ <type> <result>,1
,<type> <result>,1
,{ <type> <north>,1
,<type> <north>,1
,{ <type> <startTheseus>,1
,<type> <startTheseus>,1
666,667 666 665,1
,666 665,1
667,668 667 666,1
,667 666,1
,{ 667 },1
,667 },1
668,619 668 667,1
,668 667,1
,566 668 611,1
,668 611,1
<startPos>,<num> <startPos> <init>,1
,<startPos> <init>,1
<king_dir>,STRING <king_dir> <king_spaces>,6
,<king_dir> <king_spaces>,6
<tilePlacementRegion>,<extraBoardSize> <tilePlacementRegion> },1
,<tilePlacementRegion> },1
possibilities,the possibilities ),1
,possibilities ),1
New,--COMMA-- New Hops-a-Daisy,1
,New Hops-a-Daisy,1
consistancy,for consistancy (,1
,consistancy (,1
pie,a pie phase,1
,pie phase,1
671,{ 671 },1
,671 },1
<startP1>,<size> <startP1> <startP2>,1
,<startP1> <startP2>,3
,<type> <startP1> <startP2>,2
672,696 672 651,1
,672 651,1
673,{ 673 },1
,673 },1
,568 673 653,1
,673 653,1
Counter,set Counter ),58
,Counter ),58
,Note: Counter is,13
,Counter is,13
,) Counter attacks,1
,= Counter Attack,1
,Counter attacks,1
,Counter Attack,1
674,{ 674 },1
,674 },1
676,683 676 627,1
,676 627,1
,653 676 656,1
,676 656,1
castling,for castling ),3
,castling ),3
,a castling manouvre,1
,Spartan castling --COMMA--,1
,castling manouvre,1
,castling --COMMA--,1
677,{ 677 628,1
,677 628,1
,615 677 634,1
,677 634,1
678,{ 678 },1
,678 },1
,658 678 719,1
,678 719,1
<149>,> <149> <170>,1
,<149> <170>,1
<p2_dirs>,<p1_dirs> <p2_dirs> <p3_dirs>,1
,<p2_dirs> <p3_dirs>,1
<Version:playRules>,rules <Version:playRules> (,1
,<Version:playRules> (,1
swap,( swap Players,9
,swap Players,9
,( swap ),19
,swap ),19
,to swap players,1
,swap players,1
<ExtraCols>,<ExtraRows> <ExtraCols> },1
,<ExtraCols> },1
However,. However with,1
,However with,1
affected,never affected by,1
,affected by,1
Three,P1 Three LeftMost,1
,P2 Three LeftMost,1
,P1 Three RightMost,1
,P2 Three RightMost,1
,Three LeftMost,2
,Three RightMost,2
680,728 680 684,1
,680 684,1
,{ 680 },1
,680 },1
681,725 681 682,1
,681 682,1
<startP2>,<startP1> <startP2> },2
,<startP2> },2
,<startP1> <startP2> <centering>,1
,<startP2> <centering>,1
682,681 682 683,1
,682 683,1
,702 682 724,1
,682 724,1
683,682 683 676,1
,683 676,1
,{ 683 },1
,683 },1
<Slide>,> <Slide> STRING,1
,<Slide> STRING,1
,STRING <Slide> args:,1
,<Slide> args:,1
684,680 684 535,1
,684 535,1
,{ 684 },1
,684 },1
,724 684 705,1
,684 705,1
686,{ 686 },1
,686 },1
,727 686 728,1
,686 728,1
687,{ 687 },1
,687 },1
<FogOfWar:AttackCheck>,) <FogOfWar:AttackCheck> },1
,<FogOfWar:AttackCheck> },1
689,709 689 648,1
,689 648,1
rarely,are rarely reset,1
,rarely reset,1
<hex>,STRING <hex> STRING,5
,<hex> STRING,5
units,enemy units that,1
,units that,1
,to units in,2
,to units on,1
,Buying units (,1
,units in,2
,units on,1
,units (,1
691,{ 691 },1
,691 },1
represents,) represents the,4
,represents the,4
693,<692 693 694,1
,693 694,1
694,645 694 695,1
,694 695,1
,{ 694 },1
,694 },1
,693 694 696,1
,694 696,1
695,694 695 744,1
,695 744,1
<startP3>,<num> <startP3> <trackP3>,3
,<startP3> <trackP3>,3
696,694 696 672,1
,696 672,1
697,{ 697 },1
,697 },1
<Capture:type>,( <Capture:type> (,2
,<Capture:type> (,2
698,{ 698 },1
,698 },1
count:<Scoring:num>,) count:<Scoring:num> ),4
,count:<Scoring:num> ),4
699,719 699 701,1
,699 701,1
extra,- extra region,1
,extra region,1
land,on land ),2
,land ),2
<Variant>,STRING <Variant> args:,25
,<Variant> args:,25
,) <Variant> ),1
,<Variant> ),1
custodial,( custodial (,66
,custodial (,66
,( custodial #1,5
,custodial #1,5
liberties,- liberties ),1
,0: liberties >,1
,= liberties =,1
,liberties ),1
,liberties >,1
,liberties =,1
<Knight2Start>,<Bishop2Start> <Knight2Start> <Pawn2Start>,1
,<Knight2Start> <Pawn2Start>,1
followed,is followed by,1
,followed by,1
<Rows:num>,rectangle <Rows:num> <Columns:num>,4
,<Rows:num> <Columns:num>,4
<startP4>,<trackP3> <startP4> <trackP4>,3
,<startP4> <trackP4>,3
Triangle>,<hex Triangle> STRING,1
,Triangle> STRING,1
Aircraft,) Aircraft (,1
,= Aircraft Damage,1
,Aircraft (,1
,Aircraft Damage,1
<Play:type>,or <Play:type> (,1
,<Play:type> (,1
-------------------------------------------------------------------------,) ------------------------------------------------------------------------- (,5
,------------------------------------------------------------------------- (,5
Derived,Source: Derived from,5
,Derived from,5
maxValue:10000,maxState:100 maxValue:10000 ),1
,maxValue:10000 ),1
clauses,STRING clauses passed,1
,clauses passed,1
value:,STRING value: (,16
,value: (,16
LeftMost,P1 LeftMost (,1
,P2 LeftMost (,1
,LeftMost (,4
,Three LeftMost (,2
Direct,= Direct Vehicle,1
,Direct Vehicle,1
<Tower>,Step <Tower> (,1
,STRING <Tower> args:,1
,<Tower> (,1
,<Tower> args:,1
replayDouble:True,Die replayDouble:True if:#1,8
,Die replayDouble:True if:,17
,replayDouble:True if:#1,8
,replayDouble:True if:,17
,combined:True replayDouble:True (,1
,replayDouble:True (,1
<Board:board>,{ <Board:board> (,1
,<Board:board> (,1
,board <Board:board> <Board:tracks>,1
,<Board:board> <Board:tracks>,1
Throw,) Throw a,2
,Throw a,2
Positional,noRepeat Positional ),1
,Positional ),1
<BoardShape:gridType>,STRING <BoardShape:gridType> ),6
,<BoardShape:gridType> ),6
,( <BoardShape:gridType> <BoardSize:smallSide>,1
,<BoardShape:gridType> <BoardSize:smallSide>,1
orthogonally,is orthogonally surrounded,1
,orthogonally surrounded,1
displayed,is displayed before,1
,displayed before,1
,is displayed .,1
,displayed .,1
AnyDie,is AnyDie 6,2
,is AnyDie 3,1
,is AnyDie 2,1
,AnyDie 6,2
,AnyDie 3,1
,AnyDie 2,1
,is AnyDie 1,3
,AnyDie 1,3
edited,and edited by,1
,edited by,1
want,if want to,1
,want to,1
Castling,movement: Castling Source:,1
,Castling Source:,1
,movement: Castling (,2
,Castling (,2
,) Castling -------------------------------------------------------,1
,Castling -------------------------------------------------------,1
,. Castling can,1
,Castling can,1
difference,( difference (,652
,difference (,652
,( difference Orthogonal,6
,difference Orthogonal,6
,( difference All,2
,difference All,2
,( difference Diagonal,4
,difference Diagonal,4
,( difference Forwards,1
,difference Forwards,1
,( difference Adjacent,17
,difference Adjacent,17
,is difference an,1
,set difference i,1
,difference an,1
,difference i,1
,( difference STRING,1
,difference STRING,1
must,they must move,1
,must move,1
,player must place,1
,must place,1
joinMidpoints:False,rings:3 joinMidpoints:False joinCorners:True,1
,joinMidpoints:False joinCorners:True,1
<track916>,<track58> <track916> },1
,<track916> },1
<End:result>,STRING <End:result> ),2
,<End:result> ),3
,Mover <End:result> ),1
ONE,FOR ONE ROUND,1
,ONE ROUND,1
<rulesCommander>,<numPlayers> <rulesCommander> <removeRule>,1
,<rulesCommander> <removeRule>,1
<arc4>,<arc3> <arc4> <track3>,1
,<arc4> <track3>,1
routine,Main routine (,8
,routine (,8
pot,( pot ),6
,pot ),6
Backward,| Backward #3,1
,| Backward (,1
,) Backward (,1
,) Backward ),32
,directions Backward ),1
,Backward #3,1
,Backward (,14
,Backward ),71
,Forward Backward ),4
,) Backward Forward,2
,Backward Forward,6
,Slide Backward (,1
,Forward Backward Rightward,16
,Backward Rightward,18
,STRING Backward ),31
,FL Backward Forward,1
,{ Backward BR,1
,{ Backward Rightward,2
,Adjacent Backward ),3
,Forward Backward },45
,Forwards Backward },9
,FL Backward },19
,{ Backward FR,4
,{ Backward Forward,3
,Leftward Backward },12
,Backward BR,3
,Backward },89
,Backward FR,10
,FLL Backward BL,1
,Leftward Backward BR,1
,Leftward Backward BL,2
,STRING Backward (,11
,BL Backward },3
,Leftward Backward FR,3
,Forward Backward FR,3
,FRR Backward BR,1
,Forward Backward Leftward,1
,Forward Backward Rightwards,1
,Forward Backward Leftwards,1
,{ Backward Forwards,1
,Backward BL,3
,Backward Leftward,1
,Backward Rightwards,1
,Backward Leftwards,1
,Backward Forwards,1
,{ Backward },1
knight,the knight (,1
,knight (,1
pow,( pow (,1
,pow (,1
<Version:pieces>,) <Version:pieces> },2
,<Version:pieces> },2
by:Shared,Occupied by:Shared on:Edge,3
,by:Shared on:Edge,3
,Occupied by:Shared STRING,1
,by:Shared STRING,1
,Occupied by:Shared ),8
,by:Shared ),8
<BoardShape:ForcedFillLevel>,<= <BoardShape:ForcedFillLevel> (,1
,<BoardShape:ForcedFillLevel> (,1
escape,to escape check,1
,escape check,1
steps:10,) steps:10 N,1
,steps:10 N,1
steps:15,) steps:15 N,1
,steps:15 N,1
,) steps:15 ),2
,steps:15 ),2
steps:16,) steps:16 S,2
,) steps:16 N,2
,steps:16 S,2
,steps:16 N,2
steps:17,) steps:17 ),2
,steps:17 ),2
P10,handSite P10 ),33
,STRING P10 directed:True,1
,P10 ),37
,P10 directed:True,38
,pair P10 9,1
,} P10 directed:True,37
,P10 9,1
,P9 P10 },5
,P9 P10 P11,15
,P10 },7
,P10 P11,15
,P8 P10 },2
,loop:True P10 ),4
,P8 P10 P12,4
,P10 P12,4
,result P10 Win,4
,P10 Win,4
<arc3>,<num> <arc3> <arc4>,1
,<arc3> <arc4>,1
P12,handSite P12 ),25
,STRING P12 directed:True,1
,P12 ),28
,P12 directed:True,28
,P11 P12 },5
,} P12 directed:True,27
,P11 P12 P13,10
,P12 },7
,P12 P13,10
,P10 P12 },2
,loop:True P12 ),3
,P10 P12 P14,2
,P12 P14,2
,result P12 Win,3
,P12 Win,3
P11,handSite P11 ),26
,STRING P11 directed:True,1
,P11 ),29
,P11 directed:True,28
,P10 P11 P12,15
,} P11 directed:True,27
,P11 P12,15
,P9 P11 },2
,loop:True P11 ),3
,P9 P11 P13,2
,P11 },2
,P11 P13,2
,result P11 Win,3
,P11 Win,3
Vasa,De Vasa Chess,1
,Vasa Chess,1
<SafeTeleportation>,STRING <SafeTeleportation> args:,1
,<SafeTeleportation> args:,1
P14,handSite P14 ),16
,STRING P14 directed:True,1
,P14 ),18
,P14 directed:True,19
,P13 P14 },5
,} P14 directed:True,18
,P13 P14 P15,5
,P14 },6
,P14 P15,5
,P12 P14 },1
,loop:True P14 ),2
,P12 P14 P16,1
,P14 P16,1
,result P14 Win,2
,P14 Win,2
P13,handSite P13 ),17
,STRING P13 directed:True,1
,P13 ),19
,P13 directed:True,19
,P12 P13 P14,10
,} P13 directed:True,18
,P13 P14,10
,P11 P13 },1
,loop:True P13 ),2
,P11 P13 P15,1
,P13 },1
,P13 P15,1
,result P13 Win,2
,P13 Win,2
P16,handSite P16 ),8
,STRING P16 directed:True,1
,P16 ),9
,P16 directed:True,10
,P15 P16 },5
,} P16 directed:True,9
,P16 },6
,P14 P16 },1
,loop:True P16 ),1
,result P16 Win,1
,P16 Win,1
P15,handSite P15 ),9
,STRING P15 directed:True,1
,P15 ),10
,P15 directed:True,10
,P14 P15 P16,5
,} P15 directed:True,9
,P15 P16,5
,P13 P15 },1
,loop:True P15 ),1
,P15 },1
,result P15 Win,1
,P15 Win,1
<All>,> <All> <ThinDotted>,5
,<ThinDotted> <All> STRING,4
,<Hidden> <All> STRING,2
,<All> <ThinDotted>,5
,<All> STRING,10
,STRING <All> STRING,2
,> <All> <ThinDashed>,6
,<ThinDashed> <All> STRING,2
,> <All> <Hidden>,3
,<All> <ThinDashed>,6
,<All> <Hidden>,3
topLevel,( topLevel at:,59
,topLevel at:,59
Select,move Select (,384
,Select (,384
,) Select Player,2
,Select Player,2
,move Select #1,2
,Select #1,2
<Triangle>,STRING <Triangle> STRING,1
,<Triangle> STRING,1
<Star>,STRING <Star> STRING,1
,<Star> STRING,1
<Player:number>,players <Player:number> ),3
,<Player:number> ),3
Passed,all Passed ),59
,Passed ),59
at:4,who at:4 ),1
,at:4 ),16
,count at:4 ),1
,what at:4 ),2
,Edge at:4 ),8
,Vertex at:4 ),3
,9 at:4 ),1
at:3,who at:3 ),1
,at:3 ),16
,count at:3 ),2
,what at:3 ),1
,Edge at:3 ),8
,Vertex at:3 ),3
,7 at:3 ),1
at:6,count at:6 ),1
,at:6 ),14
,what at:6 ),1
,Edge at:6 ),8
,Vertex at:6 ),3
,13 at:6 ),1
at:5,who at:5 ),1
,at:5 ),15
,count at:5 ),1
,what at:5 ),1
,Edge at:5 ),8
,Vertex at:5 ),3
,11 at:5 ),1
at:0,Stack at:0 ),2
,at:0 ),26
,Edge at:0 ),8
,Vertex at:0 ),3
,count at:0 ),1
,state at:0 ),2
,what at:0 ),9
,<Size:pile> at:0 ),1
Hint,forAll Hint (,4
,Hint (,4
at:2,Stack at:2 ),1
,at:2 ),17
,count at:2 ),2
,what at:2 ),1
,Edge at:2 ),8
,Vertex at:2 ),3
,state at:2 ),1
,5 at:2 ),1
at:1,Stack at:1 ),1
,at:1 ),26
,count at:1 ),1
,what at:1 ),10
,Edge at:1 ),8
,Vertex at:1 ),3
,state at:1 ),2
,2 at:1 ),1
<BoardConfig:RegionMediumPhase>,Phase <BoardConfig:RegionMediumPhase> ),1
,<BoardConfig:RegionMediumPhase> ),1
had,everyone's had a,4
,had a,5
,has had a,1
piece:#1,Rename piece:#1 STRING,2
,piece:#1 STRING,2
tile,( tile STRING,22
,tile STRING,22
,( tile <Tiling:tile>,2
,tile <Tiling:tile>,2
,( tile #1,1
,tile #1,1
has,it has to,1
,has to,1
,If has captured,1
,has captured,1
,board has 91,1
,that has already,1
,3 has had,1
,has 91,1
,has already,1
,has had,1
at:8,who at:8 ),1
,Stack at:8 ),1
,at:8 ),17
,count at:8 ),2
,what at:8 ),1
,Edge at:8 ),8
,Vertex at:8 ),3
,17 at:8 ),1
at:7,count at:7 ),1
,at:7 ),14
,what at:7 ),1
,Edge at:7 ),8
,Vertex at:7 ),3
,15 at:7 ),1
at:9,who at:9 ),1
,Stack at:9 ),1
,at:9 ),17
,count at:9 ),2
,what at:9 ),1
,Edge at:9 ),8
,Vertex at:9 ),3
,19 at:9 ),1
given,the given direction,1
,given direction,1
,the given colour,2
,given colour,2
<Players:store>,<Players:homes> <Players:store> kalahs,1
,<Players:store> kalahs,1
on:Vertex,Piece on:Vertex (,1
,on:Vertex (,1
last,( last From,453
,( last To,1886
,last From,453
,last To,1886
,( last LevelTo,18
,last LevelTo,18
,the last one,1
,last one,1
,( last Between,3
,last Between,3
,the last rules,1
,last rules,1
,the last two,1
,last two,1
FirstSite,trackSite FirstSite from:,14
,trackSite FirstSite if:,3
,FirstSite from:,14
,FirstSite if:,3
,trackSite FirstSite Mover,1
,FirstSite Mover,1
,trackSite FirstSite STRING,7
,P1 FirstSite ),33
,FirstSite STRING,7
,FirstSite ),40
,P2 FirstSite ),7
<Scoring:calculation>,( <Scoring:calculation> ),1
,<Scoring:calculation> ),1
<3dSites>,<dot0> <3dSites> },1
,<3dSites> },1
<Robots:num>,STRING <Robots:num> ),1
,<Robots:num> ),1
from:#1,Move from:#1 steps:,26
,from:#1 steps:,26
,Move from:#1 steps:6,6
,from:#1 steps:6,6
,Move from:#1 steps:#2,20
,from:#1 steps:#2,20
,Move from:#1 #2,43
,from:#1 #2,43
,Move from:#1 STRING,17
,from:#1 STRING,17
,STRING from:#1 if:,1
,from:#1 if:,1
,Move from:#1 steps:1,5
,from:#1 steps:1,5
,results from:#1 to:,1
,from:#1 to:,1
,directions from:#1 to:#2,1
,Cell from:#1 to:#2,4
,) from:#1 fromIncluded:True,2
,from:#1 to:#2,5
,from:#1 fromIncluded:True,2
,Direction from:#1 (,1
,from:#1 (,1
Non,) Non Captures,1
,Non Captures,1
edges:,) edges: {,67
,edges: {,148
,} edges: {,81
joinCorners:True,rings:3 joinCorners:True ),14
,joinCorners:True ),15
,joinMidpoints:False joinCorners:True ),1
Not,? Not in,2
,Not in,2
,) Not if,1
,Not if,1
<Board:sizeHome>,STRING <Board:sizeHome> ),1
,<Board:sizeHome> ),1
Enter,) Enter a,2
,Enter a,2
-108,rotate -108 (,3
,-108 (,3
playing,the playing phase,1
,playing phase,1
impossible,be impossible to,1
,its impossible to,1
,impossible to,2
War,Of War (,1
,War (,1
<Row:tracks>,store:None <Row:tracks> ),1
,<Row:tracks> ),1
<track58>,<diceHand> <track58> <track916>,1
,<track58> <track916>,1
<entries>,<tracks> <entries> <endTracks>,1
,<entries> <endTracks>,1
,<tracks> <entries> },2
,<entries> },2
from:#3,) from:#3 (,2
,from:#3 (,2
faces:,d:4 faces: {,5
,faces: {,6
,d:8 faces: {,1
ends,game ends when,1
,game ends in,2
,ends when,1
,ends in,2
vote,( vote STRING,2
,vote STRING,2
Pawns:,) Pawns: Single,1
,Pawns: Single,1
enclose,( enclose (,11
,enclose (,11
<player2_arg>,<player1_arg> <player2_arg> ),6
,<player2_arg> ),6
<slide_dir>,<piece_key> <slide_dir> <slide_spaces>,3
,<slide_dir> <slide_spaces>,3
<enterBoard>,{ <enterBoard> <movePiece>,1
,<enterBoard> <movePiece>,1
overview,an overview --COMMA--,1
,overview --COMMA--,1
Knight2Start,> Knight2Start <,2
,Knight2Start <,2
<Columns>,STRING <Columns> args:,5
,<Columns> args:,5
,<Rows> <Columns> ),1
,<Columns> ),1
rotation,( rotation at:,4
,the rotation specified,1
,rotation at:,4
,rotation specified,1
yet,list yet -,1
,yet -,1
Rotation,Set Rotation {,2
,set Rotation (,2
,Rotation {,2
,Rotation (,3
,Set Rotation ),2
,Set Rotation (,1
,Rotation ),2
T3636,tiling T3636 5,1
,T3636 5,1
Rename,piece Rename piece:#1,2
,Rename piece:#1,2
colour,( colour LightTan,1
,( colour 0,4
,colour LightTan,1
,colour 0,4
,that colour available,1
,given colour when,1
,given colour is,1
,same colour ),1
,same colour as,1
,same colour that,1
,colour available,1
,colour when,1
,colour is,1
,colour ),1
,colour as,1
,colour that,1
,( colour 104,1
,( colour 87,1
,( colour 14,1
,( colour 97,1
,( colour 75,1
,colour 104,1
,colour 87,1
,colour 14,1
,colour 97,1
,colour 75,1
,( colour 155,2
,( colour 126,2
,colour 155,2
,colour 126,2
,( colour 255,4
,( colour 62,2
,( colour 60,1
,( colour 40,2
,( colour 30,1
,( colour 240,1
,colour 255,4
,colour 62,2
,colour 60,1
,colour 40,2
,colour 30,1
,colour 240,1
,( colour Cream,1
,colour Cream,1
,( colour 124,1
,colour 124,1
OppositeDirection,Orthogonal OppositeDirection ),6
,OppositeDirection ),10
,) OppositeDirection ),2
,) OppositeDirection (,5
,OppositeDirection (,5
,Diagonal OppositeDirection ),2
time,the time are,1
,time are,1
Cannot,) Cannot use,1
,Cannot use,2
,) Cannot attack,1
,Cannot attack,1
,STRING Cannot use,1
Variations:,) Variations: In,1
,Variations: In,1
<Tag:pieceNumber>,- <Tag:pieceNumber> 1,2
,<Tag:pieceNumber> 1,2
Padshah,) Padshah (,1
,Padshah (,1
Triangle,hex Triangle <Board>,4
,Triangle <Board>,4
,concentric Triangle rings:3,2
,Triangle rings:3,2
,hex Triangle 6,1
,hex Triangle 7,1
,hex Triangle 8,1
,hex Triangle 9,1
,hex Triangle 10,1
,hex Triangle 11,1
,Triangle 6,1
,Triangle 7,1
,Triangle 8,1
,Triangle 9,1
,Triangle 10,1
,Triangle 11,1
<Option>,STRING <Option> args:,1
,<Option> args:,1
<GType:selGame>,play <GType:selGame> ),2
,<GType:selGame> ),2
150%,does 150% damage,1
,150% damage,1
multi,and multi player,1
,multi player,1
-135,rotate -135 (,1
,-135 (,1
Planes,) Planes are,1
,Planes are,1
<End:rules>,) <End:rules> ),1
,<End:rules> ),1
Special,) Special captures,1
,Special captures,1
options,Start options (,1
,options (,2
,Scoring options (,1
hex,( hex Star,2
,hex Star,2
,( hex <Board>,13
,hex <Board>,13
,( hex 5,17
,hex 5,17
,( hex 4,2
,hex 4,2
,( hex 6,5
,hex 6,5
,( hex 7,6
,hex 7,6
,( hex Diamond,7
,hex Diamond,7
,( hex <Boundary:shape>,2
,hex <Boundary:shape>,2
,( hex Triangle,10
,hex Triangle,10
,( hex <Board:size>,4
,hex <Board:size>,4
,( hex 2,2
,( hex 3,3
,hex 2,2
,hex 3,3
,( hex Prism,1
,hex Prism,1
,( hex <Shape>,1
,hex <Shape>,1
,( hex Rectangle,6
,hex Rectangle,6
,( hex 9,1
,hex 9,1
,( hex 8,1
,( hex 10,1
,hex 8,1
,hex 10,1
,( hex Limping,12
,hex Limping,12
,( hex (,4
,( hex Hexagon,6
,hex (,4
,hex Hexagon,6
<startingMoney>,<pieceSetup> <startingMoney> <teams>,1
,<startingMoney> <teams>,1
having,side having length,1
,having length,1
<Version:boardSize>,square <Version:boardSize> ),1
,<Version:boardSize> ),1
byScore,( byScore ),32
,byScore ),32
,( byScore {,110
,byScore {,110
,( byScore <Version:endScore>,1
,byScore <Version:endScore>,1
<rowSize>,{ <rowSize> <CCW2>,4
,<rowSize> <CCW2>,4
<consequence>,<start> <consequence> <endRules>,1
,<consequence> <endRules>,1
cases:,Two cases: fully,1
,cases: fully,1
1503,1551 1503 },1
,1503 },1
1502,1495 1502 1551,1
,1502 1551,1
1501,1500 1501 1353,1
,1501 1353,1
1500,1499 1500 1501,1
,1500 1501,1
1509,1460 1509 1558,1
,1509 1558,1
Site,forEach Site (,266
,Site (,266
,forEach Site STRING,4
,Site STRING,4
,forEach Site #1,1
,Site #1,1
,arg: Site of,1
,Site of,1
,forEach Site capture,1
,Site capture,1
if:<PlaceDisc:location>,<PlaceDisc:suicideOption> if:<PlaceDisc:location> ),1
,if:<PlaceDisc:location> ),1
explicity,counted explicity Update,1
,explicity Update,1
layer,( layer of:,6
,layer of:,6
Soldier,) Soldier (,6
,Soldier (,6
<MiddleTrack>,<HomeTrack2> <MiddleTrack> <EnemyTrack1>,1
,<MiddleTrack> <EnemyTrack1>,1
<50>,STRING <50> <,3
,<50> <,3
,STRING <50> STRING,3
,<50> STRING,4
,3> <50> STRING,1
<removeP3>,<showHandP3> <removeP3> <endP3>,1
,<removeP3> <endP3>,1
<Forwards>,STRING <Forwards> STRING,1
,<Forwards> STRING,1
unify,can unify and,1
,unify and,1
<Board:start>,{ <Board:start> },2
,<Board:start> },3
,rules <Board:start> (,2
,<Board:start> (,2
,rules <Board:start> phases:,2
,<Board:start> phases:,2
,) <Board:start> },1
,start <Board:start> ),6
,<Board:start> ),6
from:19,Direction from:19 E,1
,from:19 E,1
from:1>,loops:3 from:1> <,1
,from:1> <,1
1524,1471 1524 1475,1
,1524 1475,1
1523,1474 1523 1527,1
,1523 1527,1
1520,1576 1520 1471,1
,1520 1471,1
1529,1528 1529 1578,1
,1529 1578,1
choice,first choice (,1
,second choice -,1
,third choice (,1
,choice (,2
,choice -,1
1528,1479 1528 1529,1
,1528 1529,1
1527,1523 1527 1478,1
,1527 1478,1
small,some small functions,1
,small functions,1
<numSides:6>,> <numSides:6> STRING,2
,<numSides:6> STRING,2
before,moved before .,1
,displayed before the,1
,before .,1
,before the,1
,needed before checking,1
,before checking,1
<directionP2>,<directionP1> <directionP2> <stores>,1
,<directionP2> <stores>,1
Update,explicity Update own,1
,Update own,1
1535,1486 1535 1584,1
,1535 1584,1
his,than his own,1
,his own,1
consider,to consider (,1
,consider (,1
Who,Hidden Who at:,2
,What Who },2
,Who at:,2
,Who },2
<directionP1>,{ <directionP1> <directionP2>,1
,<directionP1> <directionP2>,1
logically,something logically equivalent,1
,logically equivalent,1
it's,implements it's own,1
,it's own,1
Leap,move Leap STRING,104
,Leap STRING,104
,move Leap (,3
,Leap (,3
,move Leap {,4
,Leap {,4
,move Leap #1,1
,Leap #1,1
square,( square 5,69
,square 5,69
,( square 2,17
,square 2,17
,( square 8,105
,square 8,105
,( square 12,10
,square 12,10
,( square 4,27
,square 4,27
,( square 1,44
,square 1,44
,( square <Board>,9
,square <Board>,9
,( square 3,28
,square 3,28
,( square <Board:size>,13
,square <Board:size>,13
,( square 10,17
,square 10,17
,( square (,1
,square (,1
,( square 17,8
,square 17,8
,( square 7,20
,square 7,20
,( square 6,15
,square 6,15
,( square 9,44
,square 9,44
,( square 13,10
,( square 15,8
,( square 19,15
,square 13,10
,square 15,8
,square 19,15
,( square <BoardSize:smallSide>,7
,square <BoardSize:smallSide>,7
,( square Diamond,1
,square Diamond,1
,( square 11,6
,square 11,6
,( square <Tag:boardSize>,1
,square <Tag:boardSize>,1
,( square 14,3
,( square 16,3
,square 14,3
,square 16,3
,( square STRING,1
,square STRING,1
,( square 25,1
,square 25,1
,( square 36,1
,square 36,1
,odd square diagonal,1
,square diagonal,1
,( square <Challenge:size>,5
,square <Challenge:size>,5
,( square <Size>,2
,square <Size>,2
,9x9 square .,4
,Middle square .,1
,square .,5
,( square 20,1
,square 20,1
,( square <Version:boardSize>,1
,square <Version:boardSize>,1
twice,done twice .,1
,twice .,1
Flat,is Flat ),12
,is Flat (,1
,Flat ),12
,Flat (,1
<Variants:pieOrNot>,<Variants:starting> <Variants:pieOrNot> (,1
,<Variants:pieOrNot> (,1
Win,P1 Win ),218
,Win ),1097
,P2 Win ),182
,Mover Win ),573
,TeamMover Win ),20
,P3 Win ),10
,P4 Win ),9
,Player Win ),6
,Next Win ),23
,Team1 Win ),4
,Team2 Win ),4
,<Players:player2> Win ),1
,<Players:player1> Win ),1
,#1 Win ),1
,P5 Win ),6
,P6 Win ),6
,P7 Win ),5
,P8 Win ),5
,P9 Win ),4
,P10 Win ),4
,P11 Win ),3
,P12 Win ),3
,P13 Win ),2
,P14 Win ),2
,P15 Win ),1
,P16 Win ),1
,<Result> Win ),2
,All Win ),1
<numSides:4>,> <numSides:4> STRING,2
,<numSides:4> STRING,2
wagon,bridge wagon (,1
,wagon (,1
values,( values Remembered,169
,values Remembered,169
,remembered values and,1
,values and,1
,( values Cell,16
,values Cell,16
,( values Vertex,2
,values Vertex,2
,( values Edge,1
,values Edge,1
their,on their next,1
,their next,1
,from their current,1
,from their starting,1
,keep their direction,1
,their current,1
,their starting,1
,their direction,1
Forget,( Forget ),1
,Forget ),1
<BoardShape:directionsWin>,) <BoardShape:directionsWin> (,2
,<BoardShape:directionsWin> (,2
point,starting point if,3
,point if,3
<BoardConfig:Bishop2Start>,STRING <BoardConfig:Bishop2Start> ),1
,<BoardConfig:Bishop2Start> ),1
<number>,{ <number> <init>,3
,<number> <init>,3
,{ <number> },1
,<number> },1
1558,1509 1558 1557,1
,1558 1557,1
1557,1558 1557 1606,1
,1557 1606,1
1551,1502 1551 1503,1
,1551 1503,1
<Goat>,STRING <Goat> args:,2
,<Goat> args:,2
process,hopping process .,1
,process .,1
restore,to restore the,1
,restore the,1
afterConsequence:True,To afterConsequence:True ),92
,afterConsequence:True ),93
,From afterConsequence:True ),1
<numSides:3>,> <numSides:3> STRING,2
,<numSides:3> STRING,2
Fil,) Fil (,1
,Fil (,1
1572,1571 1572 1573,1
,1572 1573,1
Only,) Only if,1
,Only if,1
,<Capture:ruleSecondCapture> Only one,1
,Only one,1
,) Only the,1
,Only the,1
,STRING Only available,1
,Only available,1
1571,1570 1571 1572,1
,1571 1572,1
1570,1569 1570 1571,1
,1570 1571,1
1569,1577 1569 1570,1
,1569 1570,1
marking,Orthogonal marking affects,1
,marking affects,1
neither,when neither the,1
,neither the,1
<55>,STRING <55> <,2
,<55> <,2
,STRING <55> STRING,1
,<55> STRING,1
Visited,is Visited (,14
,Visited (,14
<smallSide>,{ <smallSide> },8
,<smallSide> },8
been,already been captured,1
,been captured,1
Left,sites Left ),138
,Left ),140
,P1 Left Holes,1
,P2 Left Holes,1
,Left Holes,2
,P1 Left home,1
,P2 Left home,1
,Left home,2
,STRING Left STRING,2
,Left STRING,2
,STRING Left ),2
<OuterRing:extraBoardSize>,<Size:boardHeight> <OuterRing:extraBoardSize> ),1
,<Size:boardWidth> <OuterRing:extraBoardSize> ),1
,<OuterRing:extraBoardSize> ),2
fillColour:,STRING fillColour: (,8
,fillColour: (,8
at:<End:site1>,Stack at:<End:site1> ),1
,at:<End:site1> ),1
advance,can advance with,1
,never advance more,1
,advance with,1
,advance more,1
1578,1529 1578 1577,1
,1578 1577,1
1577,1578 1577 1569,1
,1577 1569,1
1576,1575 1576 1520,1
,1576 1520,1
trim,( trim <Board:type>,2
,trim <Board:type>,2
1575,1574 1575 1576,1
,1575 1576,1
1574,1573 1574 1575,1
,1574 1575,1
1573,1572 1573 1574,1
,1573 1574,1
<trackCW1>,<trackCCW2> <trackCW1> <trackCW2>,1
,<trackCW1> <trackCW2>,1
jump,can jump an,1
,jump an,1
,move jump to,11
,jump to,11
<Start:numSeeds>,Count <Start:numSeeds> to:,2
,<Start:numSeeds> to:,2
diagonals:Radiating,5 diagonals:Radiating ),1
,diagonals:Radiating ),1
happen,Spartans happen to,1
,they happen to,1
,happen to,2
Kúnax,) Kúnax (,1
,Kúnax (,1
7-8,Hex 7-8 variants:,1
,7-8 variants:,1
centrePoint,( centrePoint ),170
,centrePoint ),170
apply:<Capture:type>,) apply:<Capture:type> ),3
,apply:<Capture:type> ),3
<challenge:limit>,) <challenge:limit> ),2
,= <challenge:limit> (,2
,<challenge:limit> ),2
,<challenge:limit> (,2
at:<End:site2>,Stack at:<End:site2> ),1
,at:<End:site2> ),1
to:All,STRING to:All ),8
,to:All ),10
,Hidden to:All ),1
,False to:All ),1
of:P4,Control of:P4 by:Mover,1
,of:P4 by:Mover,1
of:P3,Control of:P3 by:Mover,1
,of:P3 by:Mover,1
of:P2,Control of:P2 by:Mover,1
,of:P2 by:Mover,1
of:P1,Control of:P1 by:Mover,1
,of:P1 by:Mover,1
1584,1535 1584 1042,1
,1584 1042,1
<ChosenHop>,STRING <ChosenHop> args:,1
,<ChosenHop> args:,1
<king_spaces>,<king_dir> <king_spaces> <rook_side>,6
,<king_spaces> <rook_side>,6
Ruleset,{ Ruleset To,9
,Ruleset To,9
Equi,default Equi },1
,) Equi (,1
,**** Equi Equiversi,1
,Equi },1
,Equi (,1
,Equi Equiversi,1
on:Edge,by:Shared on:Edge ),3
,on:Edge ),12
,Piece on:Edge (,1
,on:Edge (,1
,by:Neutral on:Edge ),4
,by:Mover on:Edge ),2
,STRING on:Edge ),1
,by:All on:Edge ),1
,by:Next on:Edge ),1
Todo:,) Todo: to,1
,Todo: to,1
hop,( hop (,34
,hop (,34
,Hop hop not,1
,hop not,1
,a hop move,2
,hop move,2
,individual hop and,1
,previous hop .,1
,hop and,1
,hop .,1
renumber,( renumber (,1
,renumber (,1
,( renumber Cell,1
,renumber Cell,1
maxState:100,) maxState:100 ),2
,maxState:100 ),2
,) maxState:100 maxValue:10000,1
,maxState:100 maxValue:10000,1
<next>,<mover> <next> },1
,<next> },1
how,on how many,1
,how many,1
<qtyMax>,{ <qtyMax> },1
,<qtyMax> },1
Propose,move Propose STRING,14
,Propose STRING,14
blocking,Brusky blocking rule:,1
,blocking rule:,1
Paths,- Paths #3,1
,Paths #3,1
<Columns:num>,<Rows:num> <Columns:num> ),4
,<Columns:num> ),4
<trackCW2>,<trackCW1> <trackCW2> },1
,<trackCW2> },1
<Boundary>,STRING <Boundary> args:,2
,<Boundary> args:,2
step:,1 step: {,11
,step: {,11
Diagonals,Rows Diagonals },1
,Diagonals },1
items:<Player:init>,Stack items:<Player:init> (,1
,items:<Player:init> (,1
,Stack items:<Player:init> Edge,1
,items:<Player:init> Edge,1
,Stack items:<Player:init> 85,2
,items:<Player:init> 85,2
Columns,count Columns ),5
,Columns ),5
,{ Columns Rows,10
,Columns Rows,10
<Row:singleHoles>,{ <Row:singleHoles> },1
,<Row:singleHoles> },1
<Players:showHandP3>,) <Players:showHandP3> },1
,<Players:showHandP3> },1
Starchess,Starchess Copyright,1
<custodial,STRING <custodial (,2
,<custodial (,2
<numPiece>,<armSize> <numPiece> },1
,<numPiece> },1
series,a series of,1
,series of,1
701,784 701 702,1
,701 702,2
,699 701 702,1
backtracking:,origin:True backtracking: (,1
,backtracking: (,7
,) backtracking: (,4
,includeSelf:False backtracking: (,2
702,701 702 703,1
,702 703,1
,{ 702 },1
,702 },1
,701 702 682,1
,702 682,1
noMoveYet:,) noMoveYet: (,7
,noMoveYet: (,7
703,702 703 752,1
,703 752,1
705,684 705 706,1
,705 706,1
706,{ 706 },1
,706 },1
,705 706 727,1
,706 727,1
707,. 707 (,2
,707 (,2
,{ 707 },1
,707 },1
<Tiling:type>,( <Tiling:type> <Board:size>,2
,<Tiling:type> <Board:size>,2
,boardless <Tiling:type> ),2
,<Tiling:type> ),2
709,728 709 689,1
,709 689,1
<Rules:play>,) <Rules:play> (,1
,<Rules:play> (,3
,{ <Rules:play> (,2
designated,the designated subgame,1
,designated subgame,1
of:Edge,Vertex of:Edge at:,2
,Cell of:Edge at:,2
,of:Edge at:,5
,Edge of:Edge at:,1
710,661 710 759,1
,710 759,1
,{ 710 },1
,710 },1
712,{ 712 },1
,712 },1
714,{ 714 },1
,714 },1
715,{ 715 },1
,715 },1
716,{ 716 },1
,716 },1
717,{ 717 },1
,717 },1
Fog,) Fog Of,1
,Fog Of,1
719,678 719 699,1
,719 699,1
Gold,) Gold General,8
,Gold General,8
<Edge:target_zone>,to <Edge:target_zone> ),1
,<Edge:target_zone> ),1
200%,does 200% damage,1
,200% damage,1
rotation:3,STRING rotation:3 ),7
,} rotation:3 ),1
,rotation:3 ),8
rotation:2,) rotation:2 value:0,1
,rotation:2 value:0,1
,STRING rotation:2 ),1
,rotation:2 ),1
rotation:1,STRING rotation:1 ),8
,} rotation:1 ),1
,rotation:1 ),9
rotation:0,) rotation:0 value:0,1
,rotation:0 value:0,1
,STRING rotation:0 ),16
,} rotation:0 ),7
,rotation:0 ),23
Observations:,. Observations: -,1
,Observations: -,1
count,( count Pieces,258
,count Pieces,258
,( count Sites,341
,( count Steps,53
,count Sites,341
,count Steps,53
,( count Moves,55
,count Moves,55
,( count Cell,204
,count Cell,204
,( count Pips,215
,count Pips,215
,( count MovesThisTurn,49
,count MovesThisTurn,49
,( count at:,1217
,count at:,1217
,( count in:,145
,( count StepsOnTrack,2
,count in:,145
,count StepsOnTrack,2
,( count Players,19
,( count Active,7
,count Players,19
,count Active,7
,because count pips,1
,count pips,1
,( count Value,6
,count Value,6
,( count Columns,5
,( count Rows,141
,count Columns,5
,count Rows,141
,( count STRING,129
,count STRING,129
,( count Turns,26
,count Turns,26
,( count at:7,1
,( count at:8,2
,( count at:9,2
,( count at:10,1
,( count at:11,2
,( count at:12,1
,( count at:1,1
,( count at:2,2
,( count at:3,2
,( count at:4,1
,( count at:5,1
,( count at:6,1
,count at:7,1
,count at:8,2
,count at:9,2
,count at:10,1
,count at:11,2
,count at:12,1
,count at:1,1
,count at:2,2
,count at:3,2
,count at:4,1
,count at:5,1
,count at:6,1
,( count at:#1,6
,count at:#1,6
,( count Groups,43
,count Groups,43
,( count Liberties,10
,count Liberties,10
,( count Trials,66
,count Trials,66
,( count Stack,2
,count Stack,2
,( count at:0,1
,count at:0,1
,( count Cells,1
,count Cells,1
For,) For the,1
,For the,1
,STRING For an,1
,. For details,1
,For an,1
,For details,1
rotation:7,STRING rotation:7 ),7
,} rotation:7 ),1
,rotation:7 ),8
rotation:6,) rotation:6 value:0,1
,rotation:6 value:0,1
,STRING rotation:6 ),1
,rotation:6 ),1
rotation:5,STRING rotation:5 ),5
,} rotation:5 ),1
,rotation:5 ),6
<Start:start>,rules <Start:start> <Start:play>,1
,<Start:start> <Start:play>,1
rotation:4,) rotation:4 value:0,1
,rotation:4 value:0,1
,STRING rotation:4 ),11
,} rotation:4 ),7
,rotation:4 ),18
<west>,<east> <west> },1
,<west> },1
Hand,sites Hand Mover,14
,Hand Mover,14
,sites Hand Prev,4
,Hand Prev,4
,sites Hand P1,6
,sites Hand P2,6
,Hand P1,6
,Hand P2,6
,sites Hand Shared,8
,Hand Shared,8
,) Hand functions,1
,to Hand Usage:,1
,Hand functions,1
,Hand Usage:,1
take,only take place,1
,take place,1
,( take Control,7
,take Control,7
,( take Domino,1
,take Domino,1
720,{ 720 },1
,720 },1
721,{ 721 },1
,721 },1
undecided,is undecided (,2
,undecided (,2
Elephant,to Elephant .,2
,Elephant .,2
,) Elephant (,5
,Elephant (,5
722,{ 722 },1
,722 },1
724,682 724 684,1
,724 684,1
725,729 725 681,1
,725 681,1
,{ 725 },1
,725 },1
726,{ 726 727,1
,726 727,1
,{ 726 },1
,726 },1
727,726 727 728,1
,727 728,1
,706 727 686,1
,727 686,1
incase,) incase not,1
,incase not,1
728,727 728 680,1
,728 680,1
,686 728 709,1
,728 709,1
hexagonal,a hexagonal board,1
,hexagonal board,1
729,730 729 725,1
,729 725,1
,{ 729 },1
,729 },1
<rectangle,STRING <rectangle 7,1
,<rectangle 7,1
some,--COMMA-- some people,1
,with some small,1
,some people,1
,some small,1
,First some utilities:,1
,some utilities:,1
blank,or blank #5,1
,or blank (,1
,blank #5,1
,blank (,1
<Dice>,STRING <Dice> args:,5
,<Dice> args:,5
,) <Dice> <Throw>,1
,<Dice> <Throw>,1
Outer,sites Outer ),43
,Outer ),43
,sites Outer Edge,3
,Outer Edge,3
,P1 Outer Home,1
,P2 Outer Home,1
,Outer Home,2
<Variant:promotedMove>,STRING <Variant:promotedMove> ),1
,<Variant:promotedMove> ),1
2007,--COMMA-- 2007 ),1
,2007 ),1
passes,check passes the,1
,passes the,1
730,731 730 729,1
,730 729,1
731,732 731 730,1
,731 730,1
,{ 731 },1
,731 },1
exposes,move exposes a,1
,exposes a,1
732,733 732 731,1
,732 731,1
733,734 733 732,1
,733 732,1
,{ 733 },1
,733 },1
734,783 734 733,1
,734 733,1
<CheckmateRule>,STRING <CheckmateRule> args:,1
,<CheckmateRule> args:,1
735,{ 735 },1
,735 },1
736,{ 736 },1
,736 },1
coord:<Board:startMinotaur>,STRING coord:<Board:startMinotaur> ),1
,coord:<Board:startMinotaur> ),1
passed,clauses passed into,1
,a passed turn,1
,passed into,1
,passed turn,1
738,{ 738 },1
,738 },1
just,always just move,4
,we just got,2
,just move,4
,just got,2
,against just infantry,1
,just infantry,1
Rook,to Rook .,2
,Rook .,2
,the Rook being,1
,a Rook or,1
,--COMMA-- Rook --COMMA--,1
,Rook being,1
,Rook or,1
,Rook --COMMA--,1
,) Rook (,8
,Promoted Rook (,7
,Rook (,15
owner,the owner of,1
,owner of,1
<or>,STRING <or> STRING,1
,<or> STRING,1
<Skip>,includeSelf:False <Skip> backtracking:True,1
,STRING <Skip> args:,1
,<Skip> backtracking:True,1
,<Skip> args:,1
remembering,so remembering them,1
,remembering them,1
affects,marking affects connectivity,1
,affects connectivity,1
row:0,coord row:0 column:,11
,row:0 column:,11
,coord row:0 column:0,2
,row:0 column:0,2
2020,Copyright 2020 --COMMA--,8
,2020 --COMMA--,8
home,P2 home (,132
,home (,230
,P1 home (,92
,inner home (,2
,Inner home (,2
,Left home (,2
,P2 home },14
,home },14
,P2 home <Board:regions>,1
,home <Board:regions>,1
,P2 home <Track:stores>,1
,home <Track:stores>,1
player:Mover,note player:Mover STRING,5
,player:Mover STRING,5
hole,( hole (,17
,hole (,17
,next hole to,2
,hole to,3
,fourth hole },1
,hole },1
,rightMost hole to,1
<value>,{ <value> },3
,<value> },3
742,{ 742 },1
,742 },1
744,695 744 793,1
,744 793,1
,{ 744 },1
,744 },1
748,{ 748 },1
,748 },1
Chess,Brusky Chess Copyright,1
,from Chess .,14
,Source: Chess .,33
,Chess Copyright,6
,Chess .,49
,Vasa Chess Copyright,1
,Glinski Chess Copyright,1
,McCooey Chess Copyright,1
,Shafran Chess Copyright,1
,Wellisch Chess Copyright,1
,Wellisch Chess is,1
,Glinski Chess .,1
,Wellisch Chess .,1
,of Chess Variants,1
,Chess is,1
,Chess Variants,1
<Players:setupRules>,) <Players:setupRules> },1
,<Players:setupRules> },1
<CellBackground>,STRING <CellBackground> args:,1
,<CellBackground> args:,1
reaches,Pawn reaches the,3
,reaches the,3
movement:,King movement: Castling,3
,Pawn movement: En,5
,movement: Castling,3
,movement: En,5
75%,) 75% damage,1
,75% damage,1
loop:True,} loop:True ),26
,loop:True ),166
,STRING loop:True P1,115
,STRING loop:True P2,100
,loop:True P1,140
,loop:True P2,149
,} loop:True P1,20
,} loop:True P2,20
,} loop:True P3,9
,} loop:True P4,8
,loop:True P3,29
,loop:True P4,8
,<Board:track2> loop:True P2,5
,<Board:track> loop:True ),2
,<Board:CCW2> loop:True P2,7
,<Board:CW1> loop:True P1,2
,<Board:CW2> loop:True P2,2
,<Row:track2> loop:True P2,12
,<Board:track1> loop:True P1,1
,STRING loop:True ),135
,<Row:trackCCW2> loop:True P2,1
,<Row:trackCW1> loop:True P1,1
,<Row:trackCW2> loop:True P2,1
,<Player:track> loop:True ),1
,<Board:trackDirection> loop:True ),1
,<Track:directionP1> loop:True P1,1
,<Track:directionP2> loop:True P2,1
,} loop:True P5,6
,} loop:True P6,6
,} loop:True P7,5
,} loop:True P8,5
,} loop:True P9,4
,} loop:True P10,4
,} loop:True P11,3
,} loop:True P12,3
,} loop:True P13,2
,} loop:True P14,2
,} loop:True P15,1
,} loop:True P16,1
,loop:True P5,6
,loop:True P6,6
,loop:True P7,5
,loop:True P8,5
,loop:True P9,4
,loop:True P10,4
,loop:True P11,3
,loop:True P12,3
,loop:True P13,2
,loop:True P14,2
,loop:True P15,1
,loop:True P16,1
,STRING loop:True P3,20
,} loop:True directed:True,2
,loop:True directed:True,2
,<Board:MiddleTrack> loop:True ),1
<PlaceBy:qtyMax>,neighbors <PlaceBy:qtyMax> (,1
,<PlaceBy:qtyMax> (,1
Remove,move Remove (,180
,Remove (,180
,move Remove #1,2
,Remove #1,2
,) Remove the,1
,Remove the,1
,) Remove blocked,3
,Remove blocked,3
,move Remove <Version:play>,1
,Remove <Version:play>,1
Odd,is Odd (,24
,Odd (,24
Different,all Different #1,1
,Different #1,1
,all Different ),11
,Different ),11
,all Different (,3
,Different (,3
,all Different except:0,1
,Different except:0,1
750,751 750 565,1
,750 565,1
Utility,integer Utility (,1
,Utility (,1
751,752 751 750,1
,751 750,1
752,703 752 751,1
,752 751,1
753,{ 753 },1
,753 },1
754,{ 754 },1
,754 },1
756,{ 756 },1
,756 },1
757,{ 757 },1
,757 },1
<Edge>,STRING <Edge> args:,2
,<Edge> args:,2
759,710 759 808,1
,759 808,1
,{ 759 },1
,759 },1
Human,spots Human (,1
,= Human Damage,1
,Human (,1
,Human Damage,1
T33344>,<tiling T33344> STRING,1
,T33344> STRING,1
heavy,very heavy on,1
,heavy on,1
Functional,------------------------------------------- Functional defines,1
,Functional defines,1
<Variant:pieceMoves>,) <Variant:pieceMoves> },1
,<Variant:pieceMoves> },1
<Meta>,STRING <Meta> args:,5
,<Meta> args:,5
surakartaBoard,( surakartaBoard <Option:board>,1
,surakartaBoard <Option:board>,1
763,{ 763 },1
,763 },1
764,{ 764 },1
,764 },1
767,{ 767 },1
,767 },1
769,{ 769 },1
,769 },1
rotations,( rotations {,1
,( rotations Orthogonal,1
,rotations {,1
,rotations Orthogonal,1
count:<Board:size>,STRING count:<Board:size> ),1
,count:<Board:size> ),1
Advanced,and Advanced Murus,1
,Advanced Murus,1
<color>,{ <color> },1
,<color> },1
Right,sites Right ),138
,Right ),140
,STRING Right STRING,2
,Right STRING,2
,STRING Right ),2
,Top Right 9x9,1
,Right 9x9,1
<End:rule>,In <End:rule> (,1
,<End:rule> (,1
,) <End:rule> ),1
,<End:rule> ),1
Persian,the Persian victory,1
,Persian victory,1
Off,STRING Off ),32
,Off ),123
,) Off ),72
,#1 Off ),16
,= Off (,56
,Off (,56
,Mover Off ),1
,11 Off ),1
,12 Off ),1
772,{ 772 },1
,772 },1
773,{ 773 },1
,773 },1
774,823 774 775,1
,774 775,1
,{ 774 },1
,774 },1
775,774 775 776,1
,775 776,1
776,775 776 777,1
,776 777,1
Usage:,) Usage: (,37
,PieceHasNeverMoved Usage: (,3
,movement Usage: (,7
,DoubleStep Usage: (,5
,args Usage: (,2
,. Usage: (,7
,promotion Usage: (,6
,Usage: (,69
,functions Usage: (,1
,Hand Usage: (,1
777,776 777 778,1
,777 778,1
778,777 778 779,1
,778 779,1
,{ 778 },1
,778 },1
779,778 779 780,1
,779 780,1
,{ 779 },1
,779 },1
<Counters:num>,) <Counters:num> ),1
,<Counters:num> ),1
can't,( can't build,1
,can't build,1
health,( health ),2
,health ),2
trigger,( trigger STRING,28
,trigger STRING,28
,Cells trigger en,1
,trigger en,1
defining,by defining the,1
,defining the,1
<288>,<23> <288> STRING,1
,<288> STRING,1
780,779 780 781,1
,780 781,1
,{ 780 },1
,780 },1
Flow,- Flow control,1
,Flow control,1
781,780 781 782,1
,781 782,1
782,781 782 783,1
,782 783,1
,{ 782 },1
,782 },1
783,782 783 734,1
,783 734,1
784,591 784 701,1
,784 701,1
,{ 784 },1
,784 },1
785,{ 785 },1
,785 },1
786,{ 786 },1
,786 },1
able,being able to,1
,able to,1
788,{ 788 },1
,788 },1
<Multi:influence>,STRING <Multi:influence> ),2
,) <Multi:influence> ),1
,<Multi:influence> ),3
hops,friendly hops (,1
,hops (,1
,of hops of,1
,hops of,1
rotate,( rotate 180,39
,rotate 180,39
,( rotate 45,16
,rotate 45,16
,( rotate 90,41
,( rotate 270,7
,rotate 90,41
,rotate 270,7
,( rotate 30,13
,rotate 30,13
,( rotate 135,3
,rotate 135,3
,( rotate 22,1
,( rotate 67,1
,( rotate 112,1
,( rotate 157,1
,( rotate 202,1
,( rotate 225,1
,( rotate 247,1
,( rotate 292,1
,( rotate 315,1
,( rotate 337,1
,rotate 22,1
,rotate 67,1
,rotate 112,1
,rotate 157,1
,rotate 202,1
,rotate 225,1
,rotate 247,1
,rotate 292,1
,rotate 315,1
,rotate 337,1
,( rotate -90,5
,rotate -90,5
,( rotate -30,1
,rotate -30,1
,( rotate 108,3
,( rotate 216,3
,( rotate -108,3
,( rotate -216,3
,rotate 108,3
,rotate 216,3
,rotate -108,3
,rotate -216,3
,( rotate -45,1
,( rotate -135,1
,rotate -45,1
,rotate -135,1
,( rotate 340,1
,rotate 340,1
numPerHole:2,sow numPerHole:2 STRING,1
,numPerHole:2 STRING,1
integer,to integer Utility,1
,integer Utility,1
790,501 790 791,1
,790 791,1
,{ 790 },1
,790 },1
791,790 791 1432,1
,791 1432,1
,{ 791 },1
,791 },1
before:3,between before:3 after:1,2
,before:3 after:1,2
793,744 793 842,1
,793 842,1
,{ 793 },1
,793 },1
level:0,at:12 level:0 ),1
,at:25 level:0 ),1
,level:0 ),6
,) level:0 ),3
,) level:0 if:,2
,level:0 if:,2
,at:#1 level:0 ),1
level:1,at:12 level:1 ),1
,at:25 level:1 ),1
,level:1 ),3
,) level:1 ),1
<RookLeft2Start>,<Queen2Start> <RookLeft2Start> <RookRight2Start>,1
,<RookLeft2Start> <RookRight2Start>,1
before:9,between before:9 after:9,4
,before:9 after:9,4
Build,) Build entrenchments,1
,Build entrenchments,1
opponent,if opponent pieces,3
,opponent pieces,3
799,{ 799 },1
,799 },1
next:,) next: (,277
,next: (,277
numPerHole:4,sow numPerHole:4 apply:,1
,numPerHole:4 apply:,1
,sow numPerHole:4 STRING,3
,numPerHole:4 STRING,3
<where>,{ <where> },1
,<where> },1
regardless,cells regardless of,2
,regardless of,2
calculated,be calculated as,1
,calculated as,1
selected,with selected index,2
,selected index,2
before:1,between before:1 after:1,1
,before:1 after:1,1
,between before:1 if:,2
,before:1 if:,2
before:2,between before:2 after:2,1
,before:2 after:2,1
<condition>,<slide_spaces> <condition> <then>,3
,<condition> <then>,3
Occupied,sites Occupied by:P2,38
,Occupied by:P2,38
,sites Occupied by:All,57
,Occupied by:All,57
,sites Occupied by:Mover,249
,Occupied by:Mover,249
,sites Occupied by:P1,32
,Occupied by:P1,32
,sites Occupied by:Next,117
,Occupied by:Next,117
,sites Occupied by:#1,72
,Occupied by:#1,72
,is Occupied (,294
,Occupied (,294
,sites Occupied by:#2,6
,Occupied by:#2,6
,sites Occupied by:Shared,12
,Occupied by:Shared,12
,sites Occupied by:Team1,3
,sites Occupied by:Team2,3
,Occupied by:Team1,3
,Occupied by:Team2,3
,sites Occupied by:Enemy,46
,Occupied by:Enemy,46
,is Occupied Cell,7
,Occupied Cell,7
,sites Occupied by:Neutral,27
,Occupied by:Neutral,27
,sites Occupied by:P4,1
,sites Occupied by:P3,1
,Occupied by:P4,1
,Occupied by:P3,1
,sites Occupied by:Friend,4
,sites Occupied #2,1
,sites Occupied #4,6
,sites Occupied by:Player,5
,Occupied by:Friend,4
,Occupied #2,1
,Occupied #4,6
,Occupied by:Player,5
,sites Occupied by:,2
,Occupied by:,2
,sites Occupied by:#4,1
,sites Occupied by:#5,1
,Occupied by:#4,1
,Occupied by:#5,1
by:Next,Occupied by:Next ),50
,by:Next ),50
,Occupied by:Next STRING,66
,by:Next STRING,66
,Occupied by:Next on:Edge,1
,by:Next on:Edge,1
Between,last Between ),3
,Between ),3
,sites Between from:,6
,Between from:,6
,sites Between (,2
,Between (,2
<specialHoles>,<track2> <specialHoles> <singleHoles>,1
,<specialHoles> <singleHoles>,1
<tri>,STRING <tri> STRING,2
,<tri> STRING,2
steps,three steps Slide,2
,three steps .,2
,two steps .,3
,two steps and,6
,steps Slide,2
,steps .,5
,steps and,6
,avoid steps without,2
,remaining steps would,1
,steps without,2
,steps would,1
<NumOfPlayers:PieceSetup>,{ <NumOfPlayers:PieceSetup> },2
,<NumOfPlayers:PieceSetup> },2
forget,( forget Value,136
,forget Value,136
Save,- Save skipped-over,6
,- Save location,6
,Save skipped-over,6
,Save location,6
position,previous position of,1
,position of,2
,that position until,1
,position until,1
,starting position of,1
<dogs>,{ <dogs> },1
,<dogs> },1
TeamMover,Pieces TeamMover ),9
,result TeamMover Win,20
,TeamMover ),10
,TeamMover Win,20
,STRING TeamMover ),1
Symbol,show Symbol STRING,64
,Symbol STRING,64
mess,don't mess with,1
,mess with,1
diagonally,--COMMA-- diagonally left,2
,--COMMA-- diagonally right,2
,diagonally left,2
,diagonally right,2
,capture diagonally (,1
,diagonally (,1
,spaces diagonally on,1
,diagonally on,1
Rows,count Rows ),141
,Rows ),141
,Columns Rows SubGrids,4
,Rows SubGrids,4
,Columns Rows },5
,Rows },5
,Columns Rows Diagonals,1
,Rows Diagonals,1
<prioritySetting>,{ <prioritySetting> },1
,<prioritySetting> },1
Trials,count Trials ),66
,Trials ),66
Diagonal,Slide Diagonal (,54
,Diagonal (,179
,) Diagonal (,34
,) Diagonal ),5
,Diagonal ),80
,) Diagonal if:,3
,Diagonal if:,3
,Step Diagonal (,34
,Slide Diagonal ),15
,STRING Diagonal before:,1
,Slide Diagonal stack:True,1
,Diagonal before:,1
,Diagonal stack:True,1
,difference Diagonal OppositeDirection,2
,STRING Diagonal ),57
,directions Diagonal ),1
,Diagonal OppositeDirection,2
,#1 Diagonal (,5
,Hop Diagonal (,33
,) Diagonal distance:,1
,difference Diagonal (,1
,Diagonal distance:,1
,Forwards Diagonal ),1
,Direction Diagonal (,1
,Related Diagonal (,1
,STRING Diagonal ~,11
,Diagonal ~,11
,STRING Diagonal STRING,10
,Diagonal STRING,10
,STRING Diagonal (,16
,Orthogonal Diagonal ),1
,) Diagonal slide,1
,Jump Diagonal on,1
,Diagonal slide,1
,Diagonal on,1
,difference Diagonal N,1
,Diagonal N,1
,) Diagonal processing,1
,Diagonal processing,1
Pips,count Pips ),215
,Pips ),215
simplify,and simplify them,1
,simplify them,1
<Board:tracks>,{ <Board:tracks> },1
,<Board:tracks> },1
,store:None <Board:tracks> ),2
,<Board:tracks> ),2
,<Board:board> <Board:tracks> use:Vertex,1
,<Board:tracks> use:Vertex,2
,) <Board:tracks> use:Vertex,1
Each,hand Each ),323
,Each ),549
,STRING Each (,1321
,Each (,1321
,STRING Each ),225
,STRING Each <Dice:move>,1
,Each <Dice:move>,1
,STRING Each The,1
,Each The,1
,hand Each size:2,9
,Each size:2,9
,STRING Each STRING,74
,Each STRING,74
,hand Each size:6,6
,Each size:6,6
,hand Each size:<Board:numPieces>,1
,Each size:<Board:numPieces>,1
,STRING Each <Play:movePiece>,1
,Each <Play:movePiece>,1
,STRING Each <Play>,1
,Each <Play>,1
,<Tiling:tile> Each <Tiling:numSides>,2
,Each <Tiling:numSides>,2
,Score Each 0,11
,Each 0,11
,STRING Each <Piece>,1
,Each <Piece>,1
,hand Each size:3,5
,Each size:3,5
,hand Each size:4,2
,Each size:4,2
,Score Each 2,1
,Each 2,1
,STRING Each <Disc>,1
,Each <Disc>,1
,STRING Each <Elephant>,1
,Each <Elephant>,1
,hand Each size:5,8
,Each size:5,8
,STRING Each numSides:4,6
,Each numSides:4,6
,STRING Each TO,1
,Each TO,1
,hand Each size:7,4
,Each size:7,4
,hand Each size:8,1
,Each size:8,1
,#3 Each ),1
,#1 Each #2,1
,Each #2,1
,STRING Each Piece,2
,STRING Each Lion,1
,Each Piece,2
,Each Lion,1
,Score Each 1,1
,Each 1,1
,hand Each size:12,1
,Each size:12,1
,Score Each <Scenario:startingMoney>,1
,Each <Scenario:startingMoney>,1
,STRING Each <Moves>,1
,Each <Moves>,1
,hand Each size:21,1
,Each size:21,1
,) Each turn,1
,Each turn,1
<trackP3>,<startP3> <trackP3> <startP4>,3
,<trackP3> <startP4>,3
fire,= fire site,1
,fire site,1
<Piece>,Each <Piece> ),1
,STRING <Piece> args:,1
,<Piece> ),1
,<Piece> args:,1
Paidal,) Paidal (,1
,Paidal (,1
<rook_dir>,<rook_side> <rook_dir> <rook_spaces>,6
,<rook_dir> <rook_spaces>,6
based,moves based on,1
,based on,1
mancalaBoard,( mancalaBoard 4,52
,mancalaBoard 4,52
,( mancalaBoard 6,1
,mancalaBoard 6,1
,( mancalaBoard 3,3
,mancalaBoard 3,3
,( mancalaBoard 2,107
,mancalaBoard 2,107
<trackP4>,<startP4> <trackP4> },3
,<trackP4> },3
3-player,A 3-player chess,1
,3-player chess,1
<PlaceBy>,STRING <PlaceBy> args:,1
,<PlaceBy> args:,1
something,into something logically,1
,something logically,1
,that something is,1
,something is,1
meta,( meta (,32
,meta (,32
,( meta {,1
,meta {,1
Starting,#1 Starting rules,1
,Starting rules,1
<Model>,STRING <Model> args:,1
,<Model> args:,1
<Bishop2Start>,<RookRight2Start> <Bishop2Start> <Knight2Start>,1
,<Bishop2Start> <Knight2Start>,1
processing,Diagonal processing (,1
,move processing considerably,1
,processing (,1
,processing considerably,1
except,piece except the,1
,except the,1
,--COMMA-- except functions,8
,except functions,8
if:<Variant:moveCondition>,#1 if:<Variant:moveCondition> <Variant:capture>,1
,if:<Variant:moveCondition> <Variant:capture>,1
<rules>,{ <rules> },16
,<rules> },19
,<piece> <rules> },1
,{ <rules> <misoroPhase>,2
,<rules> <misoroPhase>,2
,<board> <rules> },2
functional,) functional defines,1
,functional defines,1
One,) One flat,1
,One flat,1
,STRING One test,1
,One test,1
pieces,capturing pieces which,3
,opponent pieces are,3
,pieces which,3
,pieces are,4
,normal pieces when,2
,pieces when,2
,) pieces in,2
,pieces in,2
,enemy pieces are,1
,your pieces and,1
,pieces and,1
,of pieces (,3
,the pieces .,3
,pieces (,6
,pieces .,6
,2 pieces .,1
,intervening pieces ;,1
,pieces ;,1
,When pieces other,1
,are pieces of,1
,captured pieces --COMMA--,1
,no pieces of,1
,captured pieces available,1
,player's pieces .,1
,pieces other,1
,pieces of,2
,pieces --COMMA--,1
,pieces available,1
,dice pieces .,1
,other pieces on,1
,pieces on,1
,all pieces if,1
,all pieces (,1
,pieces if,1
,who's pieces (,2
,to pieces with,1
,pieces with,1
,the pieces around,1
,pieces around,1
<hopCapture>,{ <hopCapture> <stepMove>,1
,<hopCapture> <stepMove>,1
unless,( unless captured,1
,unless captured,1
<Board:walls>,{ <Board:walls> },3
,<Board:walls> },3
Team,set Team 1,87
,set Team 2,87
,Team 1,87
,Team 2,87
,set Team 3,3
,Team 3,3
,forEach Team (,2
,set Team 4,2
,Team (,2
,Team 4,2
intervening,any intervening pieces,1
,intervening pieces,1
T488>,<tiling T488> STRING,1
,T488> STRING,1
people,some people play,1
,people play,1
<trackP2>,<size> <trackP2> },1
,<trackP2> },1
face,( face 65,1
,face 65,1
,( face 97,2
,( face 98,2
,( face 99,2
,face 97,2
,face 98,2
,face 99,2
,( face 28,11
,face 28,11
,( face 26,19
,( face 27,13
,face 26,19
,face 27,13
,( face 71,1
,( face 72,1
,( face 73,1
,( face 74,1
,face 71,1
,face 72,1
,face 73,1
,face 74,1
,( face 16,1
,( face 17,1
,face 16,1
,face 17,1
,( face 57,1
,face 57,1
,( face 44,1
,face 44,1
,( face (,6
,face (,6
,( face 101,1
,( face 102,1
,face 101,1
,face 102,1
,( face 36,2
,( face 37,2
,face 36,2
,face 37,2
,( face 40,1
,( face 41,1
,( face 42,1
,( face 43,1
,( face 80,1
,( face 81,1
,( face 82,1
,( face 83,1
,( face 120,1
,( face 121,1
,( face 122,1
,( face 123,1
,( face 160,1
,( face 161,1
,( face 162,1
,( face 163,1
,( face 200,1
,( face 201,1
,( face 202,1
,( face 203,1
,( face 240,1
,( face 241,1
,( face 242,1
,( face 243,1
,( face 280,1
,( face 281,1
,( face 282,1
,( face 283,1
,( face 320,1
,( face 321,1
,( face 322,1
,( face 323,1
,( face 360,1
,( face 361,1
,( face 362,1
,( face 363,1
,( face 400,1
,( face 401,1
,( face 402,1
,( face 403,1
,face 40,1
,face 41,1
,face 42,1
,face 43,1
,face 80,1
,face 81,1
,face 82,1
,face 83,1
,face 120,1
,face 121,1
,face 122,1
,face 123,1
,face 160,1
,face 161,1
,face 162,1
,face 163,1
,face 200,1
,face 201,1
,face 202,1
,face 203,1
,face 240,1
,face 241,1
,face 242,1
,face 243,1
,face 280,1
,face 281,1
,face 282,1
,face 283,1
,face 320,1
,face 321,1
,face 322,1
,face 323,1
,face 360,1
,face 361,1
,face 362,1
,face 363,1
,face 400,1
,face 401,1
,face 402,1
,face 403,1
,( face 45,1
,( face 46,1
,( face 47,1
,face 45,1
,face 46,1
,face 47,1
<store>,<num> <store> <homes>,1
,<store> <homes>,1
Prev,Player Prev ),5
,Value Prev (,1
,Prev ),217
,Prev (,1
,is Prev P1,2
,STRING Prev ),11
,is Prev P2,2
,is Prev P3,2
,Hand Prev ),4
,Prev P1,2
,Prev P2,2
,Prev P3,2
,is Prev Mover,6
,Prev Mover,6
,Mover Prev ),194
,Next Prev ),3
,Value Prev 0,3
,Prev 0,3
,is Prev Next,1
,Prev Next,1
<Version:map>,) <Version:map> (,1
,<Version:map> (,1
After,cycling:- After a,1
,After a,1
through:,W through: (,5
,N through: (,2
,S through: (,2
,E through: (,5
,through: (,37
,Orthogonal through: (,19
,4 through: (,1
,3 through: (,2
,All through: (,1
if:False,apply if:False (,2
,if:False (,5
,to if:False (,3
NonMover,forEach NonMover if:,35
,NonMover if:,35
,use NonMover for,1
,NonMover for,1
conditional,- conditional (,1
,conditional (,1
Eric,by Eric STRING,1
,Eric STRING,1
,) Eric to,1
,Eric to,1
store:None,STRING store:None {,53
,store:None {,64
,STRING store:None (,23
,store:None (,55
,STRING store:None ),1
,store:None ),1
,) store:None {,1
,STRING store:None <Board:track>,1
,store:None <Board:track>,1
,STRING store:None <Board:tracks>,1
,store:None <Board:tracks>,2
,STRING store:None <Row:tracks>,1
,store:None <Row:tracks>,1
,5 store:None (,5
,6 store:None (,15
,6 store:None {,6
,20 store:None {,1
,) store:None <Board:tracks>,1
,5 store:None {,2
,<Board> store:None (,1
,<Board:size> store:None (,3
,3 store:None (,1
,<Row:size> store:None (,1
,<Column:size> store:None (,1
,7 store:None (,2
,8 store:None (,1
,4 store:None (,2
,3 store:None {,1
Rightmost,The Rightmost holes,2
,Rightmost holes,2
Full,is Full ),8
,Full ),8
Hoplites,and Hoplites -------------------------------------------------------,1
,Hoplites -------------------------------------------------------,1
-216,rotate -216 (,3
,-216 (,3
<Version:start>,{ <Version:start> },3
,<Version:start> },4
,rules <Version:start> (,1
,<Version:start> (,1
,rules <Version:start> <Version:play>,1
,<Version:start> <Version:play>,1
,start <Version:start> ),2
,<Version:start> ),2
,) <Version:start> },1
<Scale>,STRING <Scale> args:,1
,<Scale> args:,1
<cond>,{ <cond> },1
,<cond> },1
<Version:consequence>,Piece <Version:consequence> ),1
,<Version:consequence> ),1
<pieOrNot>,<starting> <pieOrNot> },1
,<pieOrNot> },1
Stack,place Stack STRING,1139
,Stack STRING,1148
,size Stack in:,13
,Stack in:,13
,size Stack at:#1,3
,Stack at:#1,5
,size Stack STRING,9
,size Stack at:,80
,Stack at:,80
,size Stack at:<End:site1>,1
,size Stack at:<End:site2>,1
,size Stack at:<End:site3>,1
,size Stack at:<End:site4>,1
,size Stack at:<End:site5>,1
,size Stack at:<End:site6>,1
,size Stack at:12,5
,size Stack at:0,2
,Stack at:<End:site1>,1
,Stack at:<End:site2>,1
,Stack at:<End:site3>,1
,Stack at:<End:site4>,1
,Stack at:<End:site5>,1
,Stack at:<End:site6>,1
,Stack at:12,5
,Stack at:0,2
,size Stack at:1,1
,size Stack at:2,1
,size Stack at:13,5
,size Stack at:14,4
,size Stack at:15,4
,Stack at:1,1
,Stack at:2,1
,Stack at:13,5
,Stack at:14,4
,Stack at:15,4
,size Stack at:10,3
,size Stack at:11,3
,size Stack at:8,1
,size Stack at:9,1
,size Stack at:17,1
,size Stack at:18,1
,Stack at:10,3
,Stack at:11,3
,Stack at:8,1
,Stack at:9,1
,Stack at:17,1
,Stack at:18,1
,place Stack items:,24
,Stack items:,24
,place Stack items:<Player:init>,4
,Stack items:<Player:init>,4
,count Stack at:#1,2
<playMove>,<move> <playMove> },1
,<playMove> },1
<Num:players>,players <Num:players> ),1
,<Num:players> ),1
if:,between if: (,176
,to if: (,1175
,if: (,2749
,) if: (,981
,apply if: (,133
,Die if: (,57
,replayDouble:True if: (,17
,combined:True if: (,4
,Player if: (,14
,STRING if: (,30
,#5 if: (,1
,Orthogonal if: (,23
,#2 if: (,10
,from if: (,10
,FirstSite if: (,3
,NonMover if: (,35
,from:#1 if: (,1
,sow if: (,22
,#1 if: (,9
,Groups if: (,14
,Diagonal if: (,3
,<Board:3dSites> if: (,1
,3 if: (,2
,} if: (,4
,level:0 if: (,2
,<Capture:distance> if: (,2
,Own if: (,1
,#3 if: (,4
,after:9 if: (,4
,after:1 if: (,3
,Cell if: (,1
,before:1 if: (,2
,after:2 if: (,1
,Track if: (,1
,. if: (,1
,at:#1 if: (,2
Knight_rotated,to Knight_rotated .,2
,Knight_rotated .,2
rule,off rule (,1
,off rule ),2
,Trap rule Squares,1
,off rule on,1
,rule (,1
,rule ),2
,rule Squares,1
,rule on,1
,a rule that,1
,rule that,1
update,We update the,1
,update the,1
,to update for,1
,update for,1
,to update (,1
,update (,1
<RF2>,<LB2> <RF2> <RB2>,2
,<RF2> <RB2>,2
origin:6,expand origin:6 steps:6,1
,origin:6 steps:6,1
origin:7,expand origin:7 steps:6,1
,origin:7 steps:6,1
Empty,is Empty (,947
,sites Empty ),527
,Empty (,947
,Empty ),530
,is Empty 1,1
,is Empty 2,1
,Empty 1,2
,Empty 2,1
,is Empty STRING,3
,Empty STRING,3
,is Empty 21,6
,is Empty 22,5
,is Empty 23,4
,is Empty 24,3
,is Empty 25,2
,is Empty 20,1
,is Empty 26,1
,is Empty 27,1
,is Empty 28,1
,Empty 21,6
,Empty 22,5
,Empty 23,4
,Empty 24,3
,Empty 25,2
,Empty 20,1
,Empty 26,1
,Empty 27,1
,Empty 28,1
,is Empty #1,3
,Empty #1,3
,sites Empty Edge,22
,Empty Edge,26
,) Empty Orthogonal,8
,Empty Orthogonal,8
,sites Empty 1,1
,) Empty ),3
,is Empty Cell,2
,sites Empty Vertex,4
,Empty Cell,9
,Empty Vertex,5
,is Empty Edge,4
,is Empty Vertex,1
,sites Empty Cell,7
,LineOfSight Empty at:,3
,Empty at:,3
,is Empty #2,1
,Empty #2,1
origin:4,expand origin:4 steps:6,1
,origin:4 steps:6,1
origin:5,expand origin:5 steps:6,1
,origin:5 steps:6,1
combined:True,Die combined:True if:,4
,combined:True if:,4
,Die combined:True replayDouble:True,1
,Die combined:True (,1
,combined:True replayDouble:True,1
,combined:True (,1
origin:8,expand origin:8 steps:6,1
,origin:8 steps:6,1
origin:9,expand origin:9 steps:6,1
,origin:9 steps:6,1
definition,suitable definition we,1
,definition we,1
<EachMove>,<AttackCheck> <EachMove> <Metadata>,1
,<EachMove> <Metadata>,1
Continuation,) Continuation of,1
,Continuation of,1
again,enter again --COMMA--,3
,again --COMMA--,4
,play again --COMMA--,1
,capture again in,1
,again in,1
Charge,STRING Charge of,1
,Charge of,1
T4612>,<tiling T4612> STRING,1
,T4612> STRING,1
origin:2,expand origin:2 steps:6,1
,origin:2 steps:6,1
origin:3,expand origin:3 steps:6,1
,origin:3 steps:6,1
origin:0,expand origin:0 steps:6,1
,origin:0 steps:6,1
,expand origin:0 steps:3,1
,origin:0 steps:3,1
<RF1>,<LB1> <RF1> <RB1>,2
,<RF1> <RB1>,2
origin:1,expand origin:1 steps:6,1
,origin:1 steps:6,1
Infantry,) Infantry Moves,1
,Infantry Moves,1
/-----------------------------------------,) /----------------------------------------- Defines,1
,/----------------------------------------- Defines,1
<Version:endRules>,) <Version:endRules> ),1
,<Version:endRules> ),1
removal,Player removal (,1
,removal (,1
,a removal --COMMA--,1
,removal --COMMA--,1
Decided,is Decided STRING,8
,Decided STRING,8
noRepeat,( noRepeat ),9
,noRepeat ),9
,( noRepeat Positional,1
,noRepeat Positional,1
1607,1606 1607 1313,1
,1607 1313,1
1606,1557 1606 1607,1
,1606 1607,1
<RookRight2Start>,<RookLeft2Start> <RookRight2Start> <Bishop2Start>,1
,<RookRight2Start> <Bishop2Start>,1
Rectangle,hex Rectangle 7,1
,Rectangle 7,1
,hex Rectangle 8,1
,Rectangle 8,1
,hex Rectangle 9,3
,Rectangle 9,3
,hex Rectangle 5,1
,Rectangle 5,1
during,check during slide,1
,during slide,1
,reset during the,1
,during the,1
degrees,60 degrees off,1
,degrees off,1
<trackDirection>,<size> <trackDirection> },1
,<trackDirection> },1
<ThrowSix>,STRING <ThrowSix> args:,1
,<ThrowSix> args:,1
considerations:,end considerations: (,1
,considerations: (,1
<gridType>,{ <gridType> <directionUsed>,3
,<gridType> <directionUsed>,3
,{ <gridType> <directionsUsed>,3
,<gridType> <directionsUsed>,3
,{ <gridType> },2
,<gridType> },2
<60>,STRING <60> <,3
,<60> <,3
,STRING <60> STRING,1
,<60> STRING,1
games,( games {,3
,games {,3
,( games (,3
,games (,3
1619,STRING 1619 count:10,1
,1619 count:10,1
1618,STRING 1618 count:20,1
,1618 count:20,1
1617,STRING 1617 count:76,1
,1617 count:76,1
by:Neutral,Occupied by:Neutral ),10
,by:Neutral ),10
,Occupied by:Neutral STRING,10
,Occupied by:Neutral container:,2
,by:Neutral STRING,10
,by:Neutral container:,2
,Occupied by:Neutral container:1,1
,of:All by:Neutral at:,1
,by:Neutral container:1,1
,by:Neutral at:,1
,Occupied by:Neutral on:Edge,4
,by:Neutral on:Edge,4
hints,( hints {,8
,hints {,8
Out,steps:6 Out ),12
,Out ),12
1624,STRING 1624 count:20,1
,1624 count:20,1
1623,STRING 1623 count:76,1
,1623 count:76,1
fail,will fail when,1
,fail when,1
1622,STRING 1622 count:20,1
,1622 count:20,1
Equiversi,default Equiversi (,1
,default Equiversi and,1
,default Equiversi 2,2
,Equi Equiversi },1
,Equiversi (,1
,Equiversi and,1
,Equiversi 2,2
,Equiversi },1
1621,STRING 1621 count:10,1
,1621 count:10,1
1620,STRING 1620 count:5,1
,1620 count:5,1
<Metadata>,<EachMove> <Metadata> },1
,<Metadata> },1
<CheckmateRule:Ending>,or <CheckmateRule:Ending> (,1
,<CheckmateRule:Ending> (,1
<homes>,<store> <homes> <track>,1
,<homes> <track>,1
1628,STRING 1628 count:20,1
,1628 count:20,1
Shoot,move Shoot (,3
,Shoot (,6
,) Shoot (,3
1627,STRING 1627 count:10,1
,1627 count:10,1
1626,STRING 1626 count:5,1
,1626 count:5,1
1625,STRING 1625 count:10,1
,1625 count:10,1
<rangeP1>,<shape> <rangeP1> <rangeP2>,1
,<rangeP1> <rangeP2>,1
regions,( regions STRING,1207
,regions STRING,1207
,( regions P1,177
,regions P1,177
,( regions P2,176
,regions P2,176
,( regions P3,14
,( regions P4,11
,regions P3,14
,regions P4,11
,( regions P5,1
,regions P5,1
,the regions produced,1
,regions produced,1
,( regions All,1
,regions All,1
,( regions {,209
,regions {,209
,( regions HintRegions,2
,regions HintRegions,2
,( regions (,2
,regions (,2
<Equi>,STRING <Equi> args:,1
,<Equi> args:,1
<hints>,<size> <hints> },4
,<hints> },5
,<size> <hints> <start>,1
,<hints> <start>,1
,{ <hints> },1
isolated,cell isolated from,1
,isolated from,1
game:,the game: Double,1
,the game: Start,1
,game: Double,1
,game: Start,1
<BoardConfig:RegionDarkPhase>,Phase <BoardConfig:RegionDarkPhase> ),1
,<BoardConfig:RegionDarkPhase> ),1
Pattern,is Pattern {,3
,Pattern {,3
<Num:pieces>,STRING <Num:pieces> ),1
,<Num:pieces> ),1
<rook_side>,<king_spaces> <rook_side> <rook_dir>,6
,<rook_side> <rook_dir>,6
<rangeP2>,<rangeP1> <rangeP2> },1
,<rangeP2> },1
Own,) Own ),8
,Own ),8
,) Own Orthogonal,7
,Own Orthogonal,7
,) Own if:,1
,Own if:,1
Example:,) Example: (,3
,Example: (,3
Promote,move Promote (,118
,Promote (,118
,move Promote #1,4
,Promote #1,4
count:#1,) count:#1 ),1
,count:#1 ),1
Perforated,) Perforated Board,1
,Perforated Board,1
Orthogonal>,) Orthogonal> <>,2
,) Orthogonal> <,2
,Orthogonal> <>,2
,Orthogonal> <,2
McCooey,McCooey Chess,1
cannot,Pawn cannot move,1
,cannot move,2
,and cannot move,1
,sites cannot be,1
,cannot be,1
<63>,1> <63> STRING,1
,<63> STRING,1
<tigerSites>,{ <tigerSites> },1
,<tigerSites> },1
first,( first quadrant,6
,first quadrant,6
,water first .,1
,first .,1
,P1 first Hole,1
,P2 first Hole,1
,first Hole,2
,for first player,4
,in first turn,4
,first player,5
,first turn,4
,its first move,1
,first move,1
,the first player,1
,) first choice,1
,first choice,1
<end>,<trackP3P4> <end> },1
,<end> },5
,<Play> <end> },1
,<num> <end> <option>,1
,<end> <option>,1
,<removeLastPiece> <end> },1
,<begin> <end> },1
,<noPieceSite> <end> },1
Done,Done without,1
<-10>,STRING <-10> STRING,1
,<-10> STRING,1
<CheckMate>,<PieceSetup> <CheckMate> },2
,<CheckMate> },2
space,each space oriented,1
,one space in,1
,one space 'diagonally',1
,a space of,1
,the space it,1
,current space .,1
,one space forward,1
,adjacent space slightly,1
,one space .,1
,space oriented,1
,space in,1
,space 'diagonally',1
,space of,1
,space it,1
,space .,2
,space forward,1
,space slightly,1
<Capture:doneSoFar>,STRING <Capture:doneSoFar> ),1
,<Capture:doneSoFar> ),1
wall/singleton,enemy wall/singleton piece,1
,wall/singleton piece,1
<64>,<8> <64> <260>,1
,<64> <260>,1
from,( from (,1871
,from (,1871
,( from ),1834
,from ),1835
,captures from a,1
,( from 2,1
,( from 1,1
,from a,2
,from 2,1
,from 1,1
,( from #1,58
,from #1,58
,- from region,2
,( from #5,1
,zone from capture,1
,from region,2
,from #5,1
,from capture,1
,( from Cell,19
,from Cell,19
,the from value,1
,from value,1
,( from if:,10
,stones from a,1
,from if:,10
,( from STRING,40
,from STRING,40
,( from 6,1
,from 6,1
,( from 10,1
,from 10,1
,( from 11,2
,from 11,2
,( from #4,2
,( from #3,3
,from #4,2
,from #3,3
,drawn from Chess,9
,Derived from Chess,5
,available from Start,1
,. from Start,1
,from Chess,14
,from Start,2
,piece from board,1
,available from previous,1
,directions from their,1
,moved from .,1
,farthest from their,1
,from board,1
,from previous,1
,from their,2
,from .,1
,moving from the,2
,from the,3
,( from Vertex,2
,( from Edge,2
,from Vertex,2
,from Edge,2
,away from the,1
,#1 from site,1
,attacks from site,1
,STRING from ),1
,( from entrenchment,1
,from site,2
,from entrenchment,1
,( from if:#1,2
,from if:#1,2
,where from --COMMA--,3
,from --COMMA--,4
,STRING from --COMMA--,1
,isolated from everything,1
,from everything,1
constants,) constants defines,1
,constants defines,1
<Tiling:numSides>,Each <Tiling:numSides> ),2
,<Tiling:numSides> ),2
<misoroPhase>,<rules> <misoroPhase> },2
,<misoroPhase> },2
<sumFingers>,<board> <sumFingers> <initP3>,1
,<sumFingers> <initP3>,1
Indirect,= Indirect Vehicle,1
,Indirect Vehicle,1
<Start:usingHogon>,<= <Start:usingHogon> (,1
,<Start:usingHogon> (,1
Furthermore,. Furthermore the,1
,Furthermore the,1
in:,Sites in: (,331
,in: (,669
,Stack in: (,13
,of:#1 in: (,1
,Mover in: (,49
,Pieces in: (,5
,Enemy in: (,1
,count in: (,145
,P1 in: (,1
,P2 in: (,1
,1 in: (,1
,2 in: (,1
,3 in: (,1
,4 in: (,1
,5 in: (,1
,6 in: (,1
,Next in: (,13
,All in: (,69
,) in: (,13
,STRING in: (,13
,#1 in: (,3
,Edge in: (,2
,Cell in: (,3
<carnarvon>,{ <carnarvon> },1
,<carnarvon> },1
determinations,Liberty determinations by,1
,determinations by,1
Holes,Left Holes (,2
,Holes (,2
Block,) Block a,3
,Can Block a,1
,Block a,4
<65>,STRING <65> <,2
,<65> <,2
,STRING <65> STRING,1
,<65> STRING,2
,<25> <65> STRING,1
passEnd,( passEnd NoEnd,4
,passEnd NoEnd,4
<startMinotaur>,<startTheseus> <startMinotaur> <exit>,1
,<startMinotaur> <exit>,1
array,( array {,1
,array {,1
,( array (,6
,array (,6
,( array #1,1
,array #1,1
,an array different,1
,array different,1
Remembered,values Remembered STRING,145
,Remembered STRING,145
,values Remembered ),17
,Remembered ),17
,values Remembered #1,7
,Remembered #1,7
track,( track STRING,1635
,track STRING,1635
Oware,in Oware .,1
,Oware .,1
value,( value Player,178
,value Player,178
,( value ),124
,value ),124
,the value for,1
,value for,1
,( value Piece,99
,value Piece,99
,from value is,1
,to value },1
,( value Pending,29
,lower value of,2
,value is,1
,value },1
,value Pending,29
,value of,3
,original value of,1
,pending value .,2
,value .,3
,( value Random,20
,value Random,20
,die value .,1
,) value (,2
,value (,2
<Slide:to>,) <Slide:to> (,1
,<Slide:to> (,1
<shape>,{ <shape> <rangeP1>,1
,<shape> <rangeP1>,1
,{ <shape> <cornerSetup>,2
,<shape> <cornerSetup>,2
,{ <shape> },1
,<shape> },1
scale:0,) scale:0 .,36
,scale:0 .,36
<selGame>,{ <selGame> },2
,<selGame> },2
<Tiger:move>,P2 <Tiger:move> ),1
,<Tiger:move> ),1
<RegionMediumPhase>,<RegionLightPhase> <RegionMediumPhase> },1
,<RegionMediumPhase> },1
<then>,<directions> <then> ),12
,<condition> <then> ),3
,<then> ),17
,<direction> <then> ),2
round,All round sides,1
,two round with,1
,one round with,1
,Two round with,1
,round sides,1
,round with,3
currently,are currently being,1
,currently being,1
poly,( poly {,32
,poly {,32
unwanted,remove unwanted cells,1
,unwanted cells,1
<directionsWin>,<DiagShow> <directionsWin> },2
,<directionsWin> },2
normally,move normally (,4
,normally (,4
Shah's,starting Shah's Baidaq,1
,Shah's Baidaq,1
from:,results from: (,18
,from: (,364
,Direction from: (,54
,Move from: (,58
,STRING from: (,140
,#1 from: (,2
,Mover from: (,3
,FirstSite from: (,14
,Vertex from: (,11
,Track from: (,15
,All from: (,1
,Cell from: (,27
,Between from: (,6
,Orthogonal from: (,4
,Distance from: (,4
,Group from: (,2
,) from: (,5
<Option:start3>,) <Option:start3> },1
,<Option:start3> },1
building,the building .,1
,building .,1
,a building Attacking,1
,a building STRING,1
,a building (,1
,building Attacking,1
,building STRING,1
,building (,1
<692,STRING <692 693,1
,<692 693,1
Liberties,count Liberties Orthogonal,8
,Liberties Orthogonal,8
,count Liberties ),1
,Liberties ),1
,count Liberties at:,1
,Liberties at:,1
,2: Liberties =,1
,. Liberties at,1
,Liberties =,1
,Liberties at,1
score,( score P2,119
,( score P1,123
,score P2,119
,score P1,123
,( score #1,8
,score #1,8
,( score Mover,54
,score Mover,54
,( score P3,10
,( score P4,5
,( score P5,1
,score P3,10
,score P4,5
,score P5,1
,( score Player,1
,score Player,1
,( score Next,18
,score Next,18
<LF1>,STRING <LF1> <LB1>,2
,<LF1> <LB1>,2
Pass,move Pass ),116
,Pass ),128
,move Pass (,77
,Pass (,77
,was Pass ),12
<p3_arg>,<p2_arg> <p3_arg> ),1
,<p3_arg> ),1
terrain,( terrain purposes,1
,by terrain (,1
,terrain purposes,1
,terrain (,1
invented,hexagons invented by,1
,invented by,1
checkmated,the checkmated player,1
,checkmated player,1
Maybe,) Maybe needs,2
,Maybe needs,2
included:True,S included:True distance:1,1
,included:True distance:1,1
,N included:True distance:7,2
,E included:True distance:7,2
,S included:True distance:7,2
,W included:True distance:7,2
,included:True distance:7,8
,) included:True ),2
,included:True ),4
,NE included:True ),1
,NW included:True ),1
rat,A rat can,1
,rat can,1
<Ending>,<Move> <Ending> },1
,<Ending> },1
<Option:start2>,STRING <Option:start2> ),1
,<Option:start2> ),1
stack:True,) stack:True ),36
,stack:True ),39
,count:2 stack:True ),2
,) stack:True (,20
,stack:True (,20
,Diagonal stack:True ),1
<kingMove>,<start> <kingMove> },1
,<kingMove> },1
advancement,2-step advancement with,2
,non-capturing advancement in,2
,advancement with,2
,advancement in,2
<numDice>,<numPieces> <numDice> <sizeHome>,1
,<numDice> <sizeHome>,1
802,{ 802 },1
,802 },1
placement,than placement of,1
,placement of,1
,in placement .,1
,piece placement cases,1
,placement .,1
,placement cases,1
Blocked,is Blocked Player,1
,Blocked Player,1
East,--COMMA-- East --COMMA--,1
,East --COMMA--,1
<Line:size>,Line <Line:size> <Connection:type>,1
,<Line:size> <Connection:type>,1
805,{ 805 },1
,805 },1
806,{ 806 },1
,806 },1
shiftPlayers,( shiftPlayers Mover,2
,shiftPlayers Mover,2
808,759 808 857,1
,808 857,1
Building,= Building Damage,1
,Building Damage,1
809,{ 809 },1
,809 },1
<numPieces>,<size> <numPieces> <numDice>,1
,<numPieces> <numDice>,1
,<size> <numPieces> },1
,<numPieces> },1
dual,( dual (,8
,dual (,8
,( dual >,1
,dual >,1
Mini,Mini Hexchess,1
810,{ 810 },1
,810 },1
812,{ 812 },1
,812 },1
<Loss>,STRING <Loss> STRING,13
,<Loss> STRING,15
,STRING <Loss> <Loss>,1
,<Loss> <Loss> STRING,1
,<Loss> <Loss>,1
,STRING <Loss> <Win>,1
,<Win> <Loss> STRING,1
,<Loss> <Win>,1
813,{ 813 },1
,813 },1
816,{ 816 },1
,816 },1
Pawns,) Pawns and,1
,Pawns and,1
,and Pawns are,1
,* Pawns can,1
,. Pawns can,1
,--COMMA-- Pawns can,1
,The Pawns keep,1
,Pawns are,1
,Pawns can,3
,Pawns keep,1
818,{ 818 },1
,818 },1
Path,is Path Edge,7
,is Path Vertex,1
,Path Edge,7
,Path Vertex,1
<Version:endScore>,byScore <Version:endScore> ),1
,<Version:endScore> ),1
<Scenario:buildingSetup>,{ <Scenario:buildingSetup> <Scenario:pieceSetup>,1
,<Scenario:buildingSetup> <Scenario:pieceSetup>,1
<buildingSetup>,<boardRegins> <buildingSetup> <pieceSetup>,1
,<buildingSetup> <pieceSetup>,1
<directions>,STRING <directions> <then>,12
,STRING <directions> ),12
,<directions> <then>,12
,<directions> ),12
Diamond>,<hex Diamond> STRING,2
,<square Diamond> STRING,2
,<tri Diamond> STRING,2
,<brick Diamond> STRING,2
,Diamond> STRING,8
,<hex Diamond> <,1
,<square Diamond> <,1
,<tri Diamond> <,1
,<brick Diamond> <,1
,T33434 Diamond> <,1
,T3464 Diamond> <,1
,Diamond> <,6
abs,( abs (,2
,abs (,2
Hexchess,Mini Hexchess Copyright,1
,Hexchess Copyright,1
821,{ 821 },1
,821 },1
823,872 823 774,1
,823 774,1
825,183 825 826,1
,825 826,1
826,825 826 1117,1
,826 1117,1
<Tag:boardSize>,square <Tag:boardSize> ),1
,<Tag:boardSize> ),1
829,{ 829 },1
,829 },1
Backwards,All Backwards ),2
,Backwards ),6
,Step Backwards (,1
,Backwards (,2
,Forward Backwards },5
,{ Backwards Forwards,17
,{ Backwards Forward,2
,{ Backwards FR,1
,Backwards },5
,Backwards Forwards,17
,Backwards Forward,2
,Backwards FR,1
,STRING Backwards ),4
,{ Backwards Rightward,2
,FL Backwards Rightward,1
,{ Backwards Rightwards,3
,Backwards Rightward,3
,Backwards Rightwards,3
,step Backwards (,1
colour:2,to:3 colour:2 ),2
,colour:2 ),2
colour:1,to:2 colour:1 ),1
,to:1 colour:1 ),1
,colour:1 ),2
moved,being moved have,1
,have moved before,1
,it moved from,1
,moved have,1
,moved before,1
,moved from,1
Pawn,) Pawn movement,6
,that Pawn cannot,1
,) Pawn movement:,5
,last-moved Pawn in,6
,) Pawn promotion,6
,Pawn movement,6
,Pawn cannot,1
,Pawn movement:,5
,Pawn in,6
,Pawn promotion,7
,) Pawn Movement:,1
,Pawn Movement:,1
,and Pawn Promotion:,1
,later Pawn promotion,1
,a Pawn reaches,3
,a Pawn is,1
,the Pawn is,3
,the Pawn remains,1
,or Pawn move,1
,Pawn Promotion:,1
,Pawn reaches,3
,Pawn is,4
,Pawn remains,1
,Pawn move,1
,Promoted Pawn (,8
,Pawn (,8
sowEffect:,) sowEffect: (,1
,sowEffect: (,2
,sow sowEffect: (,1
red,coloured red --COMMA--,1
,red --COMMA--,1
Test,STRING Test to,1
,Test to,1
830,{ 830 },1
,830 },1
833,834 833 882,1
,833 882,1
834,835 834 833,1
,834 833,1
835,836 835 834,1
,835 834,1
helped,which helped a,1
,helped a,1
836,837 836 835,1
,836 835,1
,{ 836 },1
,836 },1
837,838 837 836,1
,837 836,1
838,839 838 837,1
,838 837,1
,{ 838 },1
,838 },1
<Player:trackP3P4>,) <Player:trackP3P4> },1
,<Player:trackP3P4> },1
839,840 839 838,1
,839 838,1
,{ 839 },1
,839 },1
add,( add (,191
,add (,191
,( add Split,2
,add Split,2
,) add a,1
,add a,1
,to add that,1
,add that,1
Undefined,) Undefined ),5
,Mover Undefined ),8
,Undefined ),17
,< Undefined (,1
,Undefined (,11
,= Undefined (,10
,STRING Undefined ),4
<nbrMax>,{ <nbrMax> },1
,<nbrMax> },1
<Num>,STRING <Num> args:,10
,<Num> args:,10
its,with its current,1
,when its impossible,1
,its current,1
,its impossible,1
,on its first,1
,its first,1
,opposite its starting,1
,for its delayed,1
,its starting,1
,its delayed,1
,means its a,2
,its a,2
ToClear,sites ToClear ),29
,ToClear ),29
avoidStoredState,( avoidStoredState (,1
,avoidStoredState (,1
<Minotaur:threat>,then <Minotaur:threat> ),1
,<Minotaur:threat> ),1
<ExtraCapture>,STRING <ExtraCapture> args:,2
,<ExtraCapture> args:,2
840,841 840 839,1
,840 839,1
,{ 840 },1
,840 },1
841,842 841 840,1
,841 840,1
,{ 841 },1
,841 },1
842,793 842 841,1
,842 841,1
,{ 842 },1
,842 },1
843,{ 843 },1
,843 },1
844,{ 844 },1
,844 },1
846,{ 846 },1
,846 },1
848,{ 848 },1
,848 },1
Bridge,) Bridge Wagon,1
,) Bridge (,1
,Bridge Wagon,1
,Bridge (,1
KingNotCheckedAndToEmpty,- KingNotCheckedAndToEmpty (,3
,KingNotCheckedAndToEmpty (,3
<Option:start1>,STRING <Option:start1> ),1
,<Option:start1> ),1
prevent,to prevent selecting,1
,that prevent cycling:-,1
,prevent selecting,1
,prevent cycling:-,1
,) prevent rotational,1
,prevent rotational,1
852,{ 852 },1
,852 },1
853,{ 853 },1
,853 },1
854,{ 854 },1
,854 },1
857,808 857 906,1
,857 906,1
<P1>,<P2> <P1> STRING,1
,STRING <P1> <P2>,1
,<P1> STRING,1
,<P1> <P2>,1
intersect,( intersect {,1
,intersect {,1
k:4,Mover k:4 ),1
,k:4 ),1
k:3,Mover k:3 ),1
,k:3 ),1
<capture>,{ <capture> <moveCondition>,1
,<capture> <moveCondition>,1
,{ <capture> },1
,<capture> },1
,{ <capture> <suicide>,1
,<capture> <suicide>,1
<BoardDef>,{ <BoardDef> <MainWinC>,1
,<BoardDef> <MainWinC>,1
on:Cell,by:P2 on:Cell ),2
,on:Cell ),4
,Piece on:Cell (,1
,on:Cell (,1
,STRING on:Cell ),2
<LF2>,<RB1> <LF2> <LB2>,2
,<LF2> <LB2>,2
861,{ 861 },1
,861 },1
mover,( mover ),517
,mover ),517
,Swap mover with,1
,STRING mover with,1
,mover with,2
,the mover .,1
,mover .,1
,= mover (,1
,mover (,1
,no mover marker,1
,mover marker,1
,p1 mover one,1
,mover one,1
Buying,) Buying units,1
,Buying units,1
863,{ 863 },1
,863 },1
moves,5 moves are,1
,moves are,1
,Then moves -,1
,moves -,1
,no moves =,1
,moves =,1
,Capture moves .,1
,Captures moves .,1
,moves .,4
,always moves to,1
,moves to,1
,24 moves (,1
,60 moves (,1
,100 moves (,1
,moves (,3
,full moves show,1
,Add moves .,1
,moves show,1
,the moves .,1
,null moves when,1
,the moves based,1
,double moves --COMMA--,1
,moves when,1
,moves based,1
,moves --COMMA--,1
864,913 864 865,1
,864 865,1
865,864 865 914,1
,865 914,1
,{ 865 },1
,865 },1
866,915 866 1299,1
,866 1299,1
,{ 866 },1
,866 },1
867,{ 867 },1
,867 },1
868,{ 868 },1
,868 },1
pushed,piece pushed to,1
,pushed to,1
<P2>,STRING <P2> <P1>,1
,<P1> <P2> STRING,1
,<P2> <P1>,1
,<P2> STRING,1
<Fox:rememberHopCapture>,play <Fox:rememberHopCapture> ),1
,<Fox:rememberHopCapture> ),1
<Meta:rule>,rules <Meta:rule> phases:,1
,<Meta:rule> phases:,1
,rules <Meta:rule> (,4
,<Meta:rule> (,4
<Center>,STRING <Center> args:,1
,<Center> args:,1
number,the number of,1
,number of,3
,- number of,1
,Init number of,1
870,{ 870 },1
,870 },1
Init,) Init number,1
,Init number,1
871,{ 871 },1
,871 },1
<Board:trackTeam2>,STRING <Board:trackTeam2> P2,1
,STRING <Board:trackTeam2> P4,1
,<Board:trackTeam2> P2,1
,<Board:trackTeam2> P4,1
872,921 872 823,1
,872 823,1
873,{ 873 },1
,873 },1
874,{ 874 },1
,874 },1
<movement>,<dice> <movement> },1
,<movement> },1
876,{ 876 },1
,876 },1
877,{ 877 },1
,877 },1
878,{ 878 },1
,878 },1
879,{ 879 },1
,879 },1
Sides,3 Sides ),3
,Sides ),3
<start3>,<start2> <start3> },1
,<start3> },1
nothing,because nothing is,3
,nothing is,3
testing,continuity testing in,1
,testing in,1
,and testing for,1
,testing for,1
script,the script is,1
,the script down,1
,script is,1
,script down,1
,000 script lines,1
,script lines,1
<Player:startRules>,rules <Player:startRules> (,1
,<Player:startRules> (,1
881,{ 881 },1
,881 },1
882,833 882 883,1
,882 883,1
883,882 883 884,1
,883 884,1
884,883 884 933,1
,884 933,1
,{ 884 },1
,884 },1
copy:True,) copy:True ),8
,copy:True ),8
,) copy:True STRING,1
,copy:True STRING,1
,) copy:True (,4
,copy:True (,4
,) copy:True #1,1
,copy:True #1,1
885,934 885 886,1
,885 886,1
886,885 886 935,1
,886 935,1
887,935 887 891,1
,887 891,1
888,936 888 889,1
,888 889,1
889,888 889 890,1
,889 890,1
Bishops,no Bishops in,1
,Bishops in,1
88>,97 88> STRING,1
,88> STRING,1
DiceEqual,all DiceEqual ),32
,DiceEqual ),32
other,any other piece,1
,other piece,1
,the other direction,1
,other direction,1
,pieces other than,1
,the other player's,1
,other than,2
,other player's,1
,the other pieces,1
,other pieces,1
,everything other than,1
<hex,STRING <hex 5>,1
,<hex 5>,1
,STRING <hex Diamond>,3
,<hex Diamond>,3
,STRING <hex Limping>,2
,<hex Limping>,2
,STRING <hex Square>,1
,STRING <hex Triangle>,1
,STRING <hex Star>,1
,<hex Square>,1
,<hex Triangle>,1
,<hex Star>,1
<SafeTeleportation:num>,STRING <SafeTeleportation:num> ),1
,<SafeTeleportation:num> ),1
SpanningTree,is SpanningTree Mover,2
,SpanningTree Mover,2
rings:2,Square rings:2 ),3
,rings:2 ),3
<placement>,<size> <placement> },1
,<placement> },1
rings:4,Square rings:4 ),1
,rings:4 ),1
Direction,sites Direction from:,54
,Direction from:,54
,= Direction =,2
,Direction =,2
,sites Direction from:55,1
,sites Direction from:19,1
,sites Direction from:94,1
,sites Direction from:34,1
,sites Direction from:56,1
,sites Direction from:0,1
,sites Direction from:93,1
,sites Direction from:50,1
,Direction from:55,1
,Direction from:19,1
,Direction from:94,1
,Direction from:34,1
,Direction from:56,1
,Direction from:0,1
,Direction from:93,1
,Direction from:50,1
,forEach Direction Diagonal,1
,Direction Diagonal,1
,forEach Direction Orthogonal,8
,forEach Direction (,16
,Direction Orthogonal,8
,Direction (,16
,forEach Direction Forward,8
,Direction Forward,8
,sites Direction from:#1,1
,Direction from:#1,1
,. Direction to,1
,Direction to,1
rings:3,Square rings:3 joinCorners:True,12
,rings:3 joinCorners:True,14
,Triangle rings:3 joinCorners:True,1
,Square rings:3 ),7
,rings:3 ),7
,Triangle rings:3 joinMidpoints:False,1
,rings:3 joinMidpoints:False,1
,Hexagon rings:3 joinCorners:True,1
890,889 890 1081,1
,890 1081,1
891,887 891 940,1
,891 940,1
Axial,) Axial (,2
,Axial (,2
893,. 893 (,1
,893 (,1
,{ 893 },1
,893 },1
894,{ 894 },1
,894 },1
895,{ 895 },1
,895 },1
897,{ 897 },1
,897 },1
/>Wikipedia</a>,STRING />Wikipedia</a> .,1
,/>Wikipedia</a> .,1
3-stack,the 3-stack and,2
,3-stack and,2
Movement,) Movement of,3
,Movement of,3
<Tiger:playMove>,play <Tiger:playMove> ),1
,<Tiger:playMove> ),1
<Move>,STRING <Move> args:,2
,<Move> args:,2
,{ <Move> <Ending>,1
,<Move> <Ending>,1
<EnemyTrack1>,<MiddleTrack> <EnemyTrack1> <EnemyTrack2>,1
,<EnemyTrack1> <EnemyTrack2>,1
<Version:play>,<Version:start> <Version:play> (,1
,<Version:play> (,3
,play <Version:play> ),2
,<Version:play> ),2
,rules <Version:play> (,1
,Remove <Version:play> (,1
removed,are removed .,1
,is removed .,1
,removed .,2
Playable,sites Playable ),3
,Playable ),3
removes,This removes the,1
,This removes one,1
,removes the,1
,removes one,1
movement,King movement Usage:,7
,Pawn movement Note:,6
,all movement in,1
,block movement in,1
,2 movement directions,2
,movement Usage:,7
,movement Note:,6
,movement in,2
,movement directions,2
,post-promotion movement of,1
,of movement .,1
,movement of,1
,movement .,2
,( movement ),2
,movement ),2
,subsequent movement .,1
,ie movement selection,1
,follow-up movement First,1
,movement selection,1
,movement First,1
<EnemyTrack2>,<EnemyTrack1> <EnemyTrack2> },1
,<EnemyTrack2> },1
Lúdkax,) Lúdkax (,1
,Lúdkax (,1
mode,( mode Simultaneous,2
,mode Simultaneous,2
<trackTeam2>,<size> <trackTeam2> },1
,<trackTeam2> },1
all,( all Passed,59
,all Passed,59
,( all DiceUsed,92
,all DiceUsed,92
,( all DiceEqual,32
,all DiceEqual,32
,( all the,1
,all the,3
,in all the,1
,( all Sites,82
,all Sites,82
,( all Different,16
,all Different,16
,blocks all movement,1
,all movement,1
,if all the,1
,--COMMA-- all players,1
,all players,1
,attack all pieces,2
,all pieces,2
,on all sides,1
,all sides,1
,when all destinations,1
,all destinations,1
always,Can always just,4
,always just,4
,Can always capture,1
,always capture,1
,Knight always moves,1
,always moves,1
,is always yielded,1
,always yielded,1
already,are already there,3
,already there,3
,has already been,1
,already been,1
degrees:180,P2 degrees:180 ),2
,degrees:180 ),2
Crossing,sites Crossing at:,5
,Crossing at:,5
unit,the unit at,1
,unit at,1
,a unit (,1
,unit (,1
<Boundary:shape>,hex <Boundary:shape> <Board:size>,1
,<Boundary:shape> <Board:size>,1
,hex <Boundary:shape> <Board>,1
,<Boundary:shape> <Board>,1
<rememberHopCapture>,<stepMove> <rememberHopCapture> },1
,<rememberHopCapture> },1
<start2>,<start1> <start2> <start3>,1
,<start2> <start3>,1
,<start1> <start2> },1
,<start2> },1
<Move:limit>,) <Move:limit> (,1
,<Move:limit> (,1
after:9,before:9 after:9 if:,4
,after:9 if:,4
Glinski,Glinski Chess,2
,in Glinski Chess,1
<PiecePlacement:PiecePlacement>,{ <PiecePlacement:PiecePlacement> },1
,<PiecePlacement:PiecePlacement> },1
after:2,before:2 after:2 if:,1
,after:2 if:,1
,) after:2 ),1
,after:2 ),1
farthest,board farthest from,1
,the farthest side,1
,farthest from,1
,farthest side,1
after:1,before:1 after:1 if:,1
,after:1 if:,3
,before:3 after:1 if:,2
<Challenge:maxVal>,1 <Challenge:maxVal> ),1
,<Challenge:maxVal> ),1
Expands,Expands to,1
to:P2,) to:P2 ),15
,False to:P2 ),25
,to:P2 ),40
to:P1,) to:P1 ),15
,False to:P1 ),26
,to:P1 ),41
and,( and (,2059
,and (,2059
,( and {,515
,and {,515
,hand and have,3
,and have,3
,triple and double,1
,and double,1
,( and STRING,23
,and STRING,23
,Gallicus and Advanced,1
,3-stack and the,2
,and Advanced,1
,and the,6
,level and each,1
,and each,2
,flat and two,1
,flat and one,1
,and two,1
,and one,1
,pieces and the,1
,Persians and Spartans,1
,unify and simplify,1
,equivalent and it,1
,omnicheck and cannot,1
,Pawns and Hoplites,1
,and Spartans,1
,and simplify,1
,and it,1
,and cannot,1
,and Hoplites,1
,6 and each,1
,--COMMA-- and either,1
,Capture and Pawn,1
,Kings and Pawns,1
,--COMMA-- and there,1
,--COMMA-- and the,1
,completed and edited,1
,and either,1
,and Pawn,1
,and Pawns,1
,and there,1
,and edited,1
,steps and move,6
,and move,7
,cavalry and infantry,1
,and infantry,1
,learner and multi,1
,Equiversi and Hops-a-Daisy,1
,and multi,1
,and Hops-a-Daisy,1
,marker and the,1
,indecise and move,1
,Connectivity and Liberty,1
,groups and cells,1
,--COMMA-- and are,1
,connectivity and is,1
,and Liberty,1
,and cells,1
,and are,1
,and is,1
,hop and the,1
,surrounded and influence,1
,values and testing,1
,passing and end,1
,turns and pass,1
,region and then,1
,Board and Set-up/Pie,1
,> and not,1
,and influence,1
,and testing,1
,and end,1
,and pass,1
,and then,1
,and Set-up/Pie,1
,and not,1
<p1_dirs>,STRING <p1_dirs> <p2_dirs>,1
,<p1_dirs> <p2_dirs>,1
row,( row of:,30
,row of:,30
,inner row (,2
,row (,2
,Row row ),1
,#2 row Column,1
,row ),1
,row Column,1
<Each>,STRING <Each> args:,1
,<Each> args:,1
<start1>,<board> <start1> <start2>,1
,<start1> <start2>,2
,<walls> <start1> <start2>,1
Source:,functions Source: Chess,7
,) Source: Chess,24
,Castling Source: Chess,1
,setup Source: Derived,1
,Source: Chess,33
,Source: Derived,5
,. Source: Derived,3
,) Source: Derived,1
,. Source: Chess,1
any,in any direction,1
,any direction,1
,to any other,1
,any other,1
,at any empty,2
,any empty,2
,Hop any piece,3
,any piece,3
,oer any intervening,1
,any intervening,1
,in any of,2
,to any of,1
,make any move,1
,without any captured,1
,any of,3
,any move,1
,any captured,1
,without any capture,2
,any capture,2
,after any previous,1
,any previous,1
<Move:leopard>,play <Move:leopard> ),1
,<Move:leopard> ),1
28-29,Squares 28-29 (,1
,28-29 (,1
<playRules>,{ <playRules> },1
,<playRules> },3
,<numPlayers> <playRules> },2
until,) until a,1
,position until a,1
,King until Player,1
,until a,2
,until Player,1
Main,) Main routine,8
,Main routine,8
,) Main move,1
,Main move,1
<stepMove>,<hopCapture> <stepMove> <rememberHopCapture>,1
,<stepMove> <rememberHopCapture>,1
<Tiling:piece1>,place <Tiling:piece1> (,2
,<Tiling:piece1> (,2
<numSides>,<tile> <numSides> <piece1>,2
,<numSides> <piece1>,2
Inner,P1 Inner Home,4
,P2 Inner Home,2
,Inner Home,6
,) Inner holes,2
,Inner holes,2
,P2 Inner home,2
,Inner home,2
,sites Inner ),1
,Inner ),1
facesByDie:,d:2 facesByDie: {,6
,facesByDie: {,6
<Dual:end>,) <Dual:end> ),1
,<Dual:end> ),1
Note:,movement Note: Counter,6
,. Note: 2,2
,. Note: Counter,6
,Note: Counter,13
,Note: 2,2
,setup Note: <back_dir>,1
,Note: <back_dir>,1
,) Note: Counter,1
,( Note: Currently,1
,( Note: A,1
,Note: Currently,1
,Note: A,1
if:#4,) if:#4 ),27
,if:#4 ),27
if:#5,) if:#5 ),1
,if:#5 ),1
if:#2,) if:#2 (,1
,if:#2 (,1
if:#1,) if:#1 (,2
,if:#1 (,10
,replayDouble:True if:#1 (,8
,) if:#1 ),1
,if:#1 ),3
,from if:#1 ),2
non-capturing,double-step non-capturing advancement,1
,non-capturing advancement,2
,Double-step non-capturing advancement,1
,( non-capturing ),1
,non-capturing ),1
<ludus>,{ <ludus> },1
,<ludus> },1
<Scenario:pieceSetup>,<Scenario:buildingSetup> <Scenario:pieceSetup> <Scenario:teams>,1
,<Scenario:pieceSetup> <Scenario:teams>,1
<usingHogon>,<numSeeds> <usingHogon> },1
,<usingHogon> },1
Make,Board Make a,1
,Make a,1
completed,--COMMA-- completed and,1
,completed and,1
Handle,) Handle double-step,1
,Handle double-step,1
000,--COMMA-- 000 script,1
,000 script,1
<result>,{ <result> },5
,<result> },6
,<type> <result> },1
<exact:True>,STRING <exact:True> STRING,1
,<exact:True> STRING,1
Pot,set Pot (,6
,Pot (,6
005,. 005 -5,1
,005 -5,1
<Board:init>,Count <Board:init> to:,1
,<= <Board:init> (,2
,<Board:init> to:,1
,<Board:init> (,2
<armSize>,{ <armSize> <numPiece>,1
,<armSize> <numPiece>,1
NotEmpty,) NotEmpty Orthogonal,2
,NotEmpty Orthogonal,2
,) NotEmpty ),2
,NotEmpty ),2
choices,move choices (,1
,choices (,1
if:True,) if:True (,13
,if:True (,40
,) if:True ),28
,if:True ),70
,apply if:True (,5
,) if:True STRING,1
,if:True STRING,1
,) if:True apply:,1
,if:True apply:,5
,sow if:True apply:,4
,between if:True (,1
,between if:True ),37
,to if:True ),1
,to if:True (,21
,#4 if:True ),3
,#2 if:True ),1
<startTheseus>,<type> <startTheseus> <startMinotaur>,1
,<startTheseus> <startMinotaur>,1
Shahzada,) Shahzada (,1
,Shahzada (,1
<Player:option>,STRING <Player:option> next:1,1
,STRING <Player:option> next:2,1
,STRING <Player:option> next:3,1
,STRING <Player:option> next:4,1
,STRING <Player:option> ),1
,<Player:option> next:1,1
,<Player:option> next:2,1
,<Player:option> next:3,1
,<Player:option> next:4,1
,<Player:option> ),1
Kendall------------------------------------------,for Kendall------------------------------------------ (,1
,Kendall------------------------------------------ (,1
Knights,* Knights move,1
,Knights move,1
Hexagon>,<tri Hexagon> STRING,1
,Hexagon> STRING,1
as:,STRING as: A,1
,as: A,1
<Doctrine3:doctrine>,mapEntry <Doctrine3:doctrine> #2,1
,<Doctrine3:doctrine> #2,1
<trackCCW2>,<size> <trackCCW2> <trackCW1>,1
,<trackCCW2> <trackCW1>,1
<Play>,STRING <Play> args:,15
,<Play> args:,15
,<init> <Play> <end>,1
,<Play> <end>,1
,) <Play> ),1
,<Play> ),3
,Each <Play> ),1
,rules <Play> (,1
,<Play> (,4
,) <Play> (,3
,play <Play> ),1
Urdabegini,) Urdabegini (,1
,Urdabegini (,1
Star,regular Star 5,5
,Star 5,5
,hex Star (,1
,Star (,1
,regular Star 6,2
,Star 6,2
,hex Star 2,1
,Star 2,1
,regular Star 7,2
,regular Star 10,1
,Star 7,2
,Star 10,1
,regular Star 8,2
,Star 8,2
,regular Star 4,1
,regular Star 14,1
,Star 4,1
,Star 14,1
are,pieces are already,3
,are already,3
,moves are awaiting,1
,are awaiting,1
,pieces are removed,1
,are removed,1
,cells are empty,1
,are empty,1
,we are thinking,1
,are thinking,1
,Spartans are different,1
,time are in,1
,are different,1
,are in,1
,spaces are traditionally,1
,Pawns are captured,1
,they are set,1
,there are pieces,1
,there are no,1
,There are no,1
,are traditionally,1
,are captured,1
,are set,1
,are pieces,1
,are no,2
,that are facing,1
,that are currently,1
,are facing,1
,are currently,1
,Planes are never,1
,are never,1
,and are rarely,1
,are rarely,1
,These are to,1
,destinations are blocked,1
,produced are unpredictable,1
,bugs are fixed,1
,are to,1
,are blocked,1
,are unpredictable,1
,are fixed,1
Groups,count Groups if:,14
,Groups if:,14
,count Groups Orthogonal,10
,Groups Orthogonal,10
,count Groups ),4
,Groups ),4
,count Groups STRING,14
,Groups STRING,14
,count Groups Edge,1
,Groups Edge,1
<Scenario:boardRegins>,) <Scenario:boardRegins> (,1
,<Scenario:boardRegins> (,1
Non-capturing,) Non-capturing 2-step,2
,Non-capturing 2-step,2
where,( where STRING,213
,where STRING,213
,( where Level,29
,where Level,29
,site where it,1
,where it,2
,( where (,27
,where (,27
,remains where it,1
,turn where the,1
,where the,1
,( where #1,1
,where #1,1
,argument where from,3
,where from,3
,case where piece,1
,where piece,1
,determines where to,1
,where to,1
takes,promotion takes place,1
,visually takes place,1
,King takes possession,1
,takes place,2
,takes possession,1
<doctrine>,{ <doctrine> },4
,<doctrine> },4
broken,for broken markers,1
,broken markers,1
at:,who at: (,1615
,at: (,4667
,what at: (,485
,state at: (,392
,State at: (,179
,Cell at: (,224
,topLevel at: (,59
,Stack at: (,80
,count at: (,1217
,Value at: (,62
,Piece at: (,106
,Count at: (,8
,Neutral at: (,16
,Farthest at: (,4
,Mover at: (,24
,Hidden at: (,9
,32 at: (,2
,36 at: (,2
,5 at: (,2
,1 at: (,1
,Group at: (,26
,of:Cell at: (,28
,LineOfSight at: (,8
,of:Vertex at: (,19
,What at: (,38
,Threatened at: (,1
,STRING at: (,18
,Who at: (,2
,LargePiece at: (,1
,Edge at: (,9
,of:Edge at: (,5
,Vertex at: (,3
,rotation at: (,4
,Empty at: (,3
,by:Mover at: (,2
,by:Neutral at: (,1
,} at: (,2
,Liberties at: (,1
,Crossing at: (,5
,) at: (,4
TreeCentre,is TreeCentre Shared,2
,TreeCentre Shared,2
-------------------------------------------,) ------------------------------------------- Functional,1
,------------------------------------------- Functional,1
RightMost,Three RightMost (,2
,RightMost (,2
<centreMove>,<regions> <centreMove> },1
,<centreMove> },1
<playingTeamPieces>,<startRules> <playingTeamPieces> },1
,<playingTeamPieces> },1
<Start:play>,<Start:start> <Start:play> ),1
,<Start:play> ),1
<Player:start>,{ <Player:start> },1
,<Player:start> },2
,rules <Player:start> (,5
,<Player:start> (,5
,) <Player:start> },1
castle,They castle by,1
,castle by,1
<Board:openingRegions>,) <Board:openingRegions> (,1
,<Board:openingRegions> (,1
<mover>,{ <mover> <next>,1
,<mover> <next>,1
,<nonMover> <mover> },1
,<mover> },1
<kingHop>,{ <kingHop> <numKings>,1
,<kingHop> <numKings>,1
either,in either forward,1
,either forward,1
,and either gray,1
,off either of,1
,either gray,1
,either of,1
****,) **** default,5
,) **** standard,1
,) **** second,1
,) **** Equi,1
,**** default,5
,**** standard,1
,**** second,1
,**** Equi,1
neighbors,many neighbors (,1
,friendly neighbors <PlaceBy:qtyMax>,1
,neighbors (,1
,neighbors <PlaceBy:qtyMax>,1
<Variant:end>,if <Variant:end> (,1
,<Variant:end> (,1
subgame,( subgame STRING,12
,subgame STRING,12
,designated subgame whose,1
,subgame whose,1
03>,. 03> STRING,3
,03> STRING,3
results,( results from:,18
,results from:,18
,( results from:#1,1
,results from:#1,1
those,of those .,1
,those .,1
,including those without,1
,those without,1
palace,the palace (,1
,palace (,1
<Row:track2>,STRING <Row:track2> loop:True,12
,<Row:track2> loop:True,12
vertices:,} vertices: {,2
,vertices: {,110
,) vertices: {,35
,graph vertices: {,73
<moves>,{ <moves> },1
,<moves> },1
spaces,skipped-over spaces in,6
,spaces in,6
,two spaces diagonally,1
,spaces diagonally,1
,of spaces to,1
,spaces to,1
,91 spaces .,1
,board spaces are,1
,nearest spaces of,1
,spaces .,1
,spaces are,1
,spaces of,1
<regions>,<num> <regions> <start>,1
,<regions> <start>,1
,<track> <regions> },1
,<regions> },2
,<track> <regions> <scores>,1
,<regions> <scores>,1
,<tracks> <regions> <centreMove>,1
,<regions> <centreMove>,1
,<size> <regions> },1
distance,at distance 2,1
,distance 2,1
,total distance equal,1
,distance equal,1
attract,( attract (,2
,attract (,2
<Draw>,STRING <Draw> STRING,1
,<Draw> STRING,1
show,( show Symbol,64
,show Symbol,64
,moves show that,1
,show that,1
edition,2nd edition --COMMA--,1
,edition --COMMA--,1
Step,move Step (,315
,Step (,315
,move Step #1,51
,Step #1,51
,move Step Orthogonal,60
,Step Orthogonal,60
,move Step Adjacent,4
,Step Adjacent,4
,move Step Forwards,5
,Step Forwards,5
,move Step Forward,9
,Step Forward,9
,move Step <Army>,1
,move Step <Tower>,1
,Step <Army>,1
,Step <Tower>,1
,move Step Backwards,1
,Step Backwards,1
,move Step All,3
,Step All,3
,move Step Diagonal,34
,Step Diagonal,34
Places,) Places neutral,1
,Places neutral,1
<70>,STRING <70> <,3
,<70> <,3
,STRING <70> STRING,1
,<70> STRING,1
result:,STRING result: (,3
,result: (,6
,next:1 result: (,1
,next:2 result: (,1
,next:0 result: (,1
concentric,( concentric {,34
,concentric {,34
,( concentric Square,23
,concentric Square,23
,( concentric Triangle,2
,concentric Triangle,2
,( concentric Hexagon,1
,concentric Hexagon,1
<BoardRegions>,<BoardShape> <BoardRegions> <PieceSetup>,2
,<BoardRegions> <PieceSetup>,2
components:,STRING components: {,87
,components: {,96
,) components: {,3
,#4 components: {,3
,by:All components: {,1
,by:#1 components: {,1
,by:Mover components: {,1
Loop,is Loop ),2
,Loop ),2
,is Loop (,2
,Loop (,2
,is Loop surround:Next,1
,Loop surround:Next,1
<Version:order>,{ <Version:order> },2
,<Version:order> },2
<Board:dot0>,STRING <Board:dot0> ),1
,<Board:dot0> ),1
numSides:4,} numSides:4 ),4
,numSides:4 ),4
,STRING numSides:4 {,2
,numSides:4 {,2
,Each numSides:4 (,6
,numSides:4 (,6
<Tiling:piece2>,place <Tiling:piece2> (,2
,<Tiling:piece2> (,2
<Challenge:start>,start <Challenge:start> ),1
,<Challenge:start> ),1
,{ <Challenge:start> },1
,<Challenge:start> },1
target,the target zone,1
,target zone,1
,the target EMPTY,1
,the target ENEMY-OCCUPIED,1
,target EMPTY,1
,target ENEMY-OCCUPIED,1
closed:True,) closed:True ),4
,closed:True ),4
learner,) learner and,1
,learner and,1
Hex,Set-up/Pie Hex 7-8,1
,Hex 7-8,1
1725,. 1725 },2
,1725 },2
<Row:num>,rectangle <Row:num> 10,1
,<Row:num> 10,1
<initP3>,<sumFingers> <initP3> <betP3>,1
,<initP3> <betP3>,1
Capture,- Capture region,1
,Capture region,1
,< Capture method,4
,) Capture a,1
,Capture method,4
,Capture a,1
,{ Capture moves,1
,Capture moves,1
,. Capture and,1
,Capture and,1
075,. 075 },2
,075 },2
connectivity,affects connectivity and,1
,connectivity and,1
07>,. 07> STRING,1
,07> STRING,1
container:1,Piece container:1 ),1
,container:1 ),1
,by:Neutral container:1 #1,1
,container:1 #1,1
Sacrifice,) Sacrifice a,2
,Sacrifice a,2
spirale,the spirale .,1
,spirale .,1
case,special case where,1
,case where,1
item,( item STRING,2694
,item STRING,2694
<Board:south>,<Board:north> <Board:south> <Board:east>,1
,<Board:north> <Board:south> },1
,<Board:south> <Board:east>,1
,<Board:south> },1
Twin,the Twin (,1
,Twin (,1
another's,capture another's King,1
,another's King,1
Originals,default Originals (,1
,Originals (,1
<boardShape>,<numPlayers> <boardShape> <boardRegins>,1
,<boardShape> <boardRegins>,1
slide,a slide .,1
,slide .,1
,( slide (,12
,slide (,12
,during slide #5,1
,slide #5,1
,They slide in,1
,slide in,1
,Diagonal slide only,1
,slide only,1
reset,is reset in,13
,reset in,13
,rarely reset during,1
,reset during,1
<Board:east>,<Board:south> <Board:east> <Board:west>,1
,{ <Board:east> <Board:west>,1
,<Board:east> <Board:west>,2
steps:,Move steps: (,44
,steps: (,213
,from:#1 steps: (,26
,) steps: (,83
,STRING steps: (,49
,#1 steps: (,10
,#2 steps: (,1
damage,double damage against,1
,150% damage against,1
,250% damage against,1
,200% damage against,1
,75% damage to,1
,125% damage to,1
,100% damage to,1
,Doctrine damage #1,1
,damage against,4
,damage to,3
,damage #1,1
PowerLeft,concept: PowerLeft is,1
,PowerLeft is,1
Shape,{ Shape line,1
,Shape line,1
Rotate,piece Rotate P2,2
,Rotate P2,2
<Board:north>,{ <Board:north> <Board:south>,2
,<Board:north> <Board:south>,2
protect,that protect against,1
,protect against,1
<511>,1> <511> STRING,1
,<511> STRING,1
more,or more captures,1
,more captures,1
,advance more than,1
,more than,1
<Version:type>,board <Version:type> use:Edge,1
,<Version:type> use:Edge,1
Loss,STRING Loss ),49
,Loss ),175
,P1 Loss ),13
,Mover Loss ),46
,P2 Loss ),6
,Player Loss ),42
,Next Loss ),14
,#1 Loss ),1
,P3 Loss ),2
,P4 Loss ),1
,All Loss ),1
<Rules:start>,start <Rules:start> ),1
,<Rules:start> ),1
,rules <Rules:start> phases:,2
,<Rules:start> phases:,2
Beasley,John Beasley --COMMA--,1
,Beasley --COMMA--,1
count:<Board:numPieces>,STRING count:<Board:numPieces> ),1
,count:<Board:numPieces> ),1
<Row>,STRING <Row> args:,17
,<Row> args:,17
<75>,STRING <75> <,2
,<75> <,2
,STRING <75> STRING,1
,<75> STRING,1
of:1,) of:1 (,3
,of:1 (,3
,) of:1 <Size>,1
,of:1 <Size>,1
<Players:betP3>,) <Players:betP3> },1
,<Players:betP3> },1
at:<End:site5>,Stack at:<End:site5> ),1
,at:<End:site5> ),1
influence,and influence of,1
,remaining influence (,1
,influence of,1
,influence (,1
Maximum,Damage Maximum (,1
,Maximum (,1
'to',the 'to' cell,2
,'to' cell,2
double-step,Handle double-step non-capturing,1
,double-step non-capturing,1
<start>,{ <start> <play>,7
,<start> <play>,8
,<tracks> <start> },1
,<start> },37
,<home> <start> },3
,<numPlayers> <start> <map>,1
,<start> <map>,1
,<sizeHome> <start> },1
,<num> <start> },6
,<num> <start> <diceHand>,1
,<start> <diceHand>,1
,<num> <start> <center>,1
,<start> <center>,1
,<regions> <start> <pathRule>,1
,<start> <pathRule>,1
,<num> <start> <tracks>,2
,<start> <tracks>,2
,<num> <start> <track>,1
,<start> <track>,1
,<board> <start> },1
,<stores> <start> },1
,<size> <start> <homeTracks>,1
,<start> <homeTracks>,1
,<hand> <start> <play>,1
,<type> <start> },13
,<size> <start> <kingMove>,1
,<start> <kingMove>,1
,<size> <start> },2
,<num> <start> <removeLastPiece>,1
,<start> <removeLastPiece>,1
,<removeRule> <start> <consequence>,1
,<start> <consequence>,1
,{ <start> <move>,1
,<start> <move>,1
,{ <start> },8
,<hints> <start> },1
,{ <start> <limit>,2
,<start> <limit>,2
,<pieces> <start> <order>,1
,<start> <order>,1
<Board:trackP2>,STRING <Board:trackP2> P2,1
,<Board:trackP2> P2,1
Chariot,) Chariot (,6
,Chariot (,6
connections,stepwise connections (,1
,connections (,1
Turns,count Turns ),26
,Turns ),26
<Model:rules>,rules <Model:rules> ),1
,<Model:rules> ),1
king,the king },1
,king },1
Suicidal,) Suicidal site,1
,Suicidal site,1
at:<End:site6>,Stack at:<End:site6> ),1
,at:<End:site6> ),1
both,assumes both players,1
,both players,1
suicidal,idintify suicidal groups,1
,determination suicidal sites,1
,suicidal groups,1
,suicidal sites,1
RememberValue,set RememberValue STRING,39
,RememberValue STRING,39
,set RememberValue (,1
,RememberValue (,1
<Players:initP3>,) <Players:initP3> },1
,<Players:initP3> },1
at:<End:site3>,Stack at:<End:site3> ),1
,at:<End:site3> ),1
player's,the player's next,2
,other player's pieces,1
,player's next,2
,player's pieces,1
diagonals:Alternating,5 diagonals:Alternating ),34
,diagonals:Alternating ),60
,7 diagonals:Alternating ),8
,3 diagonals:Alternating ),15
,9 diagonals:Alternating ),1
,<Board:size> diagonals:Alternating ),1
,STRING diagonals:Alternating ),1
AllDirections,{ AllDirections },1
,AllDirections },1
Multiplier,Cost Multiplier 8,1
,Taken Multiplier 9,1
,Attack Multiplier 10,1
,Attack Multiplier 11,1
,Multiplier 8,1
,Multiplier 9,1
,Multiplier 10,1
,Multiplier 11,1
visually,promotion visually takes,1
,visually takes,1
<endScore>,<numPlayers> <endScore> },1
,<endScore> },1
mentioned,As mentioned above,1
,mentioned above,1
<opening>,{ <opening> },2
,<opening> },2
Release,) Release a,3
,Release a,3
adds,bug adds 2,1
,adds 2,1
move,( move Hop,202
,( move (,785
,( move Pass,193
,move Hop,202
,move (,788
,move Pass,193
,( move Step,484
,move Step,484
,( move Slide,381
,move Slide,381
,( move Add,194
,move Add,194
,( move Remove,183
,move Remove,183
,( move Select,386
,move Select,386
,( move Swap,9
,move Swap,9
,( move Leap,112
,move Leap,112
,to move it,1
,move it,1
,( move standard,1
,standard move without,1
,( move Vote,18
,( move Propose,14
,move standard,1
,move without,1
,move Vote,18
,move Propose,14
,next move .,1
,move .,7
,hop move in,2
,move in,3
,Forfeit move (,1
,simultaneous move .,2
,Simultaneous move .,1
,( move Shoot,3
,move Shoot,3
,this move was,1
,move was,1
,( move Set,8
,move Set,8
,just move normally,4
,a move },2
,move normally,4
,move },2
,( move STRING,2
,move STRING,2
,( move <Board:kingMove>,1
,move <Board:kingMove>,1
,( move Promote,122
,move Promote,122
,promoted move here,1
,move here,1
,( move To,2
,To move a,2
,move To,2
,move a,2
,( move Bet,4
,move Bet,4
,cannot move in,1
,never move e,1
,move e,1
,first move oer,1
,move oer,1
,initial move at,1
,move at,1
,to move into,1
,must move out,1
,cannot move out,1
,piece move of,1
,to move #4,1
,move into,1
,move out,2
,move of,1
,move #4,1
,Rooks move as,1
,can move one,1
,Knights move one,1
,any move that,1
,Pawn move .,1
,current move --COMMA--,1
,1's move exposes,1
,to move .,1
,move as,1
,move one,2
,move that,1
,move --COMMA--,3
,move exposes,1
,( move three,2
,( move jump,11
,and move to,6
,move three,2
,move jump,11
,move to,6
,Mountain move --COMMA--,1
,water move --COMMA--,1
,( move Claim,4
,move Claim,4
,and move markers,1
,the move is,1
,up move processing,1
,after move (,1
,Main move (,1
,move markers,1
,move is,1
,move processing,1
,a move .,1
,individual move choices,1
,to move -,1
,for move restrictions,1
,move choices,1
,move -,1
,move restrictions,1
amount,( amount Next,3
,amount Next,3
,( amount #1,1
,( amount P1,1
,( amount P2,1
,( amount P3,1
,amount #1,1
,amount P1,1
,amount P2,1
,amount P3,1
original,The original value,1
,original value,1
by:#4,Occupied by:#4 STRING,1
,by:#4 STRING,1
<Movement:type>,or <Movement:type> (,1
,<Movement:type> (,1
by:#5,Occupied by:#5 STRING,1
,by:#5 STRING,1
<seleucid>,{ <seleucid> },2
,<seleucid> },2
at:<End:site4>,Stack at:<End:site4> ),1
,at:<End:site4> ),1
also,is also slowing,1
,also slowing,1
,numbers also will,1
,also will,1
enough,large enough region,1
,enough region,1
by:#1,Occupied by:#1 ),24
,by:#1 ),24
,Occupied by:#1 STRING,39
,by:#1 STRING,39
,Occupied by:#1 top:False,8
,by:#1 top:False,8
,Occupied by:#1 components:,1
,by:#1 components:,1
by:#2,Occupied by:#2 ),6
,by:#2 ),6
hopped,--COMMA-- hopped enemy,1
,hopped enemy,1
,type hopped --COMMA--,1
,hopped --COMMA--,1
Selects,STRING Selects the,1
,Selects the,1
latter,The latter is,1
,latter is,1
902,{ 902 },1
,902 },1
903,{ 903 },1
,903 },1
904,{ 904 },1
,904 },1
Pending,set Pending (,35
,sites Pending ),11
,is Pending ),66
,Pending (,35
,Pending ),149
,set Pending ),43
,value Pending ),29
,set Pending STRING,2
,Pending STRING,2
,set Pending 1,1
,set Pending 2,1
,Pending 1,1
,Pending 2,1
,in Pending -,6
,Pending -,6
Claim,move Claim (,4
,Claim (,4
906,857 906 611,1
,906 611,1
907,{ 907 },1
,907 },1
equivalent,logically equivalent and,1
,equivalent and,1
908,{ 908 },1
,908 },1
<Doctrine3>,STRING <Doctrine3> args:,1
,<Doctrine3> args:,1
wedge,( wedge 3,74
,wedge 3,74
,( wedge 2,20
,wedge 2,20
,( wedge 5,6
,wedge 5,6
,( wedge 4,8
,wedge 4,8
moveAgain,( moveAgain ),857
,moveAgain ),857
<exit>,<walls> <exit> },1
,<exit> },1
,<startMinotaur> <exit> <walls>,1
,<exit> <walls>,1
<Players:startRules>,rules <Players:startRules> (,1
,<Players:startRules> (,1
911,{ 911 },1
,911 },1
913,516 913 864,1
,913 864,1
914,865 914 915,1
,914 915,1
915,. 915 0,3
,915 0,3
,914 915 866,1
,915 866,1
,{ 915 },1
,915 },1
<Doctrine2>,STRING <Doctrine2> args:,1
,<Doctrine2> args:,1
919,{ 919 },1
,919 },1
Hop,move Hop #1,42
,Hop #1,42
,move Hop (,96
,Hop (,98
,move Hop STRING,1
,Hop STRING,1
,move Hop hop,1
,Hop hop,1
,move Hop Orthogonal,22
,Hop Orthogonal,22
,) Hop any,3
,Hop any,3
,move Hop Diagonal,33
,Hop Diagonal,33
,move Hop All,3
,Hop All,3
,move Hop Forward,3
,Hop Forward,4
,move Hop Forwards,1
,Hop Forwards,1
,. Hop Adjacent,8
,. Hop (,2
,. Hop Forward,1
,Hop Adjacent,8
<Board:ExtraRows>,) <Board:ExtraRows> (,1
,<Board:ExtraRows> (,1
indecise,the indecise and,1
,indecise and,1
921,922 921 872,1
,921 872,1
922,971 922 921,1
,922 921,1
926,{ 926 },1
,926 },1
928,{ 928 },1
,928 },1
deal,( deal Dominoes,1
,deal Dominoes,1
facing,are facing away,1
,facing away,1
<End:event>,) <End:event> },1
,<End:event> },1
<Players:player2>,result <Players:player2> Win,1
,<Players:player2> Win,1
see,--COMMA-- see <a,1
,--COMMA-- see The,1
,see <a,1
,see The,1
,STRING see Chosen:nonMoverCaptures,1
,see Chosen:nonMoverCaptures,1
num:<Num:dice>,from:0 num:<Num:dice> ),1
,num:<Num:dice> ),1
930,{ 930 },1
,930 },1
min:<Group>,) min:<Group> ),4
,min:<Group> ),4
932,{ 932 936,1
,932 936,1
,{ 932 },1
,932 },1
933,884 933 934,1
,933 934,1
,{ 933 },1
,933 },1
subsequent,without subsequent movement,1
,subsequent movement,1
indicate,We indicate we,1
,indicate we,1
934,933 934 885,1
,934 885,1
935,886 935 887,1
,935 887,1
,{ 935 },1
,935 },1
936,932 936 888,1
,936 888,1
,{ 936 },1
,936 },1
937,{ 937 },1
,937 },1
938,{ 938 },1
,938 },1
Players,swap Players P1,6
,Players P1,8
,count Players ),19
,Players ),19
,Swap Players P1,2
,swap Players Mover,2
,Players Mover,2
,swap Players 1,1
,Players 1,1
939,{ 939 988,1
,939 988,1
<Doctrine4>,STRING <Doctrine4> args:,1
,<Doctrine4> args:,1
set,( set State,232
,set State,232
,( set Pending,82
,( set Value,174
,set Pending,82
,set Value,174
,( set Team,179
,set Team,179
,( set Score,74
,set Score,74
,( set Var,342
,set Var,342
,( set NextPlayer,42
,set NextPlayer,42
,( set Count,271
,set Count,271
,( set Hidden,111
,set Hidden,111
,( set RememberValue,40
,set RememberValue,40
,( set Counter,58
,set Counter,58
,( set Pot,6
,set Pot,6
,are set aside,1
,set aside,1
,( set Rotation,2
,set Rotation,2
,( set Neutral,10
,( set Cost,338
,set Neutral,10
,set Cost,338
,( set Shared,14
,( set P1,9
,( set P2,7
,set Shared,14
,set P1,9
,set P2,7
,a set difference,1
,set difference,1
,( set {,11
,set {,11
contain,or contain a,1
,contain a,1
,that contain enemy,1
,contain enemy,1
<Players:sumFingers>,STRING <Players:sumFingers> ),1
,<Players:sumFingers> ),1
except:3,) except:3 ),1
,except:3 ),1
except:1,) except:1 ),2
,except:1 ),2
column,( column of:,85
,column of:,85
,#2 column Row,1
,Column column ),1
,column Row,1
,column ),1
entered,not entered to,1
,entered to,1
<Track>,{ <Track> },2
,STRING <Track> args:,3
,<Track> },2
,<Track> args:,3
940,891 940 989,1
,940 989,1
941,{ 941 },1
,941 },1
942,{ 942 },1
,942 },1
except:0,Different except:0 ),1
,except:0 ),1
945,{ 945 },1
,945 },1
river,to river (,1
,river (,1
946,{ 946 },1
,946 },1
948,997 948 949,1
,948 949,1
949,948 949 950,1
,949 950,1
,{ 949 },1
,949 },1
ADD,TO ADD may,1
,ADD may,1
<Version:numPlayers>,players <Version:numPlayers> ),11
,<Version:numPlayers> ),11
nearest,two nearest cells,1
,nearest cells,1
,six nearest spaces,1
,nearest spaces,1
<GType>,STRING <GType> args:,2
,<GType> args:,2
swapping,No swapping for,4
,No swapping after,4
,No swapping if,2
,swapping for,4
,swapping after,4
,swapping if,2
,by swapping locations,1
,swapping locations,1
950,949 950 951,1
,950 951,1
951,950 951 952,1
,951 952,1
952,951 952 953,1
,952 953,1
Enemy,is Enemy (,976
,Enemy (,977
,Pieces Enemy in:,1
,Enemy in:,1
,) Enemy ),4
,Enemy ),17
,STRING Enemy (,1
,) Enemy Orthogonal,5
,Enemy Orthogonal,5
,an Enemy piece,2
,Enemy piece,2
,Pieces Enemy ),9
,STRING Enemy ),4
Knight,to Knight .,2
,Knight .,2
,a Knight always,1
,a Knight on,1
,or Knight ),1
,Knight always,1
,Knight on,1
,Knight ),1
,) Knight (,6
,Promoted Knight (,5
,Knight (,11
953,952 953 1002,1
,953 1002,1
,{ 953 },1
,953 },1
955,1004 955 1005,1
,955 1005,1
956,{ 956 },1
,956 },1
957,{ 957 },1
,957 },1
959,{ 959 },1
,959 },1
<Player:num>,players <Player:num> ),27
,<Player:num> ),28
,{ <Player:num> <Player:num>,1
,<Player:num> <Player:num> <Player:num>,8
,<Player:num> <Player:num> },1
,<Player:num> <Player:num>,9
,<Player:num> },1
,STRING <Player:num> ),1
count:<Num>,) count:<Num> ),1
,count:<Num> ),1
P1/P2,- P1/P2 (,1
,P1/P2 (,1
<Hexagonal>,STRING <Hexagonal> STRING,2
,<Hexagonal> STRING,2
962,{ 962 },1
,962 },1
963,1012 963 1356,1
,963 1356,1
<Board:west>,<Board:east> <Board:west> },2
,<Board:west> },2
bySite:True,} bySite:True ),2
,bySite:True ),2
966,{ 966 },1
,966 },1
967,{ 967 },1
,967 },1
<Players:start>,{ <Players:start> },2
,<Players:start> },3
,rules <Players:start> phases:,2
,<Players:start> phases:,2
,rules <Players:start> (,4
,<Players:start> (,4
,) <Players:start> },1
969,{ 969 },1
,969 },1
<BoardConfig:Knight2Start>,STRING <BoardConfig:Knight2Start> ),1
,<BoardConfig:Knight2Start> ),1
<Board:centreMove>,) <Board:centreMove> },1
,<Board:centreMove> },1
however,; however that's,1
,however that's,1
DiceUsed,all DiceUsed ),92
,DiceUsed ),92
<Doctrine1>,STRING <Doctrine1> args:,1
,<Doctrine1> args:,1
<setupRules>,<numPlayers> <setupRules> },1
,<setupRules> },1
num:14,) num:14 ),2
,num:14 ),2
971,1020 971 922,1
,971 922,1
,{ 971 },1
,971 },1
envoked,) envoked (,1
,envoked (,1
captured,a captured piece,1
,captured piece,1
,has captured we,1
,captured we,1
,are captured --COMMA--,1
,the captured pieces,1
,unless captured ),1
,is captured .,1
,been captured .,1
,any captured pieces,1
,is captured --COMMA--,1
,captured --COMMA--,2
,captured pieces,2
,captured ),1
,captured .,2
976,{ 976 },1
,976 },1
977,{ 977 },1
,977 },1
<event>,{ <event> },1
,<event> },1
over,directions over an,1
,over an,1
six,the six adjacent,1
,the six nearest,1
,six adjacent,1
,six nearest,1
captures,Special captures from,1
,captures from,1
,more captures done,1
,captures done,1
,piece captures --COMMA--,1
,captures --COMMA--,1
<north>,<type> <north> <south>,1
,<north> <south>,1
Diamond,hex Diamond <Board>,3
,Diamond <Board>,3
,hex Diamond 7,1
,Diamond 7,1
,square Diamond <Size>,1
,Diamond <Size>,1
,hex Diamond 9,2
,Diamond 9,2
,hex Diamond 8,1
,Diamond 8,1
num:20,) num:20 ),2
,num:20 ),2
LastTo,is LastTo Cell,1
,LastTo Cell,1
,sites LastTo ),4
,LastTo ),4
980,{ 980 },1
,980 },1
<Elephant>,Each <Elephant> ),1
,STRING <Elephant> args:,1
,<Elephant> ),1
,<Elephant> args:,1
984,{ 984 },1
,984 },1
985,{ 985 },1
,985 },1
setup,passant setup Source:,1
,setup Source:,1
,passant setup Note:,1
,setup Note:,1
988,939 988 1086,1
,988 1086,1
,{ 988 },1
,988 },1
989,940 989 1038,1
,989 1038,1
,{ 989 },1
,989 },1
avoid,to avoid steps,2
,avoid steps,2
humans,against humans ),1
,against humans in,2
,against humans on,1
,humans ),1
,humans in,2
,humans on,1
select,( select (,6
,select (,6
count:144,) count:144 ),2
,count:144 ),4
,STRING count:144 ),2
<LeftInnerHolesP1>,<CW2> <LeftInnerHolesP1> <LeftInnerHolesP2>,1
,<LeftInnerHolesP1> <LeftInnerHolesP2>,1
<Swap>,STRING <Swap> args:,1
,<Swap> args:,1
<Rules>,STRING <Rules> args:,4
,<Rules> args:,4
,STRING <Rules> (,1
,<Rules> (,1
advanced,) advanced multiplayer,1
,advanced multiplayer,1
thanks,Move thanks to,4
,thanks to,4
990,{ 990 },1
,990 },1
<Board:regions>,) <Board:regions> },2
,<Board:regions> },2
,home <Board:regions> (,1
,<Board:regions> (,1
992,{ 992 },1
,992 },1
Board,sites Board ),353
,Board ),353
,sites Board Vertex,9
,Board Vertex,9
,sites Board Edge,27
,Board Edge,27
,Perforated Board Make,1
,for Board and,1
,Board Make,1
,Board and,1
995,{ 995 },1
,995 },1
996,{ 996 },1
,996 },1
997,1046 997 948,1
,997 948,1
symmetrical,rotational symmetrical play,1
,symmetrical play,1
998,{ 998 },1
,998 },1
<NumOfPlayers:BoardRegions>,) <NumOfPlayers:BoardRegions> },2
,<NumOfPlayers:BoardRegions> },2
999,{ 999 },1
,999 },1
1's,Player 1's move,1
,1's move,1
<NeighborsOf:nbrMax>,le <NeighborsOf:nbrMax> (,1
,<NeighborsOf:nbrMax> (,1
large,a large enough,1
,large enough,1
count:152,STRING count:152 ),2
,count:152 ),2
Sites,count Sites in:,331
,Sites in:,331
,all Sites (,79
,Sites (,80
,all Sites <Board:3dSites>,1
,Sites <Board:3dSites>,1
,count Sites STRING,7
,Sites STRING,7
,Generic Sites that,1
,) Sites that,2
,Sites that,3
,) Sites (,1
,all Sites #1,2
,Sites #1,2
,count Sites Cell,3
,Sites Cell,3
ifAfterwards:<Players:pathRule>,) ifAfterwards:<Players:pathRule> ),1
,ifAfterwards:<Players:pathRule> ),1
<Row:trackCCW2>,STRING <Row:trackCCW2> loop:True,1
,<Row:trackCCW2> loop:True,1
begin,to begin the,1
,begin the,1
SubGrids,Rows SubGrids },4
,SubGrids },4
<CheckmateRule:Move>,play <CheckmateRule:Move> ),1
,<CheckmateRule:Move> ),1
<piece>,{ <piece> },3
,<piece> },3
,{ <piece> <rules>,1
,<piece> <rules>,1
variations:,} variations: {,105
,variations: {,105
<Army>,Step <Army> (,1
,STRING <Army> args:,1
,<Army> (,1
,<Army> args:,1
thinking,are thinking it,1
,thinking it,1
everything,that everything other,1
,from everything },1
,everything other,1
,everything },1
side,each side having,1
,the side of,2
,starting side --COMMA--,2
,far side --COMMA--,1
,farthest side without,1
,side having,1
,side of,2
,side --COMMA--,3
,side without,1
includeSelf:True,) includeSelf:True ),5
,Orthogonal includeSelf:True ),6
,includeSelf:True ),12
,STRING includeSelf:True ),1
<LeftInnerHolesP2>,<LeftInnerHolesP1> <LeftInnerHolesP2> <InitOneSeed>,1
,<LeftInnerHolesP2> <InitOneSeed>,1
traditionally,are traditionally coloured,1
,traditionally coloured,1
Defining,) Defining the,2
,Defining the,2
<Player:startPos>,) <Player:startPos> (,1
,<Player:startPos> (,1
<Scoring:updateOption>,then <Scoring:updateOption> ),1
,<Scoring:updateOption> ),1
count:100,) count:100 state:1,4
,count:100 state:1,4
<Dual:begin>,board <Dual:begin> (,1
,<Dual:begin> (,1
Team2,STRING Team2 STRING,1
,players Team2 ),1
,STRING Team2 ),5
,result Team2 Win,4
,Team2 STRING,1
,Team2 ),6
,Team2 Win,4
sow,( sow #2,3
,sow #2,3
,( sow STRING,136
,sow STRING,136
,( sow ),7
,sow ),7
,( sow (,25
,sow (,25
,( sow numPerHole:2,1
,sow numPerHole:2,1
,( sow numPerHole:,1
,sow numPerHole:,1
,( sow sowEffect:,1
,sow sowEffect:,1
,( sow count:4,1
,( sow count:,8
,sow count:4,1
,sow count:,8
,( sow apply:,60
,sow apply:,60
,we sow only,1
,sow only,1
,( sow if:,22
,sow if:,22
,( sow origin:True,3
,sow origin:True,3
,( sow #1,1
,sow #1,1
,( sow numPerHole:4,4
,sow numPerHole:4,4
,( sow skipIf:,1
,sow skipIf:,1
,( sow count:2,2
,sow count:2,2
,( sow if:True,4
,sow if:True,4
,( sow count:18,1
,sow count:18,1
Team1,players Team1 ),4
,STRING Team1 STRING,1
,STRING Team1 ),5
,result Team1 Win,4
,Team1 ),9
,Team1 STRING,1
,Team1 Win,4
-------------------------------------------------------,Kings ------------------------------------------------------- #1,1
,Castling ------------------------------------------------------- (,1
,Pieces ------------------------------------------------------- (,1
,Hoplites ------------------------------------------------------- #1,1
,Core ------------------------------------------------------- (,1
,------------------------------------------------------- #1,2
,------------------------------------------------------- (,3
different,are different .,1
,different .,1
,of different Boards,1
,different Boards,1
,array different or,1
,different or,1
Cell,count Cell at:,204
,Cell at:,224
,to Cell (,15
,Hidden Cell at:,2
,from Cell (,13
,remove Cell (,6
,Cell (,73
,LastTo Cell ),1
,Cell ),17
,what Cell at:,1
,Occupied Cell (,7
,Incident Cell of:Cell,5
,Cell of:Cell,5
,Incident Cell of:Vertex,3
,sites Cell STRING,7
,Cell of:Vertex,3
,Cell STRING,7
,directions Cell from:,27
,Cell from:,27
,Around Cell (,8
,Empty Cell (,2
,from Cell ),6
,to Cell if:,1
,STRING Cell {,1
,Cell if:,1
,Cell {,1
,Start Cell (,3
,directions Cell from:#1,4
,Cell from:#1,4
,renumber Cell (,1
,Empty Cell ),7
,Incident Cell of:Edge,2
,who Cell at:,1
,Pieces Cell #1,1
,#1 Cell ),1
,STRING Cell 1,1
,STRING Cell 11,2
,STRING Cell 3,1
,STRING Cell 4,1
,Cell of:Edge,2
,Cell #1,2
,Cell 1,1
,Cell 11,2
,Cell 3,1
,Cell 4,1
,ahead Cell #2,10
,Around Cell #1,1
,Around Cell #2,1
,Sites Cell in:,3
,) Cell at:,12
,State Cell at:,1
,Cell #2,11
,Cell in:,3
,values Cell (,16
,} Cell ),2
,forAll Cell (,2
,hint Cell at:,3
<p2_directions>,<p1_directions> <p2_directions> ),6
,<p2_directions> ),6
cycling:-,prevent cycling:- After,1
,cycling:- After,1
<phases:,> <phases: {,1
,<phases: {,1
level,( level ),316
,level ),316
,between level and,1
,level and,1
restrictions,move restrictions that,1
,restrictions that,1
Double,game: Double turns,1
,Double turns,1
use:Vertex>,) use:Vertex> STRING,1
,use:Vertex> STRING,1
CaptureToPieceAndResetCounter,- CaptureToPieceAndResetCounter (,7
,CaptureToPieceAndResetCounter (,7
consumed,1 consumed in,1
,consumed in,1
behind,if behind an,1
,behind an,1
count:120,) count:120 state:1,2
,count:120 state:1,2
Phase,sites Phase 0,44
,Phase 0,44
,sites Phase 1,73
,Phase 1,73
,sites Phase 2,6
,Phase 2,6
,sites Phase <BoardConfig:RegionDarkPhase>,1
,sites Phase <BoardConfig:RegionLightPhase>,1
,sites Phase <BoardConfig:RegionMediumPhase>,1
,Phase <BoardConfig:RegionDarkPhase>,1
,Phase <BoardConfig:RegionLightPhase>,1
,Phase <BoardConfig:RegionMediumPhase>,1
ROUND,ONE ROUND FOR,1
,ROUND FOR,1
<High:value>,0 <High:value> ),1
,6 <High:value> ),1
,<High:value> ),2
by:Mover,Occupied by:Mover ),154
,by:Mover ),158
,Occupied by:Mover top:False,5
,by:Mover top:False,5
,Occupied by:Mover container:,10
,by:Mover container:,10
,Occupied by:Mover STRING,76
,by:Mover STRING,76
,) by:Mover {,3
,of:All by:Mover at:,2
,Occupied by:Mover components:,1
,by:Mover {,3
,by:Mover at:,2
,by:Mover components:,1
,of:P1 by:Mover ),1
,of:P2 by:Mover ),1
,of:P3 by:Mover ),1
,of:P4 by:Mover ),1
,Occupied by:Mover on:Edge,2
,by:Mover on:Edge,2
,Occupied by:Mover top:True,1
,by:Mover top:True,1
total,a total distance,1
,total distance,1
loses,player loses --COMMA--,1
,loses --COMMA--,1
Opponent,STRING Opponent piece,1
,Opponent piece,1
,Notes: Opponent scoring,1
,Opponent scoring,1
Winning,sites Winning Mover,4
,sites Winning Next,4
,Winning Mover,4
,Winning Next,4
<piece_key>,STRING <piece_key> <slide_dir>,3
,<piece_key> <slide_dir>,3
macro,STRING macro because,1
,macro because,1
,This macro defines,1
,macro defines,1
Hexagon,tri Hexagon 7,2
,Hexagon 7,2
,tri Hexagon 3,1
,tri Hexagon 5,1
,Hexagon 3,1
,Hexagon 5,1
,concentric Hexagon rings:3,1
,Hexagon rings:3,1
,hex Hexagon <BoardSize:smallSide>,6
,Hexagon <BoardSize:smallSide>,8
,tri Hexagon <BoardSize:smallSide>,2
,tri Hexagon <Board>,1
,Hexagon <Board>,1
chance,a chance to,1
,chance to,1
control,Flow control for,1
,control for,1
coloured,traditionally coloured red,1
,coloured red,1
loops:3>,) loops:3> <,1
,loops:3> <,1
100,. 100 },1
,100 },1
,) 100 ),25
,100 ),132
,1 100 ),3
,* 100 (,1
,100 (,1
,98 100 101,1
,100 101,2
,0 100 ),1
,pair 100 458,1
,100 458,1
,10 100 ),3
,STRING 100 count:4,1
,100 count:4,1
,2 100 ),2
,3 100 ),2
,4 100 ),2
,5 100 ),2
,6 100 ),2
,7 100 ),2
,8 100 ),2
,9 100 ),2
,29 100 ),2
,30 100 ),2
,31 100 ),1
,32 100 ),1
,35 100 ),1
,36 100 ),1
,39 100 ),1
,40 100 ),1
,41 100 ),2
,42 100 ),2
,43 100 ),2
,21 100 ),1
,22 100 ),1
,25 100 ),1
,26 100 ),1
,11 100 ),15
,12 100 ),15
,13 100 ),1
,14 100 ),1
,15 100 ),1
,16 100 ),1
,17 100 ),1
,18 100 ),1
,19 100 ),1
,20 100 ),1
,57 100 ),2
,58 100 ),2
,59 100 ),2
,60 100 ),2
,61 100 ),1
,62 100 ),1
,63 100 ),1
,64 100 ),1
,69 100 ),1
,70 100 ),1
,71 100 ),1
,72 100 ),1
,77 100 ),1
,78 100 ),1
,79 100 ),1
,80 100 ),1
,81 100 ),1
,44 100 ),1
,49 100 ),1
,50 100 ),1
,51 100 ),1
,52 100 ),1
,< 100 >,11
,100 >,11
,about 100 moves,1
,100 moves,1
,{ 100 101,1
,91 100 109,1
,93 100 .,1
,100 109,1
,100 .,1
,80 100 120,2
,100 120,2
Variants,Chess Variants --COMMA--,1
,Variants --COMMA--,1
101,) 101 ),1
,101 ),4
,face 101 ),1
,100 101 103,1
,101 103,1
,pair 101 459,1
,101 459,1
,STRING 101 ),1
,12 101 ),1
,STRING 101 count:4,1
,101 count:4,1
,115 101 43,1
,101 43,1
,94 101 102,1
,100 101 },1
,101 102,2
,101 },1
,{ 101 102,1
,89 101 113,1
,101 113,1
,92 101 110,1
,{ 101 4,1
,101 110,1
,101 4,1
,119 101 85,1
,101 85,1
102,118 102 142,1
,102 142,1
,) 102 ),1
,102 ),3
,face 102 ),1
,99 102 },1
,102 },3
,pair 102 460,1
,102 460,1
,14 102 ),1
,STRING 102 count:4,1
,102 count:4,1
,117 102 87,1
,102 87,1
,101 102 103,2
,102 103,3
,{ 102 114,1
,{ 102 103,1
,92 102 },1
,102 114,1
,93 102 111,1
,. 102 109,1
,102 111,1
,102 109,1
,{ 102 },1
,118 102 119,1
,102 119,1
103,) 103 ),1
,103 ),2
,101 103 },1
,103 },4
,pair 103 7,1
,103 7,1
,16 103 ),1
,STRING 103 count:4,1
,103 count:4,1
,93 103 104,2
,103 104,3
,102 103 111,1
,{ 103 111,1
,103 111,2
,102 103 },1
,91 103 115,1
,102 103 104,1
,93 103 },1
,103 115,1
,94 103 112,1
,96 103 .,1
,103 112,1
,103 .,1
,{ 103 },1
104,) 104 ),1
,104 ),2
,{ 104 },2
,104 },4
,pair 104 8,1
,104 8,1
,18 104 ),1
,STRING 104 count:8,1
,104 count:8,1
,colour 104 120,1
,104 120,1
,103 104 105,2
,104 105,2
,97 104 109,1
,104 109,1
,103 104 },1
,94 104 },1
,95 104 113,1
,{ 104 2,1
,104 113,1
,104 2,1
105,pair 105 9,1
,105 9,1
,20 105 ),1
,STRING 105 value:1,1
,105 ),1
,105 value:1,1
,104 105 111,2
,105 111,2
,{ 105 106,1
,93 105 },1
,105 106,1
,105 },3
,. 105 },1
,96 105 114,1
,. 105 112,1
,105 114,1
,105 112,1
,{ 105 },1
106,{ 106 .,2
,106 .,3
,82 106 130,1
,106 130,1
,pair 106 10,1
,106 10,1
,22 106 ),1
,STRING 106 ),1
,106 ),2
,105 106 107,1
,94 106 118,1
,{ 106 107,1
,96 106 },1
,106 107,2
,106 118,1
,106 },1
,97 106 115,1
,99 106 .,1
,106 115,1
,91 106 123,1
,106 123,1
107,44 107 },1
,44 107 98,1
,107 },3
,107 98,1
,pair 107 297,1
,107 297,1
,156 107 58,1
,107 58,1
,24 107 ),1
,STRING 107 count:4,1
,107 ),1
,107 count:4,1
,106 107 },1
,95 107 119,1
,106 107 108,1
,97 107 },1
,107 119,1
,107 108,1
,98 107 116,1
,107 116,1
108,rotate 108 (,3
,108 (,3
,pair 108 298,1
,108 298,1
,87 108 115,1
,49 108 ),1
,108 115,1
,108 ),1
,107 108 },1
,98 108 },1
,108 },4
,99 108 117,1
,. 108 },1
,108 117,1
,{ 108 },1
,109 108 124,1
,108 124,1
109,54 109 .,1
,109 .,2
,85 109 133,1
,109 133,1
,pair 109 295,1
,109 295,1
,104 109 110,1
,109 110,2
,{ 109 110,1
,97 109 121,1
,109 121,1
,100 109 118,1
,102 109 .,1
,{ 109 6,1
,109 118,1
,109 6,1
,{ 109 },1
,109 },1
,94 109 108,1
,109 108,1
,58 109 115,1
,109 115,1
10>,. 10> <50,1
,10> <50,1
,. 10> <17,1
,10> <17,1
,<5 10> STRING,1
,10> STRING,1
,<12 10> <,1
,10> <,1
<p3_dirs>,<p2_dirs> <p3_dirs> ),1
,<p3_dirs> ),1
upper,) upper limit,1
,upper limit,1
stopIncluded:True,) stopIncluded:True ),7
,stopIncluded:True ),7
,) stopIncluded:True distance:,1
,stopIncluded:True distance:,1
somewhere,it somewhere around,1
,somewhere around,1
<Board:track1>,STRING <Board:track1> loop:True,1
,<Board:track1> loop:True,1
110,pair 110 296,1
,110 296,1
,0 110 ),2
,110 ),2
,92 110 120,1
,110 120,1
,109 110 115,1
,110 115,1
,109 110 },1
,98 110 122,1
,110 },1
,110 122,1
,101 110 119,1
,110 119,1
Farthest,LineOfSight Farthest at:,4
,Farthest at:,4
111,5 111 ),1
,111 ),3
,23 111 ),1
,pair 111 461,1
,111 461,1
,105 111 112,2
,97 111 121,1
,111 112,3
,111 121,1
,145 111 ),1
,103 111 112,1
,103 111 },1
,111 },3
,102 111 120,1
,. 111 },1
,{ 111 1,1
,111 120,1
,111 1,1
,{ 111 },1
112,rotate 112 .,1
,130 112 88,1
,112 .,2
,112 88,1
,24 112 ),1
,pair 112 462,1
,112 ),1
,112 462,1
,111 112 113,2
,112 113,3
,111 112 115,1
,112 115,1
,{ 112 113,1
,{ 112 124,1
,112 124,1
,103 112 121,1
,105 112 .,1
,112 121,1
113,129 113 .,1
,113 .,1
,pair 113 463,1
,113 463,1
,112 113 119,2
,113 119,2
,112 113 114,1
,101 113 125,1
,113 114,1
,113 125,1
,104 113 122,1
,113 122,1
114,. 114 123,1
,114 123,2
,pair 114 464,1
,114 464,1
,113 114 115,1
,102 114 },1
,114 115,1
,114 },4
,. 114 },2
,105 114 123,1
,{ 114 },1
,82 114 150,1
,114 150,1
115,75 115 99,1
,115 99,1
,pair 115 465,1
,143 115 ),1
,115 465,1
,115 ),2
,108 115 ),1
,129 115 101,1
,115 101,1
,112 115 116,1
,110 115 122,1
,115 116,2
,115 122,1
,114 115 116,1
,103 115 127,1
,115 127,1
,{ 115 .,2
,106 115 124,1
,115 .,2
,115 124,2
,109 115 124,1
116,{ 116 179,1
,125 116 179,1
,116 179,2
,pair 116 466,1
,144 116 ),1
,116 466,1
,116 ),1
,117 116 228,1
,116 228,1
,29 116 117,1
,116 117,1
,115 116 119,1
,116 119,1
,115 116 },1
,{ 116 128,1
,116 },2
,116 128,1
,107 116 125,1
,116 125,1
,{ 116 },1
,99 116 10,1
,116 10,1
117,. 117 98,1
,117 98,1
,pair 117 27,1
,117 27,1
,166 117 116,1
,117 116,1
,116 117 102,1
,117 102,1
,108 117 126,1
,. 117 124,1
,{ 117 3,1
,117 126,1
,117 124,1
,117 3,1
,137 117 97,1
,117 97,1
118,78 118 102,1
,118 102,2
,pair 118 28,1
,118 28,1
,{ 118 119,1
,106 118 130,1
,118 119,1
,118 130,1
,109 118 127,1
,{ 118 .,1
,118 127,1
,118 .,1
,135 118 102,1
119,59 119 .,1
,119 .,2
,{ 119 .,1
,pair 119 21,1
,119 21,1
,113 119 120,2
,119 120,3
,116 119 120,1
,118 119 },1
,107 119 131,1
,119 },1
,119 131,1
,110 119 128,1
,119 128,1
,139 119 99,1
,119 99,1
,99 119 139,1
,102 119 101,1
,119 139,1
,119 101,1
draws,player draws .,1
,draws .,1
drawn,functions drawn from,9
,drawn from,9
11>,. 11> <20,1
,11> <20,1
<Board:track2>,STRING <Board:track2> loop:True,5
,<Board:track2> loop:True,5
,) <Board:track2> },1
,<Board:track2> },1
Spartan,out Spartan castling,1
,Spartan castling,1
Ghora,) Ghora (,1
,Ghora (,1
value:100,state:1 value:100 ),3
,state:8 value:100 ),150
,value:100 ),153
Comment:,Comment: That,1
<directionScored>,<diagShow> <directionScored> },3
,<directionScored> },3
remaining,the remaining player,1
,remaining player,1
,the remaining steps,1
,the remaining step,1
,on remaining influence,1
,remaining steps,1
,remaining step,1
,remaining influence,1
120,136 120 166,1
,120 166,1
,122 120 121,1
,120 121,4
,pair 120 22,1
,120 22,1
,face 120 ),1
,120 ),9
,37 120 ),1
,38 120 ),1
,73 120 ),1
,74 120 ),1
,75 120 ),1
,76 120 ),1
,104 120 96,1
,120 96,1
,255 120 ),2
,119 120 121,3
,110 120 134,1
,120 134,1
,111 120 129,1
,. 120 127,1
,120 129,1
,120 127,1
,100 120 140,2
,120 140,2
121,120 121 },1
,3 121 ),1
,121 },3
,121 ),2
,pair 121 21,1
,121 21,1
,face 121 ),1
,120 121 122,3
,111 121 139,1
,121 122,4
,121 139,1
,{ 121 122,1
,109 121 },1
,112 121 130,1
,{ 121 .,1
,{ 121 5,1
,121 130,1
,121 .,1
,121 5,1
,{ 121 },1
,138 121 89,1
,121 89,1
122,. 122 120,1
,122 120,1
,pair 122 22,1
,122 22,1
,face 122 ),1
,122 ),1
,121 122 123,3
,122 123,3
,115 122 125,1
,122 125,1
,121 122 },1
,110 122 134,1
,122 },1
,122 134,1
,113 122 131,1
,122 131,1
,184 122 142,1
,122 142,1
,214 122 158,1
,122 158,1
123,114 123 .,1
,123 .,1
,139 123 82,1
,123 82,1
,pair 123 131,1
,123 131,1
,face 123 ),1
,123 ),1
,122 123 133,2
,123 133,2
,122 123 124,1
,123 124,1
,. 123 },1
,114 123 132,1
,. 123 130,1
,123 },1
,123 132,1
,123 130,1
,106 123 159,1
,123 159,1
124,pair 124 132,1
,124 132,1
,colour 124 145,1
,124 145,1
,123 124 125,1
,124 125,2
,{ 124 125,1
,112 124 },1
,124 },2
,{ 124 .,1
,115 124 133,1
,117 124 .,1
,{ 124 2,1
,124 .,2
,124 133,1
,124 2,1
,{ 124 },1
,267 124 144,1
,124 144,1
,108 124 160,1
,124 160,1
,115 124 97,1
,124 97,1
125,134 125 116,1
,125 116,1
,pair 125 139,1
,125 139,1
,138 125 ),1
,125 ),1
,124 125 126,1
,122 125 126,1
,125 126,2
,124 125 },1
,113 125 137,1
,125 },2
,125 137,1
,116 125 134,1
,{ 125 6,1
,125 134,1
,125 6,1
,{ 125 },1
126,142 126 85,1
,126 85,1
,139 126 .,1
,126 .,1
,pair 126 140,1
,126 140,1
,colour 126 130,2
,126 130,2
,125 126 },1
,125 126 133,1
,126 },1
,126 133,2
,117 126 135,1
,. 126 133,1
,126 135,1
,128 126 166,1
,126 166,1
127,pair 127 215,1
,127 215,1
,{ 127 },3
,127 },3
,{ 127 128,1
,115 127 139,1
,127 128,1
,127 139,1
,118 127 136,1
,120 127 .,1
,127 136,1
,127 .,1
,160 127 163,1
,127 163,1
128,pair 128 216,1
,128 216,1
,127 128 },1
,116 128 },1
,128 },2
,119 128 137,1
,{ 128 9,1
,128 137,1
,128 9,1
,129 128 126,1
,128 126,1
129,64 129 .,1
,129 .,1
,. 129 113,1
,129 113,1
,130 129 115,1
,129 115,1
,120 129 138,1
,. 129 136,1
,129 138,1
,129 136,1
,{ 129 },1
,129 },1
,130 129 128,1
,129 128,1
conditions,victory conditions for,1
,victory conditions depend,1
,conditions for,1
,conditions depend,1
,then conditions (,1
,pass conditions (,1
,conditions (,2
12>,. 12> <23,1
,12> <23,1
,<14 12> <,1
,12> <,1
<Scenario>,STRING <Scenario> args:,1
,<Scenario> args:,1
<controlType>,{ <controlType> },2
,<controlType> },2
<Throw>,<Dice> <Throw> (,1
,STRING <Throw> args:,1
,<Throw> (,1
,<Throw> args:,1
count:,) count: (,451
,count: (,466
,sow count: (,8
,STRING count: (,6
,} count: (,1
<fwd_dir>,STRING <fwd_dir> <back_dir>,5
,<fwd_dir> <back_dir>,5
,of <fwd_dir> .,1
,<fwd_dir> .,1
130,106 130 112,1
,130 112,1
,179 130 81,1
,130 81,1
,87 130 129,1
,130 129,2
,126 130 156,2
,130 156,2
,{ 130 131,1
,118 130 142,1
,130 131,1
,130 142,1
,121 130 139,1
,123 130 .,1
,130 139,1
,130 .,1
,150 130 129,1
131,. 131 140,1
,131 140,2
,123 131 ),1
,131 ),1
,130 131 },1
,119 131 },1
,131 },2
,122 131 140,1
,{ 131 7,1
,131 7,1
,132 131 149,1
,131 149,1
workaround,bug workaround (,2
,bug workaround },1
,workaround (,2
,workaround },1
132,124 132 ),1
,132 ),1
,. 132 },1
,123 132 141,1
,. 132 139,1
,{ 132 4,1
,132 },2
,132 141,1
,132 139,1
,132 4,1
,{ 132 },1
,93 132 133,1
,132 133,1
,150 132 131,1
,132 131,1
133,109 133 91,1
,133 91,1
,pair 133 467,1
,133 467,1
,123 133 134,2
,133 134,2
,126 133 140,1
,133 140,1
,{ 133 .,1
,124 133 142,1
,126 133 .,1
,133 .,2
,133 142,1
,{ 133 },1
,133 },1
,132 133 172,1
,133 172,1
134,143 134 125,1
,134 125,1
,pair 134 468,1
,134 468,1
,133 134 135,2
,120 134 147,1
,134 135,3
,134 147,1
,{ 134 135,1
,122 134 146,1
,134 146,1
,125 134 144,1
,134 144,1
current,our current role,2
,current role,2
,its current implementation,1
,current implementation,1
,their current space---West,1
,the current space,1
,the current move,1
,current space---West,1
,current space,1
,current move,1
135,rotate 135 (,3
,135 (,3
,6 135 ),1
,135 ),1
,pair 135 445,1
,135 445,1
,134 135 136,2
,135 136,2
,134 135 },1
,{ 135 147,1
,135 },3
,135 147,1
,126 135 145,1
,. 135 },1
,{ 135 8,1
,135 145,1
,135 8,1
,{ 135 },1
,95 135 155,1
,135 155,1
,153 135 118,1
,135 118,1
136,96 136 120,1
,136 120,1
,pair 136 446,1
,136 446,1
,135 136 137,2
,136 137,2
,127 136 146,1
,129 136 .,1
,136 146,1
,136 .,1
137,{ 137 .,1
,137 .,1
,pair 137 335,1
,137 335,1
,186 137 88,1
,137 88,1
,136 137 143,2
,137 143,2
,{ 137 138,1
,125 137 149,1
,137 138,1
,137 149,1
,128 137 147,1
,137 147,1
,{ 137 },1
,137 },1
,157 137 117,1
,137 117,1
<Version:limit>,) <Version:limit> ),1
,<Version:limit> ),1
Piece,forEach Piece ),532
,Piece ),532
,forEach Piece STRING,215
,Piece STRING,215
,forEach Piece top:True,49
,Piece top:True,49
,forEach Piece (,97
,Piece (,97
,forEach Piece container:,41
,Piece container:,41
,forEach Piece P1,7
,forEach Piece P2,5
,forEach Piece P3,4
,forEach Piece P4,2
,forEach Piece P5,1
,forEach Piece P6,1
,Piece P1,7
,Piece P2,5
,Piece P3,4
,Piece P4,2
,Piece P5,1
,Piece P6,1
,value Piece at:,98
,Piece at:,106
,forEach Piece {,32
,Piece {,32
,forEach Piece container:1,1
,Piece container:1,1
,value Piece at:#1,1
,Piece at:#1,1
,forEach Piece Next,96
,Piece Next,96
,forEach Piece #1,5
,Piece #1,5
,. Piece Movement:,1
,Piece Movement:,1
,Large Piece Name,1
,Small Piece Name,1
,Piece Name,2
,Each Piece moving,2
,Piece moving,2
,forEach Piece Shared,1
,Piece Shared,1
,forEach Piece on:Vertex,1
,forEach Piece on:Edge,1
,forEach Piece on:Cell,1
,Piece on:Vertex,1
,Piece on:Edge,1
,Piece on:Cell,1
,LineOfSight Piece at:,8
,forEach Piece <Version:consequence>,1
,Piece <Version:consequence>,1
138,pair 138 336,1
,138 336,1
,187 138 89,1
,138 89,1
,155 138 125,1
,138 125,1
,137 138 139,1
,{ 138 150,1
,138 139,1
,138 150,1
,129 138 148,1
,. 138 },1
,138 148,1
,138 },1
,157 138 121,1
,138 121,1
139,69 139 .,1
,139 .,2
,99 139 123,1
,139 123,1
,. 139 126,1
,139 126,1
,125 139 ),1
,pair 139 469,1
,139 ),1
,139 469,1
,121 139 },1
,139 },2
,138 139 },1
,127 139 151,1
,139 151,1
,130 139 149,1
,132 139 .,1
,{ 139 1,1
,139 149,1
,139 1,1
,159 139 119,1
,139 119,1
,119 139 159,1
,139 159,1
Limping,tri Limping 3,1
,tri Limping 4,3
,Limping 3,2
,Limping 4,4
,hex Limping <Board:size>,1
,Limping <Board:size>,1
,hex Limping (,5
,Limping (,7
,tri Limping (,2
,hex Limping 2,1
,hex Limping 3,1
,hex Limping 4,1
,hex Limping 5,1
,hex Limping 6,1
,hex Limping 10,1
,Limping 2,1
,Limping 5,2
,Limping 6,1
,Limping 10,1
,tri Limping 5,1
13>,. 13> <26,1
,13> <26,1
<Step,> <Step (,1
,<Step (,1
<Board:EnemyTrack1>,STRING <Board:EnemyTrack1> P1,1
,<Board:EnemyTrack1> P1,1
store,We store the,3
,store the,3
Pawn2Start,> Pawn2Start <0>,1
,> Pawn2Start <2>,1
,Pawn2Start <0>,1
,Pawn2Start <2>,1
140,131 140 .,1
,140 .,1
,126 140 ),1
,pair 140 470,1
,140 ),1
,140 470,1
,133 140 143,1
,140 143,1
,131 140 150,1
,140 150,1
,{ 140 },1
,140 },1
,120 140 160,1
,140 160,1
,120 140 1,1
,140 1,1
141,pair 141 471,1
,141 471,1
,92 141 190,1
,141 190,1
,{ 141 142,1
,{ 141 153,1
,141 142,1
,141 153,1
,. 141 },2
,132 141 151,1
,141 },2
,141 151,1
142,102 142 126,1
,142 126,1
,pair 142 472,1
,142 472,1
,191 142 93,1
,142 93,1
,97 142 143,1
,142 143,1
,141 142 },1
,130 142 154,1
,142 },2
,142 154,1
,{ 142 144,2
,133 142 152,1
,143 142 144,1
,{ 142 152,1
,142 144,3
,142 152,2
,{ 142 },1
,122 142 162,1
,142 162,1
143,80 143 },1
,80 143 134,1
,143 },2
,143 134,1
,pair 143 115,1
,143 115,1
,137 143 144,2
,143 144,2
,142 143 152,1
,143 152,1
,140 143 150,1
,{ 143 },1
,143 150,1
,352 143 142,1
,{ 143 153,1
,352 143 73,1
,143 142,1
,143 153,1
,143 73,1
,144 143 162,1
,143 162,1
144,160 144 232,1
,144 232,1
,0 144 ),1
,144 ),2
,pair 144 116,1
,144 116,1
,{ 144 .,1
,P1 144 ),1
,144 .,2
,143 144 145,2
,144 145,4
,142 144 .,1
,134 144 154,1
,142 144 145,2
,{ 144 154,1
,144 154,2
,124 144 164,1
,144 164,1
,200 144 143,1
,144 143,1
145,pair 145 473,1
,145 473,1
,96 145 92,1
,145 92,1
,144 145 146,2
,145 146,2
,124 145 111,1
,145 111,1
,135 145 155,1
,144 145 152,1
,144 145 },1
,{ 145 155,1
,145 155,2
,145 152,1
,145 },2
,{ 145 },1
diagonals:Solid,2 diagonals:Solid ),4
,diagonals:Solid ),18
,7 diagonals:Solid ),5
,3 diagonals:Solid ),4
,13 diagonals:Solid ),1
,5 diagonals:Solid ),3
,6 diagonals:Solid ),1
146,pair 146 474,1
,146 474,1
,145 146 151,2
,146 151,2
,{ 146 147,1
,134 146 },1
,146 147,1
,146 },2
,136 146 156,1
,{ 146 .,1
,{ 146 2,1
,146 156,1
,146 .,1
,146 2,1
,{ 146 },1
147,163 147 187,1
,147 187,1
,pair 147 475,1
,147 475,1
,134 147 },1
,147 },3
,146 147 },1
,135 147 },1
,137 147 157,1
,147 157,1
148,. 148 157,1
,148 157,1
,pair 148 476,1
,148 476,1
,P2 148 ),1
,148 ),1
,138 148 158,1
,. 148 156,1
,{ 148 9,1
,148 158,1
,148 156,1
,148 9,1
,{ 148 },1
,148 },1
,186 148 185,1
,148 185,1
bug,STRING bug adds,1
,bug adds,1
,) bug workaround,3
,bug workaround,3
149,74 149 .,1
,149 .,2
,39 149 ),1
,pair 149 345,1
,149 ),1
,149 345,1
,{ 149 151,1
,149 151,1
,{ 149 150,1
,137 149 },1
,149 150,1
,149 },1
,139 149 159,1
,{ 149 .,1
,149 159,1
,131 149 186,1
,149 186,1
<Board:EnemyTrack2>,STRING <Board:EnemyTrack2> P2,1
,<Board:EnemyTrack2> P2,1
<coyote>,{ <coyote> },1
,<coyote> },1
stones,enemy stones from,1
,stones from,1
fourth,) fourth hole,1
,fourth hole,1
<method>,{ <method> },1
,<method> },1
intervene,( intervene (,4
,intervene (,4
but,around but not,1
,but not,3
,) but specified,1
,but specified,1
,--COMMA-- but can,1
,but can,1
,--COMMA-- but essential,1
,but essential,1
,) but not,2
after:,) after: (,57
,after: (,57
available,Only available from,1
,available from,2
,colour available from,1
,be available to,1
,pieces available --COMMA--,1
,becomes available for,1
,available to,1
,available --COMMA--,1
,available for,1
1-stack,( 1-stack ),1
,1-stack ),1
150,166 150 190,1
,150 190,1
,40 150 ),1
,pair 150 346,1
,150 ),2
,150 346,1
,12 150 ),1
,< 150 >,2
,150 >,2
,143 150 158,1
,150 158,1
,149 150 151,1
,138 150 },1
,150 151,1
,150 },1
,140 150 160,1
,150 160,1
,169 150 130,1
,150 130,1
,114 150 132,1
,150 132,1
151,pair 151 477,1
,151 477,1
,. 151 },2
,151 },4
,146 151 152,2
,149 151 152,1
,151 152,3
,150 151 },1
,139 151 },1
,141 151 161,1
,. 151 159,1
,151 161,1
,151 159,1
152,{ 152 215,1
,161 152 215,1
,152 215,2
,pair 152 478,1
,152 478,1
,151 152 153,3
,152 153,3
,143 152 },1
,152 },2
,{ 152 154,1
,142 152 162,2
,145 152 154,1
,153 152 154,1
,152 154,3
,152 162,2
,{ 152 },1
<BoardConfig:RookLeft2Start>,2 <BoardConfig:RookLeft2Start> ),1
,{ <BoardConfig:RookLeft2Start> <BoardConfig:RookRight2Start>,1
,<BoardConfig:RookLeft2Start> ),1
,<BoardConfig:RookLeft2Start> <BoardConfig:RookRight2Start>,1
153,pair 153 13,1
,153 13,1
,152 153 154,3
,153 154,4
,{ 153 154,1
,141 153 },1
,153 },1
,353 153 152,1
,143 153 163,1
,353 153 83,1
,153 152,1
,153 163,1
,153 83,1
,207 153 135,1
,153 135,1
HintRegions,regions HintRegions ),2
,HintRegions ),3
,STRING HintRegions ),1
154,219 154 178,1
,154 178,1
,pair 154 14,1
,154 14,1
,153 154 155,3
,154 155,5
,153 154 },1
,142 154 },1
,154 },3
,152 154 .,1
,144 154 164,2
,152 154 155,2
,154 .,1
,154 164,2
,{ 154 },1
155,pair 155 211,1
,155 211,1
,colour 155 160,1
,155 160,1
,154 155 156,3
,155 156,3
,colour 155 138,1
,155 138,1
,145 155 165,2
,154 155 162,1
,154 155 },1
,155 165,2
,155 162,1
,155 },1
,135 155 175,1
,155 175,1
156,pair 156 212,1
,156 212,1
,205 156 107,1
,156 107,1
,130 156 ),2
,156 ),2
,155 156 157,3
,156 157,3
,146 156 166,1
,148 156 .,1
,156 166,1
,156 .,1
157,148 157 .,1
,157 .,2
,rotate 157 .,1
,222 157 181,1
,157 181,1
,pair 157 479,1
,279 157 ),1
,157 479,1
,157 ),1
,156 157 167,2
,156 157 158,1
,157 167,3
,157 158,1
,147 157 167,1
,{ 157 5,1
,157 5,1
,177 157 137,1
,157 137,1
,175 157 138,1
,157 138,1
<Row:trackCW1>,STRING <Row:trackCW1> loop:True,1
,<Row:trackCW1> loop:True,1
158,pair 158 480,1
,280 158 ),1
,158 480,1
,158 ),1
,157 158 159,1
,158 159,1
,150 158 165,1
,158 165,1
,148 158 168,1
,. 158 166,1
,158 168,1
,158 166,1
,{ 158 },1
,158 },1
,122 158 80,1
,158 80,1
159,79 159 .,1
,159 .,2
,7 159 ),1
,159 ),1
,pair 159 57,1
,159 57,1
,158 159 },1
,159 },2
,149 159 169,1
,151 159 .,1
,159 169,1
,{ 159 },1
,179 159 139,1
,159 139,1
,139 159 18,1
,123 159 196,1
,159 18,1
,159 196,1
<choice>,{ <choice> },1
,<choice> },1
<80>,STRING <80> <,3
,<80> <,3
,STRING <80> STRING,1
,<80> STRING,1
components:#3,#2 components:#3 ),1
,components:#3 ),1
variant,chess variant played,1
,another variant --COMMA--,1
,variant played,1
,variant --COMMA--,1
15>,. 15> <48,1
,15> <48,1
Attacking,building Attacking a,1
,STRING Attacking a,1
,Attacking a,2
d:2,dice d:2 from:0,72
,d:2 from:0,72
,dice d:2 facesByDie:,6
,d:2 facesByDie:,6
<SType>,STRING <SType> args:,2
,<SType> args:,2
d:4,dice d:4 faces:,5
,d:4 faces:,5
,dice d:4 num:2,3
,d:4 num:2,3
,dice d:4 num:1,1
,d:4 num:1,1
,dice d:4 from:2,1
,d:4 from:2,1
,dice d:4 from:0,1
,d:4 from:0,1
d:7,dice d:7 num:3,2
,d:7 num:3,2
,dice d:7 num:1,1
,d:7 num:1,1
,dice d:7 from:0,1
,d:7 from:0,1
<Play:doubleStep>,) <Play:doubleStep> STRING,1
,<Play:doubleStep> STRING,1
d:6,dice d:6 num:3,6
,d:6 num:3,6
,dice d:6 num:<Dice:num>,3
,d:6 num:<Dice:num>,3
,dice d:6 num:2,25
,d:6 num:2,25
,dice d:6 num:1,1
,d:6 num:1,1
,dice d:6 num:6,1
,d:6 num:6,1
,dice d:6 from:1,4
,d:6 from:1,4
d:9,dice d:9 from:0,1
,d:9 from:0,1
Territory,size Territory P1,8
,size Territory P2,8
,Territory P1,8
,Territory P2,8
d:8,dice d:8 faces:,1
,d:8 faces:,1
,dice d:8 num:1,1
,d:8 num:1,1
<Size>,Diamond <Size> ),1
,STRING <Size> args:,9
,<Size> ),8
,<Size> args:,9
,Prism <Size> ),1
,<Shape> <Size> ),1
,<Board> <Size> ),1
,square <Size> ),2
,1 <Size> ),1
,of:1 <Size> ),1
160,226 160 144,1
,160 144,1
,pair 160 58,1
,160 58,1
,face 160 ),1
,160 ),1
,155 160 195,1
,160 195,1
,150 160 170,1
,{ 160 4,1
,160 170,1
,160 4,1
,140 160 180,1
,160 180,1
,124 160 127,1
,160 127,1
161,170 161 152,1
,161 152,1
,63 161 ),1
,pair 161 453,1
,161 ),2
,161 453,1
,face 161 ),1
,. 161 },1
,151 161 171,1
,. 161 169,1
,161 },1
,161 171,1
,161 169,1
,199 161 198,1
,161 198,1
<Variant:endRule>,) <Variant:endRule> ),1
,<Variant:endRule> ),1
162,64 162 ),1
,pair 162 454,1
,162 ),2
,162 454,1
,face 162 ),1
,{ 162 164,1
,152 162 },1
,155 162 164,1
,163 162 164,1
,152 162 172,1
,162 164,3
,162 },1
,162 172,1
,142 162 182,1
,162 182,1
,143 162 199,1
,162 199,1
163,229 163 147,1
,163 147,1
,pair 163 201,1
,163 201,1
,face 163 ),1
,163 ),1
,354 163 162,1
,153 163 173,1
,354 163 },1
,{ 163 3,1
,163 162,1
,163 173,1
,163 },1
,163 3,1
,127 163 200,1
,163 200,1
164,pair 164 202,1
,164 202,1
,162 164 .,1
,154 164 },1
,162 164 165,2
,154 164 174,1
,164 .,1
,164 },1
,164 165,2
,164 174,1
,144 164 184,1
,164 184,1
165,. 165 174,1
,165 174,1
,36 165 .,1
,165 .,1
,pair 165 481,1
,165 481,1
,158 165 166,1
,165 166,1
,155 165 },1
,164 165 },2
,155 165 175,1
,165 },4
,165 175,1
,{ 165 },1
166,120 166 150,1
,166 150,1
,pair 166 482,1
,166 482,1
,215 166 117,1
,166 117,1
,165 166 173,1
,166 173,1
,156 166 },1
,158 166 .,1
,166 },2
,166 .,1
,{ 166 },1
,126 166 167,1
,166 167,1
Persians,the Persians and,1
,Persians and,1
167,37 167 ),1
,169 167 ),1
,237 167 ),1
,167 ),3
,157 167 168,2
,167 168,2
,157 167 },1
,{ 167 1,1
,167 },2
,167 1,1
,{ 167 },1
,166 167 186,1
,167 186,1
168,184 168 232,1
,168 232,1
,. 168 },2
,168 },3
,38 168 ),1
,170 168 ),1
,238 168 ),1
,168 ),3
,167 168 169,2
,168 169,2
,158 168 },1
169,84 169 .,1
,169 .,2
,pair 169 167,1
,235 169 ),1
,169 167,1
,169 ),1
,168 169 170,2
,169 170,2
,159 169 },1
,161 169 .,1
,169 },2
,{ 169 },1
,189 169 150,1
,169 150,1
,242 169 224,1
,169 224,1
<81>,<9> <81> <369>,1
,<81> <369>,1
<enemyHops>,{ <enemyHops> <friendHops>,1
,<enemyHops> <friendHops>,1
hint,( hint ),4
,( hint 1,2
,( hint 3,2
,( hint 5,3
,( hint 7,3
,( hint 9,2
,( hint 13,2
,( hint 16,2
,( hint 21,2
,( hint 22,2
,( hint 23,2
,( hint 27,1
,( hint 28,1
,( hint 30,1
,( hint 32,1
,( hint 34,1
,( hint 35,2
,( hint 37,1
,( hint 38,1
,( hint 40,1
,( hint 42,1
,( hint 45,2
,( hint 46,1
,( hint 49,1
,( hint 50,1
,( hint 54,1
,( hint 56,2
,( hint 60,1
,( hint 63,1
,( hint 68,1
,( hint 69,1
,( hint 75,2
,( hint 77,1
,( hint 81,1
,( hint 84,1
,( hint 89,1
,( hint 96,2
,( hint 98,1
,( hint 99,1
,hint ),4
,hint 1,2
,hint 3,2
,hint 5,3
,hint 7,3
,hint 9,2
,hint 13,2
,hint 16,2
,hint 21,2
,hint 22,2
,hint 23,2
,hint 27,1
,hint 28,1
,hint 30,1
,hint 32,1
,hint 34,1
,hint 35,2
,hint 37,1
,hint 38,1
,hint 40,1
,hint 42,1
,hint 45,2
,hint 46,1
,hint 49,1
,hint 50,1
,hint 54,1
,hint 56,2
,hint 60,1
,hint 63,1
,hint 68,1
,hint 69,1
,hint 75,2
,hint 77,1
,hint 81,1
,hint 84,1
,hint 89,1
,hint 96,2
,hint 98,1
,hint 99,1
,( hint {,830
,hint {,830
,( hint Cell,3
,hint Cell,3
,( hint 0,1
,( hint 2,1
,( hint 4,1
,( hint 6,1
,( hint 8,2
,( hint 10,2
,( hint 11,1
,( hint 12,1
,( hint 14,1
,( hint 15,1
,( hint 17,1
,( hint 18,1
,( hint 19,2
,( hint 20,1
,( hint 24,2
,hint 0,1
,hint 2,1
,hint 4,1
,hint 6,1
,hint 8,2
,hint 10,2
,hint 11,1
,hint 12,1
,hint 14,1
,hint 15,1
,hint 17,1
,hint 18,1
,hint 19,2
,hint 20,1
,hint 24,2
,( hint 29,1
,( hint 39,1
,( hint 41,1
,( hint 51,1
,( hint 61,1
,( hint 70,1
,( hint 72,1
,( hint 73,1
,hint 29,1
,hint 39,1
,hint 41,1
,hint 51,1
,hint 61,1
,hint 70,1
,hint 72,1
,hint 73,1
<hand>,{ <hand> <start>,1
,<hand> <start>,1
General,noted General functions,8
,General functions,8
,Silver General (,8
,Gold General (,8
,General (,22
,) General (,6
higher,is higher to,1
,higher to,1
implements,Script implements it's,1
,implements it's,1
by:,Occupied by: (,2
,by: (,2
pending,the pending value,2
,pending value,2
,in pending the,1
,pending the,1
170,179 170 161,1
,170 161,1
,pair 170 168,1
,236 170 ),1
,170 168,1
,170 ),1
,169 170 171,2
,170 171,2
,160 170 },1
,170 },1
171,187 171 211,1
,171 211,1
,pair 171 483,1
,171 483,1
,170 171 172,2
,171 172,2
,. 171 },2
,161 171 },1
,{ 171 6,1
,171 },4
,171 6,1
,{ 171 },1
,172 171 189,1
,171 189,1
172,pair 172 484,1
,172 484,1
,171 172 173,2
,172 173,3
,173 172 174,1
,162 172 362,1
,{ 172 174,1
,{ 172 9,1
,172 174,2
,172 362,1
,172 9,1
,133 172 173,1
,244 172 171,1
,172 171,1
infantry,that infantry can,1
,just infantry ),1
,and infantry ),1
,infantry can,1
,infantry ),2
Liberty,and Liberty determinations,1
,Liberty determinations,1
What,Hidden What (,10
,What (,10
,Hidden What at:,38
,What at:,38
,Hidden What to:Mover,8
,{ What Who,2
,What to:Mover,8
,What Who,2
,Hidden What to:#1,2
,{ What State,2
,What to:#1,2
,What State,2
173,pair 173 485,1
,303 173 ),1
,173 485,1
,173 ),1
,172 173 178,2
,173 178,2
,166 173 179,1
,173 179,1
,355 173 172,1
,163 173 361,1
,355 173 359,1
,173 172,1
,173 361,1
,173 359,1
,172 173 211,1
,173 211,1
174,165 174 .,1
,174 .,1
,190 174 214,1
,174 214,1
,pair 174 486,1
,304 174 ),1
,174 486,1
,174 ),1
,172 174 175,2
,164 174 363,1
,174 175,3
,174 363,1
,{ 174 },1
,174 },1
,193 174 175,1
175,pair 175 389,1
,221 175 ),1
,175 389,1
,175 ),1
,174 175 },1
,165 175 364,1
,174 175 362,1
,175 },2
,175 364,1
,175 362,1
,{ 175 },1
,155 175 215,1
,175 215,1
,174 175 157,1
,175 157,1
176,pair 176 390,1
,222 176 ),1
,176 390,1
,176 ),1
,{ 176 .,2
,{ 176 190,1
,{ 176 6,1
,176 .,2
,176 190,1
,176 6,1
,{ 176 },1
,176 },1
177,45 177 ),1
,55 177 ),1
,pair 177 389,1
,177 ),2
,177 389,1
,{ 177 191,1
,177 191,1
,217 177 157,1
,177 157,1
178,154 178 202,1
,178 202,1
,46 178 ),1
,56 178 ),1
,pair 178 390,1
,178 ),2
,178 390,1
,173 178 179,2
,178 179,2
,{ 178 192,1
,. 178 190,1
,178 192,1
,178 190,1
179,89 179 .,1
,179 .,3
,116 179 },1
,116 179 170,1
,179 },1
,179 170,1
,{ 179 .,2
,pair 179 455,1
,179 455,1
,228 179 130,1
,179 130,1
,178 179 180,2
,179 180,2
,173 179 190,1
,179 190,1
,{ 179 193,1
,179 193,1
,199 179 159,1
,179 159,1
Notes:,) Notes: Opponent,1
,Notes: Opponent,1
<movePiece>,<enterBoard> <movePiece> },1
,<movePiece> },1
ifAfterwards:True,< ifAfterwards:True >,1
,ifAfterwards:True >,1
LineOfPlay,sites LineOfPlay ),1
,LineOfPlay ),1
singleton,mover/own singleton (,1
,singleton (,1
normal,The normal pawns,2
,normal pawns,2
,2 normal pieces,2
,normal pieces,2
,( normal ),1
,normal ),1
180,rotate 180 (,39
,180 (,39
,182 180 181,1
,180 181,3
,pair 180 456,1
,180 456,1
,179 180 181,2
,{ 180 194,1
,{ 180 9,1
,180 194,1
,180 9,1
,{ 180 },1
,180 },1
,160 180 200,1
,180 200,1
value:120,state:1 value:120 ),1
,value:120 ),1
3-stack/catapult,a 3-stack/catapult .,1
,3-stack/catapult .,1
181,157 181 205,1
,181 205,1
,180 181 },1
,2 181 ),1
,181 },1
,181 ),2
,5 181 ),1
,pair 181 389,1
,181 389,1
,180 181 186,2
,181 186,2
,. 181 183,1
,{ 181 195,1
,. 181 193,1
,181 183,1
,181 195,1
,181 193,1
182,. 182 },1
,182 },1
,. 182 180,1
,182 180,1
,6 182 ),1
,pair 182 390,1
,182 ),1
,182 390,1
,{ 182 184,1
,356 182 183,1
,358 182 184,1
,182 184,2
,182 183,1
,162 182 222,1
,182 222,1
183,8 183 ),1
,183 ),1
,pair 183 395,1
,183 395,1
,184 183 825,1
,183 825,1
,{ 183 185,2
,182 183 196,1
,181 183 185,1
,{ 183 196,1
,183 185,3
,183 196,2
,398 183 201,1
,183 201,1
184,232 184 168,1
,184 168,1
,pair 184 396,1
,184 396,1
,221 184 183,1
,184 183,1
,182 184 186,2
,357 184 185,1
,184 186,2
,184 185,1
,164 184 122,1
,184 122,1
185,pair 185 443,1
,185 443,1
,38 185 40,1
,185 40,1
,183 185 187,3
,184 185 197,1
,{ 185 197,1
,185 187,3
,185 197,2
,148 185 222,1
,185 222,1
stone,a stone left,2
,stone left,2
186,pair 186 444,1
,186 444,1
,235 186 137,1
,186 137,1
,181 186 187,2
,186 187,4
,184 186 188,1
,358 186 187,1
,184 186 },1
,{ 186 6,1
,186 188,1
,186 },1
,186 6,1
,167 186 187,1
,149 186 148,1
,186 148,1
<175>,<49> <175> STRING,1
,<175> STRING,1
187,147 187 171,1
,187 171,1
,pair 187 487,1
,187 487,1
,93 187 138,1
,187 138,1
,186 187 188,2
,187 188,2
,185 187 189,1
,186 187 198,1
,185 187 },1
,{ 187 198,1
,185 187 196,1
,187 189,1
,187 198,2
,187 },2
,187 196,1
,{ 187 },1
,186 187 226,1
,187 226,1
188,{ 188 251,1
,197 188 251,1
,188 251,2
,pair 188 488,1
,188 488,1
,187 188 189,2
,188 189,3
,186 188 365,1
,359 188 189,1
,361 188 365,1
,188 365,2
,{ 188 },1
,188 },1
189,94 189 .,1
,189 .,1
,{ 189 195,1
,189 195,1
,pair 189 39,1
,189 39,1
,188 189 190,2
,189 190,2
,187 189 366,1
,188 189 199,1
,{ 189 366,1
,{ 189 8,1
,189 366,2
,189 199,1
,189 8,1
,229 189 169,1
,189 169,1
,171 189 207,1
,189 207,1
stop:,) stop: (,5
,stop: (,20
,N stop: (,5
,#1 stop: (,5
,Orthogonal stop: (,1
,#2 stop: (,4
ones,The ones moving,1
,ones moving,1
<Hexagon>,STRING <Hexagon> <,3
,<Hexagon> <,3
passing,--COMMA-- passing and,1
,passing and,1
reach,to reach a,1
,reach a,1
190,191 190 },1
,190 },1
,150 190 174,1
,190 174,1
,pair 190 40,1
,190 40,1
,141 190 239,1
,190 239,1
,189 190 191,2
,190 191,2
,179 190 200,1
,190 200,2
,{ 190 .,1
,176 190 200,1
,178 190 .,1
,190 .,2
,227 190 246,1
,190 246,1
191,192 191 190,1
,191 190,1
,pair 191 201,1
,191 201,4
,436 191 142,1
,191 142,1
,190 191 201,2
,177 191 201,1
,{ 191 1,1
,191 1,1
192,193 192 191,1
,192 191,1
,208 192 262,1
,192 262,1
,pair 192 202,1
,192 202,2
,178 192 202,1
,. 192 200,1
,192 200,1
<HalfRightInnerP2>,<HalfRightInnerP1> <HalfRightInnerP2> },1
,<HalfRightInnerP2> },1
193,194 193 192,1
,193 192,1
,pair 193 489,1
,193 489,1
,179 193 203,1
,181 193 .,1
,193 203,1
,193 .,1
,229 193 174,1
,193 174,1
194,200 194 193,1
,194 193,1
,pair 194 490,1
,194 490,1
,180 194 204,1
,{ 194 4,1
,194 204,1
,194 4,1
,{ 194 },1
,194 },1
Non-Pawn,) Non-Pawn Pieces,1
,Non-Pawn Pieces,1
195,189 195 201,1
,195 201,1
,211 195 235,1
,195 235,1
,pair 195 491,1
,195 491,1
,160 195 ),1
,195 ),1
,181 195 205,1
,. 195 203,1
,195 205,1
,195 203,1
,{ 195 },1
,195 },1
196,215 196 197,1
,196 197,2
,pair 196 492,1
,196 492,1
,{ 196 197,1
,183 196 206,2
,187 196 .,1
,196 206,2
,196 .,1
,159 196 214,1
,196 214,1
197,196 197 198,2
,197 198,2
,206 197 188,1
,197 188,1
,pair 197 493,1
,197 493,1
,185 197 207,2
,197 207,2
,{ 197 },1
,197 },1
198,197 198 199,2
,198 199,2
,214 198 238,1
,198 238,1
,pair 198 494,1
,198 494,1
,187 198 208,2
,. 198 },1
,. 198 206,1
,198 208,2
,198 },1
,198 206,1
,161 198 216,1
,198 216,1
199,99 199 .,1
,199 .,1
,198 199 200,1
,199 200,1
,pair 199 379,1
,199 379,1
,198 199 367,1
,189 199 209,1
,266 199 367,1
,199 367,2
,199 209,1
,{ 199 },1
,199 },1
,219 199 179,1
,199 179,1
,162 199 161,1
,199 161,1
seconds,few seconds after,1
,seconds after,1
19>,<8 19> <7,1
,19> <7,1
between,( between if:,176
,( between ),768
,between if:,176
,between ),768
,( between (,395
,between (,395
,( between #2,10
,between #2,10
,is between the,2
,between the,2
,Map between level,1
,between level,1
,( between STRING,14
,between STRING,14
,( between <Capture:distance>,2
,between <Capture:distance>,2
,( between #1,7
,between #1,7
,( between before:,30
,between before:,30
,( between before:9,4
,between before:9,4
,( between before:1,3
,between before:1,3
,( between before:3,2
,between before:3,2
,( between before:2,1
,between before:2,1
,( between if:True,38
,between if:True,38
,- between clause,1
,between clause,1
,lies between two,1
,between two,1
<Board:MiddleTrack>,STRING <Board:MiddleTrack> loop:True,1
,<Board:MiddleTrack> loop:True,1
<direction>,{ <direction> },2
,<direction> },2
,STRING <direction> <then>,2
,<direction> <then>,2
efficiency,for efficiency in,1
,efficiency in,1
goal,the goal of,1
,goal of,3
,The goal of,2
<Pawn2Start>,<Knight2Start> <Pawn2Start> <RegionDarkPhase>,1
,<Pawn2Start> <RegionDarkPhase>,1
Wellisch's,STRING Wellisch's STRING,1
,In Wellisch's version,1
,Wellisch's STRING,1
,Wellisch's version,1
<HalfRightInnerP1>,<CCW2> <HalfRightInnerP1> <HalfRightInnerP2>,1
,<HalfRightInnerP1> <HalfRightInnerP2>,1
<Step:to>,All <Step:to> ),1
,<Step:to> ),1
Next,handSite Next ),48
,Next ),949
,STRING Next ),353
,handSite Next 1,1
,Next 1,1
,sites Next ),98
,Pieces Next ),168
,sites Next STRING,43
,Next STRING,54
,is Next Mover,26
,Next Mover,31
,Moves Next ),126
,result Next Loss,14
,Next Loss,14
,Pieces Next STRING,11
,result Next Win,23
,Next Win,23
,Pieces Next in:,11
,Next in:,13
,is Next P1,3
,Next P1,3
,is Next Prev,3
,Next Prev,3
,mapEntry Next ),6
,Player Next ),7
,result Next <Result>,1
,Next <Result>,1
,Connected Next ),1
,result Next <Result:next>,1
,Next <Result:next>,1
,is Next (,5
,Next (,39
,Piece Next ),96
,Winning Next (,4
,STRING Next (,11
,Value Next (,2
,#1 Next ),2
,amount Next ),3
,STRING Next in:,2
,STRING Next Mover,3
,Mover Next ),19
,is Next P2,1
,Next P2,1
,Score Next (,13
,score Next ),18
,) Next top:True,2
,Next top:True,2
,<BoardShape:directionsUsed> Next ),1
,Orthogonal Next ),1
,Prev Next ),1
,) Next ),1
,) Next Mover,2
,Mover Next (,4
,addScore Next 5,1
,Next 5,1
following,in following the,1
,following the,1
<85>,STRING <85> <,2
,<85> <,2
,STRING <85> STRING,1
,<85> STRING,1
<Player:tracks>,) <Player:tracks> use:Vertex,1
,<Player:tracks> use:Vertex,1
,) <Player:tracks> use:Edge,6
,<Player:tracks> use:Edge,6
Coskey,. Coskey --COMMA--,8
,Coskey --COMMA--,9
,Jay Coskey --COMMA--,1
fromIncluded:True,from:#1 fromIncluded:True to:#2,2
,fromIncluded:True to:#2,2
<Placement:Pawn2>,STRING <Placement:Pawn2> ),1
,<Placement:Pawn2> ),1
<Player:initHorse>,{ <Player:initHorse> },1
,<Player:initHorse> },1
range,( range 1,78
,range 1,78
,( range 3,1
,range 3,1
,( range 0,12
,range 0,12
,( range #1,1
,( range (,1
,range #1,1
,range (,1
<p1Moves>,<board> <p1Moves> },1
,<p1Moves> },1
coord,( coord STRING,104
,coord STRING,104
,( coord row:0,13
,( coord row:,33
,coord row:0,13
,coord row:,33
,( coord #1,3
,( coord #2,3
,( coord #3,3
,( coord #4,3
,( coord #5,3
,( coord #6,3
,( coord #7,3
,( coord #8,3
,coord #1,3
,coord #2,3
,coord #3,3
,coord #4,3
,coord #5,3
,coord #6,3
,coord #7,3
,coord #8,3
blocked,Remove blocked enemy,3
,blocked enemy,3
,are blocked (,1
,blocked (,1
flat,All flat sides,1
,One flat and,1
,Two flat and,1
,Two flat or,1
,flat sides,1
,flat and,2
,flat or,1
<Player:diceHand>,STRING <Player:diceHand> ),1
,<Player:diceHand> ),1
to:#1,What to:#1 ),2
,True to:#1 ),1
,False to:#1 ),1
,to:#1 ),4
leap,may leap two,1
,leap two,1
place,( place STRING,3753
,place STRING,3753
,( place Stack,1167
,place Stack,1167
,to place it,1
,place it,1
,( place Random,33
,place Random,33
,( place <Tiling:piece1>,2
,( place <Tiling:piece2>,2
,place <Tiling:piece1>,2
,place <Tiling:piece2>,2
,to place sites,1
,place sites,1
,take place when,1
,takes place --COMMA--,1
,takes place .,1
,place when,1
,place --COMMA--,1
,place .,1
,to place wins,1
,place wins,1
,) place on,2
,place on,2
,must place a,1
,place a,1
,( place #1,6
,place #1,6
to:#2,from:#1 to:#2 ),5
,fromIncluded:True to:#2 ),2
,to:#2 ),7
phases:,) phases: {,287
,phases: {,327
,< phases: {,10
,rules phases: {,16
,<Players:start> phases: {,2
,<Start:rules> phases: {,3
,<Board:start> phases: {,2
,<Boundary:cornerSetup> phases: {,2
,<Meta:rule> phases: {,1
,<Rules:start> phases: {,2
,STRING phases: {,2
regular,( regular Star,14
,regular Star,14
<stores>,<tracks> <stores> <start>,1
,<stores> <start>,1
,<directionP2> <stores> },1
,<stores> },1
<Row:trackCW2>,STRING <Row:trackCW2> loop:True,1
,<Row:trackCW2> loop:True,1
<BoardConfig:RegionLightPhase>,Phase <BoardConfig:RegionLightPhase> ),1
,<BoardConfig:RegionLightPhase> ),1
filter,will filter out,1
,filter out,1
,to filter the,1
,filter the,1
site,( site ),1051
,site ),1051
,a site to,1
,site to,2
,empty site around,1
,site around,1
,To site #2,1
,empty site .,1
,site #2,3
,site .,2
,- site (,2
,site (,3
,) site exist,5
,site exist,5
,a site where,1
,site where,1
,central site .,1
,central site to,1
,at site #1,1
,against site #1,1
,from site #2,2
,if site #1,1
,fire site --COMMA--,1
,site #1,3
,site --COMMA--,1
,#2 site that,1
,site that,1
,by site (,1
,Suicidal site determination,1
,site determination,1
When,* When pieces,1
,. When a,1
,* When a,1
,* When the,2
,When pieces,1
,When a,2
,When the,2
Sometimes,. Sometimes the,1
,Sometimes the,1
count:<Num:piece>,STRING count:<Num:piece> ),3
,count:<Num:piece> ),3
elements,unique elements ?,1
,elements ?,1
<terrainScale>,<pieceFlip> <terrainScale> },1
,<terrainScale> },1
<slide_spaces>,<slide_dir> <slide_spaces> <condition>,3
,<slide_spaces> <condition>,3
<Fox:stepMove>,<Fox:hopCapture> <Fox:stepMove> ),1
,<Fox:stepMove> ),1
argument,STRING argument where,3
,argument where,3
Rightward,{ Rightward Forwards,3
,Rightward Forwards,3
,Forwards Rightward Leftward,14
,Rightward Leftward,144
,Leftward Rightward },2
,Rightward },3
,Forward Rightward Leftward,33
,{ Rightward Leftward,51
,BL Rightward Leftward,12
,Backward Rightward Leftward,18
,{ Rightward FR,2
,FL Rightward Leftward,11
,Adjacent Rightward ),1
,Rightward FR,2
,Rightward ),1
,{ Rightward FL,1
,Backwards Rightward Leftward,3
,STRING Rightward (,1
,FR Rightward Leftward,2
,Leftward Rightward FL,1
,FR Rightward },1
,Rightward FL,2
,Rightward (,1
follow-up,handling follow-up movement,1
,follow-up movement,1
<170>,<149> <170> STRING,1
,<170> STRING,1
describing,rules describing in,1
,describing in,1
only,the only enemy,1
,only enemy,1
,sow only one,1
,only one,1
,pits only if,1
,only if,1
,can only take,1
,can only be,1
,only take,1
,only be,1
,slide only on,1
,only on,1
,diagonals only .,1
,only .,1
should,it should be,1
,game should stop,1
,should be,2
,should stop,1
,It should be,1
<rightMostInnerHoleP1>,<thirdHoleInnerP1> <rightMostInnerHoleP1> <thirdHoleInnerP2>,1
,<rightMostInnerHoleP1> <thirdHoleInnerP2>,1
RookLeft2Start,> RookLeft2Start STRING,2
,RookLeft2Start STRING,2
<Placement:Pawn1>,STRING <Placement:Pawn1> ),1
,<Placement:Pawn1> ),1
individual,the individual hop,1
,Processing individual move,1
,each individual Move:,1
,individual hop,1
,individual move,1
,individual Move:,1
goes,piece goes to,3
,goes to,4
,when goes to,1
<InitTwoSeeds>,<InitOneSeed> <InitTwoSeeds> },1
,<InitTwoSeeds> },1
<Players:player1>,Moves <Players:player1> ),1
,3 <Players:player1> ),1
,result <Players:player1> Win,1
,<Players:player1> ),2
,<Players:player1> Win,1
Active,count Active ),7
,is Active P1,7
,is Active P2,7
,is Active P3,7
,is Active P4,7
,Active ),7
,Active P1,7
,Active P2,7
,Active P3,7
,Active P4,7
,is Active #1,6
,Active #1,6
,is Active (,12
,Active (,12
kalahs,) kalahs (,39
,kalahs (,41
,<Track:stores> kalahs (,1
,<Players:store> kalahs (,1
Murus,Advanced Murus Gallicus,1
,Murus Gallicus,2
checkmate,in checkmate --COMMA--,1
,checkmate --COMMA--,1
<BoardConfig:Pawn1Start>,STRING <BoardConfig:Pawn1Start> ),1
,<BoardConfig:Pawn1Start> ),1
use:Vertex,) use:Vertex ),225
,use:Vertex ),336
,<Board:type> use:Vertex ),10
,} use:Vertex ),83
,<Players:tracks> use:Vertex ),1
,<Player:tracks> use:Vertex ),1
,<Board:tracks> use:Vertex ),2
,<Board> use:Vertex ),13
,<Board:track> use:Vertex ),1
Generic,Generic Sites,1
Lance,) Lance (,6
,Promoted Lance (,5
,Lance (,11
automove,( automove ),1
,automove ),1
can,( can Move,341
,can Move,341
,piece can jump,1
,can jump,1
,rat can capture,1
,can capture,3
,we can capture,1
,it can capture,1
,pawn can promote,1
,it can whatever,1
,can promote,1
,can whatever,1
,we can unify,1
,rules can be,1
,can unify,1
,can be,2
,Kings can move,1
,Castling can only,1
,Queens can make,1
,Pawns can advance,1
,Pawns can never,1
,Pawns can be,1
,but can only,1
,can move,1
,can only,2
,can make,2
,can advance,1
,can never,1
,piece can stand,1
,infantry can make,1
,can stand,1
<board,STRING <board (,2
,<board (,2
Solved,is Solved ),19
,Solved ),19
eligible,is eligible for,2
,eligible for,2
who's,--COMMA-- who's pieces,2
,--COMMA-- who's sites,1
,who's pieces,2
,who's sites,1
<Jump:bean>,or <Jump:bean> (,1
,<Jump:bean> (,1
<ForcedFillLevel>,<DiagShow> <ForcedFillLevel> },1
,<ForcedFillLevel> },1
player,each player .,4
,player .,6
,( player ),11
,player ),12
,( player 1,14
,( player 2,9
,player 1,14
,player 2,9
,( player (,36
,player (,40
,- player (,1
,- player #2,1
,player #2,5
,( player N,118
,( player S,118
,player N,118
,player S,118
,( player SE,1
,( player NW,1
,player SE,1
,player NW,1
,( player W,12
,player W,12
,( player E,12
,player E,12
,each player (,1
,that player .,1
,a player (,1
,first player in,4
,previous player ),1
,player in,4
,( player NNE,1
,( player SSW,1
,player NNE,1
,player SSW,1
,( player #2,4
,A player is,1
,a player is,2
,player is,3
,the player chooses,1
,same player .,1
,checkmating player wins,1
,checkmated player loses,1
,remaining player draws,1
,A player not,1
,first player to,1
,player chooses,1
,player wins,1
,player loses,1
,player draws,1
,player not,1
,player to,2
,( player STRING,1
,player STRING,1
,of player to,1
,multi player about,1
,2 player (,1
,player about,1
,one player must,1
,player must,1
,1st player win,1
,player win,1
satisfy,( satisfy {,13
,satisfy {,13
,( satisfy (,6
,satisfy (,6
match,( match STRING,6
,match STRING,6
played,variant played on,1
,is played on,1
,played on,3
,be played on,1
Reconstruct,To Reconstruct },9
,Reconstruct },9
<scores>,<regions> <scores> },1
,<scores> },1
<promotedMove>,<promotedCaptureMove> <promotedMove> <endRule>,1
,<promotedMove> <endRule>,1
<rightMostInnerHoleP2>,<thirdHoleInnerP2> <rightMostInnerHoleP2> },1
,<rightMostInnerHoleP2> },1
<pieceMoves>,{ <pieceMoves> <endRules>,1
,<pieceMoves> <endRules>,1